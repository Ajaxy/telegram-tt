{"version":3,"file":"7703.e9ed7fef83cef66de0cd.js","mappings":"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c,sBAAsBuR,EAAAA,EAAAA,KAA2BvtB,GACjD4e,qBACAwL,YACAW,iBACAvO,mBAAoBsM,GAAc0E,wBAClCrR,QACAC,SACAwE,eACAC,WACD,GArKe9gB,EAlkBoC0tB,EACtDnoB,WACA6O,qBACA8H,eACAC,sBACAxB,SACA8N,kBACA3jB,UACAinB,sBACApN,kBACAgP,QACAvR,OACAC,QACAM,SACAC,aACA0M,YACAzM,aACAoQ,cACAnQ,gBACAE,WACAI,SACAkB,oBACAjB,WACAC,YACAkB,wBACAld,OACAkc,YACAiB,sBACAvB,UACAV,mBACAE,iBACAJ,YACAC,uBACAgB,aACAR,gBACAU,iBACAC,mBACAC,WACAC,eACAC,aACAC,eACAC,cACAC,aACAC,gBACAW,yBACApD,mBACAD,wBACAsN,mBACA1L,aACAoB,iBACA6O,0BACAlP,gBACAoP,uBACAnP,mBACAC,qBACAnC,wBACA4C,qBACAmM,kBACAvO,sBACAoE,gBACAC,WACA1rB,aACAuqB,WACAC,2BAEA,MAAM,WACJgO,GAAU,qBACVC,GAAoB,aACpBC,GAAY,WACZC,GAAU,gBACVC,GAAe,cACfC,GAAa,YACbC,GAAW,cACXC,GAAa,uBACbC,GAAsB,sBACtBC,GAAqB,kBACrBC,GAAiB,cACjBC,GAAa,oBACbC,GAAmB,WACnBC,GAAU,gBACVC,GAAe,qBACfC,GAAoB,aACpBC,GAAY,aACZC,GAAY,kBACZC,GAAiB,QACjBC,GAAO,aACP7N,GAAY,eACZ8N,GAAc,UACdC,GAAS,eACTC,GAAc,0BACdC,GAAyB,oBACzBC,GAAmB,sBACnBC,GAAqB,0BACrBC,GAAyB,iBACzBC,GAAgB,mBAChBC,GAAkB,gBAClBC,GAAe,uBACfC,GAAsB,qBACtBC,GAAoB,sBACpBC,GAAqB,eACrBC,KACE/a,EAAAA,EAAAA,MAEExa,IAAOC,EAAAA,EAAAA,MACLjF,IAAKqa,KAAiBmgB,EAAAA,EAAAA,GAAkB,CAC9CnV,SACAiF,uBACAxqB,WAAW,KAEN26B,GAAYC,KAAiB5xB,EAAAA,EAAAA,KAAS,IACtC6xB,GAAgBC,KAAqB9xB,EAAAA,EAAAA,KAAS,IAC9C+xB,GAAuBC,GAAqBC,KAAwB13B,EAAAA,EAAAA,MACpE23B,GAAsBC,KAA2BnyB,EAAAA,EAAAA,IAASoqB,IAC1DgI,GAAiBC,KAAYC,EAAAA,EAAAA,GAAYtD,GAAwBzN,GAAS7a,EAAQuD,MAGnFxB,QAAyC7Q,IAAxB+1B,GAAqCnzB,QAAQmzB,EAAoB11B,SAExFS,EAAAA,EAAAA,KAAU,KACJynB,IAAiB5D,GACnB8T,GAAW,CAAEtoB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,IAC1D,GACC,CAACuvB,GAAY9T,EAAQ7V,EAAQqB,OAAQrB,EAAQ5F,GAAIqf,MAEpDznB,EAAAA,EAAAA,KAAU,KACJ0kB,IAAmBb,GACrB6U,GAAmB,CAAErpB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,IAClE,GACC,CAACsc,GAAiBb,EAAQ7V,EAAQqB,OAAQrB,EAAQ5F,GAAI4F,EAAQ6W,YAEjE7kB,EAAAA,EAAAA,KAAU,KACJ0nB,GAAyB7D,GAC3BkU,GAAa,CAAE1oB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,IAC5D,GACC,CAACsf,EAAuB7D,EAAQkU,GAAc/pB,EAAQqB,OAAQrB,EAAQ5F,MAEzEpI,EAAAA,EAAAA,KAAU,KACJi1B,GAAqB11B,QAAUsoB,GAAiBtoB,SAAW01B,EAAoB11B,QACjF01B,EAAoB3gB,SAAS+X,IAC3BjC,GAAa,CAAE4B,eAAgBK,GAAM,GAEzC,GACC,CAAC4I,EAAqBpN,EAAiBuC,MAE1CpqB,EAAAA,EAAAA,KAAU,KACHm2B,GAAgB3Q,IAAa3B,GAChCiU,GAAa,CAAEzoB,OAAQrB,EAAQqB,QACjC,GACC,CAAC8mB,EAAatS,EAAQ2B,EAAWsS,GAAc9pB,EAAQqB,SAE1D,MAAMuY,IAAoBxoB,EAAAA,EAAAA,KAAQ,KAEhC,MAAMy6B,GAAY56B,EAAAA,EAAAA,MAAY66B,MAAMC,KAC9BC,GAAY/6B,EAAAA,EAAAA,MAAYg7B,MAAMF,KACpC,GAAI/rB,EAAQiP,WAAWid,iBAAiB36B,OAAQ,CAC9C,MAAM46B,EAAiB,IAAIz4B,IAAIsM,EAAQiP,WAAWid,iBAAiBp2B,KACjE,EAAGsF,YAAa4wB,EAAU5wB,IAAWywB,EAAUzwB,MAGjD,OAAOmH,MAAM+L,KAAK6d,GAAgB1pB,OAAO3O,SAAS+B,MAAM,EAAGu2B,EAAAA,IAC7D,CAEA,GAAKpsB,EAAQ4c,YAIb,OAAOc,OAAOC,KAAK3d,EAAQ4c,aAAa/mB,MAAM,EAAGu2B,EAAAA,KAC9Ct2B,KAAKsE,GAAO4xB,EAAU5xB,IAAOyxB,EAAUzxB,KACvCqI,OAAO3O,QAAQ,GACjB,CAACkM,EAAQiP,WAAWid,gBAAiBlsB,EAAQ4c,cAE1CrD,IAAgBnoB,EAAAA,EAAAA,KAAQ,KAC5B,GAAIy3B,EACF,OAAOA,EAAMwD,SAASzqB,MAAM0qB,IAC1B,MAAMC,GAAoBC,EAAAA,EAAAA,IAA4BF,GACtD,QAAKC,IACEE,EAAAA,EAAAA,IAAiB1I,GAAiBwI,EAAkB,IAI/D,MAAMA,GAAoBC,EAAAA,EAAAA,IAA4BxsB,GACtD,QAAKusB,IACEE,EAAAA,EAAAA,IAAiB1I,GAAiBwI,EAAkB,GAC1D,CAACxI,GAAiB8E,EAAO7oB,IAEtB0sB,GAAiBxU,GAAYmH,GAAWsN,WAAatN,EAAUuN,WAAW,QAAK17B,GAErFc,EAAAA,EAAAA,KAAU,KACR,GAAIw2B,GAEF,YADAiD,GAAwB/H,GAS1B,IAL8BgJ,IACxBA,GAAeG,YAChB/4B,QAAQkM,EAAQY,QAAQvQ,MAAMA,QCtWhC,SAAuC+jB,GAC5C,MAAM0Y,EAAW1Y,EAAMK,wBACjBtd,EAAK21B,EAASpY,WAAaC,KAAKoY,UAClCD,EAAS9M,WACT8M,EAEJ,OAAOh5B,QAAQqD,EAAG8oB,QAAQ,8CACnBnsB,QAAQqD,EAAG8oB,QAAQ,sBAAwBnsB,QAAQqD,EAAG8oB,QAAQ,aACvE,CD+VS+M,CAA8BN,IAIjC,YADAjB,GAAwB/H,GAI1B,MAAMuJ,EAAgB9Y,EAA4BuY,IAE5CQ,EAAcltB,EAAQY,QAAQvQ,KAAMA,KAAMmlB,QAAQ,UAAW,KAElDyX,EAAc58B,KAAK88B,OAAO57B,OAAS,GAC/C27B,EAAYzpB,SAASwpB,EAAc58B,MAMxCo7B,GAAwBiB,GAAeU,aAJrC3B,GAAwB/H,EAIyB,GAClD,CACDgJ,GAAgBA,IAAgBG,UAAWH,IAAgBU,YAAaV,IAAgBW,UACxF7E,GAAqBxoB,EAAQY,QAAQvQ,OAGvC,MAAMi9B,IAAY74B,EAAAA,EAAAA,IAAgB,KAChCy2B,IAAc,GACdrQ,IAAS,IAGL0S,IAAe94B,EAAAA,EAAAA,IAAgB,KACnCy2B,IAAc,GACdoC,KACA,MAAM/M,EAAasI,GAAOwD,SACtBxD,EAAMwD,SAASv2B,KAAI,EAAGsE,QAASA,IAC/B,CAAC4F,EAAQ5F,IACbwwB,GAAuB,CACrBvpB,OAAQrB,EAAQqB,OAChBkf,aACAiN,WAAgC,cAApB7J,GACZ,IAGE8J,IAAgBh5B,EAAAA,EAAAA,IAAgB,KACpC22B,IAAkB,GAClBvQ,IAAS,IAGL6S,IAAcj5B,EAAAA,EAAAA,IAAgB,KAClC,MAAMk5B,EAAYnC,KAAyB9H,GAAqBgJ,GAC5DvY,EAA4BuY,SAAkBx7B,EAC7Cg1B,GAKH6C,GAAqB,CACnB6E,aAAc5tB,EAAQ5F,GACtBuzB,YACAE,YAAarC,GACbsC,mBAAe58B,IARjBi4B,GAAc,CACZ4E,WAAY/tB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,GAAIuzB,YAAWE,YAAarC,KAU/E8B,IAAW,IAGPU,IAAmBv5B,EAAAA,EAAAA,IAAgB,KACvCq0B,GAAW,CACTznB,OAAQrB,EAAQqB,OAChBZ,SAAUT,EAAQ5F,KAEpBkzB,IAAW,IAGPW,IAAax5B,EAAAA,EAAAA,IAAgB,KACjCu0B,GAAa,CAAE5nB,UAAWpB,EAAQ5F,KAClCkzB,IAAW,IAGPY,IAAYz5B,EAAAA,EAAAA,IAAgB,KAChCy2B,IAAc,GACdE,IAAkB,EAAK,IAGnB+C,IAAc15B,EAAAA,EAAAA,IAAgB,KAClCw0B,GAAW,CAAE5nB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,GAAIg0B,SAAS,IACrEd,IAAW,IAGPe,IAAgB55B,EAAAA,EAAAA,IAAgB,KAEpC,GADA64B,KACIzE,GAAOwD,SAAU,CACnB,MAAM9L,EAAasI,EAAMwD,SAASv2B,KAAI,EAAGsE,QAASA,IAClD8uB,GAAgB,CAAE6E,WAAY/tB,EAAQqB,OAAQkf,cAChD,MACE2I,GAAgB,CAAE6E,WAAY/tB,EAAQqB,OAAQkf,WAAY,CAACvgB,EAAQ5F,KACrE,IAGIk0B,IAAoB75B,EAAAA,EAAAA,IAAgB,KACxC64B,KACAlE,GAAY,CAAE52B,QAASwN,EAAQY,QAAQpO,SAAW,IAG9C+7B,IAAsB95B,EAAAA,EAAAA,IAAgB,KAC1C64B,KACAjE,GAAc,CAAE72B,QAASwN,EAAQY,QAAQpO,SAAW,IAGhDg8B,IAAmB/5B,EAAAA,EAAAA,IAAgB,KACvC64B,KACApD,GAAe,CAAE7oB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,IAAK,IAG7Dq0B,IAAkBh6B,EAAAA,EAAAA,IAAgB,KACtC64B,KACAnD,GAAU,CAAE9oB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,IAAK,IAGxDs0B,IAAsBj6B,EAAAA,EAAAA,IAAgB,KAC1C,MAAMk6B,EAAS9F,GAAOwD,SAClB,CACAjrB,UAAWpB,EAAQ5F,GACnBw0B,gBAAiB/F,EAAMwD,SAASv2B,KAAI,EAAGsE,QAASA,IAChDy0B,WAAW,GAEX,CAAEztB,UAAWpB,EAAQ5F,GAAIy0B,WAAW,GAExCvF,GAAuBqF,GACvBrB,IAAW,IAGPwB,IAA6Br6B,EAAAA,EAAAA,IAAgB,KACjD80B,GAAsB,CAAEloB,OAAQrB,EAAQqB,OAAQjH,GAAI4F,EAAQ5F,KAC5DkzB,IAAW,IAGPyB,IAA0Bt6B,EAAAA,EAAAA,IAAiBu6B,IAC/CxF,GAAkB,CAChBnoB,OAAQrB,EAAQqB,OAChBD,UAAWpB,EAAQ5F,GACnB40B,gBAEFnU,IAAS,IAGLoU,IAAqBx6B,EAAAA,EAAAA,IAAgB,KACzCy2B,IAAc,GACdQ,GAAgBqD,GAAwB,IAGpCG,IAAwBz6B,EAAAA,EAAAA,IAAgB,KAC5C64B,KACA1D,GAAgB,CAAEvoB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,IAAK,IAG9D+0B,IAA6B16B,EAAAA,EAAAA,IAAgB,KACjD64B,KACAzD,GAAqB,CAAExoB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,IAAK,IAGnEg1B,IAAqB36B,EAAAA,EAAAA,IAAiB8rB,IAC1CyJ,GAAkB,CAAEzJ,eACpB+M,IAAW,IAGP+B,IAAiB56B,EAAAA,EAAAA,IAAgB,KACrCk2B,GAAgB,CACdtpB,OAAQrB,EAAQqB,OAChBD,UAAWpB,EAAQ5F,GACnBk1B,oBAAqB7uB,IAAa8uB,EAAAA,GAClCC,sBAAsB,IAExBlC,IAAW,IAGPmC,IAAmBh7B,EAAAA,EAAAA,IAAgB,MACvCqrB,EAAAA,EAAAA,IAAoB9f,EAAQY,QAAQke,QAAS4Q,aAC7CpC,IAAW,IAGPqC,IAAsBl7B,EAAAA,EAAAA,IAAgB,MACzCo0B,GAAOwD,UAAY,CAACrsB,IAAUsG,SAASgmB,IACtC,MAAMC,GAAoBC,EAAAA,EAAAA,IAA4BF,GACjDC,IAEDhT,GACFmQ,GAAoB,CAAEkG,MAAOrD,IAE7B9C,GAAc,CAAEmG,MAAOrD,EAAmBsD,cAAevD,IAC3D,IAEFgB,IAAW,IAGPwC,IAAgBr7B,EAAAA,EAAAA,IAAgB,KACpC,MAAMs7B,GAAQC,EAAAA,EAAAA,IAAgBhwB,GAC9BiqB,GAAQ,CAAEgG,IAAKF,IACfzC,IAAW,IAGP4C,IAAuBz7B,EAAAA,EAAAA,IAAiBmZ,IACxCmM,KAAsBtC,EACxBgT,GAAiB,CACf0F,eAAgB,eAGlB/F,GAAe,CACb/oB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,GAAIwT,WAAUwiB,mBAAmB,IAGhF9C,IAAW,IAGP+C,IAAyB57B,EAAAA,EAAAA,IAAgB,KAC7Co2B,GAAqB,CACnBxpB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,GAAIkpB,MAAO,IAExDgK,IAAW,IAGPgD,IAA8B77B,EAAAA,EAAAA,IAAgB,KAClDq2B,GAAsB,CACpBzpB,OAAQrB,EAAQqB,OAChBD,UAAWpB,EAAQ5F,KAGrBkzB,IAAW,IAGPiD,IAA2B97B,EAAAA,EAAAA,IAAiB4tB,IAChDmI,GAA0B,CAAEnpB,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,GAAIioB,YAAW,IAGlFmO,IAAkB/7B,EAAAA,EAAAA,IAAgB,KACtC41B,GAA0B,CACxBhpB,OAAQrB,EAAQqB,OAChBjH,GAAI4F,EAAQ5F,KAEdkzB,IAAW,IAGPmD,IAAqBh8B,EAAAA,EAAAA,IAAgB,KACzC61B,GAAoB,CAClBjpB,OAAQrB,EAAQqB,OAChBjH,GAAI4F,EAAQ5F,KAEdkzB,IAAW,IAGPoD,IAAuBj8B,EAAAA,EAAAA,IAAgB,KAC3C81B,GAAsB,CACpBlpB,OAAQrB,EAAQqB,OAChBD,UAAWpB,EAAQ5F,KAErBkzB,IAAW,IAGPqD,IAAmBv/B,EAAAA,EAAAA,KAAQ,KAAOy3B,EAAQA,EAAMwD,SAAW,CAACrsB,IAAUlK,KAAI,EAAGsE,QAASA,KAAK,CAACyuB,EAAO7oB,IAEnG4wB,IAAen8B,EAAAA,EAAAA,IAAgB,KAC9B+H,IACL0uB,IAAc,GACdrQ,KACAkQ,GAAe,CACb1pB,OAAQ7E,EAAKpC,GAAImmB,WAAYoQ,KAC7B,IAGJ,GAAInM,EAGF,YAFA8I,KAKF,MAAMuD,GAAmB,IAAIntB,KAG7B,OAFAmtB,GAAiBC,YAAYD,GAAiBE,cAAgB,GAG5Dl/B,EAAAA,GAAAC,cAAA,OAAKtB,IAAKqa,GAAcva,WAAW+B,EAAAA,EAAAA,GAAe,uBAAwB/B,KACxEuB,EAAAA,GAAAC,cAAColB,EAAkB,CACjBC,qBAAsBA,GACtB7H,mBAAoBA,EACpB8H,aAAcA,EACdC,oBAAqBA,EACrBM,mBAAoBA,GACpB3X,QAASA,EACTwX,UAAWA,EACXC,qBAAsBA,EACtBQ,cAAeA,EACfpC,OAAQoV,GACRvT,iBAAkBA,EAClBE,eAAgBA,EAChBC,OAAQA,EACRC,WAAYA,EACZ4B,sBAAuBA,EACvBC,oBAAqBA,EACrB5B,WAAYA,EACZC,cAAeA,EACfE,SAAUA,EACVC,SAAUqT,KAAyB9H,EACnClL,UAAWA,EACXF,OAAQA,EACRI,UAAWA,EACXc,kBAAmBA,EACnBjB,SAAUA,EACVH,QAASA,EACTK,WAAYA,EACZE,eAAgBA,EAChBC,iBAAkBA,EAClBC,QAASA,GACTC,YAAaA,GACbC,UAAWA,GACXC,YAAaA,GACbC,WAAYA,GACZC,UAAWA,GACXC,aAAcA,GACdM,cAAeA,GACfL,aAAcA,GACdC,gBAAiBA,GACjBC,kBAAmBA,GACnBQ,sBAAuBA,GACvBrD,qBAAsBA,GACtBC,gBAAiBA,GACjB3U,eAAgBA,GAChB8X,gBAAiBA,EACjBN,cAAeA,GACfK,kBAAmBA,GACnBG,kBAAmBA,GACnB1B,UAAWA,GACXf,KAAMA,EACNC,MAAOA,EACP0C,aAAc+T,GACdhU,QAAS0T,GACTxT,OAAQ+T,GACR9T,MAAO+T,GACP9T,QAAS+T,GACT9T,UAAWgU,GACX/T,SAAUiT,GACV/S,SAAUoW,GACVrW,cAAe+T,GACf7T,gBAAiB8T,GACjB7T,SAAUgU,GACV/T,OAAQmU,GACRlU,aAAcqU,GACdpU,QAASyS,GACTvS,WAAYsU,GACZ3T,eAAgB0T,GAChBpU,aAAcyU,GACdxU,WAAY0U,GACZzU,UAAW4U,GACX3U,aAAcqT,GACdpT,YAAakQ,GACbjQ,aAAc6T,GACd3T,iBAAkB2U,GAClB1U,mBAAoB6U,GACpB5U,wBAAyB6U,GACzBhV,eAAgB6T,GAChBxT,qBAAsB4U,GACtB3U,YAAa4U,GACb3U,eAAgB4U,GAChB3U,iBAAkB4U,GAClB3U,aAAcA,GACdC,QAASA,KAEXnqB,EAAAA,GAAAC,cAACgkB,EAAe,CACdD,OAAQsV,GACR/pB,UAAWpB,EAAQ5F,GACnBiH,OAAQrB,EAAQqB,OAChBwZ,QAAS4S,KAEX57B,EAAAA,GAAAC,cAACk/B,EAAAA,EAAa,CACZnb,OAAQwV,GACRxQ,QAAS0Q,GACTl7B,KAAMmF,GAAK,0BACXy7B,aAAcz7B,GAAK,uBACnB07B,eAAgBzC,KAEjBzW,GAAiB2T,GACd,I,8FErtBV,MAAMwF,EAAsB,IACtBC,EAAyBC,EAAAA,IACzBC,EAAe,GAEN,SAASC,GAAgB,WACtCC,EAAU,OACVnwB,EAAM,UACNowB,EAAS,eACTC,EAAc,iBACdC,EAAgB,oBAChBC,EAAmB,YACnBC,EAAW,QACXC,EAAO,qBACPC,IAYA,MAAMC,GAAiBt7B,EAAAA,EAAAA,KAAQm7B,IAE/BI,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAAcF,EAAe96B,QAGnC,GAFA86B,EAAe96B,SAAU,EAErBu6B,GAAaD,EAAWt6B,QAAS,CACnC,MAAMi7B,EAAoBX,EAAWt6B,QAAQ+oB,QAAwB,gBAE/DmS,EAAaT,EACbU,EAAiBN,GAAwBK,EAAa,MAAQ,cAE9DE,EAAOA,KACX,MAAMC,OAAiCrhC,IAAnBwgC,EACfU,EAAajB,EAAsBC,OAA0BlgC,EAE5DshC,GAASC,EAAAA,EAAAA,IAAc,CAC3BhpB,UAAW0oB,EACXO,QAASlB,EAAWt6B,QACpBmrB,SAAUgQ,EACVM,OAAQrB,EACRiB,cACAK,eAAgBlB,EAChBmB,2BAA4BjB,EAC5BkB,wBAAwB,IAG1B,GAAIhB,EAAS,CACX,MAAMiB,EAAavB,EAAWt6B,QAAS+pB,cAA+B,aAClE8R,IACFh7B,EAAAA,EAAAA,KAAgB,MACdi7B,EAAAA,EAAAA,IAAcD,EAAY,UAAU,GAG1C,CAEA,OAAOP,CAAM,EAGXN,GAEFe,EAAAA,EAAAA,IAAoBX,IAEpB1sB,EAAAA,EAAAA,KAAe,MACb7N,EAAAA,EAAAA,IAAgBu6B,IAAQ,GAG9B,IACC,CACDd,EAAYnwB,EAAQowB,EAAWC,EAAgBC,EAAkBC,EAAqBE,EAASC,GAEnG,C,gMCvFA,QAAuB,WAAvB,EAAmM,WAAnM,EAAsQ,WCiBhQmB,EAAgB,EAAIrkB,EAAAA,EAuF1B,GAAe1e,EAAAA,EAAAA,KAzEsCgjC,EACnDvlB,WACAwlB,SACA/V,UACAgW,oBACAx+B,QACAkT,WACAwT,mBACAC,qBACAC,8BAGA,MAAMjrB,GAAMkG,EAAAA,EAAAA,IAAuB,MAC7BM,GAAcvC,EAAAA,EAAAA,IAAgB,KACZ,SAAlBmZ,EAASzT,KAKbohB,EAAiB3N,GAJf4N,KAIwB,KAGtB,kBACJ8X,EAAiB,wBACjBC,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBnjC,EAAuB,SAAlBod,EAASzT,UAAiBjJ,OAAWA,OAAWA,GAAW,GAW3F,OATAc,EAAAA,EAAAA,KAAU,KACJshC,IACF7X,MAEAgY,IACAC,IACF,GACC,CAACD,EAAwBhY,EAAyBiY,EAAuBJ,IAG1EzhC,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GACT2C,EDzEmC,WC2EnCo+B,GAA4B,SAAlBxlB,EAASzT,MAAmBnF,GACrCq+B,GAAqBhW,GD5E2F,WC6EjHgW,GD7EwD,YC+E1D7iC,IAAKA,EACLqE,MAAOA,EACPsB,QAASa,EACTZ,YAAam9B,EACbK,cAAeJ,GAEI,SAAlB5lB,EAASzT,KACRtI,EAAAA,GAAAC,cAACqD,EAAAA,EAAY,CACX9B,OAAQwgC,EAAAA,EAAeC,aACvBl/B,KAAMs+B,EACNjgB,QAAQ,IAGVphB,EAAAA,GAAAC,cAACkQ,EAAAA,EAAW,CACVkM,WAAYN,EAASM,WACrBtZ,KAAMs+B,IAGTnrB,GACClW,EAAAA,GAAAC,cAAC+I,EAAAA,EAAI,CAACvK,UAAW0E,EAAa8F,KAAK,eAEjC,I,qCCrFV,MAAMo4B,EAAgB,EAAIrkB,EAAAA,EA2E1B,GAAe1e,EAAAA,EAAAA,KAhEgC4jC,EAC7CnmB,WACAyP,UACAgW,oBACAD,SACArrB,WACAwT,uBAEA,MAAMyY,GAAkB9gC,EAAAA,EAAAA,GAAU,UAAS0a,EAASqmB,iBAAiB75B,MAAOijB,GAAWgW,GACjF7f,GAAYtgB,EAAAA,EAAAA,GAAU,WAAU0a,EAASsmB,iBAAiB95B,MAAOijB,GAAWgW,GAC5Ec,GAAiBjhC,EAAAA,EAAAA,GAAU,WAAU0a,EAAS0F,YAAYlZ,MAAOi5B,IAChEthB,EAAmBC,IAAuBne,EAAAA,EAAAA,MAE1CugC,EAAY,CAAGC,IAAqBxgC,EAAAA,EAAAA,IAAQ,IAC5CygC,EAAaC,EAAUC,IAAc3gC,EAAAA,EAAAA,KAM5C,OACEhC,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAao+B,GAAUp+B,GACjDmB,QAPJ,WACEolB,EAAiB3N,EAASA,SAC5B,EAMI6mB,aAAcpX,IAAY+W,EAAcG,OAAWrjC,GAElDmiC,GACCxhC,EAAAA,GAAAC,cAAA,OACExB,UFtD0O,WEuD1OyE,IAAKo/B,EACLxlB,IAAKf,EAASA,SAASiD,SACvB5b,WAAW,KAGb8c,IAAsBshB,GACtBxhC,EAAAA,GAAAC,cAAC+gB,EAAAA,EAAe,CACdjL,IAAKgG,EAASqmB,iBAAiB75B,GAC/B/G,OAAQ2gC,EACRhhB,KAAMohB,EACNnhB,QAAM,EACNre,KAAMs+B,EACNnlB,QAASsmB,EACTzhB,aAAW,KAGbwhB,IAAgBf,GAChBxhC,EAAAA,GAAAC,cAAC+gB,EAAAA,EAAe,CACdjL,IAAKgG,EAASsmB,iBAAiB95B,GAC/B/G,OAAQmgB,EACRR,KAAMshB,EACNrhB,QAAM,EACNre,KAAMs+B,EACNh+B,OAAQ8c,EACRjE,QAASymB,EACT5hB,aAAW,IAGd7K,GACClW,EAAAA,GAAAC,cAAC+I,EAAAA,EAAI,CAACvK,UAAW0E,EAAa8F,KAAK,eAEjC,IC9BJ45B,GAAKC,EAAAA,EAAAA,GAAuB,oBAwLlC,GAAexkC,EAAAA,EAAAA,KApLwBqyB,EACrCC,wBACArL,eACAC,sBACAK,mBACAgL,mBACA9K,iBACAJ,YACA6F,UACAvD,wBACAxpB,YACAmnB,uBACAsC,oBACA6a,kBACAC,eACAC,kBACAnd,qBACAkD,UACAU,mBACAC,qBACAC,0BACAmH,iBAEA,MAAM,iBAAE6H,IAAqBza,EAAAA,EAAAA,MAEvBxf,GAAMkG,EAAAA,EAAAA,IAAuB,MAC7BlB,GAAOC,EAAAA,EAAAA,KAEPs/B,EAAqBhb,IAAsBtC,IAAyBmd,EAEpEI,EAA4BlhC,QAAQ8jB,GACrC8K,GAAoBA,EAAiBnxB,QAAUqmB,GAE9CtI,GAAqBle,EAAAA,EAAAA,KAAQ,KACjC,MAAM6d,EACA+lB,EAAkCtS,GAAkB5sB,KAAK8X,GAAaA,EAASA,WAC/EinB,EAAqBC,EACrB/a,EAA0B1C,EACC,SAA3BK,GAAkBvd,KAAwBud,EAAiBud,QACxDxS,GAAuB3sB,KAAK8X,GAAaA,EAASA,WAGrDsnB,EAAyCjmB,GAAWnZ,KAAK8X,IAC7D,MAAMunB,EAAqC,WAAlBvnB,EAASzT,KAC5B+V,EAAoBuS,GAAuBrjB,MAAM+Q,IAAMC,EAAAA,EAAAA,IAAeD,EAAEvC,SAAUA,KAExF,OAAIinB,EAAqB3kB,GAEnBilB,GAAqBjlB,KAAsBA,GAAmBklB,aAE/D5d,GAAcwd,GACXtd,IAAqB2d,EAAAA,EAAAA,IAAgBznB,EAAU8J,IAIhDyd,EAAmBvnB,EAAWsC,OAPrC,CAOsD,IACrDzN,OAAO3O,UAAY,GAEhBwhC,GAAkBC,EAAAA,EAAAA,IAAcL,EAAmB9d,GAIzD,OAHIO,GACF2d,EAAgB1jC,QAAQ,CAAEuI,KAAM,SAE3Bm7B,CAAe,GACrB,CACD7S,EAAuBC,EAAkBrL,EAAqBK,EAAkBqC,EAAmBvC,EACnGJ,EAAcyd,EAAcC,EAAiBE,EAA2Brd,IAGpE6d,GAAoBpkC,EAAAA,EAAAA,KAAQ,IAEKqkC,IAA9BnmB,EAAmB/d,OACtB+d,EACAA,EAAmBzZ,MAAM,EA3ER,IA4EpB,CAACyZ,IACEomB,EAAiBF,EAAkBjkC,OAAS+d,EAAmB/d,OAE/DokC,GAAsBvkC,EAAAA,EAAAA,KAAQ,KAClC,MAAMwkC,EAAkBlT,GAAkBjgB,QAAO,EAAGozB,sBAAkC3kC,IAAhB2kC,KAA8B,GACpG,OAAO,IAAIniC,IAAIkiC,EAAgB9/B,KAAI,EAAG8X,cACpC4nB,EAAkBM,WAAW3lB,GAAMA,IAAKC,EAAAA,EAAAA,IAAe,aAAcD,EAAIA,EAAEvC,SAAWuC,EAAGvC,OACxF,GACF,CAAC8U,EAAkB8S,IAEhBO,GAAsBthC,EAAAA,EAAAA,IAAgB,KAC1C,MAAMuhC,EAAQxlC,EAAI0G,SAASI,yBAA2B,CAAEC,EAAG,EAAGG,EAAG,GACjEkrB,EAAW,CACTrrB,EAAGy+B,EAAMz+B,EACTG,EAAGs+B,EAAMt+B,GACT,IAGEu+B,GAAyBxhC,EAAAA,EAAAA,IAAgB,KAC7ComB,MACA4P,EAAiB,CACf0F,eAAgB,cAChB,IAGE+F,GAAW9kC,EAAAA,EAAAA,KAAQ,KACvB,GAAI2oB,EAAmB,CACrB,IAAKtC,EAAsB,CACzB,MACM0e,EADO3gC,EAAK,2BACC4gC,MAAM,UACzB,OACEvkC,EAAAA,GAAAC,cAAA,YACGqkC,EAAM,GACPtkC,EAAAA,GAAAC,cAACukC,EAAAA,EAAI,CAAC54B,WAAS,EAACtH,QAAS8/B,GACtBzgC,EAAK,2BAEP2gC,EAAM,GAGb,CAEA,OAAO3gC,EAAK,yBACd,CAEA,OAAIo/B,EACKp/B,EAAK,sBAGVq/B,EACKr/B,EAAK,6BADd,CAIgB,GACf,CAACiiB,EAAsBsC,EAAmB6a,EAAiBp/B,EAAMq/B,IAEpE,GAAKW,EAAkBjkC,OAEvB,OACEM,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAeqiC,EAAG,KAAMpkC,GAAYE,IAAKA,GACvDqB,EAAAA,GAAAC,cAAA,OAAKxB,UAAWokC,EAAG,eAAgBl/B,EAAK/E,OAAS,WACjDoB,EAAAA,GAAAC,cAAA,OAAKxB,UAAWokC,EAAG,kBACjB7iC,EAAAA,GAAAC,cAAA,OAAKxB,UAAWokC,EAAG,aAAcl/B,EAAK/E,OAAS,WAC/CoB,EAAAA,GAAAC,cAAA,OAAKxB,UAAWokC,EAAG,UAChBwB,GAAYrkC,EAAAA,GAAAC,cAAA,OAAKxB,UAAWokC,EAAG,SAAUwB,GAC1CrkC,EAAAA,GAAAC,cAAA,OAAKxB,UAAWokC,EAAG,aAAcpiC,IAAKkD,EAAK/E,MAAQ,WAAQS,GACxDskC,EAAkB1/B,KAAI,CAAC8X,EAAUnc,IAChC,aAAcmc,EACZ/b,EAAAA,GAAAC,cAACiiC,EAAwB,CACvBnsB,KAAK0uB,EAAAA,EAAAA,IAAe1oB,EAASA,UAC7ByP,QAASA,EACT9B,iBAAkBA,EAClB3N,SAAUA,EACVylB,mBAAoBvZ,EACpBsZ,OAAQuC,EAAoBvhC,IAAI3C,GAChCsW,SAAUgtB,IAGZljC,EAAAA,GAAAC,cAACqhC,EAA8B,CAC7BvrB,KAAK0uB,EAAAA,EAAAA,IAAe1oB,GACpByP,QAASA,EACT9B,iBAAkBA,EAClBC,mBAAoBA,EACpBC,wBAAyBA,EACzB7N,SAAUA,EACVylB,mBAAoBvZ,EACpBsZ,OAAQuC,EAAoBvhC,IAAI3C,GAChCsW,SAAUgtB,EACVlgC,MAAQ,uBAlKJ,IADG,EAmK2CpD,WAIvDikC,GACC7jC,EAAAA,GAAAC,cAACiJ,EAAAA,EAAM,CACLw7B,MAAM,cACNjmC,UAAWokC,EAAG,aACdv+B,QAAS4/B,GAETlkC,EAAAA,GAAAC,cAAC+I,EAAAA,EAAI,CAACC,KAAK,aAMjB,G,uTCrMV,MAAM8T,EAAY,IAAMC,EAAAA,EAClBC,EAAc,IAAMD,EAAAA,EACpB2nB,EAAoBjsB,EAAAA,IAAUksB,EAAAA,GAAc,EAAI,EAChDC,EAAWnsB,EAAAA,IAAUksB,EAAAA,GAAc,EAAI,EA8F7C,GAAetmC,EAAAA,EAAAA,KAAK+K,EAAAA,EAAAA,KAClB,CAACC,GAAUgG,kBACT,MAAM,gBAAE+N,IAAoBC,EAAAA,EAAAA,KAAehU,GAErCiU,GAAcC,EAAAA,EAAAA,KAA+BlU,EAAQ,mBAE3D,MAAO,CACL+T,gBAAiBA,IAAkB/N,GACnCiO,cACD,GATelU,EA5FMy7B,EACxBx1B,cACAyM,WACAtd,YACAsE,OAAOga,EACPa,aAAaX,EACbI,kBACA0nB,cACAxnB,cACAU,0BAEA,MAAM,mBAAEC,IAAuBC,EAAAA,EAAAA,MAGzBxf,GAAMkG,EAAAA,EAAAA,IAAuB,MAE7BmgC,GAAYngC,EAAAA,EAAAA,IAAuB,OAElCogC,EAAYC,IAAiBz9B,EAAAA,EAAAA,IAAmB,IAEjD0X,GAAiBC,EAAAA,EAAAA,IAAkBzgB,EAAKsf,GAExCwB,GAAiBlgB,EAAAA,EAAAA,KAAQ,IAC7B8d,GAAiB9P,MAAMmS,IAAWnB,EAAAA,EAAAA,IAAemB,EAAQ3D,MACxD,CAACsB,EAAiBtB,IAEf4D,EAAmB1d,QACvBsb,GAAekC,GAEX0lB,EAAoBF,EAAWvlC,OAASilC,GAE9CS,EAAAA,EAAAA,IAAsB,EAAEC,MACjB1lB,GAKAolB,GAAeA,IAAgBM,GAAmB,IAInDF,GACFD,GAAeI,GAAS,IAAIA,EAAMzzB,KAAKC,SATvCozB,EAAc,GAUhB,GACC,CAACH,EAAaI,EAAmBxlB,IAEpC,MACE7a,aAAc+a,IACZsZ,EAAAA,EAAAA,GAAkB,CACpBx6B,IAAKqmC,EACLO,mBAAmB,EACnBvhB,OAAQrE,EACRlhB,UAAW,OACX+mC,kBAAkB,IAGdvlB,GAAcrd,EAAAA,EAAAA,IAAgB,KAClC,MAAM6iC,EAAgBR,EAAWjhC,MAAM,GACvCkhC,EAAcO,GACTA,EAAc/lC,QACjBwe,EAAmB,CAAE5O,cAAayM,YACpC,IAGIyE,GAAgBhgB,EAAAA,EAAAA,GACpB2C,EAAAA,EAAOsd,KACPZ,GAAsB1c,EAAAA,EAAOud,UAC7BjiB,GAGF,OACEuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAW+hB,EAAe7hB,IAAKA,EAAK+mC,eAAa,GACpD1lC,EAAAA,GAAAC,cAAC0lC,EAAAA,EAAQ,CAAC5vB,IAAI,OAAOzN,KAAK,OAAOvF,KAAK,WAAWC,MAAQ,UAASD,gBAAmBA,QACpF8c,GAAsBolB,EAAWhhC,KAAKsE,GACrCvI,EAAAA,GAAAC,cAACqD,EAAAA,EAAY,CACXyS,IAAKxN,EACL5J,IAAKqmC,EACLvmC,UAAW0E,EAAAA,EAAOme,OAClBve,KAAM6a,EACNpc,OAAQwgC,EAAAA,EAAe4D,mBACvBzkB,KAAMhC,EACNiC,QAAM,EACNL,aAAW,EACX8kB,gBAAc,EACdC,QAASjB,EACT3oB,QAAS+D,MAGT,K,gDCtGV,MAAMohB,EAAgB,KAAOrkB,EAAAA,EAkB7B,SAAS+oB,EAAiBz8B,GACxB,OAAOA,EAAO08B,KAChB,CAEA,MAgLA,GAAe1nC,EAAAA,EAAAA,KAhLQ2nC,EACrBlqB,WACAzM,cACA0jB,eACAkT,iBACAznC,YACA0nC,kBACA32B,SACAD,YACA62B,YACAnoB,sBACA3Z,UACA+hC,kBAEA,MAAM,sBACJC,EAAqB,wBACrBC,EAAuB,sBACvBtN,EAAqB,YACrBuN,IACEroB,EAAAA,EAAAA,MAEExf,GAAMkG,EAAAA,EAAAA,IAA0B,MAEhC4hC,GAAa5hC,EAAAA,EAAAA,IAAwB,MACrC6hC,GAAe7hC,EAAAA,EAAAA,MAEflB,GAAO9E,EAAAA,EAAAA,KAEP8nC,EAAoC,SAA3B5qB,EAASA,SAASzT,KAE3Bs+B,GAAaC,EAAAA,EAAAA,GAAYd,GACzBe,EAAiB7kC,QAAQ2kC,GAEzBG,GAAkBnkC,EAAAA,EAAAA,IAAgB,CAAC6uB,EAAQ,KAC/C4U,IAAc5U,EAAM,IAGhBtsB,GAAcvC,EAAAA,EAAAA,IAAiBwC,IACnC,GAA+B,SAA3B2W,EAASA,SAASzT,KAIpB,OAHAlD,EAAE4hC,uBACFD,IAKFziC,IAAUyX,EAASA,SAAS,KAGxB,kBACJ0lB,EAAiB,wBACjBC,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBnjC,EAAgC,SAA3Bod,EAASA,SAASzT,UAAiBjJ,OAAWA,OAAWA,GAAW,IAEpGc,EAAAA,EAAAA,KAAU,KACJshC,IACFxI,EAAsB,CACpBzpB,SACAD,cAGFqyB,IACAC,IACF,GACC,CAACD,EAAwBC,EAAuBJ,EAAmBjyB,EAAQD,KAE9E61B,EAAAA,EAAAA,IAAsB,EAAE6B,MACtB,MAAMC,EAASnrB,EAASgpB,YAClBoC,EAASxoC,EAAI0G,QACnB,IAAK6hC,IAAWC,GAAUD,IAAWD,GAAclC,YAAa,OAEhE,GAAI+B,GAAkBI,EAASN,EAAWQ,QAAQF,OAYhD,OAXAZ,EAAsB,CACpBe,eAAgB,CACd73B,SACAD,YACA23B,iBAGJX,EAAwB,CACtB/2B,SACAD,cAKJ,GAAIwM,EAASgpB,YAAa,CACxB,MAAM,KAAEn/B,EAAI,IAAEG,GAAQohC,EAAO1hC,wBACvB6hC,EAAS1hC,EAAOuhC,EAAO/6B,YAAc,EACrCm7B,EAASxhC,EAAMohC,EAAO1X,aAAe,EAC3C+W,EAAY,CAAEc,SAAQC,UACxB,CAEA,MAAMC,EAAeC,OAAO5X,iBAAiBsX,GAAQO,QAAU,EAC/DhB,EAAarhC,SAASsiC,SAEtBjB,EAAarhC,QAAU8hC,EAAOS,QAAQ,CACpC,CAAEF,MAAOF,GACT,CAAEE,MAAOh7B,KAAKE,IAAmB,IAAf46B,EAzHN,GAyHsCK,OAAQ,IAC1D,CAAEH,MAAO,IACR,CACDI,SAAU,IAAMN,EAChBO,OAAQ,YACR,GACD,CAAChsB,EAAU6qB,GAAYQ,QAASN,EAAgBt3B,EAAQD,IAE3D,MAAMy4B,GAAaC,EAAAA,EAAAA,GAAYlsB,EAASgpB,cAGtCjgC,aAAcojC,IACZ/O,EAAAA,EAAAA,GAAkB,CACpBnV,OAAQ/hB,QAAQ8Z,EAASgpB,aACzBpmC,IAAK8nC,EACLhoC,UAAW,OACX+mC,kBAAkB,IAGpB,OACExlC,EAAAA,GAAAC,cAACiJ,EAAAA,EAAM,CACLzK,WAAW+B,EAAAA,EAAAA,GACT2C,EAAAA,EAAOsd,KACPuS,GAAgB7vB,EAAAA,EAAOglC,IACvBxB,GAAUxjC,EAAAA,EAAOilC,KACjBhC,GAAajjC,EAAAA,EAAOklC,SACpBC,EAAAA,EAAAA,IAAiBvsB,IAAa5Y,EAAAA,EAAOo+B,QACrC+G,EAAAA,EAAAA,IAAiBvsB,IAAaoqB,EAC9B1nC,GAEFsE,KAAK,OACLpE,IAAKA,EACL4F,YAAam9B,EACbK,cAAeJ,EACfr9B,QAASa,GAEmB,SAA3B4W,EAASA,SAASzT,KACjBtI,EAAAA,GAAAC,cAAAD,EAAAA,GAAAqhB,SAAA,KACErhB,EAAAA,GAAAC,cAACsoC,EAAAA,EAAQ,CAACC,OAAO,WACjBxoC,EAAAA,GAAAC,cAAC6kC,EAAiB,CAChBrmC,UAAW0E,EAAAA,EAAOslC,cAClBn5B,YAAaA,EACbyM,SAAUA,EAASA,SACnBhZ,KAAMs+B,EACN0D,YAAahpB,EAASgpB,YACtB9mB,oBAAqBA,IAEtBiqB,GACCloC,EAAAA,GAAAC,cAAC1B,EAAAA,EAAe,CACdI,IAAK8nC,EACLjoC,KAAO,KAAGkqC,EAAAA,EAAAA,IAAqB/kC,EAAMoY,EAASgpB,aAAeiD,KAC7DvpC,UAAW0E,EAAAA,EAAOwlC,eAKxB3oC,EAAAA,GAAAC,cAAC0d,EAAAA,EAAqB,CACpBlf,UAAW0E,EAAAA,EAAOslC,cAClBn5B,YAAaA,EACbyM,SAAUA,EAASA,SACnBhZ,KAAMs+B,EACNpjB,oBAAqBA,IAGxBioB,GAAgBxmC,OACfM,EAAAA,GAAAC,cAACsD,EAAAA,EAAU,CAACR,KAAK,OAAOS,MAAO0iC,IAE/BlmC,EAAAA,GAAAC,cAAC1B,EAAAA,EAAe,CACdC,MAAMkqC,EAAAA,EAAAA,IAAqB/kC,EAAMoY,EAAS0V,OAAS1V,EAASgpB,aAAe,IAC3EtmC,UAAW0E,EAAAA,EAAOylC,UAGf,I,eCxLb,MA8MA,GAAetqC,EAAAA,EAAAA,KA3MiBuqC,EAC9B16B,UACAS,WACAw3B,YACA0C,WACAC,eACA9qB,sBACA+qB,mBACApjB,uBACAqjB,OACAC,sBAEA,MAAM,eACJ3Q,EAAc,qBACdS,EAAoB,mBACpBmQ,EAAkB,oBAClBC,EAAmB,iBACnBxQ,EAAgB,wBAChB2N,EAAuB,iBACvBnc,EAAgB,uBAChBif,IACElrB,EAAAA,EAAAA,MACExa,GAAOC,EAAAA,EAAAA,MAEP,QAAEktB,EAAO,QAAEwY,EAAO,gBAAEjP,GAAoBlsB,EAAQiP,UAChDmsB,EAAuBtnC,QAAQkM,EAAQyc,sBAAwBzc,EAAQiP,WAEvEzP,GAAapO,EAAAA,EAAAA,KAAQ,IACzBuxB,EAAQ0Y,QAAO,CAACC,EAAK1tB,IAAa0tB,EAAM1tB,EAAS0V,OAAO,IACvD,CAACX,IAEE4Y,GAA8BnqC,EAAAA,EAAAA,KAAQ,KAC1C,MAAM+J,GAASlK,EAAAA,EAAAA,MAEf,OAAOi7B,GAAiBmP,QAAO,CAACC,EAAKE,KACnC,MAAM,SAAE5tB,EAAQ,OAAExS,GAAWogC,EACvB5zB,GAAM0uB,EAAAA,EAAAA,IAAe1oB,GACrB7X,GAAOuF,EAAAA,EAAAA,KAAWH,EAAQC,GAEhC,IAAKrF,EAAM,OAAOulC,EAElB,MAAMjmC,EAAQimC,EAAI1zB,IAAQ,GAG1B,OAFAvS,EAAMkR,KAAKxQ,GACXulC,EAAI1zB,GAAOvS,EACJimC,CAAG,GACT,CAAC,EAAuC,GAC1C,CAACpP,IAEE35B,GAAQnB,EAAAA,EAAAA,KAAQ,KACpB,MAAM4P,GAAaC,EAAAA,EAAAA,IAAcjB,GACjC,OAAO2iB,EAAQ7sB,KAAK8X,IAClB,MAAM6tB,GAAcnF,EAAAA,EAAAA,IAAe1oB,EAASA,UACtCmqB,EAAiBwD,IAA8BE,GAC/CC,EAA2Bl8B,EAxDZ,GAwD+Cq7B,EAC9D5lB,EAAMkmB,EAAUL,IAAOW,QAAevqC,EAE5C,MAAO,CACL0c,WACA6tB,cACAz6B,aACA+2B,eAAiB2D,OAA4CxqC,EAAjB6mC,EAC5C4D,UAAUxB,EAAAA,EAAAA,IAAiBvsB,GAC3BqH,MACD,GACD,GACD,CAACjV,EAAS66B,EAAkBU,EAA6B5Y,EAASwY,EAASL,EAAMt7B,IAE9ExI,GAAcvC,EAAAA,EAAAA,IAAiBmZ,IACnC,IAAImtB,EAIJ,OAAII,EACG1jB,GAOLujB,EAAmB,CAAE35B,OAAQrB,EAAQqB,OAAQZ,WAAUm7B,OAAQ,CAAEC,SAAUjuB,UAC3EqtB,EAAoB,CAAE55B,OAAQrB,EAAQqB,OAAQZ,mBAP5CgqB,EAAiB,CACf0F,eAAgB,oBAUtB/F,EAAe,CACb/oB,OAAQrB,EAAQqB,OAChBD,UAAWpB,EAAQ5F,GACnBwT,aAnBAstB,GAoBA,IAGEY,GAAiB1qC,EAAAA,EAAAA,KAAQ,IAAMuxB,EAAQvjB,MAAM+Q,GAA0B,SAApBA,EAAEvC,SAASzT,QAAkBy8B,aAAe,GAAG,CAACjU,IAEnGiW,GAAkBnkC,EAAAA,EAAAA,IAAiB6uB,IACnCyX,EACFG,IAIFrQ,EAAqB,CACnBxpB,OAAQrB,EAAQqB,OAChBD,UAAWpB,EAAQ5F,GACnBkpB,SACA,KAGJtxB,EAAAA,EAAAA,KAAU,KACH8pC,GAEL7f,EAAiB,CACf8f,SAAS96B,EAAAA,EAAAA,IAAcjB,GACvBpF,MAAOpF,EAAK,kBACZwK,QAASxK,EAAK,gBAAiBsmC,GAC/BE,WAAYxmC,EAAK,iBACjBymC,aAAcH,EAAe5b,WAC7BpmB,OAAQ,CACNA,OAAQ,0BACRoiC,QAAS,CAAE76B,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,KAExD+hC,cAAe,CACbriC,OAAQ,mBACRoiC,QAAS,CAAE76B,OAAQrB,EAAQqB,OAAQD,UAAWpB,EAAQ5F,KAExDu/B,SA9HkB,IA+HlByC,iBAAiB,EACjBC,qBAAqB,EACrBzgC,KAAM,QACN,GACD,CAACpG,EAAMwK,EAAS87B,IAEnB,MAAMQ,GAAuB7nC,EAAAA,EAAAA,IAAiBmZ,IACxCmtB,EACFG,IAIF9Q,EAAe,CACb/oB,OAAQrB,EAAQqB,OAChBD,UAAWpB,EAAQ5F,GACnBwT,YACA,IAWJ,OAPA2uB,EAAAA,EAAAA,IAAc,IAAM,KAClBnE,EAAwB,CACtB/2B,OAAQrB,EAAQqB,OAChBD,UAAWpB,EAAQ5F,IACnB,IAIFvI,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GACT,YACA4lC,GAAa,aACbmD,GAAwB,cAE1BvmC,MAAO8lC,EAAY,cAAaA,WAAezpC,EAC/CoB,IAAKkD,EAAK/E,MAAQ,MAAQ,OAEzB8B,EAAMuD,KAAI,EACT8X,WAAUmqB,iBAAgB/2B,aAAYy6B,cAAaE,WAAU1mB,SAE7DkmB,EACEtpC,EAAAA,GAAAC,cAAC0qC,EAAAA,EAAc,CACb50B,IAAK6zB,EACLnrC,UAAU,mBACV0nC,gBAAgB,SAChB72B,YAAaH,EACb6jB,aAAc7kB,EAAQ6iB,WACtB8Y,SAAUA,EACV/tB,SAAUA,EAASA,SACnBqH,IAAKA,EACLwnB,gBAAiBhlB,EACjBthB,QAASa,EACT0lC,SAAUJ,EACVxsB,oBAAqBA,IAGvBje,EAAAA,GAAAC,cAACgmC,EAAc,CACblwB,IAAK6zB,EACLp6B,OAAQrB,EAAQqB,OAChBD,UAAWpB,EAAQ5F,GACnB9J,UAAU,mBACV0nC,gBAAgB,SAChB72B,YAAaH,EACb6jB,aAAc7kB,EAAQ6iB,WACtBkV,eAAgBA,EAChBE,UAAWA,EACXrqB,SAAUA,EACVzX,QAASa,EACTkhC,YAAaU,EACb9oB,oBAAqBA,MAI1B8qB,EACG,G,0KClPV,MC6EA,GAAezqC,EAAAA,EAAAA,KAvDMwsC,EACnB9mB,SACAjb,QACAqN,WACA3P,cACAskC,aACAliC,YACAmiC,eAAe,GACfhiB,UACA7hB,eAEA,MAAMxD,GAAOC,EAAAA,EAAAA,MAENpF,EAAMysC,IAAWxjC,EAAAA,EAAAA,IAASujC,GAE3BE,GAAmBtoC,EAAAA,EAAAA,IAAiBwC,IACxC6lC,EAAQ7lC,EAAEuD,OAAOF,MAAM,IAGnB0iC,GAAevoC,EAAAA,EAAAA,IAAgB,KACnCuE,EAAS3I,EAAK,IAGhB,OACEwB,EAAAA,GAAAC,cAACmrC,EAAAA,EAAK,CACJ3sC,UAAU,SACVsK,MAAOA,EACPib,OAAQA,EACRgF,QAASA,EACTqiB,QAAM,GAELppC,QAAQmU,IACPpW,EAAAA,GAAAC,cAAA,OAAKxB,UDtDc,YCuDhB2X,GAGLpW,EAAAA,GAAAC,cAAC8X,EAAAA,EAAS,CACRtR,YAAaA,EACbgC,MAAOjK,EACPkK,SAAUwiC,EACVriC,UAAWA,EACXyiC,2BAAyB,IAE3BtrC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,uBACbuB,EAAAA,GAAAC,cAACiJ,EAAAA,EAAM,CAACzK,UAAU,wBAAwB6F,QAAS6mC,GAChDJ,GAAcpnC,EAAK,SAEtB3D,EAAAA,GAAAC,cAACiJ,EAAAA,EAAM,CAACzK,UAAU,wBAAwB8sC,QAAM,EAACjnC,QAAS0kB,GACvDrlB,EAAK,YAGJ,I,qCCjDZ,MAAM09B,EAAgB,KAAOrkB,EAAAA,EAiK7B,GAAe1e,EAAAA,EAAAA,KA7IQqsC,EACrB5uB,WACAqH,MACA9T,cACAw6B,WACA9W,eACAv0B,YACA0nC,kBACAqF,YACA9sC,aACAksC,kBACA3sB,sBACA3Z,UACAumC,eAEA,MAAM,qBAAEY,IAAyBttB,EAAAA,EAAAA,MAE3Bxf,GAAMkG,EAAAA,EAAAA,IAA0B,MAEhC4lB,GAAU5lB,EAAAA,EAAAA,IAAuB,MAEjClB,GAAOC,EAAAA,EAAAA,MACN8nC,EAAoBC,EAAkBC,IAAqB5pC,EAAAA,EAAAA,MAE5D,MAAE+G,EAAK,MAAE0oB,GAAUrO,GAAO,CAAC,EAC3ByoB,EAAU5pC,QAAQ8G,GAAUyiC,GAAa/Z,GAEzCtsB,GAAcvC,EAAAA,EAAAA,IAAgB,KAClC0B,IAAUyX,EAAS,IAGf+vB,GAAoBlpC,EAAAA,EAAAA,IAAgB,KACxCioC,IAAW9uB,EAAS,IAGhBgwB,GAAkBnpC,EAAAA,EAAAA,IAAiBopC,IACvCP,EAAqB,CACnB1vB,WACAhT,MAAOijC,IAETJ,GAAmB,KAGf,kBACJnK,EAAiB,kBACjBwK,EAAiB,wBACjBvK,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBnjC,GAAMisC,OAAiBvrC,OAAWA,OAAWA,GAAW,GAE7E8vB,GAAoBvsB,EAAAA,EAAAA,IAAgB,IAAMjE,EAAI0G,UAC9CgqB,GAAiBzsB,EAAAA,EAAAA,IAAgB,IAAMof,SAASkqB,OAChD5c,GAAiB1sB,EAAAA,EAAAA,IAAgB,IAAM6nB,EAAQplB,UAC/CkqB,GAAY3sB,EAAAA,EAAAA,IAAgB,KAAM,CAAGupC,YAAY,EAAM/b,6BAA6B,MAE1F,IAAIob,GAAuB,IAAV/Z,EAIjB,OACEzxB,EAAAA,GAAAC,cAACiJ,EAAAA,EAAM,CACLzK,WAAW+B,EAAAA,EAAAA,GACT2C,EAAAA,EAAOsd,KACPtd,EAAAA,EAAOigB,IACP4P,GAAgB7vB,EAAAA,EAAOglC,IACvB2B,GAAY3mC,EAAAA,EAAOo+B,OACnBuI,GAAY3D,EACZznC,GAAcyE,EAAAA,EAAOiG,SACrB3K,GAEFsE,KAAK,OACLuB,QAASa,EACTZ,YAAam9B,EACbK,cAAeJ,EACfhjC,IAAKA,GAELqB,EAAAA,GAAAC,cAAC0d,EAAAA,EAAqB,CACpBlf,UAAW0E,EAAAA,EAAOslC,cAClBn5B,YAAaA,EACbyM,SAAUA,EACViC,UApGW,EAqGXjb,KAAMs+B,EACNpjB,oBAAqBA,IAEtB4tB,GACC7rC,EAAAA,GAAAC,cAAA,QAAMxB,UAAW0E,EAAAA,EAAOipC,SACrBrjC,GAAS/I,EAAAA,GAAAC,cAAA,YAAO8I,GAChByiC,GAAaxrC,EAAAA,GAAAC,cAAA,YAAOwxB,IAGzBzxB,EAAAA,GAAAC,cAAA,OACExB,UAAW0E,EAAAA,EAAOkpC,KAClB1nC,MAAM,KACNC,OAAO,KACPqI,QAAQ,aAERjN,EAAAA,GAAAC,cAAA,QAAMxB,UAAW0E,EAAAA,EAAOmpC,SAAUn/B,EAAE,8JAErCy9B,GACC5qC,EAAAA,GAAAC,cAAC6qC,EAAY,CACX9mB,OAAQ0nB,EACR7iC,UA1He,GA2HfE,MAAOpF,EAAKyf,GAAKra,MAAQ,oBAAsB,oBAC/CqN,SAAUzS,EAAK,wBACf8C,YAAa9C,EAAK,4BAClBqnC,aAAc5nB,GAAKra,MACnBigB,QAAS4iB,EACTzkC,SAAU4kC,IAGbnB,GAAmBqB,GAClBjsC,EAAAA,GAAAC,cAACwwB,EAAAA,EAAI,CACH9xB,IAAK8rB,EACLzG,OAAQyd,EACRzb,OAAQimB,EACR9c,kBAAmBA,EACnBE,eAAgBA,EAChBC,eAAgBA,EAChBC,UAAWA,EACXgd,WAAS,EACTJ,YAAU,EACVnjB,QAAS4Y,EACT3Y,oBAAqB4Y,GAErB7hC,EAAAA,GAAAC,cAACwkB,EAAAA,EAAQ,CAAC1a,KAAK,aAAazF,QAASa,GAClCxB,EAAK,wBAER3D,EAAAA,GAAAC,cAACwkB,EAAAA,EAAQ,CAAC1a,KAAK,WAAWzF,QAASqnC,GAChChoC,EAAKyf,GAAKra,MAAQ,oBAAsB,qBAE3C/I,EAAAA,GAAAC,cAACwkB,EAAAA,EAAQ,CAAC1a,KAAK,cAAcqnB,aAAW,EAAC9sB,QAASwnC,GAC/CnoC,EAAK,uBAIL,G,4HCpKN,SAAS6oC,EACdljC,EAAWmjC,GAEX,GAA0B,SAAtBA,EAAankC,KAAiB,OAAOmkC,EAEzC,GAA0B,aAAtBA,EAAankC,KAAqB,CACpC,MAAM,OACJiB,EAAM,eAAEmjC,EAAc,OAAEC,EAAM,QAAEx+B,EAAO,cAAEy+B,GACvCH,EACEvoC,GAAOuF,EAAAA,EAAAA,KAAWH,EAAQC,GAEhC,IAAKrF,EAAM,OAEX,MAAO,CACLoE,KAAM,WACNpE,OACAwoC,iBACAC,SACAx+B,UACAy+B,gBAEJ,CAEA,GAA0B,cAAtBH,EAAankC,KAAsB,CACrC,MAAM,OACJukC,EAAM,MAAE7G,EAAK,OAAEkB,EAAM,SAAE4F,GACrBL,EACE/iC,GAAOC,EAAAA,EAAAA,KAAWL,EAAQujC,GAEhC,IAAKnjC,EAAM,OAEX,MAAO,CACLpB,KAAM,QACNykC,QAAS,CACPzkC,KAAM,YACNoB,OACAs8B,QACAkB,SACA4F,YAGN,CAEA,GAA0B,UAAtBL,EAAankC,KAAkB,CACjC,MAAM,MACJ09B,EAAK,OAAEkB,EAAM,SAAE4F,GACbL,EAEJ,MAAO,CACLnkC,KAAM,QACNykC,QAAS,CACPzkC,KAAM,QACN09B,QACAkB,SACA4F,YAGN,CAEA,GAA0B,2BAAtBL,EAAankC,KAAmC,CAClD,MAAM,KAAE0kC,GAASP,EAEjB,MAAO,CACLnkC,KAAM,yBACN0kC,OAEJ,CAEA,GAA0B,YAAtBP,EAAankC,KAAoB,CACnC,MAAMqC,GAAO2G,EAAAA,EAAAA,KAAWhI,EAAQmjC,EAAaj9B,QAC7C,IAAK7E,EACH,OAEF,MAAO,CACLrC,KAAM,UACNqC,OACA4E,UAAWk9B,EAAal9B,UAE5B,CAEA,GAA0B,qBAAtBk9B,EAAankC,KAA6B,CAC5C,MAAM,OACJ2kC,EAAM,OAAEJ,EAAM,QAAE1+B,GACds+B,EACE/iC,GAAOC,EAAAA,EAAAA,KAAWL,EAAQujC,GAEhC,IAAKnjC,EAAM,OAEX,MAAO,CACLpB,KAAM,mBACN2kC,SACA9+B,UACAzE,OAEJ,CAEA,GAA0B,aAAtB+iC,EAAankC,KAAqB,CACpC,MAAM,QACJ4kC,EAAO,eAAEC,EAAc,OAAEjG,EAAM,SAAE4F,EAAQ,OAAE5b,EAAM,QAAE/iB,GACjDs+B,EAIJ,MAAO,CACLnkC,KAAM,WACN4oB,SACA6b,QAAS,CACPzkC,KAAM,WACN4+B,SACA4F,WACA1S,MAVU8S,EAAQjpC,KAAKsE,IAAOoB,EAAAA,EAAAA,KAAWL,EAAQf,KAAKqI,OAAO3O,SAW7DmrC,aAViBD,GAAiB77B,EAAAA,EAAAA,KAAWhI,EAAQ6jC,QAAkB9tC,EAWvE8O,WAGN,CAEA,GAA0B,kBAAtBs+B,EAAankC,KAA0B,CACzC,MAAM,OACJkH,EAAM,qBAAE69B,EAAoB,OAAEnG,EAAM,SAAE4F,EAAQ,UAAEQ,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBACvFC,EAAuB,iBAAEC,EAAgB,MAAE1H,EAAK,MAAE5L,GAChDqS,EACE9hC,GAAO2G,EAAAA,EAAAA,KAAWhI,EAAQkG,GAChC,IAAK7E,EACH,OAEF,MAAMgjC,EAAqBN,GAAsBppC,KAAKsE,IAAO+I,EAAAA,EAAAA,KAAWhI,EAAQf,KAAKqI,OAAO3O,SAE5F,MAAO,CACLqG,KAAM,gBACNykC,QAAS,CACPzkC,KAAM,gBACN4+B,SACA4F,WACAniC,OACAgjC,qBACAL,YACAC,oBACAC,YACAC,0BACAC,mBACA1H,QACA5L,SAGN,CAEA,GAA0B,aAAtBqS,EAAankC,KAAqB,CACpC,MAAM,OACJkH,EAAM,qBAAE69B,EAAoB,OAAEnG,EAAM,SAAE4F,EAAQ,OAAE5b,EAAM,UAAEoc,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBAC/FC,EAAuB,iBAAEC,GACvBjB,EACE9hC,GAAO2G,EAAAA,EAAAA,KAAWhI,EAAQkG,GAChC,IAAK7E,EACH,OAEF,MAAMgjC,EAAqBN,GAAsBppC,KAAKsE,IAAO+I,EAAAA,EAAAA,KAAWhI,EAAQf,KAAKqI,OAAO3O,SAE5F,MAAO,CACLqG,KAAM,WACN4oB,SACA6b,QAAS,CACPzkC,KAAM,WACN4+B,SACA4F,WACAniC,OACAgjC,qBACAL,YACAC,oBACAC,YACAC,0BACAC,oBAGN,CAEA,GAA0B,oBAAtBjB,EAAankC,KAA4B,CAC3C,MAAM,eAAEslC,EAAc,0BAAEC,GAA8BpB,EAChDqB,EAAYC,EAA6BzkC,EAAQskC,GACvD,IAAKE,EAAW,OAEhB,MAAO,CACLxlC,KAAM,kBACNslC,eAAgBE,EAChBD,4BAEJ,CAEA,GAA0B,qBAAtBpB,EAAankC,KAA6B,CAC5C,MAAM,eAAEslC,EAAc,YAAEI,GAAgBvB,EAClCqB,EAAYC,EAA6BzkC,EAAQskC,GACjD1pC,GAAOuF,EAAAA,EAAAA,KAAWH,EAAQ0kC,GAChC,IAAKF,IAAc5pC,EAAM,OAEzB,MAAO,CACLoE,KAAM,mBACNslC,eAAgBE,EAChBG,UAAW/pC,EAEf,CAGF,CAEO,SAAS6pC,EACdzkC,EAAW4kC,GAEX,GAAuB,SAAnBA,EAAU5lC,KAAiB,OAAO4lC,EAEtC,GAAuB,SAAnBA,EAAU5lC,KAAiB,CAC7B,MAAMqC,GAAO2G,EAAAA,EAAAA,KAAWhI,EAAQ4kC,EAAU1+B,QAC1C,IAAK7E,EAAM,OAEX,MAAO,CACLrC,KAAM,OACNqC,OACAwjC,QAASD,EAAUC,QAEvB,CAGF,CAEO,SAASC,EACdlqC,GAEA,MAAkB,aAAdA,EAAKoE,KACA,CACL+lC,WAAY,OACZC,cAAc,EACdC,SAAU,2CACVC,YAAa,8CACbC,YAAa,GAIC,eAAdvqC,EAAKoE,KACA,CACL+lC,WAAY,OACZC,cAAc,EACdC,SAAU,4CACVC,YAAa,+CACbC,YAAa,GAIC,aAAdvqC,EAAKoE,KACA,CACL+lC,WAAY,OACZC,cAAc,EACdC,SAAU,8CACVC,YAAa,iDACbE,sBAAuB,WAIT,eAAdxqC,EAAKoE,KACA,CACL+lC,WAAY,OACZC,cAAc,EACdC,SAAU,gDACVC,YAAa,mDACbC,YAAa,EACbE,qBAAqB,GAIP,QAAdzqC,EAAKoE,KACA,CACL+lC,WAAY,OACZC,cAAc,EACdC,SAAU,4CACVC,YAAa,+CACbC,YAAa,GAIC,QAAdvqC,EAAKoE,KACA,CACL+lC,WAAY,OACZC,cAAc,EACdC,SAAU,+CACVC,YAAa,kDACbC,YAAa,GAIV,CACLJ,WAAY,OACZC,cAAc,EACdC,SAAU,4CACVC,YAAa,4CACbC,YAAa,EAEjB,CAEO,SAASG,EAA6BjrC,EAAckrC,GACzD,MAAM3H,EAAS2H,EAAY3H,OAAS2H,EAAYC,MAAQ,IACxD,OAAI5H,EAAS,EACH,KAAIvjC,EAAKorC,OAAOriC,KAAKsiC,IAAI9H,MAG3B,KAAIvjC,EAAKorC,OAAO7H,IAC1B,CAEO,SAAS+H,EAAkBtrC,EAAckrC,GAC9C,OAAOlrC,EAAKorC,OAAOF,EAAY3H,OAAS2H,EAAYC,MAAQ,IAC9D,CAEO,SAASI,EAA4B/gC,GAC1C,MAAM,OAAElG,GAAWkG,EAAQY,QAE3B,GAAqB,cAAjB9G,GAAQK,KAAsB,OAElC,MAAM,cAAE6mC,EAAa,MAAEnJ,GAAU/9B,EAEjC,MAAO,CACLM,GAAI4mC,EACJnJ,MAAO,CACLkB,OAAQlB,EACR8I,MAAO,GAET5qC,KAAM,CACJoE,KAAM,OACNC,GAAI4F,EAAQ6iB,WAAa7iB,EAAQqB,OAAUrB,EAAQihC,UAAYjhC,EAAQqB,QAEzEkC,KAAMvD,EAAQuD,KACd29B,QAAQ,EACRC,SAAUnhC,EAAQ6iB,iBAAc3xB,EAEpC,CAEO,SAASkwC,EAAqCphC,GACnD,MAAM,OAAElG,GAAWkG,EAAQY,QAE3B,GAAqB,eAAjB9G,GAAQK,KAAuB,OAEnC,MAAM,cAAE6mC,EAAa,MAAEnJ,EAAK,YAAEwJ,GAAgBvnC,EAE9C,MAAO,CACLM,GAAI4mC,EACJnJ,MAAO,CACLkB,OAAQlB,EACR8I,MAAO,GAET5qC,KAAM,CACJoE,KAAM,OACNC,GAAIinC,GAEN99B,KAAMvD,EAAQuD,KACd+9B,eAAgBthC,EAAQ5F,GAE5B,CAEO,SAASmnC,EAAwBC,EAA4BC,GAClE,OAAOC,EAAAA,EAAAA,GAAqBF,EAAKC,EACnC,C,6DCrWA,QAbA,SAAoBE,EAA8BC,GAChD,MAAMC,GAAgBptC,EAAAA,EAAAA,GAAgBktC,IAEtC3vC,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAV4vC,EACT,OAGF,MAAMxnC,EAAKjI,YAAW,IAAM0vC,KAAiBD,GAC7C,MAAO,IAAMxvC,aAAagI,EAAG,GAC5B,CAACwnC,GACN,C,8FCRA,MAAME,EAAS,EACTC,EAAa,EAEJ,SAAShrC,EACtBjE,EACAvC,GAAa,EACbyxC,EACAC,EAASH,EACTI,EACAC,GAGA,MAAMrrC,GAAYJ,EAAAA,EAAAA,IAA0B,MACtC0rC,GAAY1rC,EAAAA,EAAAA,MAmDlB,OAjDA2rC,EAAAA,EAAAA,IAAc,KACP9xC,IACH6xC,EAAUlrC,SAAU,EACtB,GACC,CAACpE,EAASvC,KAEbyB,EAAAA,EAAAA,KAAU,KACR,MAAM2a,EAAS7V,EAAUI,QAEzB,IAAKpE,IAAY6Z,GAAUpc,GAAc6xC,EAAUlrC,QACjD,OAGFkrC,EAAUlrC,SAAU,EAEpB,MAAMorC,EAAM,IAAIC,MAEVC,EAAcA,KAClB,MAAMhsC,EAAQ0rC,GAAkBI,EAAI9rC,MAC9BC,EAAS0rC,GAAmBG,EAAI7rC,OAChCmW,EAAMD,EAAOE,WAAW,KAAM,CAAE41B,OAAO,KAE7C1qC,EAAAA,EAAAA,KAAgB,KACd4U,EAAOnW,MAAQA,EACfmW,EAAOlW,OAASA,EAEZisC,EAAAA,KACF91B,EAAInK,OAAU,QAAOw/B,QAGvBr1B,EAAIM,UAAUo1B,EAAe,GAATL,EAAsB,GAATA,EAAYzrC,EAAiB,EAATyrC,EAAYxrC,EAAkB,EAATwrC,GAErES,EAAAA,KACHC,EAAAA,EAAAA,GAAS/1B,EAAK,EAAG,EAAGpW,EAAOC,EAAQwrC,EAAQF,EAC7C,GACA,EAGJO,EAAIM,OAAS,KACPZ,GACFp8B,EAAAA,EAAAA,IAAe48B,GAEfA,GACF,EAGFF,EAAIvtC,IAAMjC,CAAO,GAChB,CAACA,EAASvC,EAAY4xC,EAAiBD,EAAgBD,EAAQD,IAE3DlrC,CACT,C,8FC/DA,MAmCA,EAnC4B+rC,CAACC,EAAiBC,KAC5C,MAAM,iBAAEC,IAAqBhzB,EAAAA,EAAAA,OACtB1V,EAAO2oC,IAAY3pC,EAAAA,EAAAA,IAASypC,GA8BnC,OA5BA/wC,EAAAA,EAAAA,KAAU,KACH+wC,IAIDA,EAAaG,WAAW,KAC1BD,EAASF,GAETI,EAAAA,MAAeC,EAAAA,IAAsBN,EAAOK,EAAAA,KAAcE,MACvD93B,MAAM+3B,IACL,MAAMC,EAAMC,IAAIC,gBAAgBH,IAChCh4B,EAAAA,EAAAA,IAAai4B,GACVh4B,MAAK,KACJ03B,EAAU,OAAMM,KAAO,GACvB,IAELG,OAAM,KACLV,EAAiB,CACfF,QACAa,gBAAYzyC,EACZ0yC,qBAAiB1yC,EACjB2yC,WAAW,EACXn5B,aAAwB,SAAVo4B,EAAmBgB,EAAAA,IAA2BC,EAAAA,KAC5D,IAER,GACC,CAAChB,EAAcD,IAEXC,EAAezoC,OAAQpJ,CAAS,C,6DCpC1B,SAAS8yC,EACtB3iC,EACAD,EACApB,EACAikC,EACA1zC,GAEA,MAAM,YAAE2zC,IAAgBl0B,EAAAA,EAAAA,OAExBhe,EAAAA,EAAAA,KAAU,KACJzB,GACA6Q,IAAcpB,GAChBkkC,EAAY,CAAE7iC,SAAQD,UAAWA,EAAY6iC,iBAAkBA,GACjE,GACC,CAAC1zC,EAAY8Q,EAAQrB,EAASoB,EAAW6iC,GAC9C,C,oGCRO,SAASE,EAA8BC,GAC5C,MAAMvzC,GAAcC,EAAAA,EAAAA,KAIpB,OAFAkB,EAAAA,EAAAA,KAAU,KAAMqyC,EAAAA,EAAAA,IAAsBD,EAAUvzC,IAAc,CAACuzC,EAAUvzC,KAElEyzC,EAAAA,EAAAA,IAAcF,EACvB,CAEO,SAASG,IACd,MAAM1zC,GAAcC,EAAAA,EAAAA,KAIpB,OAFAkB,EAAAA,EAAAA,KAAU,KAAMwyC,EAAAA,EAAAA,IAA0B3zC,IAAc,CAACA,KAElD4zC,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAM7zC,GAAcC,EAAAA,EAAAA,KAIpB,OAFAkB,EAAAA,EAAAA,KAAU,KAAM2yC,EAAAA,EAAAA,IAAsB9zC,IAAc,CAACA,KAE9C+zC,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMh0C,GAAcC,EAAAA,EAAAA,KAIpB,OAFAkB,EAAAA,EAAAA,KAAU,KAAM8yC,EAAAA,EAAAA,IAAiCj0C,IAAc,CAACA,KAEzDk0C,EAAAA,EAAAA,KACT,C,kDCxCA,MA4BA,EA5B4BC,CAC1Bn6B,EACAta,EACA00C,GAAuB,MAEvBjzC,EAAAA,EAAAA,KAAU,KACR,GAAIzB,EACF,OAGF,MAAMkZ,EAAYoB,EAAa3T,QAE/B,SAASguC,EAAajuC,GAEfA,EAAEkuC,SACL17B,EAAU27B,YAAcnuC,EAAEouC,OAAS,EAC/BJ,GAAsBhuC,EAAE+C,iBAEhC,CAIA,OAFAyP,EAAU67B,iBAAiB,QAASJ,EAAc,CAAEK,SAAUN,IAEvD,KACLx7B,EAAU+7B,oBAAoB,QAASN,EAAa,CACrD,GACA,CAACr6B,EAActa,EAAY00C,GAAsB,C,kDCxBvC,SAASnL,EAA2B5iC,GACjD,MAAMuuC,GAAU/uC,EAAAA,EAAAA,MACVgvC,GAAUhvC,EAAAA,EAAAA,MAQhB,OANIgvC,EAAQxuC,UAAYA,IACtBuuC,EAAQvuC,QAAUwuC,EAAQxuC,SAG5BwuC,EAAQxuC,QAAUA,EAEXuuC,EAAQvuC,OACjB,C,uGCqCA,QAvCA,SACE1G,EACAm1C,GAAsB,GAEtB,MAAM,iBACJC,IACE51B,EAAAA,EAAAA,MACE61B,GAAmBnvC,EAAAA,EAAAA,IAAO,GAE1BovC,GAAerxC,EAAAA,EAAAA,IAClB6X,IACC,MAAMy5B,EAAaF,EAAiB3uC,QAE9B8uC,EAAY15B,EAAMC,YAAY9V,OAGpC,GAFAovC,EAAiB3uC,QAAU8uC,GAEvBC,EAAAA,EAAAA,QAAwBF,GAAcC,GAAaD,EAAY,OAEnE,MAAMt8B,EAAY6C,EAAM9R,OAAOylB,QAAQ,gBACvC,IAAKxW,EAAW,QAEhBy8B,EAAAA,EAAAA,IAvB4B,KAyB5B,MAAMC,EAAaH,EAAYD,GACzB,aAAEzkB,EAAY,aAAE8kB,EAAY,UAAEC,GAAc58B,EACtBlL,KAAK+nC,MAAMF,EAAeC,EAAY/kB,GACf6kB,GA9BnB,GAiC9BP,GACF,IAIEW,GAAkBC,EAAAA,EAAAA,GAAqBV,EAAc,CAACA,GArC1C,KAqCsE,IAExFnnC,EAAAA,EAAAA,GAAkBnO,EAAK+1C,GAAkBZ,EAC3C,C,kDC/Ce,SAASc,EAAgBC,EAAYC,EAAmBC,EAAkBC,EAAY,IACnG,OAAOC,EAAAA,EAAAA,IAAsBC,IAC3BA,GAAI,GAEHF,EAAMH,EAAIC,EAASC,EACxB,C,+HCEA,MAQA,EAR0Cr0C,IACxC,MAAM,OAAEsjB,GAAWtjB,EACby0C,GAAgBjxB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBJ,GAGvE,OAAOmxB,EAAgBn1C,EAAAA,GAAAC,cAACk1C,EAAkBz0C,QAAYrB,CAAS,ECmDjE,EArDoB06B,CAClBtD,EACA2e,EACAC,KAEA,MAAM1xC,GAAOC,EAAAA,EAAAA,MACN0xC,EAAaC,IAAkB9tC,EAAAA,EAAAA,MAEhC+tC,GAAwB5yC,EAAAA,EAAAA,IAAgB,CAAC8O,EAAY+jC,GAAe,KAExE,MAAMtY,EAAczwB,KAAK+nC,MAAM/nC,KAAKC,IAAI+E,EAAKgkC,UAAW7jC,KAAKC,MAAQ,KAAa,MAC7E2jC,EAAe,GAAIE,EAAAA,EAAAA,OACxBL,IAAcnY,GACdoY,OAAel2C,EAAU,IAGrBu2C,GAAmChzC,EAAAA,EAAAA,IAAgB,KACvD4yC,EAAsB,IAAI3jC,KAA6B,IAAxBgkC,EAAAA,MAA+B,EAAK,IAG/DC,GAAsBlzC,EAAAA,EAAAA,IAAgB,KAC1C2yC,OAAel2C,GACf+1C,KAAY,IAGRvb,GAAkBj3B,EAAAA,EAAAA,IAAiBmzC,IACvCR,GAAe,IAAMQ,GAAc,IAG/BC,EAAuBX,EAAS,IAAIxjC,KAAc,IAATwjC,GAAiB,IAAIxjC,KACpEmkC,EAAqBC,WAAW,GAChCD,EAAqBE,gBAAgB,GAErC,MAAMlX,EAAmB,IAAIntB,KAiB7B,OAhBAmtB,EAAiBC,YAAYD,EAAiBE,cAAgB,GAgBvD,CAACrF,EAbN75B,EAAAA,GAAAC,cAACk1C,EAAa,CACZnxB,OAAQ/hB,QAAQqzC,GAChBa,gBAAc,EACdC,WAAYJ,EAAqBN,UACjCW,OAAOC,EAAAA,EAAAA,IAActX,GACrBuX,cAAY,EACZC,kBAAmB/f,EAAyB9yB,EAAK,gCAA6BtE,EAC9E2pB,QAAS8sB,EACT3uC,SAAUquC,EACViB,oBAAqBhgB,EAAyBmf,OAAmCv2C,IAInD,C,mFCxDpC,MAAMq3C,EAAmB,IAEnBC,EAAsC,IAAIC,IAEjC,SAASC,EAAwBj/B,EAAwBhS,EAAckiC,EAAW4O,IAC1Fv3C,EAAAA,EAAAA,MAA0BC,EAAAA,EAAAA,SAC7B0oC,EAAW,GAGb,MAAMlpC,EAA0C,QAAlCgZ,EAAUk/B,aAAa,QAC/B,WACJvD,EAAYnnC,YAAa2qC,EAAc,YAAEC,EAAaxzB,SAAS,SAAEyzB,IAC/Dr/B,EAEJ,IAAI+E,EAAO/W,EAAO2tC,EAElB,GAAI52B,EAAO,EAAG,CACZ,MAAMu6B,GAAiB3D,GAAc30C,GAAS,EAAI,GAClD+d,EAAOjQ,KAAKC,IAAIgQ,EAAMu6B,EACxB,MAAO,GAAIv6B,EAAO,EAAG,CACnB,MAAMu6B,EAAgBF,GAAezD,EAAawD,GAClDp6B,EAAOjQ,KAAKE,IAAI+P,EAAMu6B,EACxB,CAEA,GAAa,IAATv6B,EACF,OAAOiR,QAAQC,UAGbopB,GAAYN,EAASp0C,IAAI00C,IAC3BN,EAASQ,IAAIF,EAAbN,GAGF,MAAMhuC,EAAS4qC,EAAa52B,EAE5B,OAAO,IAAIiR,SAAeC,KACxB3nB,EAAAA,EAAAA,KAAgB,KACd,GAAiB,IAAb4hC,EAGF,OAFAlwB,EAAU27B,WAAa5qC,OACvBklB,IAIF,IAAIupB,GAAY,EAChB,MAAM7uC,EAAKmE,KAAK8N,SAAS6T,WACzBzW,EAAU4L,QAAQyzB,SAAW1uC,EAC7BouC,EAASnqB,IAAIjkB,GAAI,KACf6uC,GAAY,CAAI,IAGlBx/B,EAAU5U,MAAMq0C,eAAiB,OAEjC,MAAMC,EAAUzlC,KAAKC,MAErB,SAASylC,IACP3/B,EAAU5U,MAAMq0C,eAAiB,UAC1Bz/B,EAAU4L,QAAQyzB,SACzBN,EAASa,OAAOjvC,EAClB,EAEAq/B,EAAAA,EAAAA,KAAQ,KACN,GAAIwP,EAEF,OADAG,KACO,EAGT,MAAME,EAAI/qC,KAAKE,KAAKiF,KAAKC,MAAQwlC,GAAWxP,EAAU,GAEhD4P,EAAc/6B,GAAQ,EAcpC,SAAoB86B,GAClB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAhBwCE,CAAWF,IAQ3C,OAPA7/B,EAAU27B,WAAa7mC,KAAK+nC,MAAM9rC,EAAS+uC,GAEvCD,GAAK,IACPF,IACA1pB,KAGK4pB,EAAI,CAAC,GACXvxC,EAAAA,GAAgB,GACnB,GAEN,C,sKCvDA,IACI0xC,EACAC,EAFAC,GAAc,EAIH,SAASlX,EAAcmX,GACpCH,EAAcG,EACd,MAAMC,EAASC,EAAqBF,GAEpC,GAAIA,EAAK9W,uBACP,OAAO+W,GAGT9xC,EAAAA,EAAAA,IAAgB8xC,EAElB,CAEO,SAASE,IACTJ,KAILK,EAAAA,EAAAA,OAEApkC,EAAAA,EAAAA,KAAe,MACb7N,EAAAA,EAAAA,IAAgB+xC,EAAqBL,GAAc,IAEvD,CAEA,SAASK,EAAqBF,GAC5B,MAAM,UACJngC,EAAS,QACTipB,EAAO,SACPrQ,EAAQ,OACRsQ,EAAS,EAAC,YACVJ,EAAclB,EAAAA,IAAmB,eACjCuB,EAAc,2BACdC,GACE+W,EAEJ,IAAIK,EAAgBL,EAAKK,cAGvBrX,IAAmBsX,EAAAA,GAAeC,SAC9Bn5C,EAAAA,EAAAA,MAA0BC,EAAAA,EAAAA,SAE9Bg5C,EAAgB,GAGlB,MAAQ3oB,aAAc8oB,GAAkB1X,GAChC2T,UAAWgE,EAAkB/oB,aAAcgpB,EAAe,aAAElE,GAAiB38B,EAC/E8gC,GAAaC,EAAAA,EAAAA,GAAqB9X,EAASjpB,GAAW7R,IAEtD6yC,EAAwB5X,GAA8BppB,EAAU4L,QAAQq1B,aAC1EpR,OAAO7vB,EAAU4L,QAAQq1B,cACzBJ,EAEJ,IAAIK,EACJ,OAAQtoB,GACN,IAAK,QACHsoB,EAAYJ,EAAa5X,GAAW8D,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACHkU,EAAYJ,EAAaH,EAAgBzX,EAAU8X,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHE,EAAWP,EAAgBK,EACtBF,EAAaH,EAAgB,EAAIK,EAAwB,EACzDF,EAAa5X,EAItB,MAAMiY,EAwER,SACEnhC,EACAkhC,EACApY,EAAclB,EAAAA,IACduB,GAEA,MAAM,UAAEyT,GAAc58B,EAEtB,QAAuBvY,IAAnB0hC,EAA8B,CAChC,MAAM8G,EAASiR,EAAWtE,EAE1B,GAAI3M,GAAUnH,EACZ,OAAO8T,GAAa3M,EAASnH,GACxB,GAAImH,EAASnH,EAClB,OAAO8T,GAAa3M,EAASnH,EAEjC,KAAO,IAAIK,IAAmBsX,EAAAA,GAAeW,GAC3C,OAAOF,EAAWpY,EACb,GAAIK,IAAmBsX,EAAAA,GAAeY,KAC3C,OAAOvsC,KAAKC,IAAI,EAAGmsC,EAAWpY,EAChC,CAEA,OAAO8T,CACT,CA/FqB0E,CAAoBthC,EAAWkhC,EAAUpY,EAAaK,GAEzE,IAAIpkB,EAAOm8B,EAAWC,EACtB,GAAIp8B,EAAO,EAAG,CACZ,MAAMu6B,GAAiB6B,EACvBp8B,EAAOjQ,KAAKC,IAAIgQ,EAAMu6B,EACxB,MAAO,GAAIv6B,EAAO,EAAG,CACnB,MAAMu6B,EAAgB3C,GAAgBwE,EAAaH,GACnDj8B,EAAOjQ,KAAKE,IAAI+P,EAAMu6B,EACxB,CAEA,MAAMiC,EAAUzsC,KAAKsiC,IAAIryB,GAEzB,MAAO,KACL,GAAIw8B,EAAU,EAKZ,YAJIX,IAAqBO,IACvBnhC,EAAU48B,UAAYuE,IAM1B,MAAMpwC,EAASowC,EAAap8B,EAE5B,GAAsB,IAAlBy7B,EAEF,YADAxgC,EAAU48B,UAAY7rC,GAIxB,MAAMgvC,EAAawB,GAAWC,EAAAA,IAAuCC,EAAkBC,EACjFxR,EAAWsQ,GACfmB,EAAAA,IACGJ,EAAU3Z,EAAAA,KAAwBga,EAAAA,IAAsBD,EAAAA,KAEvDjC,EAAUzlC,KAAKC,MAErBgmC,GAAc,EAEd,MAAM2B,EAA0B5B,EAChCA,GAAsBxD,EAAAA,EAAAA,SAAoBh1C,GAAW,GACrDo6C,OAEAC,EAAAA,EAAAA,KAAc,KACZ,MAAMjC,EAAI/qC,KAAKE,KAAKiF,KAAKC,MAAQwlC,GAAWxP,EAAU,GAChD4P,EAAc/6B,GAAQ,EAAIg7B,EAAWF,IACrCkC,EAAejtC,KAAK+nC,MAAM9rC,EAAS+uC,GAazC,OAXA9/B,EAAU48B,UAAYmF,EAEtB7B,EAAcL,EAAI,GAAKkC,IAAiBhxC,EAEnCmvC,IACHF,OAAcv4C,EAEdw4C,MACAA,OAAsBx4C,GAGjBy4C,CAAW,GACjB5xC,EAAAA,GAAgB,CAEvB,CAEO,SAASkuC,IACd,OAAO0D,CACT,CAEO,SAAS8B,IACd/B,IACAA,OAAsBx4C,CACxB,CA2BA,SAASg6C,EAAgB5B,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAAS6B,EAAe7B,GACtB,OAAO,GAAM,EAAIA,IAAM,CACzB,C,kDC7MA,MAAM10B,EAAe,EAEN,SAAS4L,IACtB,MAAMnB,EAAYntB,OAAOotB,eACzB,IAAIosB,EAAoBrsB,GAAWsN,WAAatN,EAAUuN,WAAW,GAAGrY,qBAAkBrjB,EAE1F,MAAMy6C,EAA2BtsB,GAAWusB,WAAavsB,EAAUwsB,YAAc,GAC5EC,EAAuBzsB,EAAUusB,UAAWG,EAAAA,KACjD,IAAKL,GAA6D,IAAxCA,EAAkBM,kBAC1C,OAGF,MAAMzrB,EAAahe,MAAM+L,KAAKo9B,EAAkBx1C,UAC7CmlC,QAAO,CAAC7I,EAAQyZ,IACXA,EAAKv3B,WAAaE,GAAgBq3B,EAAKp3B,UAAUC,SAAS,sBACrDvS,MAAM+L,KAAK29B,EAAKC,iBAAiB,aACrC7Q,QAAO,CAACC,EAAK6Q,IAAc7Q,EAAI90B,OAAO8yB,OAAQ6S,EAA0B92B,QAAQjU,aAAaoxB,GACvFyZ,EAAKv3B,WAAaE,GAAgBq3B,EAAKp3B,UAAUC,SAAS,WAC5D0d,EAAOhsB,OAAO8yB,OAAQ2S,EAAqB52B,QAAQjU,YAGrDoxB,GACN,IAGL,KAAOkZ,EAAkBU,YACvBV,EAAkBW,YAAYX,EAAkBU,YAQlD,OANAV,OAAoBx6C,EAEfy6C,GACHprB,EAAW+rB,MAGN/rB,CACT,CAEA,SAASurB,EAAuBpZ,EAAepiC,GAC7C,QAAIoiC,EAAQhe,WAAaE,IAAiB8d,EAAwB7d,UAAUC,SAASxkB,OAI9EoiC,EAAQ1S,YAAa8rB,EAAuBpZ,EAAQ1S,WAAY1vB,EACzE,C,+DC3CO,MAAMi8C,EAAwC,CACnDpM,cAAc,EACdhmC,KAAM,UACNimC,SAAU,iBACVC,YAAa,qBACbH,WAAY,OACZjjC,gBAAgB,EAChBujC,qBAAqB,GAGVgM,EAAsD,CACjE,CACErM,cAAc,EACdhmC,KAAM,WACNimC,SAAU,iBACVF,WAAY,OACZjjC,gBAAgB,EAChBqjC,YAAa,GAEf,CACEH,cAAc,EACdhmC,KAAM,cACNimC,SAAU,oBACVF,WAAY,eACZjjC,gBAAgB,EAChBqjC,YAAa,GAEf,CACEH,cAAc,EACdhmC,KAAM,SACNimC,SAAU,eACVF,WAAY,QACZjjC,gBAAgB,EAChBqjC,YAAa,GAEf,CACEH,cAAc,EACdhmC,KAAM,WACNimC,SAAU,iBACVF,WAAY,UACZjjC,gBAAgB,EAChBqjC,YAAa,GAEf,CACEH,cAAc,EACdhmC,KAAM,OACNimC,SAAU,aACVF,WAAY,OACZjjC,gBAAgB,EAChBqjC,YAAa,IAIJmM,EAAsD,CACjE,CACEtM,cAAc,EACdhmC,KAAM,eACNimC,SAAU,cACVF,WAAY,OACZjjC,gBAAgB,EAChBqjC,YAAa,GAEf,CACEH,cAAc,EACdhmC,KAAM,cACNimC,SAAU,aACVF,WAAY,YACZjjC,gBAAgB,EAChBqjC,YAAa,GAEf,CACEH,cAAc,EACdhmC,KAAM,kBACNimC,SAAU,iBACVF,WAAY,UACZjjC,gBAAgB,EAChBqjC,YAAa,IAIJoM,EAAiD,CAC5DvM,cAAc,EACdhmC,KAAM,SACNimC,SAAU,yBACVF,WAAY,gBACZI,YAAa,E,2FCjFR,MAAMqM,EAAmE,CAC9EC,EAAG/qC,EAAAA,GAAsBkS,KACzB84B,OAAQhrC,EAAAA,GAAsBkS,KAC9B+4B,EAAGjrC,EAAAA,GAAsBmS,OACzB+4B,GAAIlrC,EAAAA,GAAsBmS,OAC1Bg5B,IAAKnrC,EAAAA,GAAsBoS,UAC3Bg5B,EAAGprC,EAAAA,GAAsBoS,UACzBi5B,EAAGrrC,EAAAA,GAAsBqS,OACzBi5B,OAAQtrC,EAAAA,GAAsBqS,OAC9Bk5B,IAAKvrC,EAAAA,GAAsBqS,OAC3Bm5B,KAAMxrC,EAAAA,GAAsByrC,KAC5BC,IAAK1rC,EAAAA,GAAsB2rC,IAC3BC,WAAY5rC,EAAAA,GAAsB6rC,YAG9BC,EAAmB,EAEV,SAAS/3B,EACtBvB,EAAcu5B,GAAoB,EAAOC,GAAe,GAExD,MAAMC,EAAWj6B,SAAS/hB,cAAc,OACxCg8C,EAASv4B,UAAYs4B,EAAex5B,EAmDtC,SAAuBA,GACrB,IAAI05B,EAAa15B,EAAKxe,MAAM,GAsD5B,OAnDAk4C,EAAaA,EAAWv4B,QAAQ,UAAW,KAG3Cu4B,EAAaA,EAAWv4B,QAAQ,4BAA6B,MAE7Du4B,EAAaA,EAAWv4B,QAAQ,gBAAiB,MAGjDu4B,EAAaA,EAAWv4B,QAAQ,qBAAsB,MACtDu4B,EAAaA,EAAWv4B,QAAQ,SAAU,MAC1Cu4B,EAAaA,EAAWv4B,QAAQ,WAAY,IAG5Cu4B,EAAaA,EAAWv4B,QAAQ,sCAAuC,oCACvEu4B,EAAaA,EAAWv4B,QAAQ,kCAAmC,iBACnEu4B,EAAaA,EAAWv4B,QAAQ,uBAAwB,iBAGxDu4B,EAAaA,EAAWv4B,QACtB,wEACA,mBAIGw4B,EAAAA,KAEHD,EAAaA,EAAWv4B,QAAQ,oCAAqC,SAEvEu4B,EAAaA,EAAWv4B,QACtB,0FACA,wCAIFu4B,EAAaA,EAAWv4B,QACtB,wEACA,aAEFu4B,EAAaA,EAAWv4B,QACtB,wEACA,aAEFu4B,EAAaA,EAAWv4B,QACtB,wEACA,aAEFu4B,EAAaA,EAAWv4B,QACtB,wEACC,2BAA0B3T,EAAAA,GAAsBC,sBAG5CisC,CACT,CA1G0BE,CAApBL,EA4GN,SAA4Bv5B,GAC1B,OAAOA,EAAKmB,QAAQ,IAAI04B,OAAQ,qBAAoBC,EAAAA,YAA0B,MAAM,CAACC,EAAG/9C,EAAMg+C,IAEpF,YADIA,EAAK5qC,SAAS,OAAS4qC,EAAOA,EAAK5qC,SAAS,KAAQ,UAAS4qC,IAAU,WAAUA,QAClEh+C,SAE/B,CAjHwCi+C,CAAmBj6B,GAAuBA,GAChFk6B,EAAgBT,GAChB,MAAMz9C,EAAOy9C,EAASU,UAAUrhB,OAAO3X,QAAQ,WAAY,IAE3D,IAAIi5B,GADcX,EAASU,UAAU5qC,QAAQvT,EAAK,IAE9Cq+C,EAAoB,EACxB,MAAM/tC,EAA+B,GAErC,SAASguC,EAAU1C,GACjB,GAAIA,EAAKv3B,WAAaC,KAAKi6B,aAAc,OACzC,MAAM,MAAEC,EAAK,OAAEn5B,GAyGnB,SACEu2B,EACA6C,EACAL,GAEA,MAAMt0C,EA6FR,SAA+B8xC,GAC7B,GAAIA,aAAgB8C,aAAe9C,EAAK52B,QAAQD,WAC9C,OAAO62B,EAAK52B,QAAQD,WAGtB,GAAIu3B,EAA0BV,EAAK+C,UACjC,OAAOrC,EAA0BV,EAAK+C,UAGxC,GAAsB,MAAlB/C,EAAK+C,SAAkB,CACzB,MAAMn3B,EAASo0B,EACf,OAAIp0B,EAAOxC,QAAQD,aAAevT,EAAAA,GAAsBotC,YAC/CptC,EAAAA,GAAsBotC,YAE3Bp3B,EAAOxC,QAAQD,aAAevT,EAAAA,GAAsBqtC,IAC/CrtC,EAAAA,GAAsBqtC,IAE3Br3B,EAAO0G,KAAK2kB,WAAW,WAClBrhC,EAAAA,GAAsBstC,MAE3Bt3B,EAAO0G,KAAK2kB,WAAW,QAClBrhC,EAAAA,GAAsButC,MAE3Bv3B,EAAO0G,OAAS1G,EAAOw3B,YAClBxtC,EAAAA,GAAsBytC,QAGxBztC,EAAAA,GAAsBqtC,GAC/B,CAEA,MAAsB,SAAlBjD,EAAK+C,SACC/C,EAAqB52B,QAAQD,WAGjB,QAAlB62B,EAAK+C,UACF/C,EAA0B52B,QAAQnH,WAC9BrM,EAAAA,GAAsBG,iBAFjC,CAOF,CAtIeutC,CAAsBtD,GAEnC,IAAK9xC,IAAS8xC,EAAKoD,YACjB,MAAO,CACLR,MAAOJ,EACP/4B,YAAQxkB,GAIZ,MAAMs+C,EAAWV,EAAQlrC,QAAQqoC,EAAKoD,YAAaZ,GAG7CI,EAAQW,GAAY,EAAIA,EAAWf,EACnC/U,EAASoV,EAAQW,UAAU,EAAGZ,GAAOt9C,QACrC,OAAEA,GAAWu9C,EAAQW,UAAUZ,EAAOA,EAAQ5C,EAAKoD,YAAY99C,QAErE,GAAI4I,IAAS0H,EAAAA,GAAsBytC,QACjC,MAAO,CACLT,QACAn5B,OAAQ,CACNvb,OACAu/B,SACAnoC,SACAgyC,IAAM0I,EAA2B1tB,OAIvC,GAAIpkB,IAAS0H,EAAAA,GAAsBotC,YACjC,MAAO,CACLJ,QACAn5B,OAAQ,CACNvb,OACAu/B,SACAnoC,SACAmtC,OAASuN,EAA2B52B,QAAQqpB,SAKlD,GAAIvkC,IAAS0H,EAAAA,GAAsB2rC,IACjC,MAAO,CACLqB,QACAn5B,OAAQ,CACNvb,OACAu/B,SACAnoC,SACAm+C,SAAWzD,EAAwB52B,QAAQq6B,WAKjD,GAAIv1C,IAAS0H,EAAAA,GAAsBG,YACjC,MAAO,CACL6sC,QACAn5B,OAAQ,CACNvb,OACAu/B,SACAnoC,SACA2c,WAAa+9B,EAA0B52B,QAAQnH,aAKrD,GAAI/T,IAAS0H,EAAAA,GAAsB8tC,UAAW,CAC5C,MAAMC,EAAYtW,OAAQ2S,EAAqB52B,QAAQu6B,WACvD,OAAItW,OAAOuW,MAAMD,GACR,CACLf,QACAn5B,YAAQxkB,GAIL,CACL29C,QACAn5B,OAAQ,CACNvb,OACAu/B,SACAnoC,SACAq+C,aAGN,CAEA,MAAO,CACLf,QACAn5B,OAAQ,CACNvb,OACAu/B,SACAnoC,UAGN,CAzM8Bu+C,CAAsB7D,EAAM57C,EAAMo+C,GAE5D,GAAI/4B,EACF+4B,EAAYI,EACZluC,EAAS4F,KAAKmP,QACT,GAAIu2B,EAAKoD,YAAa,CAE3B,GAAc,IAAVR,GAA2C,KAA5B5C,EAAKoD,YAAYliB,OAClC,OAEFshB,GAAaxC,EAAKoD,YAAY99C,MAChC,CAEI06C,EAAK8D,iBAAmBrB,GAAqBf,IAC/Ce,GAAqB,EACrBnsC,MAAM+L,KAAK29B,EAAK+D,YAAY1pC,QAAQqoC,GAExC,CAOA,OALApsC,MAAM+L,KAAKw/B,EAASkC,YAAY1pC,SAAS2lC,IACvCyC,EAAoB,EACpBC,EAAU1C,EAAK,IAGV,CACL57C,OACAsQ,SAAUA,EAASpP,OAASoP,OAAWzP,EAE3C,CAEO,SAASq9C,EAAgBT,GAC9BA,EAAS5B,iBAAiB,OAAO5lC,SAAS2lC,IACpCA,EAAK52B,QAAQnH,WACf+9B,EAAKoD,YAAepD,EAA0Bt9B,KAAO,GAErDs9B,EAAKgE,YAAYhE,EAAKt9B,KAAO,GAC/B,GAEJ,C,kBC5EA,IAAIuhC,EACAC,E,2BAEJ,MAAMC,EAAwC,CAC5CtF,MAAM,EACNuF,WAAW,EACXxF,IAAI,EACJyF,SAAS,EACTC,MAAM,EACNC,WAAW,EACXC,OAAO,EACPC,YAAY,EACZ,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,KAAK,GAsBD/2C,EAAkB/C,IACtB,MAAMouC,EAAS,WAAYpuC,EAAIA,EAAEouC,OALTpuC,IAChB,mBAAoBA,EAAIA,EAAE+5C,eAAe,GAAGr5C,QAAU,EAIpBs5C,CAAUh6C,GAEpD,IACGi5C,IAEGA,EAAap7B,SAAS7d,EAAEuD,SAExB01C,EAAa7J,WAAa,GAAKhB,GAAU,GAEzC6K,EAAa7J,WAAc6J,EAAa9J,aAAe8J,EAAa5uB,cAAiB+jB,GAAU,EACnG,CACA,GAAI8K,GAA4Bl5C,EAAEuD,OAAuBylB,QAAQkwB,GAA0B,OAC3Fl5C,EAAE+C,gBACJ,GAGF,SAASk3C,EAA4Bj6C,GAC/Bm5C,EAAan5C,EAAE2Q,OArCrB,SAAmBpN,GACjB,KAAKA,GAAYA,aAAkBu0C,aAAc,OAAO,EACxD,MAAMrc,EAAUl4B,EACV0a,EAAUwd,EAAQxd,QAAQC,cAChC,GAAgB,aAAZD,EAAwB,OAAO,EACnC,GAAgB,UAAZA,EAAqB,OAAO,EAChC,MAAM/a,EAAOu4B,EAAQiW,aAAa,QAClC,QAAKxuC,GACc,CACjB,OAAQ,WAAY,SAAU,QAAS,MAAO,MAC9C,SAAU,OAAQ,WAAY,iBAAkB,OAAQ,QAAS,QAEjDyJ,QAAQzJ,EAAKgb,gBAAkB,CACnD,CAwB8Bg8B,CAAUl6C,EAAEuD,SACtCvD,EAAE+C,gBAEN,CAEO,SAASmoB,EAAiBhrB,EAAyBi6C,GAQxD,OAPAlB,EAAe/4C,EACfg5C,EAA0BiB,EAE1Bv9B,SAASyxB,iBAAiB,QAAStrC,EAAgB,CAAEurC,SAAS,IAC9D1xB,SAASyxB,iBAAiB,YAAatrC,EAAgB,CAAEurC,SAAS,IAClE1xB,SAASw9B,UAAYH,EAEdI,CACT,CAEO,SAASA,IACdpB,OAAeh/C,EACfi/C,OAA0Bj/C,EAC1B2iB,SAAS2xB,oBAAoB,QAASxrC,GACtC6Z,SAAS2xB,oBAAoB,YAAaxrC,GAE1C6Z,SAASw9B,UAAY,IACvB,C,kBChFe,SAAS7G,EAAqB9X,EAAsBjpB,GACjE,IAAI8nC,EAAY,EACZC,EAAa,EAEbt6C,EAA8Bw7B,EAElC,KAAOx7B,GAAWA,IAAYuS,IAAcvS,EAAQ4d,SAASrL,IAC3D8nC,GAAar6C,EAAQq6C,UACrBC,GAAct6C,EAAQs6C,WAEtBt6C,EAAUA,EAAQu6C,aAGpB,MAAO,CAAE75C,IAAK25C,EAAW95C,KAAM+5C,EACjC,C,kECZO,SAASE,EAAoBv6C,GAClC,GAAyB,SAArBA,EAAGtC,MAAM88C,QACX,OAAO,EAGT,MAAMv6C,EAAOD,EAAGG,yBACRb,OAAQm7C,GAAiBC,EAAAA,EAAW7I,MAE5C,OAAQ5xC,EAAKQ,KAAOg6C,GAAmBx6C,EAAKQ,IAAMR,EAAKX,QAAW,CACpE,C,mCCVA,SAAgB,UAAY,WAAW,OAAS,WAAW,oBAAsB,WAAW,SAAW,WAAW,WAAa,WAAW,OAAS,WAAW,UAAY,WAAW,aAAe,W,mCCApM,SAAgB,KAAO,WAAW,gBAAgB,WAAW,aAAe,WAAW,OAAS,WAAW,UAAY,WAAW,eAAiB,W,mCCAnJ,SAAgB,KAAO,WAAW,OAAS,WAAW,KAAO,WAAW,QAAU,WAAW,iBAAiB,WAAW,cAAgB,WAAW,IAAM,WAAW,KAAO,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,WAAW,WAAW,QAAU,WAAW,QAAU,WAAW,SAAW,WAAW,YAAc,W","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/BadgeButton.module.scss?da7b","webpack://telegram-t/./src/components/common/BadgeButton.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text!.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'premiumGiftStars') {\n    const {\n      months, userId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'premiumGiftStars',\n      months,\n      message,\n      user,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","getStickerMediaHash","previewBlobUrl","useMedia","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","AvatarList","peers","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","peer","Avatar","BadgeButton","children","onClick","onMouseDown","MediaSpoiler","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","select","action","event","preventDefault","stopEvent","autoComplete","type","id","tabIndex","value","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","title","Icon","name","Button","ripple","disabled","withGlobal","global","peerId","forceShowSelf","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","withPeerColors","withEmojiStatus","itemClassName","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","getPeerTitle","FullNameTitle","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","getStickerFromGift","gift","attributes","find","attr","getTotalGiftAvailability","availabilityTotal","totalCount","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","renderMessageText","message","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","threadId","maxTimestamp","entities","content","contentNotSupportedText","getMessageText","trimText","messageKey","getMessageKey","renderTextWithEntities","containerId","messageId","chatId","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","CustomEmoji","getMessageSummaryText","renderText","emoji","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","filter","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","requestMeasure","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","RippleEffect","IS_IOS","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","containerRef","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","floor","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","random","entry","contentRect","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","CustomEmojiEffect","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","documentId","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","from","generateRandomDropPath","path","withSharedAnimation","onAnimationEnd","alt","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","isCustom","availableReaction","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","effectId","stickers","isIntersecting","useIsIntersecting","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","root","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","Fragment","effect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","div","document","ALLOWED_QUOTE_ENTITIES","Bold","Italic","Underline","Strike","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","appendChild","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","classList","contains","currentElement","parentElement","tag","tagName","toLowerCase","entityType","dataset","wrapHtmlWithMarkupTags","innerHTML","replace","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","isOpen","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","MenuItem","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","topReactions","defaultTagReactions","poll","story","isPrivate","isCurrentUserPremium","enabledReactions","isWithPaidReaction","reactionsLimit","anchor","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","canPlayAnimatedEmojis","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onClose","onCloseAnimationEnd","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","showNotification","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","menuRef","scrollableRef","noReactions","areReactionsPossible","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","isReady","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","set","copyOptions","href","afterEffect","options","photo","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","selection","getSelection","label","handler","Promise","resolve","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","parentNode","closest","toString","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","messageIds","getMessageIdsForSelectedText","execCommand","clipboardText","copyHtmlToClipboard","join","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","getTriggerElement","querySelector","getRootElement","getMenuElement","getLayout","extraHeightAudioPlayer","offsetHeight","middleColumn","getElementById","middleColumnComputedStyle","getComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","shouldAvoidNegativePosition","menuElMinWidth","disableScrolling","handleOpenMessageReactionPicker","position","Menu","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","results","onShowMore","isOutgoing","messagesCount","option","withPreventDefaultOnMouseDown","destructive","MenuSeparator","inline","withWrap","reactors","count","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","isOwnMessage","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","openPremiumModal","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","addLocalPaidReaction","openPaidReactionModal","reportMessages","useShowTransition","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","requestCalendar","calendar","useSchedule","chatsById","chats","byId","usersById","users","recentReactions","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","getMessageDownloadableMedia","getIsDownloading","selectionRange","rangeCount","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","trim","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","replyToPeerId","fromChatId","handleOpenThread","handleEdit","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","initialSection","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","scheduledMaxDate","setFullYear","getFullYear","ConfirmDialog","confirmLabel","confirmHandler","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","result","animateScroll","element","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","addExtraClass","requestForcedReflow","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","onContextMenu","LOCAL_TGS_URLS","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","isInStoryViewer","isForEffects","effectReactions","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","getReactionKey","color","MAX_EFFECT_COUNT","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","StarReactionEffect","nonInteractive","quality","selectStarsState","stars","ReactionButton","recentReactors","chosenClassName","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","scale","cancel","animate","offset","duration","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","Sparkles","preset","animatedEmoji","formatIntegerCompact","paidCounter","counter","Reactions","maxWidth","metaChildren","noRecentReactors","tags","isAccountFrozen","updateMiddleSearch","performMiddleSearch","openFrozenAccountModal","areTags","withServiceReactions","reduce","acc","recentReactorsByReactionKey","recentReaction","reactionKey","shouldHideRecentReactors","isChosen","update","savedTag","paidLocalCount","localId","actionText","cacheBreaker","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","body","withPortal","tagText","tail","tailFill","autoClose","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","userId","currency","purpose","hash","months","userIds","boostChannelId","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","number","abs","formatStarsAmount","getStarsTransactionFromGift","transactionId","senderId","isGift","isMyGift","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","callback","delay","savedCallback","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","fastBlur","onload","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","url","URL","createObjectURL","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","useEnsureMessage","replyOriginForId","loadMessage","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","getUnreadChatsByFolderId","useHorizontalScroll","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","prevRef","lastRef","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","lastHeight","newHeight","isAnimatingScroll","beginHeavyAnimation","resizeDiff","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","getAttribute","containerWidth","scrollWidth","scrollId","remainingPath","get","isStopped","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","node","querySelectorAll","messageEl","firstChild","removeChild","pop","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","ENTITY_CLASS_BY_NODE_NAME","B","STRONG","I","EM","INS","U","S","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","fragment","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","COMMENT_NODE","index","rawText","HTMLElement","nodeName","MentionName","Url","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","childNodes","replaceWith","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","ArrowDown","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","isTextBox","_excludedClosestSelector","onkeydown","enableScrolling","offsetTop","offsetLeft","offsetParent","isElementInViewport","display","windowHeight","windowSize"],"sourceRoot":""}