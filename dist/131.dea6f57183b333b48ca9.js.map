{"version":3,"file":"131.dea6f57183b333b48ca9.js","mappings":"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","sources":["webpack://telegram-t/./src/hooks/useImageLoader.ts","webpack://telegram-t/./src/hooks/animations/useTransitionActiveKey.ts","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/util/events/getPointerPosition.ts","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/util/resolveTransitionName.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/components/common/BadgeButton.tsx","webpack://telegram-t/./src/components/common/BadgeButton.module.scss?da7b","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts"],"sourcesContent":["import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { preloadImage } from '../util/files';\nimport useAsync from './useAsync';\n\nexport type UseImageLoaderResult = {\n  image?: HTMLImageElement;\n};\n\nexport default function useImageLoader(file?: Blob): UseImageLoaderResult {\n  const urlRef = useRef<string | undefined>();\n\n  const { result: image } = useAsync(() => {\n    if (!file) {\n      return Promise.resolve(undefined);\n    }\n\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n    }\n\n    const url = URL.createObjectURL(file);\n    urlRef.current = url;\n\n    return preloadImage(url);\n  }, [file]);\n\n  useEffect(() => {\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = undefined;\n      }\n    };\n  }, []);\n\n  return { image };\n}\n","import { useMemo, useRef } from '../../lib/teact/teact';\n\n/**\n * Use this hook to bind `<Transition />` animation to changes in the dependency array.\n * Use optional parameter `noAnimation` if you want to prevent the animation even if the dependency array changes.\n*/\nexport function useTransitionActiveKey(deps: unknown[], noAnimation?: boolean): number {\n  const activeKey = useRef(0);\n\n  useMemo(() => {\n    if (!noAnimation) activeKey.current += 1;\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...deps]);\n\n  return activeKey.current;\n}\n","import type { TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n\n  peerId?: string;\n\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): Complete<StateProps> => {\n    if (!peerId) {\n      return {\n        peer: undefined,\n        isSavedMessages: undefined,\n      };\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { ElementRef } from '../lib/teact/teact';\nimport { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: ElementRef<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  noRipple?: boolean;\n  onClearError: NoneToVoidFunction;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder,\n  submitLabel,\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  onClearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  const inputRef = useRef<HTMLInputElement>();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      onClearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          spellCheck={IS_TAURI ? false : undefined}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder || lang('PasswordFormPlaceholder')}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title={lang('AriaPasswordToggle')}\n          aria-label={lang('AriaPasswordToggle')}\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel || lang('PasswordFormSubmit')}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getPointerPosition(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  if ('touches' in e) {\n    return {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"noTransition\":\"HS9PzRKt\",\"floatingBadgeContent\":\"W4rqGyJl\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progressWrapper\":\"_B4r3D5W\",\"positiveLayer\":\"VmyTBAzN\",\"positiveProgress\":\"MzFvyMb5\",\"negativeLayer\":\"QZwWHVdB\",\"negativeProgress\":\"S6H6hBpP\",\"primary\":\"Zi0w7QJ3\",\"negative\":\"dXs41qvC\",\"transitioning\":\"I7toQztx\",\"hidden\":\"xdKGgbKQ\",\"cycling\":\"SxTCkiyg\",\"show\":\"tkyw4hXo\"};","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport { REM } from './helpers/mediaDimensions';\n\nimport { useTransitionActiveKey } from '../../hooks/animations/useTransitionActiveKey';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useSyncEffect from '../../hooks/useSyncEffect';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\nexport type AnimationDirection = 'forward' | 'backward' | 'none';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  isNegative?: boolean;\n  animationDirection?: AnimationDirection;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress = 0,\n  isPrimary,\n  isNegative,\n  animationDirection = 'none',\n  className,\n}) => {\n  const lang = useOldLang();\n  const floatingBadgeContentRef = useRef<HTMLDivElement>();\n  const parentContainerRef = useRef<HTMLDivElement>();\n\n  const [shiftX, setShiftX] = useState(0);\n  const [beakPosition, setBeakPosition] = useState(0);\n  const [badgeWidth, setBadgeWidth] = useState(0);\n  const prevBadgeWidth = usePrevious(badgeWidth);\n  const [positiveProgress, setPositiveProgress] = useState(isNegative ? 0 : progress);\n  const [negativeProgress, setNegativeProgress] = useState(isNegative ? progress : 0);\n  const [badgeProgress, setBadgeProgress] = useState(progress);\n\n  const [layerProgress, setLayerProgress] = useState(0);\n  const [showLayer, setShowLayer] = useState(false);\n  const [disableMainProgressTransition, setDisableMainProgressTransition] = useState(false);\n  const [disableLayerProgressTransition, setDisableLayerProgressTransition] = useState(false);\n  const [hideMainLayer, setHideMainLayer] = useState(false);\n  const [isCycling, setIsCycling] = useState(false);\n\n  const badgeActiveKey = useTransitionActiveKey([floatingBadgeText, floatingBadgeIcon]);\n\n  const shouldAnimateCaptionsRef = useRef(false);\n  const prevLeftText = usePrevious(leftText);\n  const prevRightText = usePrevious(rightText);\n  const prevIsNegative = usePrevious(isNegative);\n\n  const BEAK_WIDTH_PX = 28;\n  const PROGRESS_BORDER_RADIUS_PX = REM;\n  const CORNER_BEAK_THRESHOLD = BEAK_WIDTH_PX / 2 + PROGRESS_BORDER_RADIUS_PX;\n  const BADGE_HORIZONTAL_PADDING_PX = 0.75 * 2 * REM;\n\n  const LAYER_PROGRESS_TRANSITION_MS = 400;\n  const FULL_CYCLE_TRANSITION_MS = LAYER_PROGRESS_TRANSITION_MS * 2;\n  const APPLY_TRANSITION_DELAY_MS = 50;\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeContentRef.current && parentContainerRef.current) {\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const halfBadgeWidth = badgeWidth / 2;\n      const minBadgeShift = halfBadgeWidth;\n      const maxBadgeShift = parentWidth - halfBadgeWidth;\n      const halfBeakWidth = BEAK_WIDTH_PX / 2;\n      const currentShift = isNegative ? (1 - badgeProgress) * parentWidth : badgeProgress * parentWidth;\n\n      let safeShift = Math.max(minBadgeShift, Math.min(currentShift, maxBadgeShift));\n      if (currentShift < CORNER_BEAK_THRESHOLD) {\n        safeShift = currentShift + halfBadgeWidth;\n      }\n      if (currentShift > parentWidth - CORNER_BEAK_THRESHOLD) {\n        safeShift = currentShift - halfBadgeWidth;\n      }\n\n      const beakOffsetFromCenter = currentShift - safeShift;\n      const newBeakPositionPx = halfBadgeWidth + beakOffsetFromCenter - halfBeakWidth;\n\n      setShiftX(safeShift / parentWidth);\n      setBeakPosition(newBeakPositionPx);\n    }\n  };\n\n  useEffect(updateBadgePosition, [badgeProgress, badgeWidth, isNegative, CORNER_BEAK_THRESHOLD]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  useEffect(() => {\n    const width = floatingBadgeContentRef?.current?.clientWidth || 0;\n    setBadgeWidth(width + BADGE_HORIZONTAL_PADDING_PX);\n  }, [floatingBadgeText, floatingBadgeIcon, BADGE_HORIZONTAL_PADDING_PX]);\n\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    let timeoutId: number | undefined;\n\n    const isNegativeTransition = prevIsNegative !== undefined && prevIsNegative !== isNegative;\n    const shouldAnimateCaptions = (prevLeftText || prevRightText) && (isNegativeTransition || isCycling);\n\n    if (shouldAnimateCaptions && !shouldAnimateCaptionsRef.current) {\n      shouldAnimateCaptionsRef.current = true;\n\n      const timeoutMs = isCycling ? LAYER_PROGRESS_TRANSITION_MS * 2 : LAYER_PROGRESS_TRANSITION_MS;\n      timeoutId = window.setTimeout(() => {\n        shouldAnimateCaptionsRef.current = false;\n        forceUpdate();\n      }, timeoutMs);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        shouldAnimateCaptionsRef.current = false;\n      }\n    };\n  }, [\n    leftText, prevLeftText, rightText, prevRightText,\n    prevIsNegative, isNegative, animationDirection, isCycling,\n  ]);\n\n  const shouldAnimateCaptions = shouldAnimateCaptionsRef.current;\n\n  useEffect(() => {\n    if (isNegative) {\n      setPositiveProgress(0);\n      setNegativeProgress(progress);\n    } else {\n      setNegativeProgress(0);\n      setPositiveProgress(progress);\n    }\n    setBadgeProgress(progress);\n  }, [progress, isNegative]);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n\n  const displayLeftText = shouldAnimateCaptions ? prevLeftText : leftText;\n  const displayRightText = shouldAnimateCaptions ? prevRightText : rightText;\n\n  const prevProgress = usePrevious(progress);\n\n  useEffect(() => {\n    const timers: number[] = [];\n\n    if (animationDirection === 'none' || prevProgress === undefined) {\n      return;\n    }\n\n    const targetProgress = progress;\n\n    const setMainProgress = (value: number) => {\n      if (isNegative) {\n        setNegativeProgress(value);\n      } else {\n        setPositiveProgress(value);\n      }\n    };\n\n    if (animationDirection === 'forward' || animationDirection === 'backward') {\n      const isForward = animationDirection === 'forward';\n\n      setIsCycling(true);\n      setMainProgress(isForward ? 1 : 0);\n\n      setDisableLayerProgressTransition(true);\n      setLayerProgress(isForward ? 0 : 1);\n\n      timers.push(window.setTimeout(() => {\n        setDisableLayerProgressTransition(false);\n        setShowLayer(true);\n        setLayerProgress(targetProgress);\n        if (isForward) {\n          setDisableMainProgressTransition(true);\n          setMainProgress(0);\n        }\n      }, LAYER_PROGRESS_TRANSITION_MS));\n\n      timers.push(window.setTimeout(() => {\n        setDisableMainProgressTransition(true);\n        setDisableLayerProgressTransition(true);\n        setHideMainLayer(false);\n        setMainProgress(targetProgress);\n        setShowLayer(false);\n\n        timers.push(window.setTimeout(() => {\n          setDisableMainProgressTransition(false);\n          setDisableLayerProgressTransition(false);\n          setIsCycling(false);\n        }, APPLY_TRANSITION_DELAY_MS));\n      }, FULL_CYCLE_TRANSITION_MS));\n    }\n\n    return () => {\n      timers.forEach(clearTimeout);\n    };\n  }, [\n    progress, animationDirection, isNegative,\n    prevProgress, FULL_CYCLE_TRANSITION_MS,\n  ]);\n\n  const renderProgressLayer = (\n    isPositive: boolean,\n    currentProgress: number,\n    layerClassName?: string,\n    disableTransition?: boolean,\n  ) => {\n    const typeClass = isPositive ? styles.positiveProgress : styles.negativeProgress;\n    const progressVar = '--layer-progress';\n\n    return (\n      <div\n        className={buildClassName(\n          typeClass,\n          layerClassName,\n          disableTransition && styles.noTransition,\n        )}\n        style={`${progressVar}: ${currentProgress}`}\n      >\n        <div className={styles.left}>\n          <span>{displayLeftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{displayRightText}</span>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        isNegative && styles.negative,\n        shouldAnimateCaptions && styles.transitioning,\n        isCycling && styles.cycling,\n        className,\n      )}\n      style={buildStyle(\n        `--positive-progress: ${positiveProgress}`,\n        `--negative-progress: ${negativeProgress}`,\n        `--layer-progress: ${layerProgress}`,\n        `--shift-x: ${shiftX}`,\n        `--cycling-animation-badge-position: ${FULL_CYCLE_TRANSITION_MS}ms`,\n        `--cycling-animation-progress: ${LAYER_PROGRESS_TRANSITION_MS}ms`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div\n              className={\n                buildClassName(styles.floatingBadge,\n                  (!prevBadgeWidth || prevBadgeWidth === 0)\n                  && styles.noTransition)\n              }\n              style={`width: ${badgeWidth}px;`}\n            >\n              <Transition\n                activeKey={badgeActiveKey}\n                name=\"fade\"\n                shouldCleanup\n              >\n                <div\n                  ref={floatingBadgeContentRef}\n                  className={styles.floatingBadgeContent}\n                >\n                  {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n                  {floatingBadgeText && (\n                    <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                      {floatingBadgeText}\n                    </div>\n                  )}\n                </div>\n              </Transition>\n            </div>\n            <div className={styles.floatingBadgeTriangle} style={`left: ${beakPosition}px`}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"currentColor\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{displayLeftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{displayRightText}</span>\n      </div>\n\n      <div className={styles.progressWrapper}>\n        {renderProgressLayer(\n          true,\n          positiveProgress,\n          buildClassName(hideMainLayer && styles.hidden),\n          disableMainProgressTransition,\n        )}\n\n        {renderProgressLayer(\n          false,\n          negativeProgress,\n          buildClassName(hideMainLayer && styles.hidden),\n          disableMainProgressTransition,\n        )}\n\n        {renderProgressLayer(\n          !isNegative,\n          layerProgress,\n          buildClassName(\n            isNegative ? styles.negativeLayer : styles.positiveLayer,\n            showLayer && styles.show,\n          ),\n          disableLayerProgressTransition,\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Icon from './icons/Icon';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  isNsfw?: boolean;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  isNsfw,\n  className,\n  width,\n  height,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n      {isNsfw && (\n        <span className={styles.nsfw}>\n          <Icon name=\"eye-crossed-outline\" className={styles.nsfwIcon} />\n          {lang('MediaSpoilerSensitive')}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"nsfw\":\"FJGQoa6s\",\"nsfwIcon\":\"Y7JVRkxJ\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import type { AnimationLevel } from '../types';\n\nimport { ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN } from '../config.ts';\nimport { IS_ANDROID, IS_IOS } from './browser/windowEnvironment.ts';\n\nexport function resolveTransitionName(\n  name: 'slideOptimized' | 'slide' | 'layers',\n  animationLevel: AnimationLevel,\n  isDisabled = false,\n  isRtl = false,\n) {\n  if (isDisabled || animationLevel === ANIMATION_LEVEL_MIN) return 'none';\n\n  if (animationLevel === ANIMATION_LEVEL_MED) return 'slideFade';\n\n  return name === 'slideOptimized' ? (\n    isRtl ? 'slideOptimizedRtl' : 'slideOptimized'\n  ) : name === 'slide' ? (\n    isRtl ? 'slideRtl' : 'slide'\n  ) : (\n    IS_ANDROID ? 'slideFade' : IS_IOS ? 'slideLayers' : 'pushSlide'\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: ElementRef<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const effectRef = useRef<HTMLDivElement>();\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import type React from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport type React from '../../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {Boolean(inputElement) && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {Boolean(avatarElement) && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {Boolean(subtitle) && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageTextWithFallback,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getTranslationFn, type LangFn } from '../../../util/localization';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n}: {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageTextWithFallback(getTranslationFn(), message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getMainUsername, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  const inputRef = useRef<HTMLInputElement>();\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) {\n        return (\n          <div key={id}>\n            No peer or category with ID\n            {id}\n          </div>\n        );\n      }\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = getMainUsername(peer);\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n\n        onClick={() => handleItemClick(id)}\n\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById = new Map<string, VoidFunction>();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: ElementRef<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n        && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: ElementRef<HTMLDivElement>;\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import type React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, clientHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const menuRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getPhotoMediaHash,\n  getWebPagePhoto,\n  getWebPageVideo,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport { getTranslationFn } from '../../../../util/localization';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const { webPage } = statefulContent || {};\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getWebPageVideo(webPage) ? getWebPagePhoto(webPage) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          ) as string[];\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(getTranslationFn(), message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = selection?.anchorNode?.parentNode as HTMLElement;\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onAppendTodoList?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  webPage,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  canAppendTodoList,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onAppendTodoList,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  const menuRef = useRef<HTMLDivElement>();\n  const scrollableRef = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: oldLang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, webPage, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? oldLang('SendAnotherGift')\n                : oldLang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{oldLang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{oldLang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {oldLang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {oldLang('Conversation.ContextViewReplies', repliesThreadInfo.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{oldLang('Edit')}</MenuItem>}\n        {canAppendTodoList && (\n          <MenuItem icon=\"add\" onClick={onAppendTodoList}>\n            {lang('MenuButtonAppendTodoList')}\n          </MenuItem>\n        )}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{oldLang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{oldLang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{oldLang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && (\n          <MenuItem icon=\"language\" onClick={onShowOriginal}>\n            {oldLang('ShowOriginalButton')}\n          </MenuItem>\n        )}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{oldLang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >\n            {oldLang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{oldLang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{oldLang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{oldLang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{oldLang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{oldLang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? oldLang('lng_context_cancel_download') : oldLang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{oldLang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{oldLang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{oldLang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{oldLang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(\n                  oldLang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'],\n                )}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(oldLang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? oldLang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : oldLang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? oldLang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : oldLang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiWebPage,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSavedDialogIdFromMessage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n  selectWebPageFromMessage,\n} from '../../../global/selectors';\nimport { selectMessageDownloadableMedia } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n  savedDialogId?: string;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  webPage,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  canAppendTodoList,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  savedDialogId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n    openTodoListModal,\n    showNotification,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    const global = getGlobal();\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        monoforumPeerId: savedDialogId,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    if (message.content.todo) {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    } else {\n      setEditingId({ messageId: message.id });\n    }\n    closeMenu();\n  });\n\n  const handleAppendTodoList = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForAppendToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n        forNewTask: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    const global = getGlobal();\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canAppendTodoList={canAppendTodoList}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        webPage={webPage}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onAppendTodoList={handleAppendTodoList}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={oldLang('lng_polls_stop_warning')}\n        confirmLabel={oldLang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): Complete<StateProps> => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig;\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n      && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !chat.isMonoforum\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const webPage = selectWebPageFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    const savedDialogId = selectSavedDialogIdFromMessage(global, message);\n    const todoItemsMax = global.appConfig.todoItemsMax;\n    const canAppendTodoList = message.content.todo?.todo.othersCanAppend\n      && message.content.todo?.todo.items?.length < todoItemsMax;\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canAppendTodoList,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n      savedDialogId,\n      webPage,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n"],"names":["useImageLoader","file","urlRef","useRef","result","image","useAsync","Promise","resolve","undefined","current","URL","revokeObjectURL","url","createObjectURL","preloadImage","useEffect","useTransitionActiveKey","deps","noAnimation","activeKey","useMemo","memo","withGlobal","global","_ref2","peerId","forceShowSelf","peer","isSavedMessages","selectPeer","user","selectUser","isSelf","_ref","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","className","withPeerColors","withEmojiStatus","onClick","itemClassName","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","_jsx","children","Icon","name","style","Avatar","size","getPeerTitle","FullNameTitle","fullClassName","buildClassName","isForum","isAvatarSquare","getPeerColorClass","_jsxs","dir","isRtl","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","reaction","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","ref","isCustom","type","availableReaction","find","r","isSameReaction","centerIconId","centerIcon","id","customEmoji","useCustomEmoji","documentId","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","Math","floor","random","length","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","Boolean","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","useLastCallback","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","styles","root","animating","ReactionStaticEmoji","CustomEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","onEnded","_Fragment","effect","CustomEmojiEffect","particleSize","max","shouldFocusOnResize","arguments","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","setTimeout","clearTimeout","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","onClearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","useLang","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","value","spellCheck","IS_TAURI","onChange","e","MIN_PASSWORD_LENGTH","maxLength","role","Button","ripple","disabled","getPointerPosition","x","touches","clientX","y","clientY","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","isNegative","animationDirection","floatingBadgeContentRef","parentContainerRef","shiftX","setShiftX","beakPosition","setBeakPosition","badgeWidth","setBadgeWidth","prevBadgeWidth","usePrevious","positiveProgress","setPositiveProgress","negativeProgress","setNegativeProgress","badgeProgress","setBadgeProgress","layerProgress","setLayerProgress","showLayer","setShowLayer","disableMainProgressTransition","setDisableMainProgressTransition","disableLayerProgressTransition","setDisableLayerProgressTransition","hideMainLayer","setHideMainLayer","isCycling","setIsCycling","badgeActiveKey","shouldAnimateCaptionsRef","prevLeftText","prevRightText","prevIsNegative","CORNER_BEAK_THRESHOLD","BEAK_WIDTH_PX","BADGE_HORIZONTAL_PADDING_PX","updateBadgePosition","parentWidth","offsetWidth","halfBadgeWidth","minBadgeShift","maxBadgeShift","halfBeakWidth","currentShift","safeShift","min","newBeakPositionPx","clientWidth","forceUpdate","useForceUpdate","useSyncEffect","timeoutId","timeoutMs","LAYER_PROGRESS_TRANSITION_MS","window","shouldAnimateCaptions","hasFloatingBadge","displayLeftText","displayRightText","prevProgress","timers","targetProgress","setMainProgress","isForward","push","forEach","renderProgressLayer","isPositive","currentProgress","layerClassName","disableTransition","typeClass","buildStyle","Transition","shouldCleanup","width","viewBox","fill","d","props","isOpen","CalendarModal","useModuleLoader","Bundles","Extra","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","date","isWhenOnline","scheduledAt","getTime","Date","now","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSecondButtonClick","DEFAULT_LIMIT","peers","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","isVisible","withAnimation","thumbDataUri","isNsfw","canvasRef","useCanvasBlur","handleClick","el","rect","currentTarget","getBoundingClientRect","left","top","shiftY","setAttribute","prevRef","lastRef","resolveTransitionName","animationLevel","ANIMATION_LEVEL_MIN","ANIMATION_LEVEL_MED","IS_ANDROID","IS_IOS","containerRef","isDisabled","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","backgroundColors","patternColor","patternIcon","clearBottomSector","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","then","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","i","angle","cos","sin","sizeFactor","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","isElementInViewport","display","windowHeight","windowSize","get","MAX_EFFECT_COUNT","QUALITY","_ref3","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","nonInteractive","quality","REACTION_SIZE","selectStarsState","stars","isOwnMessage","recentReactors","chosenClassName","chatId","messageId","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","count","stopPropagation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","offset","duration","easing","prevAmount","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","chosen","onMouseDown","onContextMenu","Sparkles","preset","PaidReactionEmoji","animatedEmoji","AnimatedCounter","text","formatIntegerCompact","paidCounter","ReactionAnimatedEmoji","AvatarList","counter","message","threadId","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","getGlobal","recentReaction","key","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","toString","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","isOutgoing","withContextMenu","onRemove","ReactionButton","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","fastBlur","onload","requestMeasure","subtitle","avatarElement","inputElement","inputPosition","inactive","titleClassName","subtitleClassName","onDisabledClick","isClickable","RippleEffect","renderMessageText","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","maxTimestamp","entities","content","contentNotSupportedText","getMessageTextWithFallback","getTranslationFn","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","useEnsureMessage","replyOriginForId","loadMessage","ITEM_CLASS_NAME","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","includes","splice","indexOf","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","username","getMainUsername","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","Radio","checked","onlyInput","Checkbox","beforeChildren","pickerCategoryTitle","header","PeerChip","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","useRunDebounced","ms","noFirst","noLast","useDebouncedCallback","cb","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","selectCanAnimateInterface","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","isStopped","set","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","getStickerFromGift","gift","sticker","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","prevText","usePreviousDeprecated","shouldAnimate","characters","elements","textLength","prevTextLength","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","contains","preventDefaultForScrollKeys","HTMLElement","element","tagName","toLowerCase","isTextBox","disableScrolling","_excludedClosestSelector","document","onkeydown","enableScrolling","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","getUnreadChatsByFolderId","isReady","noAppearAnimation","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","StarReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","allAvailableReactions","topReactions","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isPrivate","canPlayAnimatedEmojis","isInSavedMessages","isInStoryViewer","isForEffects","effectReactions","isWithPaidReaction","onShowMore","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","ReactionSelectorReaction","ReactionSelectorCustomReaction","color","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isConnected","blur","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","ApiMediaFormat","BlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","isVerified","ENTITY_CLASS_BY_NODE_NAME","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","parseHtmlAsFormattedText","html","withMarkdownLinks","skipMarkdown","fragment","createElement","innerHTML","parsedHtml","replace","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","trim","textIndex","recursionDeepness","addEntity","node","nodeType","Node","COMMENT_NODE","index","entity","rawText","entityType","nodeName","anchor","MentionName","Url","href","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","from","childNodes","querySelectorAll","replaceWith","ELEMENT_NODE","getMessageIdsForSelectedText","selection","getSelection","selectedFragments","rangeCount","getRangeAt","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageIds","classList","messageEl","firstChild","removeChild","pop","parentNode","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","onAnimationEnd","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","getTriggerElement","getRootElement","body","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","PromptDialog","Menu","autoClose","onCloseAnimationEnd","MenuItem","destructive","div","ALLOWED_QUOTE_ENTITIES","getSelectionAsFormattedText","range","clonedSelection","appendChild","commonAncestorContainer","currentElement","parentElement","wrapHtmlWithMarkupTags","getSelectionAsHtml","stripEntitiesForQuote","PinMessageModal","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","handleOpenModal","isReadDate","isReactionPickerOpen","poll","webPage","story","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","canAppendTodoList","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","onReply","onOpenThread","onEdit","onAppendTodoList","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","scrollableRef","oldLang","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","afterEffect","options","getMessageText","photo","getMessagePhoto","getWebPageVideo","getWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","label","handler","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","execCommand","clipboardText","copyHtmlToClipboard","join","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","ReactionSelector","messagesCount","option","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","reactors","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","_ref7","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isMonoforum","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","selectWebPageFromMessage","storyData","selectPeerStory","selectCanGift","savedDialogId","selectSavedDialogIdFromMessage","todoItemsMax","todo","othersCanAppend","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","openTodoListModal","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","chatsById","chats","byId","usersById","users","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","selectMessageDownloadableMedia","getIsDownloading","selectionRange","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","monoforumPeerId","replyToPeerId","fromChatId","handleOpenThread","handleEdit","handleAppendTodoList","forNewTask","handlePin","handleUnpin","isUnpin","handleForward","_ref4","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","_ref5","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","_ref6","handleReport","MessageContextMenu","ConfirmDialog","confirmLabel","confirmHandler"],"sourceRoot":""}