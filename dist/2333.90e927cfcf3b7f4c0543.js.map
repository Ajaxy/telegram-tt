{"version":3,"file":"2333.90e927cfcf3b7f4c0543.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/TodoList.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/hooks/useMarkScrolled/useMarkScrolled.ts","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(lang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        focusedQuoteOffset,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_WINDOW_BUTTONS_POSITION = 'set-window-buttons-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type WindowButtonsPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setWindowButtonsPosition: (position: WindowButtonsPosition) => Promise<void>;\n  /**\n   * @deprecated Use `setWindowButtonsPosition` instead\n   */\n  setTrafficLightPosition: (position: WindowButtonsPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n    };\n  },\n)(Chat));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks = new Set<NoneToVoidFunction>();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: String(zIndex),\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: String(zIndex),\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: String(zIndex),\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: String(zIndex),\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useEffect, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport { ELECTRON_WINDOW_DRAG_EVENT_START } from '../config';\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  useEffect(() => {\n    document.body.addEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n\n    return () => {\n      document.body.removeEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: ElementRef<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  const overscrollTriggerRef = useRef<HTMLDivElement>();\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n  const svgRef = useRef<SVGSVGElement>();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SVG_EXTENSIONS } from '../../config';\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(oldLang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: ElementRef<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (oldLang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={oldLang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={oldLang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={oldLang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={oldLang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  const ref = useRef<HTMLDivElement>();\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type {\n  IAnchorPosition, MessageListType, SharedSettings, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { throttle } from '../../util/schedulers';\n\nconst THROTTLE_DELAY = 100;\n\nconst useMarkScrolled = ({\n  containerRef, selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useEffect(() => {\n    const elements = containerRef?.current?.querySelectorAll(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n      requestMutation(() => {\n        target.classList.toggle('scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => el.addEventListener('scroll', handleScroll, { passive: true }));\n    // Trigger the scroll handler immediately to apply the current state\n    elements.forEach((el) => el.dispatchEvent(new Event('scroll', { bubbles: false })));\n\n    return () => {\n      elements.forEach((el) => el.removeEventListener('scroll', handleScroll));\n    };\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useMarkScrolled;\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n}) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThemeKey, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ThemeKey;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || isMonoforum,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!);\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, threadId, windowWidth, paidMessagesStars,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({ });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName('paidStarsBadge', shouldRenderPaidBadge && 'visible')}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig?.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(oldLang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","args","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","getSingularPaidMedia","media","extendedMedia","photo","video","singularMedia","isPreview","duration","accumulate","list","initValue","reduce","accumulator","item","calculateContainerSize","layout","styles","width","height","dimensions","sides","x","y","calculateAlbumLayout","isOwn","noAvatars","album","isMobile","ratios","messages","isSingleMessage","isOutgoing","content","paidMedia","getMessageContent","filter","calculateMediaDimensions","getRatios","isPaidMedia","proportions","ratio","join","getProportions","averageRatio","result","getAverageRatio","albumCount","forceCalc","some","maxWidth","getAvailableWidth","params","minWidth","maxHeight","spacing","originalRatios","clamp","cropRatios","Array","attempts","pushAttempt","lineCounts","heights","offset","currentCount","multiHeight","attemptCount","sum","slice","first","second","third","fourth","optimalAttempt","optimalDiff","i","lineCount","totalHeight","bad1","Math","min","bad2","line","diff","abs","optimalCounts","optimalHeights","rowCount","index","row","colCount","lineHeight","round","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","max","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","setTimeout","Worker","URL","CHAT_STATS","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","size","translatableCount","detectableCount","languageOccurrences","metadata","values","isTranslatable","detectedLanguage","language","occurrences","from","sort","a","b","QUICK_REACTION_AREA_WIDTH","REM","QUICK_REACTION_AREA_HEIGHT","Number","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","containerRef","isInSelectMode","canReply","isProtected","onContextMenu","handleBeforeContextMenu","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","updateDraftReplyInfo","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","useRef","handleMouseMove","useThrottledCallback","quickReactionContainer","clientX","clientY","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","getBoundingClientRect","isVisibleX","isVisibleY","requestMeasure","IS_TOUCH_ENV","startedAt","captureEvents","selectorToPreventScroll","excludedClosestSelector","onSwipe","direction","SwipeDirection","Left","Date","now","onRelease","replyToMsgId","handleMouseDown","preventMessageInputBlur","handleClick","clearInterval","IS_ANDROID","classList","contains","windowSize","getIsKeyboardVisible","handleTap","handleContextMenu","stopEvent","matches","preventDefault","handleDoubleClick","replyToPeerId","quoteText","quoteOffset","handleContentDoubleClick","stopPropagation","handleSendQuickReaction","handleMouseLeave","lastGroupElement","getLastElementInDocumentGroup","currentTarget","removeAttribute","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","setAttribute","element","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","_jsxs","src","draggable","EmbeddedStory","story","sender","noUserColors","observeIntersectionForLoading","onClick","showNotification","ref","isIntersecting","useIsIntersecting","isFullStory","isExpiredStory","isVideoStory","mediaBlobUrl","useMedia","getStoryMediaHash","mediaThumbnail","thumbnail","dataUri","pictogramUrl","senderTitle","getPeerTitle","handleFastClick","useFastClick","PeerColorWrapper","peerColor","color","shouldReset","buildClassName","onMouseDown","TOPIC_ICON_SIZE","TopicChip","topic","style","getTopicColorCssVariable","iconColor","TopicIcon","blankSrc","isClosed","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsInSelectMode","isSelected","selectIsMessageSelected","props","toggleMessageSelection","handleMessageSelect","withShift","newProps","useMemo","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","theme","selectTheme","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","observeIntersection","hasCustomAppendix","albumLayout","onMediaClick","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","getMessagePhoto","fileUpload","getMessageKey","uploadProgress","progress","canAutoLoad","selectCanAutoLoadMedia","getGlobal","canAutoPlay","selectCanAutoPlayMedia","shouldAffectAppendix","getMessageHtmlId","onCancelUpload","isDownloading","mediaType","getIsDownloading","SIZE","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","play","audio","pause","remove","Audio","safePlay","once","container","startSize","isReversed","performance","interactionMessageId","emoticon","customEmojiId","withEffects","sticker","byId","effect","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","selectCanPlayAnimatedEmojis","AnimatedCustomEmoji","getCustomEmojiSize","CustomEmoji","documentId","LIKE_STICKER_ID","isBig","withSharedAnimation","forceOnHeavyAnimation","selectAnimatedEmoji","AnimatedEmoji","forceLoadPreview","AnimatedIconFromSticker","quality","noLoad","forcePreview","forceAlways","CommentButton","isCustomShape","threadInfo","disabled","isLoading","asActionButton","openThread","openFrozenAccountModal","shouldRenderLoading","useAsyncRendering","oldLang","useLang","originMessageId","messagesCount","lastMessageId","lastReadInboxMessageId","recentReplierIds","originChannelId","selectIsCurrentUserFrozen","isComments","recentRepliers","peerId","selectPeer","hasUnread","commentsText","s","AnimatedCounter","text","formatIntegerCompact","dir","isRtl","role","tabIndex","peer","Avatar","Spinner","getContactName","contact","firstName","lastName","countryList","phoneCodes","phoneCodeList","Contact","openChat","openAddContactDialog","openChatWithInfo","phoneNumber","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","copyTextToClipboard","emojiIconClassName","getUserFullName","formatPhoneNumberWithCode","_Fragment","Button","isText","ripple","ContextMenuContainer","useModuleLoader","Bundles","Extra","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsed","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","Intl","DisplayNames","of","canExpand","handleExpand","handleToggle","prev","renderTextWithEntities","entities","Separator","Game","canAutoLoadMedia","clickBotInlineButton","game","description","photoHash","getGamePreviewPhotoHash","videoHash","getGamePreviewVideoHash","photoBlobUrl","videoBlobUrl","handleGameClick","button","inlineButtons","Skeleton","playsInline","muted","disablePictureInPicture","autoPlay","loop","getMessageText","giveaway","selectChat","channelIds","selectForwardedSender","giftSticker","selectGiftStickerForDuration","months","canPlayAnimatedEmojis","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","useState","giveawayResults","isResults","untilDate","prizeDescription","stars","isOwnMessage","quantity","winnersCount","hasEnded","getServerTime","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","async","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","PartyPopper","nonInteractive","noLoop","winnerIds","PeerChip","forceShowSelf","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","chatTitle","isApiPeerChat","getChatTitle","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","chats","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","renderIcon","RE_TME_LINK","test","url","buttonTexts","texts","renderKeyboardButtonText","j","Invoice","forcedWidth","invoice","getMessageInvoice","amount","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","blurredBackgroundRef","useBlurredMediaThumbRef","useLayoutEffectWithPrevDeps","prevShouldAffectAppendix","contentEl","closest","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","then","appendixBg","requestMutation","setProperty","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","iconClassName","InvoiceMediaPreview","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","ids","useInterval","isExtendedMedia","root","MediaSpoiler","thumbDataUri","isVisible","spoiler","formatMediaDuration","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","DEFAULT_MAP_CONFIG","zoom","PinSvg","viewBox","cx","cy","r","d","Location","openMapModal","countdownRef","forceUpdate","useForceUpdate","location","getMessageLocation","geo","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","date","period","point","setPoint","shouldRenderText","dpr","useDevicePixelRatio","mediaHash","buildStaticMapHash","prevMediaBlobUrl","usePreviousDeprecated","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","textContent","renderPin","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","useLayoutEffect","long","useTimeout","geoPoint","renderOverlay","address","formatLocationLastUpdate","editDate","transform","renderInfo","MessageMeta","outgoingStatus","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","isPinned","withFullDate","effectEmoji","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","isActivated","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","forwardInfo","savedDate","viewsTitle","viewsCount","number","pluralValue","forwardsCount","repliesTitle","time","formatTime","formatPastTimeShort","fullClassName","isImported","formatStarsAsIcon","asFont","containerClassName","onMouseEnter","isVideoProcessingPending","MessagePhoneCall","phoneCall","requestMasterAndRequestCall","isVideo","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","ARE_CALLS_SUPPORTED","ariaLabel","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","buttonText","value","starsAmount","replaceWithTeact","STARS_ICON_PLACEHOLDER","StarIcon","fluid","pill","getPercentage","total","toFixed","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","shouldAnimate","option","correctAnswer","indexOf","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","isQuiz","Poll","poll","observeIntersectionForPlaying","onSendVote","loadMessage","openPollResults","requestConfetti","results","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","label","hidden","chosen","add","timer","window","clearTimeout","recentVoters","handleRadioChange","handleCheckboxChange","options","handleVoteClick","handleViewResultsClick","showSolution","localId","solution","solutionEntities","containerSelector","question","AvatarList","peers","CheckboxGroup","selected","onChange","isScheduled","loadingOptions","isRound","RadioGroup","loadingOption","Sticker","shouldLoop","shouldPlayEffect","withEffect","onStopEffect","openStickerSet","useAppLayout","effectRef","stickerSetInfo","hasEffect","isMirrored","isPreloadedGlobally","getStickerMediaHash","IS_WEBM_SUPPORTED","canLoad","canPlay","mediaHashEffect","effectBlobUrl","ApiMediaFormat","BlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","useOverlayPosition","anchorRef","overlayRef","isDisabled","openModal","action","actionText","isMemojiSticker","getStickerDimensions","StickerView","fullMediaHash","fullMediaClassName","Portal","AnimatedSticker","isLowPriority","onEnded","storyData","selectPeerStory","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","isUnread","openStoryViewer","storyId","isSinglePeer","isSingleStory","isDeleted","isLoaded","imageHash","thumbUrl","useEnsureStory","isSelf","selectSender","isCurrentUserPremium","selectIsCurrentUserPremium","isSynced","TodoList","todoList","toggleTodoCompleted","todo","completions","items","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","c","itemId","toString","handleTaskLabelClick","initialSection","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","withNodes","onClickLabel","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","forwardMessages","activeReactions","loadingThread","selectTabState","withSenderName","withAvatar","threadId","messageListType","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","effectId","shouldWarnAboutSvg","selectSharedSettings","isChatWithUser","isUserId","isChatWithSelf","selectIsChatWithSelf","isSystemBotChat","isSystemBot","isAnonymousForwards","isAnonymousForwardsChat","isChannel","isChatChannel","isGroup","isChatGroup","chatFullInfo","selectChatFullInfo","webPageStoryData","webPage","webPageStory","isForwarding","messageIds","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","isNotJoined","isRestricted","isReplyToTopicStart","replyStory","storySender","selectUploadProgress","isFocused","m","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","query","isHashtag","singleEmoji","getMessageSingleRegularEmoji","animatedEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","every","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","selectThreadInfo","commentsMessage","isInDocumentGroup","groupedId","isInAlbum","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","selectChatMessage","hasUnreadReaction","unreadReactions","hasTopicChip","MAIN_THREAD_ID","isForum","messageTopic","selectTopicFromMessage","chatTranslations","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","selectRequestedChatTranslationLanguage","areTranslationsEnabled","settings","byKey","canTranslate","hasActiveReactions","isPremium","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","availableEffectById","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","lastPlaybackTimestamp","selectMessageLastPlaybackTimestamp","isAccountFrozen","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isRepliesChat","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","autoLoadFileMaxSizeMb","shouldLoopStickers","selectShouldLoopStickers","availableReactions","reactions","defaultReaction","isMessageLocal","selectDefaultReaction","isTranscribing","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","selectPerformanceSettingsValue","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","selectOutgoingStatus","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","focusLastMessage","markMentionsRead","bottomMarkerRef","isTranscriptionHidden","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isTouchScreen","useOnIntersect","isContextMenuOpen","contextMenuAnchor","contextMenuTarget","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","noAppearanceAnimation","isShown","markShown","MESSAGE_APPEARANCE_DELAY","useShowTransition","noMountTransition","isTranscriptionError","useUnmountCleanup","viewportPinnedIdsToRemove","isLocal","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","voice","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","asForwarded","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isRoundVideo","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","isChannelPost","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","messageSender","avatarPeer","messageColorPeer","senderPeer","hasTtl","hasMessageTtl","handleSenderClick","handleViaBotClick","handleReplyClick","handleMediaClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","isSavedMessages","focusMessage","openMediaViewer","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","openChatLanguageModal","searchChatMediaMessages","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","noForumTopicPanel","origin","MediaViewerOrigin","ScheduledInline","Inline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","parsedLink","tryParseDeepLink","videoContent","webpageTimestamp","timestamp","isGif","getMessageWebPagePhoto","albumMessageId","albumIndex","mediaIndex","ScheduledAlbum","fromChatId","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","animateSnap","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasText","hasUnreadMention","isInvertedMedia","getIsReady","setLanguage","threshold","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","translatedText","useMessageTranslation","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","contentClassName","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","gift","buildContentClassName","getPeerColorClass","withAppendix","emojiSize","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useEnsureMessage","useFocusMessage","elementRef","viaBusinessBotTitle","canShowPostAuthor","senderId","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","withTranslucentThumbs","canBeEmpty","ReactionStaticEmoji","reaction","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","WebPage","backgroundEmojiId","onAudioPlay","onDocumentClick","onCancelMediaTransfer","messageText","shouldRenderSenderName","renderForwardTitle","hiddenUserName","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","emojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","hasUsername","senderColor","loopLimit","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","getMainUsername","customTitle","isOwner","forwardAuthor","onCopy","onDoubleClick","onMouseMove","onMouseLeave","shouldReadMedia","EmbeddedMessage","replyInfo","senderChat","forwardSender","MessageEffect","shouldPlay","onStop","RoundVideo","onReadMedia","onHideTranscription","isTranscribed","canTranscribe","AudioOrigin","isSelectable","onPlay","canDownload","Document","Story","StoryMention","DotAnimation","renderContent","MessageAppendix","isOutside","anchor","targetHref","href","onCloseAnimationEnd","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","filteredUsers","setFilteredUsers","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","users","memberIds","acc","member","filteredIds","filterPeersByQuery","unique","pickTruthy","insertMention","forceFocus","insertAtEnd","mainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","prevOrderById","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","OFFSET_X","isForMessageEffect","updatePosition","anchorRect","elementRect","windowWidth","innerWidth","anchorCenterY","top","anchorBottomY","bottom","left","right","messagesContainer","passive","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","isAnimationStartedRef","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","WebPageUniqueGift","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","inPreview","isEditing","onContainerClick","openUrl","openTelegramLink","getMessageWebPage","stickersRef","handleContainerClick","handleOpenTelegramLink","stickers","hasCustomColor","isWithTextColor","documents","shouldUseTextColor","customColor","useDynamicColorListener","linkTimestamp","siteName","displayUrl","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","truncatedDescription","trimText","isArticle","isSquarePhoto","isInWebPage","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","SafeLink","caption","isRectangular","noForcedUpperCase","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","selectCanAnimateSnapEffect","rect","scrollX","scrollY","innerHeight","seed","floor","filterId","SNAP_EFFECT_ID","component","ghost","createFilter","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","in","slope","intercept","attributeName","dur","fill","in2","operator","scale","xChannelSelector","yChannelSelector","userStatus","selectUserStatus","self","areMessagesLoaded","selectChatMessages","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","isSavedDialog","adminMember","storyViewerOrigin","onEmojiStatusClick","iconElement","rightElement","loadFullUser","loadMoreProfilePhotos","hasAvatarMediaViewer","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","hasMedia","isAvatarView","ProfileAvatar","MiddleHeaderAvatar","storyViewerMode","FullNameTitle","withEmojiStatus","subtitleKey","TypingStatus","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","loadPeerStoriesByIds","loadStoryThrottled","throttled","storyIds","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","usePrevDuringAnimation","timeoutRef","isCurrentPresent","isPrevPresent","ChatBadge","topics","isMuted","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","hasMiniApp","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","hasUnreadMark","isSignal","handleOpenApp","extractCurrentThemeParams","botId","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","pinnedElement","miniAppButton","visiblePinnedElement","elements","formatUsername","username","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","cancelMediaDownload","videoRef","isPaidPreview","localBlobUrl","blobUrl","isSpoilerShown","showSpoiler","hideSpoiler","isSpoiler","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","getVideoMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","getMediaThumbUri","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","noThumb","thumbRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRender","shouldRenderSpinner","withShouldRender","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","OptimizedVideo","defaultMuted","onTimeUpdate","onReady","withAnimation","ProgressSpinner","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","MEMO_EMPTY_ARRAY","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","concat","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","useEmojiTooltip","EDITABLE_INPUT_ID","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","exec","default","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","emojiHtml","messageInput","EDITABLE_INPUT_CSS_SELECTOR","emojiCode","newShouldAutoInsert","endsWith","isEmojiTooltipOpen","closeEmojiTooltip","CustomEmojiTooltip","SymbolMenu","SymbolMenuButton","canSendGifs","canSendStickers","isMessageComposer","isReady","isSymbolMenuOpen","idPrefix","isAttachmentModal","canSendPlainText","isSymbolMenuForced","forceDarkTheme","inputCssSelector","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","activeElement","blur","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","ResponsiveHoverButton","onActivate","onLoad","onSearchOpen","ElectronEvent","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","isTouched","folderId","omit","isChatList","useFoldersReducer","useReducer","ChatCallStatus","previewMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","savedDialogSender","fromId","lastMessageSender","currentChatId","currentThreadId","selectCurrentMessageList","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","monoforumChannel","selectMonoforumChannel","getIsChatMuted","selectNotifyDefaults","selectNotifyException","draft","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","lastMessageOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topicsById","Chat","orderDiff","animationType","offsetTop","onDragEnter","openSavedDialog","toggleChatInfo","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","force","shouldReplaceHistory","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","ListItem","withPortalForMenu","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","isCallActive","isCallNotEmpty","monoforumBadgeClassName","LastMessageMeta","draftDate","hasMainMiniApp","DeleteChatModal","MuteChatModal","ChatFolderModal","ANIMATION_DURATION","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","animateOpening","isArchived","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","reverse","isLast","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","String","opacity","ghostRevealName","cb","createDelayedCallback","ANIMATION_END_DELAY","animateClosing","ribbon","querySelectorAll","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","canvas","getContext","drawImage","el","getAttribute","ms","timeout","clear","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","forcePlaceCaretAtEnd","selection","getSelection","range","createRange","lastChild","nodeValue","selectNodeContents","collapse","removeAllRanges","addRange","focus","MENU_CLOSE_TIMEOUT","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","WebLink","onMessageClick","linkData","link","getFirstLinkInMessage","domain","formattedDescription","renderMessageSummary","handleMessageClick","safeLinkContent","Media","Link","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","letterClassName","noLoopLimit","iconEmojiId","TopicDefaultIcon","topicId","onStart","onEnd","isLongPressActive","isPressed","timerId","start","canProcessEvent","touches","end","cancel","body","ELECTRON_WINDOW_DRAG_EVENT_START","onMouseUp","onTouchStart","onTouchEnd","extractorEl","createElement","insertHtmlInSelection","getRangeAt","rangeCount","deleteContents","fragment","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","cloneContents","caretRange","setEnd","endContainer","endOffset","position","node","childNodes","nodeType","Node","TEXT_NODE","removeAllSelections","orderedPeerIds","archived","active","byPeerId","stories","storyViewer","isRibbonShown","isArchivedRibbonShown","chatsById","peerStories","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","closeFriends","isCloseFriend","isRead","isForCloseFriends","preloadPeerIds","useStoryPreloader","beginHeavyAnimation","avatar","withStorySolid","forceFriendStorySolid","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","icon","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","screen","SettingsScreens","FoldersEditFolderFromChatList","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","digit","isArchiveInList","contentKey","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","IS_SAFARI","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","IS_IOS","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","useGetSelectionRange","inputSelector","getRange","setRange","useSignal","onSelectionChange","Element","DropTarget","isQuick","isGeneric","onFileSelect","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","rx","DropAreaState","DropArea","withQuick","onHide","editingMessage","updateAttachmentSettings","hideTimeoutRef","prevWithQuick","transitionClassNames","captureEscKeyListener","handleFilesDrop","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","newAttachment","buildAttachment","canReplaceMessageMedia","shouldCompress","handleQuickFilesDrop","fromTarget","shouldRenderQuick","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","smaller","withDate","datetime","onDateClick","downloadMedia","setSharedSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","fileName","extension","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","previewData","innerMediaType","handleDownload","originMessage","SVG_EXTENSIONS","handleSvgConfirm","handleDateClick","File","thumbnailDataUri","actionIcon","isDocumentVideo","Checkbox","checked","onCheck","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","last","DAYS","_","BusinessHours","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","multiline","isStatic","narrow","withColorTransition","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","selectIsPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setFullYear","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","effectSticker","randomEffect","random","effectHash","column","valueKey","canGiftPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","birthdate","getFullYear","chatOrUserId","botAppPermissions","selectBotAppPermissions","userFullInfo","selectUserFullInfo","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","useEffectWithPrevDeps","prevPeerId","locationMediaHash","locationBlobUrl","locationRightComponent","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","entity","formattedNumber","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","shouldMarkBotTrusted","appTermsInfo","terms","membersCount","ChatAnimationTypes","None","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","idx","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","positionX","MenuItem","destructive","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","togglePinned","actionPin","actionDelete","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","PaymentMessageConfirmDialog","userName","messagePriceInStars","setShouldPaidMessageAutoApprove","confirmPaymentMessage","formatStarsAsText","totalAmount","withMarkdown","HeaderMenuContainer","isSuperGroup","isChatSuperGroup","selectLanguageCode","translationLanguage","selectTranslationLanguage","isPrivate","doNotTranslate","noMenu","bot","selectBot","fullInfo","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","canSearch","canCall","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","isCreator","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectCanTranslateChat","isTranslationDisabled","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","isMenuOpen","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","MenuSeparator","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","requestForcedReflow","currentHeight","applyAnimationState","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transition","dataset","isPanelOpen","path","filterUnits","dy","stdDeviation","EmojiTooltip","DEFAULT_HANDLERS","seekbackward","seekforward","previoustrack","nexttrack","stop","seekTo","registerMediaSession","mediaSession","updateMetadata","setMediaSessionHandlers","console","warn","setActionHandler","err","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","artwork","MediaMetadata","onlineCount","selectChatOnlineCount","selectTopic","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","getPhotoMediaHash","withThumb","downloadButtonRef","shouldRenderDownloadButton","dimensionsStyle","fileSelector","openSystemFilesDialog","accept","noMultiple","onchange","click","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","shouldTryLoadingStory","mediaContent","mediaHasPreview","getMessageSticker","getMessageMediaThumbDataUri","getMessageMediaHash","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","asPreview","senderName","getMessageSenderName","renderSummary","Opacity","Move","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","getMessageVideo","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","stopCurrentAudio","register","trackType","track","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","fastSeek","setVolume","volume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","isBot","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","Text","iconSvg","mediaDataWithReplacedColors","doc","DOMParser","parseFromString","stroke","strokeWidth","outerHTML","AttachBotItem","isInSideMenu","canShowNew","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","customIcon","shortName","isDisclaimerNeeded","Menu","autoClose","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","blob","createObjectURL","mimeType","quick","shouldSendAsFile","shouldSendInHighQuality","SUPPORTED_PHOTO_CONTENT_TYPES","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","Blob","parseAudioMetadata","uniqueId","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","MediaAreaSuggestedReaction","mediaArea","sendStoryReaction","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","containerId","getStoryKey","reactionCount","isSameReaction","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","ReactionAnimatedEmoji","effectSize","shouldPause","formatTemperature","temperatureC","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","MediaAreaOverlay","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","removeProperty","screenAspectRatio","mediaAreas","isShiny","slug","handleMediaAreaClick","useBeforeUnload","lastCallback","onBeforeUnload","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","useDebouncedResolver","noLast","useDebouncedSignal","debouncedResolver","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","selectCurrentLimit","DEFAULT_LIMITS","limits","selectPremiumLimit","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","onClickTranscribe","ry","OneTimeModal","onPause","transcribeAudio","openOneTimeMediaModal","contentAudio","getMessageWebPageAudio","mediaSource","isVoice","isSeeking","setIsActivated","coverHash","getMediaHash","coverBlobUrl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","getMediaDuration","reversePlayProgress","isReverse","spikes","peak","waveform","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","fillStyle","progressFillStyle","ctx","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","onCapture","onDrag","SharedMedia","buttonClassNames","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","loader","makeProgressiveLoader","next","done","readyState","endOfStream","appendBuffer","unloadVideo","checkIfStreamingSupported","buffer","DEBUG","ManagedMediaSource","MediaSource","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","delay","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","Progressive","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","ProfilePhoto","canPlayVideo","isDeletedUser","isChatWithRepliesBot","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getProfilePhotoMediaHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","specialIcon","userFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatusSticker","emojiStatusSlug","ProfileInfo","isForMonoforum","openPremiumModal","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","Right","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","imgBlobUrl","mediaUrl","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","useSendMessageAction","sendMessageAction","SEND_MESSAGE_ACTION_INTERVAL","toggleStoriesHidden","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","isClosing","closing","useHorizontalScroll","StoryRibbonButton","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isSelectModeActive","MessageInput","captionLimit","isAttachmentModalInput","isStoryInput","customEmojiPrefix","editableInputId","placeholder","timedPlaceholderLangKey","timedPlaceholderDate","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","onSend","onScroll","onFocus","onBlur","isNeedPremium","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","hexToRgb","lottie","ensureRLottie","coords","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","newHeight","isOverflown","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","parseEmojiOnlyString","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","input","isSelectionCollapsed","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","contentEditable","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","useMarkScrolled","selector","isScrolled","Event","bubbles","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","hasSpoiler","decoding","shouldUseDraft","CustomSend","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","resetInput","applyIosAutoCapitalizationFix","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","wrapNodeAnchor","wrapNodeInline","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","styledNode","nodeName","getCleanNode","newWrapper","createDocumentFragment","applyBlockStyles","nodes","filterNode","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","handlePaste","clipboardData","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","textContents","getElementsByTagName","replaceWith","entityType","ignoreOnPaste","ENTITY_CLASS_BY_NODE_NAME","innerText","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","textToPaste","isWordDocument","shouldSetAttachments","newAttachments","canReplace","isUploadingDocumentSticker","isUploadingFileSticker","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","analyzerCallback","startMediaRecorder","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","subscribeToAnalyzer","onstop","onerror","delayStop","AttachmentModal","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","shouldCollectDebugLogs","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","canEditMedia","paidMessagesStars","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isPhotoOrVideo","getMessageWebPageVideo","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","handleQuickSelect","CONTENT_TYPES_WITH_PREVIEW","handleDocumentSelect","handleSendLogs","getDebugLogs","DEBUG_LOG_FILENAME","isForAttachMenu","attachMenuPeerTypes","ariaControls","hasPopup","positionY","noCloseOnBackdrop","ariaLabelledBy","BotCommandMenu","BotKeyboardMenu","isKeyboardSingleUse","keyboardButtons","noCompact","BotMenuButton","textRef","textEl","scrollWidth","composerEl","ChatCommandTooltip","shouldForceShowEditing","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","forwardedMessages","selectEditingMessage","forwardSenders","selectSenderFromForwardedMessage","forwardedMessage","isSenderChannel","forwardsHaveCaptions","forward","isContextMenuDisabled","isReplyToDiscussion","forwardedMessagesCount","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","isShowingReply","isReplyWithQuote","senders","clearEmbedded","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","renderingSender","innerClassName","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","WebPagePreview","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","isSmallerMedia","webPageMediaSize","detectLinkDebounced","formattedText","linkEntity","getLink","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","webPageWithoutPhoto","messageStub","MainButtonState","chatBot","isChatWithBot","selectPeerPaidMessagesStars","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","canPlayEffect","shouldPlayEffectInComposer","effectReactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isStarsBalanceModalOpen","starsBalanceModal","isAppConfigLoaded","insertingPeerIdMention","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","inlineBots","byUsername","isInlineBotLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","MAX_UPLOAD_FILEPART_SIZE","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","canSendOneTimeMedia","stealthMode","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","inputPlaceholder","editableInputCssSelector","onDropHide","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","openStoryReactionPicker","closeReactionPicker","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","counterRef","storyReactionRef","isMounted","setIsMounted","lastMessageSendTimeSeconds","prevDropAreaState","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","forceShowSymbolMenu","cancelForceShowSymbolMenu","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","isChannelWithProfiles","areProfilesShown","isChatWithSendAs","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canAttachEmbedLinks","canSendVoices","getAllowedAttachmentOptions","isSendTextBlocked","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","newValue","attachment","getAttachmentMediaType","shouldForce","handleUpdateAttachmentsQuality","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","isSendAsMenuOpen","openSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","isEditingRef","useStateRef","isAdmin","isChatAdmin","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","hasStickers","useStickerTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","nextFilteredBotCommands","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","prevThreadId","prevDraft","customEmojiIds","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","shouldShowGiftButton","showCustomEmojiPremiumNotification","notificationNumber","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","handleEmbeddedClear","validateTextLength","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","handleToDoListSend","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","textLength","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","handleToggleSilentPosting","withBotMenuButton","isBotMenuButtonOpen","activeUntil","isComposerHasFocus","isReactionSelectorOpen","anonymous","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","sendButtonAriaLabel","handleToggleReaction","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","withBotCommands","shouldRenderPaidBadge","QuickFile","ReactionSelector","allAvailableReactions","onToggleReaction","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onSendWhenOnline","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","onSelectResult","slideClassName","formatVoiceRecordDuration","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","CustomSendMenu","onSendSchedule","onRemoveEffect","hasCurrentEffect","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","stopPlaying","capturePlaying","togglePlaying","isPriority","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","ForumPanel","onOpenAnimationStart","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","waitForTransitionEnd","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","useThumbnail","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","head","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","preloadIds","findIdsAroundCurrentId","currentStoryId","altVideos","getPreloadMediaHashes","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}