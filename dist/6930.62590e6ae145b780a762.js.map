{"version":3,"file":"6930.62590e6ae145b780a762.js","mappings":"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","sources":["webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/stars/gift/StarsGiftModal.module.scss?069e","webpack://telegram-t/./src/components/modals/stars/gift/StarsGiftModal.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.module.scss?3156","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionItem.module.scss?74b5","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionItem.tsx","webpack://telegram-t/./src/components/modals/stars/helpers/transaction.ts","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.module.scss?605d","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.module.scss?b947","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/modals/gift/UniqueGiftHeader.module.scss?2bf6","webpack://telegram-t/./src/components/modals/gift/UniqueGiftHeader.tsx","webpack://telegram-t/./src/hooks/animations/useTransitionActiveKey.ts","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.module.scss?a215","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.tsx","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionModal.module.scss?5025","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionModal.tsx","webpack://telegram-t/./src/components/modals/paidReaction/StarSlider.module.scss?b8f3","webpack://telegram-t/./src/components/modals/paidReaction/StarSlider.tsx","webpack://telegram-t/./src/components/modals/paidReaction/PaidReactionModal.module.scss?80b2","webpack://telegram-t/./src/components/modals/paidReaction/PaidReactionModal.tsx","webpack://telegram-t/./src/components/modals/gift/GiftComposer.module.scss?dac8","webpack://telegram-t/./src/components/modals/gift/GiftComposer.tsx","webpack://telegram-t/./src/components/modals/gift/GiftItem.module.scss?c564","webpack://telegram-t/./src/components/modals/gift/GiftItemPremium.tsx","webpack://telegram-t/./src/components/modals/gift/GiftItemStar.tsx","webpack://telegram-t/./src/components/modals/gift/GiftModal.module.scss?fd13","webpack://telegram-t/./src/components/modals/gift/GiftModalResaleScreen.tsx","webpack://telegram-t/./src/components/modals/gift/ResaleGiftMenuAttributeSticker.module.scss?8276","webpack://telegram-t/./src/components/modals/gift/ResaleGiftMenuAttributeSticker.tsx","webpack://telegram-t/./src/components/modals/gift/GiftResaleFilters.module.scss?c5a8","webpack://telegram-t/./src/components/modals/gift/GiftResaleFilters.tsx","webpack://telegram-t/./src/components/modals/gift/StarGiftCategoryList.module.scss?7d19","webpack://telegram-t/./src/components/modals/gift/StarGiftCategoryList.tsx","webpack://telegram-t/./src/components/modals/gift/GiftModal.tsx","webpack://telegram-t/./src/components/modals/gift/recipient/GiftRecipientPicker.module.scss?b7e9","webpack://telegram-t/./src/components/modals/gift/recipient/GiftRecipientPicker.tsx","webpack://telegram-t/./src/components/common/gift/GiftTransferPreview.module.scss?0f0d","webpack://telegram-t/./src/components/common/gift/GiftTransferPreview.tsx","webpack://telegram-t/./src/components/modals/gift/info/GiftInfoModal.module.scss?4f0e","webpack://telegram-t/./src/components/modals/gift/info/GiftInfoModal.tsx","webpack://telegram-t/./src/components/modals/gift/resale/GiftResalePriceComposerModal.module.scss?6666","webpack://telegram-t/./src/components/modals/gift/resale/GiftResalePriceComposerModal.tsx","webpack://telegram-t/./src/components/modals/gift/upgrade/GiftUpgradeModal.module.scss?ae9e","webpack://telegram-t/./src/components/modals/gift/upgrade/GiftUpgradeModal.tsx","webpack://telegram-t/./src/components/modals/gift/status/GiftStatusInfoModal.module.scss?3366","webpack://telegram-t/./src/components/modals/gift/status/GiftStatusInfoModal.tsx","webpack://telegram-t/./src/components/modals/gift/withdraw/GiftWithdrawModal.module.scss?287b","webpack://telegram-t/./src/components/modals/gift/withdraw/GiftWithdrawModal.tsx","webpack://telegram-t/./src/hooks/useDebouncedMemo.ts","webpack://telegram-t/./src/hooks/usePeerSearch.ts","webpack://telegram-t/./src/components/modals/gift/transfer/GiftTransferModal.tsx","webpack://telegram-t/./src/components/modals/stars/chatRefund/ChatRefundModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +\n              {formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption))\n              && Boolean(perUserStarCount) && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","import { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"MFXAwnxJ\",\"content\":\"Sl6xVf1R\",\"main\":\"bTN9Jeph\",\"headerInfo\":\"c6MiyJgW\",\"logo\":\"StGLWvzb\",\"logoBackground\":\"SyTXSfml\",\"description\":\"kFe3mIZo\",\"section\":\"BgfHkWd2\",\"header\":\"zMtAGfXs\",\"starHeaderText\":\"q3v8orGj\",\"hiddenHeader\":\"bq3FnXT0\",\"closeButton\":\"bDsDTkbe\",\"avatar\":\"jK36xUj4\",\"center\":\"v1PckUQn\",\"secondaryInfo\":\"TDWSRfP9\"};","import type { FC } from '../../../../lib/teact/teact';\nimport type React from '../../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiStarTopupOption, ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport {\n  selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport StarTopupOptionList from '../StarTopupOptionList';\n\nimport styles from './StarsGiftModal.module.scss';\n\nimport StarLogo from '../../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsGiftModal'];\n};\n\ntype StateProps = {\n  user?: ApiUser;\n};\n\nconst AVATAR_SIZE = 100;\n\nconst StarsGiftModal: FC<OwnProps & StateProps> = ({\n  modal,\n  user,\n}) => {\n  const {\n    closeStarsGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n  const dialogRef = useRef<HTMLDivElement>();\n\n  const isOpen = Boolean(modal?.isOpen);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const oldLang = useOldLang();\n\n  const [selectedOption, setSelectedOption] = useState<ApiStarTopupOption | undefined>();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n    }\n  }, [isOpen]);\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (renderingModal?.isCompleted) {\n      showConfetti();\n    }\n  }, [renderingModal, showConfetti]);\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    if (!renderingModal) return;\n\n    setSelectedOption(option);\n    if (user) {\n      openInvoice({\n        type: 'starsgift',\n        userId: user.id,\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    } else {\n      openInvoice({\n        type: 'stars',\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    }\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClose = useLastCallback(() => {\n    closeStarsGiftModal();\n  });\n\n  function renderGiftTitle() {\n    if (renderingModal?.isCompleted) {\n      return user ? renderText(oldLang('Notification.StarsGift.SentYou',\n        formatCurrencyAsString(selectedOption!.amount, selectedOption!.currency, oldLang.code)), ['simple_markdown'])\n        : renderText(oldLang('StarsAcquiredInfo', selectedOption?.stars), ['simple_markdown']);\n    }\n\n    return user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars');\n  }\n\n  const bottomText = useMemo(() => {\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        url={oldLang('StarsTOSLink')}\n        text={oldLang('lng_credits_summary_options_about_link')}\n      />,\n      parts[1],\n    ];\n  }, [oldLang]);\n\n  return (\n    <Modal\n      className={buildClassName(styles.modalDialog)}\n      contentClassName={styles.content}\n      dialogRef={dialogRef}\n      isSlim\n      onClose={handleClose}\n      isOpen={isOpen}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n\n          onClick={() => closeStarsGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars')}\n          </h2>\n        </div>\n        <div className={styles.headerInfo}>\n          {user ? (\n            <>\n              <Avatar\n                size={AVATAR_SIZE}\n                peer={user}\n                className={styles.avatar}\n              />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          ) : (\n            <>\n              <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          )}\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={styles.description}>\n          {user ? renderText(\n            oldLang('ActionGiftStarsSubtitle', getPeerTitle(oldLang, user)), ['simple_markdown'],\n          ) : oldLang('Stars.Purchase.GetStarsInfo')}\n        </p>\n        <div className={styles.section}>\n          <StarTopupOptionList\n            options={renderingModal?.starsGiftOptions}\n            onClick={handleClick}\n          />\n          <div className={styles.secondaryInfo}>\n            {bottomText}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): StateProps => {\n  const user = modal?.forUserId ? selectUser(global, modal.forUserId) : undefined;\n\n  return {\n    user,\n  };\n})(StarsGiftModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"s3k01dTm\",\"transition\":\"BNA0_b5j\",\"main\":\"Oadi16vt\",\"filter\":\"z84KbvhX\",\"title\":\"Jnsrau29\",\"buttons\":\"NnVyYB32\",\"picker\":\"cuI2eDIY\",\"avatars\":\"ILtw_aNL\",\"center\":\"eIfMzHv5\",\"description\":\"FlNJWZ5P\",\"premiumFeatures\":\"xIv0Yaur\",\"options\":\"eNJRXn6P\",\"button\":\"KDNKXBp5\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isDeletedUser, isUserBot,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './StarsGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n  activeListIds?: string[];\n  archivedListIds?: string[];\n}\n\nconst StarsGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  userIds,\n}) => {\n  const { closeStarsGiftingPickerModal, openStarsGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const combinedIds = unique([\n      ...(userIds || []),\n      ...(activeListIds || []),\n      ...(archivedListIds || []),\n    ]);\n\n    const filteredUserIds = filterPeersByQuery({\n      ids: combinedIds, query: searchQuery, type: 'user',\n    });\n\n    return sortChatIds(filteredUserIds.filter((id) => {\n      const user = usersById[id];\n\n      if (!user) {\n        return false;\n      }\n\n      return !user.isSupport\n        && !isUserBot(user) && !isDeletedUser(user)\n        && id !== currentUserId && id !== SERVICE_NOTIFICATIONS_USER_ID;\n    }));\n  }, [currentUserId, searchQuery, userIds, activeListIds, archivedListIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedId?: string) => {\n    if (newSelectedId?.length) {\n      openStarsGiftModal({ forUserId: newSelectedId });\n      closeStarsGiftingPickerModal();\n    }\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeStarsGiftingPickerModal}\n      title={oldLang('GiftStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onEnter={closeStarsGiftingPickerModal}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        onSelectedIdChange={handleSelectedUserIdsChange}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    chats: {\n      listIds,\n    },\n    currentUserId,\n  } = global;\n\n  return {\n    userIds: global.contactList?.userIds,\n    activeListIds: listIds.active,\n    archivedListIds: listIds.archived,\n    currentUserId,\n  };\n})(StarsGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"minimal\":\"nkV4JXHc\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"container\":\"mnhBs1uK\",\"section\":\"lYkNd_gb\",\"sectionTitle\":\"FF8gm7MP\",\"tos\":\"Vu6blJk9\",\"logo\":\"sjhpNB8l\",\"logoBackground\":\"jjESKN3H\",\"headerHext\":\"xbpAOr37\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"botItem\":\"AhxcrKWn\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"addStarsButton\":\"dqnGL2uh\",\"addStarsIcon\":\"w9Db2eiK\",\"balanceBlock\":\"Yk0OQBKC\",\"balanceInfo\":\"p2dW9NOV\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"starButton\":\"oOt4VBD2\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"avatarStar\":\"Wu10dXoa\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\",\"subscriptions\":\"IX5BhCUF\",\"tabs\":\"KZVEyKOX\",\"disclaimer\":\"bpVifdwH\",\"amountBadge\":\"BPM7LKwo\",\"loadMore\":\"TKmZjMyd\",\"loadMoreIcon\":\"buepwtN1\"};","import { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\n\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\n\nimport BadgeButton from '../../common/BadgeButton';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance?: ApiStarsAmount;\n  withAddButton?: boolean;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className, withAddButton }: OwnProps) => {\n  const lang = useLang();\n\n  const {\n    openStarsBalanceModal,\n  } = getActions();\n\n  return (\n    <div className={buildClassName(styles.balanceBlock, className)}>\n      <div className={styles.balanceInfo}>\n        <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n        <div className={styles.balanceBottom}>\n          <StarIcon type=\"gold\" size=\"middle\" />\n          {balance !== undefined ? formatStarsAmount(lang, balance) : '…'}\n          {withAddButton && (\n            <BadgeButton\n              className={styles.addStarsButton}\n\n              onClick={() => openStarsBalanceModal({})}\n            >\n              <Icon\n                className={styles.addStarsIcon}\n                name=\"add\"\n              />\n            </BadgeButton>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXnbeQxP\",\"info\":\"zLaaDX3c\",\"status\":\"HbF2qTB2\",\"statusPricing\":\"AveGvpdV\",\"amount\":\"_CBiOQcv\",\"title\":\"k9ZIv5Pd\",\"description\":\"FlRlxMx2\",\"subtitle\":\"YN2J8dw6\",\"statusPeriod\":\"MRrP7Oew\",\"statusEnded\":\"pRHwfr8m\",\"preview\":\"t6Syyhzd\",\"subscriptionStar\":\"ftlbevPm\"};","import { memo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiStarsSubscription,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport { formatDateToString } from '../../../../util/dates/dateFormat';\nimport { formatInteger } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\n\nimport styles from './StarsSubscriptionItem.module.scss';\n\ntype OwnProps = {\n  subscription: ApiStarsSubscription;\n};\n\nfunction selectProvidedPeer(peerId: string) {\n  return (global: GlobalState) => (\n    selectPeer(global, peerId)\n  );\n}\n\nconst StarsSubscriptionItem = ({ subscription }: OwnProps) => {\n  const { openStarsSubscriptionModal } = getActions();\n  const {\n    peerId, pricing, until, isCancelled, title, photo,\n  } = subscription;\n  const lang = useOldLang();\n\n  const peer = useSelector(selectProvidedPeer(peerId))!;\n\n  const handleClick = useLastCallback(() => {\n    openStarsSubscriptionModal({ subscription });\n  });\n\n  if (!peer) {\n    return undefined;\n  }\n\n  const hasExpired = until < Date.now() / 1000;\n  const formattedDate = formatDateToString(until * 1000, lang.code, true, 'long');\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      <div className={styles.preview}>\n        <Avatar size=\"medium\" peer={peer} />\n        <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"small\" />\n      </div>\n      <div className={styles.info}>\n        <h3 className={styles.title}>{renderText(getPeerTitle(lang, peer) || '')}</h3>\n        {title && (\n          <p className={styles.subtitle}>\n            {photo && <Avatar webPhoto={photo} size=\"micro\" />}\n            {renderText(title)}\n          </p>\n        )}\n        <p className={styles.description}>\n          {lang(\n            hasExpired ? 'StarsSubscriptionExpired'\n              : isCancelled ? 'StarsSubscriptionExpires' : 'StarsSubscriptionRenews',\n            formattedDate,\n          )}\n        </p>\n      </div>\n      <div className={styles.status}>\n        {(isCancelled || hasExpired) ? (\n          <div className={styles.statusEnded}>\n            {lang(hasExpired ? 'StarsSubscriptionStatusExpired' : 'StarsSubscriptionStatusCancelled')}\n          </div>\n        ) : (\n          <>\n            <div className={styles.statusPricing}>\n              <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />\n              <span className={styles.amount}>\n                {formatInteger(pricing.amount)}\n              </span>\n            </div>\n            <div className={styles.statusPeriod}>{lang('StarsParticipantSubscriptionPerMonth')}</div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsSubscriptionItem);\n","import type { ApiStarsAmount, ApiStarsTransaction } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport { buildStarsTransactionCustomPeer } from '../../../../global/helpers/payments';\nimport {\n  type LangFn,\n} from '../../../../util/localization';\nimport { formatPercent } from '../../../../util/textFormat';\n\nexport function getTransactionTitle(oldLang: OldLangFn, lang: LangFn, transaction: ApiStarsTransaction) {\n  if (transaction.paidMessages) {\n    return lang(\n      'PaidMessageTransaction',\n      { count: transaction.paidMessages },\n      {\n        withNodes: true,\n        pluralValue: transaction.paidMessages,\n      },\n    );\n  }\n\n  if (transaction.isGiftResale) {\n    return isNegativeStarsAmount(transaction.stars)\n      ? lang('StarGiftSaleTransaction')\n      : lang('StarGiftPurchaseTransaction');\n  }\n\n  if (transaction.starRefCommision) {\n    return oldLang('StarTransactionCommission', formatPercent(transaction.starRefCommision));\n  }\n  if (transaction.isGiftUpgrade) return oldLang('Gift2TransactionUpgraded');\n  if (transaction.extendedMedia) return oldLang('StarMediaPurchase');\n  if (transaction.subscriptionPeriod) return transaction.title || oldLang('StarSubscriptionPurchase');\n  if (transaction.isReaction) return oldLang('StarsReactionsSent');\n  if (transaction.giveawayPostId) return oldLang('StarsGiveawayPrizeReceived');\n  if (transaction.isMyGift) return oldLang('StarsGiftSent');\n  if (transaction.isGift) return oldLang('StarsGiftReceived');\n  if (transaction.starGift) {\n    return isNegativeStarsAmount(transaction.stars) ? oldLang('Gift2TransactionSent') : oldLang('Gift2ConvertedTitle');\n  }\n\n  const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n    && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n  if (customPeer) return customPeer.title || oldLang(customPeer.titleKey!);\n\n  return transaction.title;\n}\n\nexport function isNegativeStarsAmount(starsAmount: ApiStarsAmount) {\n  if (starsAmount.amount) return starsAmount.amount < 0;\n  return starsAmount.nanos < 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jQkp75Gb\",\"preview\":\"OYGSN3PF\",\"count\":\"KX1yz2Jy\",\"thumb\":\"EvinKr5k\",\"noOutline\":\"KSAAsUDv\",\"itemCount1\":\"GxDajfX_\",\"itemCount2\":\"jXuZoxq8\",\"itemCount3\":\"TPn3XGHJ\",\"blurry\":\"hWZuxLS8\",\"full\":\"w56QPFhl\",\"fadeIn\":\"ds43W8Wq\"};","import { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport Icon from '../../../common/icons/Icon';\nimport MediaSpoiler from '../../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aHAxv_Jg\",\"info\":\"oyYrn3II\",\"stars\":\"K5lc75ku\",\"amount\":\"QLQPuLAr\",\"title\":\"e0pK8CJ_\",\"description\":\"xbERdDMQ\",\"date\":\"l6CwQ0Ev\",\"positive\":\"P_42_ZWR\",\"negative\":\"TGjnLJfH\",\"preview\":\"cnjGihOT\",\"subscriptionStar\":\"z43YvnDX\",\"uniqueGiftBackground\":\"eNvzMw2p\",\"giftSticker\":\"U3dqmnM4\"};","import { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { CustomPeer } from '../../../../types';\n\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../../util/objects/customPeer';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport renderText from '../../../common/helpers/renderText';\nimport { getTransactionTitle, isNegativeStarsAmount } from '../helpers/transaction';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n  className?: string;\n};\n\nconst GIFT_STICKER_SIZE = 36;\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction, className }: OwnProps) => {\n  const { openStarsTransactionModal } = getActions();\n  const {\n    date,\n    stars,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n    subscriptionPeriod,\n  } = transaction;\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n  const starGift = transaction.starGift;\n  const isUniqueGift = starGift?.type === 'starGiftUnique';\n  const giftSticker = starGift && getStickerFromGift(starGift);\n\n  const data = useMemo(() => {\n    let title = getTransactionTitle(oldLang, lang, transaction);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getPeerTitle(oldLang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(transaction.peer);\n      title = customPeer.title || oldLang(customPeer.titleKey!);\n      description = oldLang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.isGiftUpgrade && transaction.starGift?.type === 'starGiftUnique') {\n      description = lang('GiftUnique', { title: transaction.starGift.title, number: transaction.starGift.number });\n    }\n\n    if (transaction.isGiftResale && transaction.starGift?.type === 'starGiftUnique') {\n      description = lang('GiftUnique', { title: transaction.starGift.title, number: transaction.starGift.number });\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = oldLang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = oldLang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = oldLang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [oldLang, lang, peer, transaction]);\n\n  const previewContent = useMemo(() => {\n    if (isUniqueGift) {\n      const { backdrop } = getGiftAttributes(starGift)!;\n      const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n      return (\n        <>\n          <RadialPatternBackground\n            className={styles.uniqueGiftBackground}\n            backgroundColors={backgroundColors}\n          />\n          <AnimatedIconFromSticker\n            className={styles.giftSticker}\n            sticker={giftSticker}\n            size={GIFT_STICKER_SIZE}\n            play={false}\n          />\n        </>\n      );\n    }\n\n    if (giftSticker) {\n      return (\n        <AnimatedIconFromSticker\n          className={styles.giftSticker}\n          sticker={giftSticker}\n          size={GIFT_STICKER_SIZE}\n          play={false}\n        />\n      );\n    }\n\n    if (extendedMedia) {\n      return <PaidMediaThumb media={extendedMedia} isTransactionPreview />;\n    }\n\n    return (\n      <>\n        <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />\n        {Boolean(subscriptionPeriod) && (\n          <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"small\" />\n        )}\n      </>\n    );\n  }, [isUniqueGift, extendedMedia, photo, data.avatarPeer, subscriptionPeriod, starGift, giftSticker]);\n\n  const handleClick = useLastCallback(() => {\n    openStarsTransactionModal({ transaction });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, className)} onClick={handleClick}>\n      <div className={styles.preview}>\n        {previewContent}\n      </div>\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        {data.description && (\n          <p className={styles.description}>{renderText(data.description)}</p>\n        )}\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, oldLang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span\n          className={buildClassName(styles.amount, isNegativeStarsAmount(stars) ? styles.negative : styles.positive)}\n        >\n          {formatStarsTransactionAmount(lang, stars)}\n        </span>\n        <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiStarTopupOption } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../config';\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectChat, selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from './BalanceBlock';\nimport StarTopupOptionList from './StarTopupOptionList';\nimport StarsSubscriptionItem from './subscription/StarsSubscriptionItem';\nimport StarsTransactionItem from './transaction/StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\nconst TRANSACTION_TABS_KEYS: RegularLangKey[] = [\n  'StarsTransactionsAll',\n  'StarsTransactionsIncoming',\n  'StarsTransactionsOutgoing',\n];\nconst TRANSACTION_ITEM_CLASS = 'StarsTransactionItem';\nconst SUBSCRIPTION_PURPOSE = 'subs';\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  canBuyPremium?: boolean;\n  shouldForceHeight?: boolean;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, canBuyPremium, shouldForceHeight,\n}: OwnProps & StateProps) => {\n  const {\n    closeStarsBalanceModal, loadStarsTransactions, loadStarsSubscriptions, openStarsGiftingPickerModal, openInvoice,\n  } = getActions();\n\n  const { balance, history, subscriptions } = starsBalanceState || {};\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [areBuyOptionsShown, showBuyOptions, hideBuyOptions] = useFlag();\n\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const {\n    originStarsPayment, originReaction, originGift, topup,\n  } = modal || {};\n\n  const shouldOpenOnBuy = originStarsPayment || originReaction || originGift || topup;\n\n  const ongoingTransactionAmount = originStarsPayment?.form?.invoice?.totalAmount\n    || originStarsPayment?.subscriptionInfo?.subscriptionPricing?.amount\n    || originReaction?.amount\n    || originGift?.gift.stars\n    || topup?.balanceNeeded;\n  const starsNeeded = ongoingTransactionAmount ? ongoingTransactionAmount - (balance?.amount || 0) : undefined;\n  const starsNeededText = useMemo(() => {\n    const global = getGlobal();\n\n    if (originReaction) {\n      const channel = selectChat(global, originReaction.chatId);\n      if (!channel) return undefined;\n      return oldLang('StarsNeededTextReactions', getChatTitle(oldLang, channel));\n    }\n\n    if (originStarsPayment) {\n      const bot = originStarsPayment.form?.botId ? selectUser(global, originStarsPayment.form.botId) : undefined;\n      if (!bot) return undefined;\n      return oldLang('StarsNeededText', getUserFullName(bot));\n    }\n\n    if (originGift) {\n      const peer = selectUser(global, originGift.peerId);\n      if (!peer) return undefined;\n      return oldLang('StarsNeededTextGift', getPeerTitle(lang, peer));\n    }\n\n    if (topup?.purpose === SUBSCRIPTION_PURPOSE) {\n      return oldLang('StarsNeededTextLink');\n    }\n\n    if (topup?.purpose === PAID_MESSAGES_PURPOSE) {\n      return lang('StarsNeededTextSendPaidMessages', undefined, {\n        withMarkdown: true,\n        withNodes: true,\n      });\n    }\n\n    return undefined;\n  }, [originReaction, originStarsPayment, originGift, topup?.purpose, lang, oldLang]);\n\n  const shouldShowItems = Boolean(history?.all?.transactions.length && !shouldOpenOnBuy);\n  const shouldSuggestGifting = !shouldOpenOnBuy;\n\n  const transactionTabs: TabWithProperties[] = useMemo(() => {\n    return TRANSACTION_TABS_KEYS.map((key) => ({\n      title: lang(key),\n    }));\n  }, [lang]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setSelectedTabIndex(0);\n      hideBuyOptions();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (shouldOpenOnBuy) {\n      showBuyOptions();\n      return;\n    }\n\n    hideBuyOptions();\n  }, [shouldOpenOnBuy]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleLoadMoreTransactions = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n    });\n  });\n\n  const handleLoadMoreSubscriptions = useLastCallback(() => {\n    loadStarsSubscriptions();\n  });\n\n  const openStarsGiftingPickerModalHandler = useLastCallback(() => {\n    openStarsGiftingPickerModal({});\n  });\n\n  const handleBuyStars = useLastCallback((option: ApiStarTopupOption) => {\n    openInvoice({\n      type: 'stars',\n      stars: option.stars,\n      currency: option.currency,\n      amount: option.amount,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName(styles.root, !shouldForceHeight && !areBuyOptionsShown && styles.minimal)}\n      isOpen={isOpen}\n      onClose={closeStarsBalanceModal}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <BalanceBlock balance={balance} className={styles.modalBalance} />\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {oldLang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n          <h2 className={styles.headerText}>\n            {starsNeeded ? oldLang('StarsNeededTitle', ongoingTransactionAmount) : oldLang('TelegramStars')}\n          </h2>\n          <div className={styles.description}>\n            {renderText(\n              starsNeededText || oldLang('TelegramStarsInfo'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          {canBuyPremium && !areBuyOptionsShown && (\n            <Button\n              className={styles.starButton}\n              onClick={showBuyOptions}\n            >\n              {oldLang('Star.List.BuyMoreStars')}\n            </Button>\n          )}\n          {canBuyPremium && !areBuyOptionsShown && shouldSuggestGifting && (\n            <Button\n              isText\n              noForcedUpperCase\n              className={styles.starButton}\n              onClick={openStarsGiftingPickerModalHandler}\n            >\n              {oldLang('TelegramStarsGift')}\n            </Button>\n          )}\n          {areBuyOptionsShown && starsBalanceState?.topupOptions && (\n            <StarTopupOptionList\n              starsNeeded={starsNeeded}\n              options={starsBalanceState.topupOptions}\n              onClick={handleBuyStars}\n            />\n          )}\n        </div>\n        {areBuyOptionsShown && (\n          <div className={styles.tos}>\n            {tosText}\n          </div>\n        )}\n        {shouldShowItems && Boolean(subscriptions?.list.length) && (\n          <div className={styles.section}>\n            <h3 className={styles.sectionTitle}>{oldLang('StarMySubscriptions')}</h3>\n            <div className={styles.subscriptions}>\n              {subscriptions?.list.map((subscription) => (\n                <StarsSubscriptionItem\n                  key={subscription.id}\n                  subscription={subscription}\n                />\n              ))}\n              {subscriptions?.nextOffset && (\n                <Button\n                  isText\n                  disabled={subscriptions.isLoading}\n                  size=\"smaller\"\n                  noForcedUpperCase\n                  className={styles.loadMore}\n                  onClick={handleLoadMoreSubscriptions}\n                >\n                  <Icon name=\"down\" className={styles.loadMoreIcon} />\n                  {oldLang('StarMySubscriptionsExpand')}\n                </Button>\n              )}\n            </div>\n          </div>\n        )}\n        {shouldShowItems && (\n          <div className={styles.container}>\n            <div className={styles.section}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS_KEYS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMoreTransactions}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  scrollContainerClosest={`.${styles.main}`}\n                  itemSelector={`.${TRANSACTION_ITEM_CLASS}`}\n                  className={styles.transactions}\n                  noFastList\n                  noScrollRestoreOnTop\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <StarsTransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                      className={TRANSACTION_ITEM_CLASS}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n            <TabList\n              className={styles.tabs}\n              tabClassName={styles.tab}\n              activeTab={selectedTabIndex}\n              tabs={transactionTabs}\n              onSwitchTab={setSelectedTabIndex}\n            />\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const shouldForceHeight = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      shouldForceHeight,\n      starsBalanceState: global.stars,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(StarsBalanceModal));\n","import { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport PeerBadge from '../../common/PeerBadge';\nimport PeerChip from '../../common/PeerChip';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './transaction/PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsPayment'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closeStarsPaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal?.inputInvoice && starsBalanceState);\n\n  const prevModal = usePrevious(modal);\n  const renderingModal = modal || prevModal;\n\n  const { form, subscriptionInfo } = renderingModal || {};\n  const amount = form?.invoice?.totalAmount || subscriptionInfo?.subscriptionPricing?.amount;\n  const isBotSubscription = Boolean(form?.invoice.subscriptionPeriod);\n  const canShowPeerItem = !subscriptionInfo?.subscriptionPricing;\n\n  const photo = form?.photo;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!renderingModal?.inputInvoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = oldLang('Stars.Intro.PurchasedText.Stars', amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => Boolean(media.duration));\n\n      const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? oldLang('Stars.Transfer.Videos', extendedMedia.length)\n          : oldLang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(oldLang, paidMediaChat!);\n      return oldLang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    if (subscriptionInfo) {\n      return lang('StarsSubscribeText', {\n        chat: subscriptionInfo.title,\n        amount,\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n        pluralValue: amount!,\n      });\n    }\n\n    if (isBotSubscription) {\n      return lang('StarsSubscribeBotText', {\n        name: form.title,\n        amount,\n        bot: botName,\n      }, {\n        pluralValue: amount!,\n      });\n    }\n\n    return oldLang('Stars.Transfer.Info', [form!.title, botName, starsText]);\n  }, [\n    renderingModal?.inputInvoice, bot, oldLang, amount, paidMediaMessage, subscriptionInfo, isBotSubscription, form,\n    paidMediaChat, lang,\n  ]);\n\n  const disclaimerText = useMemo(() => {\n    if (subscriptionInfo) {\n      return lang('StarsSubscribeInfo', {\n        link: <SafeLink url={lang('StarsSubscribeInfoLink')} text={lang('StarsSubscribeInfoLinkText')} />,\n      }, {\n        withNodes: true,\n      });\n    }\n\n    return undefined;\n  }, [subscriptionInfo, lang]);\n\n  const inviteCustomPeer = useMemo(() => {\n    if (!subscriptionInfo) {\n      return undefined;\n    }\n\n    return getCustomPeerFromInvite(subscriptionInfo);\n  }, [subscriptionInfo]);\n\n  const handlePayment = useLastCallback(() => {\n    const balance = starsBalanceState?.balance;\n    if (amount === undefined || balance === undefined) {\n      return;\n    }\n\n    if (amount > balance.amount) {\n      openStarsBalanceModal({\n        originStarsPayment: modal,\n      });\n      return;\n    }\n\n    sendStarPaymentForm({});\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closeStarsPaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={oldLang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : inviteCustomPeer ? (\n          <>\n            <Avatar className={styles.paymentPhoto} peer={inviteCustomPeer} size=\"giant\" />\n            <StarIcon type=\"gold\" size=\"adaptive\" className={styles.avatarStar} />\n          </>\n        ) : (\n          <PeerBadge\n            peer={!photo ? bot : undefined}\n            avatarWebPhoto={photo}\n            avatarSize=\"giant\"\n            badgeIcon=\"star\"\n            badgeText={formatInteger(amount!)}\n            badgeClassName={styles.amountBadge}\n            className={styles.paymentPhoto}\n          />\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {inviteCustomPeer ? oldLang('StarsSubscribeTitle') : oldLang('StarsConfirmPurchaseTitle')}\n      </h2>\n      {canShowPeerItem && <PeerChip className={styles.botItem} peerId={form?.botId} />}\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang(isBotSubscription ? 'StarsSubscribeBotButtonMonth' : 'StarsPay', {\n          amount: formatStarsAsIcon(lang, amount!, { asFont: true }),\n        }, {\n          withNodes: true,\n        })}\n      </Button>\n      {Boolean(disclaimerText) && (\n        <div className={buildClassName(styles.disclaimer, styles.smallerText)}>\n          {disclaimerText}\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const bot = modal?.form?.botId ? selectUser(global, modal.form.botId) : undefined;\n\n    const messageInputInvoice = modal?.inputInvoice?.type === 'message' ? modal.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"irv1C8bo\",\"subtitleBadge\":\"V7kDVPLm\",\"radialPattern\":\"UvhsGZLf\",\"amount\":\"zTVWZg63\",\"sticker\":\"a1ASgPwu\",\"transition\":\"Tu6_OHoq\",\"transitionSlide\":\"iUTKLzTN\",\"title\":\"ECTvfOda\",\"subtitle\":\"S6JwvHWD\"};","import type { TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarGiftAttributeBackdrop, ApiStarGiftAttributeModel, ApiStarGiftAttributePattern,\n  ApiStarsAmount } from '../../../api/types';\n\nimport {\n  formatStarsTransactionAmount,\n} from '../../../global/helpers/payments';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport { useTransitionActiveKey } from '../../../hooks/animations/useTransitionActiveKey';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport StarIcon from '../../common/icons/StarIcon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport Transition from '../../ui/Transition';\n\nimport styles from './UniqueGiftHeader.module.scss';\n\ntype OwnProps = {\n  modelAttribute: ApiStarGiftAttributeModel;\n  backdropAttribute: ApiStarGiftAttributeBackdrop;\n  patternAttribute: ApiStarGiftAttributePattern;\n  title?: string;\n  subtitle?: TeactNode;\n  subtitlePeer?: ApiPeer;\n  className?: string;\n  resellPrice?: ApiStarsAmount;\n};\n\nconst STICKER_SIZE = 120;\n\nconst UniqueGiftHeader = ({\n  modelAttribute,\n  backdropAttribute,\n  patternAttribute,\n  title,\n  subtitle,\n  subtitlePeer,\n  className,\n  resellPrice,\n}: OwnProps) => {\n  const {\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const activeKey = useTransitionActiveKey([modelAttribute, backdropAttribute, patternAttribute]);\n  const subtitleColor = backdropAttribute?.textColor;\n\n  const radialPatternBackdrop = useMemo(() => {\n    const backdropColors = [backdropAttribute.centerColor, backdropAttribute.edgeColor];\n    const patternColor = backdropAttribute.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={patternAttribute.sticker}\n      />\n    );\n  }, [backdropAttribute, patternAttribute]);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <Transition\n        className={styles.transition}\n        slideClassName={styles.transitionSlide}\n        activeKey={activeKey}\n        direction={1}\n        name=\"zoomBounceSemiFade\"\n      >\n        {radialPatternBackdrop}\n        <AnimatedIconFromSticker\n          className={styles.sticker}\n          sticker={modelAttribute.sticker}\n          size={STICKER_SIZE}\n        />\n      </Transition>\n      {title && <h1 className={styles.title}>{title}</h1>}\n      {Boolean(subtitle) && (\n        <div\n          className={buildClassName(styles.subtitle, subtitlePeer && styles.subtitleBadge)}\n          style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}\n          onClick={() => {\n            if (subtitlePeer) {\n              openChat({ id: subtitlePeer.id });\n            }\n          }}\n        >\n          {subtitle}\n        </div>\n      )}\n      {resellPrice && (\n        <p className={styles.amount}>\n          <span>\n            {formatStarsTransactionAmount(lang, resellPrice)}\n          </span>\n          <StarIcon type=\"gold\" size=\"middle\" />\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UniqueGiftHeader);\n","import { useMemo, useRef } from '../../lib/teact/teact';\n\n/**\n * Use this hook to bind `<Transition />` animation to changes in the dependency array.\n * Use optional parameter `noAnimation` if you want to prevent the animation even if the dependency array changes.\n*/\nexport function useTransitionActiveKey(deps: unknown[], noAnimation?: boolean): number {\n  const activeKey = useRef(0);\n\n  useMemo(() => {\n    if (!noAnimation) activeKey.current += 1;\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...deps]);\n\n  return activeKey.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"IzhfRIWu\",\"positive\":\"jvBZSrpd\",\"negative\":\"xDyq9cc0\",\"header\":\"qBOIq6Jn\",\"uniqueGift\":\"ApoQz22o\",\"amount\":\"sso9uZM6\",\"title\":\"ZZAj3hj7\",\"description\":\"NuWOY7ED\",\"tid\":\"tMF8VIOM\",\"refunded\":\"sxWAwxTd\",\"totalStars\":\"Z2YALGgl\",\"starIcon\":\"cU5QlvwL\",\"footer\":\"KgzPpgS6\",\"starsBackground\":\"nML8IQqX\",\"copyIcon\":\"voCttFzS\",\"mediaPreview\":\"C5r59yiV\",\"subtitle\":\"mFYcIYMJ\",\"starGiftSticker\":\"j3akHdtm\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransactionPeer, ApiSticker,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessageLink } from '../../../../global/helpers';\nimport {\n  buildStarsTransactionCustomPeer,\n  formatStarsTransactionAmount,\n} from '../../../../global/helpers/payments';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForStars,\n  selectPeer,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../../util/localization/format';\nimport { formatPercent } from '../../../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport { getTransactionTitle, isNegativeStarsAmount } from '../helpers/transaction';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport UniqueGiftHeader from '../../gift/UniqueGiftHeader';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsTransactionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  canPlayAnimatedEmojis?: boolean;\n  topSticker?: ApiSticker;\n  paidMessageCommission?: number;\n};\n\nconst StarsTransactionModal: FC<OwnProps & StateProps> = ({\n  modal,\n  peer,\n  canPlayAnimatedEmojis,\n  topSticker,\n  paidMessageCommission,\n}) => {\n  const { showNotification, openMediaViewer, closeStarsTransactionModal } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const { transaction } = modal || {};\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = transaction?.extendedMedia;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const starModalData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    const {\n      giveawayPostId, photo, stars, isGiftUpgrade, starGift, isGiftResale,\n      starRefCommision,\n    } = transaction;\n\n    const gift = transaction?.starGift;\n    const isUniqueGift = gift?.type === 'starGiftUnique';\n    const sticker = transaction?.starGift ? getStickerFromGift(transaction.starGift) : topSticker;\n\n    const giftAttributes = isUniqueGift ? getGiftAttributes(gift) : undefined;\n\n    const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n      && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n    const peerId = transaction.peer?.type === 'peer' ? transaction.peer.id : undefined;\n    const toName = transaction.peer && oldLang(getStarsPeerTitleKey(transaction.peer));\n\n    const title = getTransactionTitle(oldLang, lang, transaction);\n\n    const messageLink = peer && transaction.messageId && !isGiftUpgrade\n      ? getMessageLink(peer, undefined, transaction.messageId) : undefined;\n    const giveawayMessageLink = peer && giveawayPostId ? getMessageLink(peer, undefined, giveawayPostId) : undefined;\n\n    const media = transaction.extendedMedia;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? oldLang('Stars.Transfer.Videos', mediaAmount)\n        : oldLang('Media', mediaAmount);\n\n    const description = transaction.description\n      || (isGiftUpgrade && starGift?.type === 'starGiftUnique' ? starGift.title : undefined)\n      || (media ? mediaText : undefined);\n\n    const shouldDisplayAvatar = !media && !sticker;\n    const avatarPeer = !photo ? (peer || customPeer) : undefined;\n\n    const uniqueGiftHeader = isUniqueGift && (\n      <div className={buildClassName(styles.header, styles.uniqueGift)}>\n        <UniqueGiftHeader\n          backdropAttribute={giftAttributes!.backdrop!}\n          patternAttribute={giftAttributes!.pattern!}\n          modelAttribute={giftAttributes!.model!}\n          title={gift.title}\n          subtitle={lang('GiftInfoCollectible', { number: gift.number })}\n          resellPrice={transaction.stars}\n        />\n      </div>\n    );\n\n    const regularHeader = (\n      <div className={styles.header}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        {!media && sticker && (\n          <AnimatedIconFromSticker\n            key={transaction.id}\n            sticker={sticker}\n            play={canPlayAnimatedEmojis}\n            noLoop\n          />\n        )}\n        {shouldDisplayAvatar && (\n          <Avatar peer={avatarPeer} webPhoto={photo} size=\"giant\" />\n        )}\n        {!sticker && (\n          <img\n            className={buildClassName(styles.starsBackground)}\n            src={StarsBackground}\n            alt=\"\"\n            draggable={false}\n          />\n        )}\n        {Boolean(title) && <h1 className={styles.title}>{title}</h1>}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span\n            className={buildClassName(styles.amount, isNegativeStarsAmount(stars) ? styles.negative : styles.positive)}\n          >\n            {formatStarsTransactionAmount(lang, stars)}\n          </span>\n          <StarIcon type=\"gold\" size=\"middle\" />\n          {transaction.isRefund && (\n            <p className={styles.refunded}>{lang('Refunded')}</p>\n          )}\n        </p>\n        {Boolean(transaction.paidMessages && transaction.starRefCommision && paidMessageCommission) && (\n          <p className={styles.description}>\n            {lang(\n              'PaidMessageTransactionDescription',\n              { percent: formatPercent(paidMessageCommission! / 10) },\n              {\n                withNodes: true,\n                withMarkdown: true,\n              },\n            )}\n          </p>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    if (transaction && starRefCommision && !transaction.paidMessages && !isGiftResale) {\n      tableData.push([\n        oldLang('StarsTransaction.StarRefReason.Title'),\n        oldLang('StarsTransaction.StarRefReason.Program'),\n      ]);\n    }\n\n    if (isGiftUpgrade) {\n      tableData.push([\n        oldLang('StarGiftReason'),\n        oldLang('StarGiftReasonUpgrade'),\n      ]);\n    }\n\n    if (isGiftResale) {\n      tableData.push([\n        oldLang('StarGiftReason'),\n        isNegativeStarsAmount(transaction.stars)\n          ? lang('StarGiftSaleTransaction')\n          : lang('StarGiftPurchaseTransaction'),\n      ]);\n    }\n\n    let peerLabel;\n    if (isGiftUpgrade) {\n      peerLabel = oldLang('Stars.Transaction.GiftFrom');\n    } else if (isNegativeStarsAmount(stars) || transaction.isMyGift) {\n      peerLabel = oldLang('Stars.Transaction.To');\n    } else if (transaction.starRefCommision && !transaction.paidMessages && !isGiftResale) {\n      peerLabel = oldLang('StarsTransaction.StarRefReason.Miniapp');\n    } else if (peerId) {\n      peerLabel = oldLang('Star.Transaction.From');\n    } else {\n      peerLabel = oldLang('Stars.Transaction.Via');\n    }\n\n    tableData.push([\n      peerLabel,\n      peerId ? { chatId: peerId } : toName || '',\n    ]);\n\n    if (transaction.starRefCommision && transaction.paidMessages) {\n      tableData.push([\n        lang('PaidMessageTransactionTotal'),\n        formatStarsAsIcon(lang,\n          transaction.stars.amount / ((100 - transaction.starRefCommision) / 100),\n          { asFont: false, className: styles.starIcon, containerClassName: styles.totalStars }),\n      ]);\n    }\n\n    if (messageLink) {\n      tableData.push([oldLang('Stars.Transaction.Reaction.Post'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    if (giveawayMessageLink) {\n      tableData.push([oldLang('BoostReason'), <SafeLink url={giveawayMessageLink} text={oldLang('Giveaway')} />]);\n      tableData.push([oldLang('Gift'), oldLang('Stars', transaction.stars, 'i')]);\n    }\n\n    if (transaction.id) {\n      tableData.push([\n        oldLang('Stars.Transaction.Id'),\n        (\n          <>\n            <div\n              className={styles.tid}\n              onClick={() => {\n                copyTextToClipboard(transaction.id!);\n                showNotification({\n                  message: oldLang('StarsTransactionIDCopied'),\n                });\n              }}\n            >\n              {transaction.id}\n            </div>\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </>\n        ),\n      ]);\n    }\n\n    tableData.push([\n      oldLang('Stars.Transaction.Date'),\n      formatDateTimeToString(transaction.date * 1000, oldLang.code, true),\n    ]);\n\n    const footerText = oldLang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header: isUniqueGift ? uniqueGiftHeader : regularHeader,\n      tableData,\n      footer,\n    };\n  }, [transaction, oldLang, lang, peer, canPlayAnimatedEmojis, topSticker, paidMessageCommission]);\n\n  const prevModalData = usePrevious(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(transaction)}\n      className={styles.modal}\n      hasBackdrop={transaction?.starGift?.type === 'starGiftUnique'}\n      header={renderingModalData?.header}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      buttonText={oldLang('OK')}\n      onClose={closeStarsTransactionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.transaction?.peer?.type === 'peer' && modal.transaction.peer.id;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n    const paidMessageCommission = global.appConfig?.starsPaidMessageCommissionPermille;\n\n    const starCount = modal?.transaction.stars;\n    const starsGiftSticker = modal?.transaction.isGift && selectGiftStickerForStars(global, starCount?.amount);\n\n    return {\n      peer,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      topSticker: starsGiftSticker,\n      paidMessageCommission,\n    };\n  },\n)(StarsTransactionModal));\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    case 'api':\n      return 'Stars.Intro.Transaction.TelegramBotApi.Subtitle';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"eR_RZfGB\",\"header\":\"E3R22yAI\",\"title\":\"qdydQHgc\",\"amount\":\"FI6rEJlK\",\"footer\":\"GMWMuWCr\",\"starsBackground\":\"zGCayu45\",\"avatarWrapper\":\"wuTMXDP9\",\"subscriptionStar\":\"enRetSny\",\"amountStar\":\"J8HIcN6k\",\"secondary\":\"oBLHWBtJ\",\"danger\":\"nkwiG25Q\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { isApiPeerUser } from '../../../../global/helpers/peers';\nimport {\n  selectPeer,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\n\nimport styles from './StarsSubscriptionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsSubscriptionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n};\n\nconst StarsSubscriptionModal: FC<OwnProps & StateProps> = ({\n  modal, peer,\n}) => {\n  const {\n    closeStarsSubscriptionModal,\n    fulfillStarsSubscription,\n    changeStarsSubscription,\n    checkChatInvite,\n    loadStarStatus,\n    openInvoice,\n  } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { subscription } = modal || {};\n\n  const buttonState = useMemo(() => {\n    if (!subscription) {\n      return 'hidden';\n    }\n\n    if (subscription.canRefulfill) {\n      return 'refulfill';\n    }\n\n    const isActive = subscription.until > Date.now() / 1000;\n    if (isActive && !subscription.isCancelled) {\n      return 'cancel';\n    }\n\n    if (isActive && subscription.isCancelled) {\n      return 'renew';\n    }\n\n    const canRestart = subscription.chatInviteHash || subscription.invoiceSlug;\n    if (!isActive && canRestart) {\n      return 'restart';\n    }\n\n    return 'ok';\n  }, [subscription]);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!subscription) {\n      return;\n    }\n\n    switch (buttonState) {\n      case 'refulfill': {\n        fulfillStarsSubscription({ id: subscription.id });\n        break;\n      }\n      case 'restart': {\n        if (subscription.chatInviteHash) {\n          checkChatInvite({ hash: subscription.chatInviteHash });\n        } else if (subscription.invoiceSlug) {\n          openInvoice({\n            type: 'slug',\n            slug: subscription.invoiceSlug,\n          });\n        }\n        loadStarStatus();\n        break;\n      }\n      case 'renew': {\n        changeStarsSubscription({ id: subscription.id, isCancelled: false });\n        break;\n      }\n      case 'cancel': {\n        changeStarsSubscription({ id: subscription.id, isCancelled: true });\n        break;\n      }\n    }\n    closeStarsSubscriptionModal();\n  });\n\n  const starModalData = useMemo(() => {\n    if (!subscription || !peer) {\n      return undefined;\n    }\n\n    const {\n      pricing, until, isCancelled, canRefulfill, photo, title, hasBotCancelled,\n    } = subscription;\n\n    const isBotSubscription = isApiPeerUser(peer);\n\n    const header = (\n      <div className={styles.header}>\n        <div className={styles.avatarWrapper}>\n          <Avatar peer={!photo ? peer : undefined} webPhoto={photo} size=\"giant\" />\n          <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"adaptive\" />\n        </div>\n        <img\n          className={buildClassName(styles.starsBackground)}\n          src={StarsBackground}\n          alt=\"\"\n          draggable={false}\n        />\n        <h1 className={styles.title}>{title || oldLang('StarsSubscriptionTitle')}</h1>\n        <p className={styles.amount}>\n          {lang('StarsPerMonth', {\n            amount: pricing.amount,\n          }, {\n            withNodes: true,\n            specialReplacement: {\n              [STARS_ICON_PLACEHOLDER]: <StarIcon className={styles.amountStar} size=\"adaptive\" type=\"gold\" />,\n            },\n          })}\n        </p>\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      oldLang(isBotSubscription ? 'StarsSubscriptionBot' : 'StarsSubscriptionChannel'),\n      { chatId: peer.id },\n    ]);\n\n    if (title) {\n      tableData.push([\n        oldLang('StarsSubscriptionBotProduct'),\n        title,\n      ]);\n    }\n\n    const hasExpired = until < Date.now() / 1000;\n    tableData.push([\n      oldLang(hasExpired ? 'StarsSubscriptionUntilExpired'\n        : isCancelled ? 'StarsSubscriptionUntilExpires' : 'StarsSubscriptionUntilRenews'),\n      formatDateTimeToString(until * 1000, oldLang.code, true),\n    ]);\n\n    const footerTos = lang('StarsTransactionTOS', {\n      link: <SafeLink url={lang('StarsTransactionTOSLink')} text={lang('StarsTransactionTOSLinkText')} />,\n    }, {\n      withNodes: true,\n    });\n\n    const footer = (\n      <span className={styles.footer}>\n        <p className={styles.secondary}>{footerTos}</p>\n        {isCancelled && (\n          <p className={styles.danger}>\n            {oldLang(hasBotCancelled ? 'StarsSubscriptionBotCancelledText' : 'StarsSubscriptionCancelledText')}\n          </p>\n        )}\n        {canRefulfill && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionRefulfillInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {!isCancelled && !canRefulfill && hasExpired && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionExpiredInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {!isCancelled && !canRefulfill && !hasExpired && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionCancelInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {buttonState !== 'hidden' && (\n          <Button\n            size=\"smaller\"\n            color={buttonState === 'cancel' ? 'danger' : 'primary'}\n            isText={buttonState === 'cancel'}\n            onClick={handleButtonClick}\n          >\n            {oldLang(\n              buttonState === 'cancel' ? 'StarsSubscriptionCancel'\n                : buttonState === 'refulfill' ? 'StarsSubscriptionRefulfill'\n                  : buttonState === 'restart' ? 'StarsSubscriptionAgain'\n                    : buttonState === 'renew' ? 'StarsSubscriptionRenew' : 'OK',\n            )}\n          </Button>\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [buttonState, lang, oldLang, peer, subscription]);\n\n  const prevModalData = usePrevious(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(subscription)}\n      className={styles.modal}\n      header={renderingModalData?.header}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      onClose={closeStarsSubscriptionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.subscription.peerId;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n\n    return {\n      peer,\n    };\n  },\n)(StarsSubscriptionModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CuBAw2yg\",\"slider\":\"euOOAbZi\",\"sparkles\":\"_L1YQTIP\",\"progress\":\"kwK0cNPX\",\"floatingBadgeWrapper\":\"uvlMoXj0\",\"floatingBadge\":\"BGSDWAYc\",\"floatingBadgeText\":\"qqQan8uF\",\"floatingBadgeTriangle\":\"mIdJOmsB\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Sparkles from '../../common/Sparkles';\n\nimport styles from './StarSlider.module.scss';\n\ntype OwnProps = {\n  maxValue: number;\n  defaultValue: number;\n  className?: string;\n  onChange: (value: number) => void;\n};\n\nconst DEFAULT_POINTS = [50, 100, 500, 1000, 2000, 5000, 10000];\n\nconst StarSlider = ({\n  maxValue,\n  defaultValue,\n  className,\n  onChange,\n}: OwnProps) => {\n  const floatingBadgeRef = useRef<HTMLDivElement>();\n\n  const points = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < DEFAULT_POINTS.length; i++) {\n      if (DEFAULT_POINTS[i] < maxValue) {\n        result.push(DEFAULT_POINTS[i]);\n      }\n\n      if (DEFAULT_POINTS[i] >= maxValue) {\n        result.push(maxValue);\n        break;\n      }\n    }\n\n    return result;\n  }, [maxValue]);\n\n  const [value, setValue] = useState(0);\n\n  useEffectOnce(() => {\n    setValue(getProgress(points, defaultValue));\n  });\n\n  const updateSafeBadgePosition = useLastCallback(() => {\n    const badge = floatingBadgeRef.current;\n    if (!badge) return;\n    const parent = badge.parentElement!;\n\n    requestMeasure(() => {\n      const safeMinX = parent.offsetLeft + badge.offsetWidth / 2;\n      const safeMaxX = parent.offsetLeft + parent.offsetWidth - badge.offsetWidth / 2;\n\n      requestMutation(() => {\n        parent.style.setProperty('--_min-x', `${safeMinX}px`);\n        parent.style.setProperty('--_max-x', `${safeMaxX}px`);\n      });\n    });\n  });\n\n  useResizeObserver(floatingBadgeRef, updateSafeBadgePosition);\n\n  const handleChange = useLastCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.currentTarget.value);\n    setValue(newValue);\n\n    onChange(getValue(points, newValue));\n  });\n\n  return (\n    <div className={buildClassName(styles.root, className)} style={`--progress: ${value / points.length}`}>\n      <div className={styles.floatingBadgeWrapper}>\n        <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n          <div className={styles.floatingBadgeText}>\n            <Icon name=\"star\" className={styles.floatingBadgeIcon} />\n            <AnimatedCounter text={formatInteger(getValue(points, value))} />\n          </div>\n          <svg className={styles.floatingBadgeTriangle} width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n            <defs>\n              <linearGradient id=\"StarBadgeTriangle\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\n                <stop offset=\"-50%\" stop-color=\"#FFAA00\" />\n                <stop offset=\"150%\" stop-color=\"#FFCD3A\" />\n              </linearGradient>\n            </defs>\n            <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"url(#StarBadgeTriangle)\" />\n          </svg>\n        </div>\n      </div>\n      <div className={styles.progress}>\n        <Sparkles preset=\"progress\" className={styles.sparkles} />\n      </div>\n      <input\n        className={styles.slider}\n        type=\"range\"\n        min={0}\n        max={points.length}\n        defaultValue={getProgress(points, defaultValue)}\n        step=\"any\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nfunction getProgress(points: number[], value: number) {\n  const pointIndex = points.findIndex((point) => value <= point);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const progress = (value - prevPoint) / (nextPoint - prevPoint);\n  return pointIndex + progress;\n}\n\nfunction getValue(points: number[], progress: number) {\n  const pointIndex = Math.floor(progress);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const value = prevPoint + (nextPoint - prevPoint) * (progress - pointIndex);\n  return Math.round(value);\n}\n\nexport default memo(StarSlider);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"RdhRpsCn\",\"title\":\"yzbjj73U\",\"slider\":\"xePPMXOI\",\"description\":\"BlpfdOtK\",\"itemInfo\":\"nS9V516D\",\"itemTitle\":\"sH5Nukjy\",\"itemSubtitle\":\"dHlNODTI\",\"itemIcon\":\"H_iHihXU\",\"sendAsPeerButtonAvatar\":\"_mjvLELm\",\"sendAsPeerMenuButton\":\"zxsRaWYV\",\"buttonDownIcon\":\"zrwUUELS\",\"sendAsPeerMenuBubble\":\"X1PB6mhQ\",\"sendAsPeerMenu\":\"Px1MDij9\",\"sendAsPeersMenuContainer\":\"Al1nfhHJ\",\"headerControlPanel\":\"vu90kSL_\",\"separator\":\"uhQLUjmo\",\"checkBox\":\"Mc3bVeF0\",\"topLabel\":\"bnou4CpV\",\"top\":\"QludQDKR\",\"topBadge\":\"JBF9pTUK\",\"buttonStar\":\"NJJFuym9\",\"topPeer\":\"Ty4Ud_Rd\",\"disclaimer\":\"KRvkHeo1\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPaidReactionPrivacyType,\n  ApiPeer,\n  ApiSendAsPeerId,\n  ApiStarsAmount, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport { getPeerTitle, isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectChat, selectChatMessage, selectPeer, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport PeerBadge from '../../common/PeerBadge';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\nimport BalanceBlock from '../stars/BalanceBlock';\nimport StarSlider from './StarSlider';\n\nimport styles from './PaidReactionModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['paidReactionModal'];\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n  chat?: ApiChat;\n  maxAmount: number;\n  starBalance?: ApiStarsAmount;\n  defaultPrivacy?: ApiPaidReactionPrivacyType;\n  sendPaidReactionsAsPeerIds?: ApiSendAsPeerId[];\n  currentUserId: string;\n  currentUser: ApiUser;\n};\n\ntype ReactorData = {\n  amount: number;\n  localAmount: number;\n  isMy?: boolean;\n  isAnonymous?: boolean;\n  user?: ApiPeer;\n};\n\nconst MAX_TOP_REACTORS = 3;\nconst DEFAULT_STARS_AMOUNT = 50;\nconst MAX_REACTION_AMOUNT = 2500;\nconst ANONYMOUS_PEER: CustomPeer = {\n  avatarIcon: 'author-hidden',\n  customPeerAvatarColor: '#9eaab5',\n  isCustomPeer: true,\n  titleKey: 'StarsReactionAnonymous',\n};\n\nconst PaidReactionModal = ({\n  modal,\n  chat,\n  message,\n  maxAmount,\n  starBalance,\n  defaultPrivacy,\n  sendPaidReactionsAsPeerIds,\n  currentUserId,\n  currentUser,\n}: OwnProps & StateProps) => {\n  const { closePaidReactionModal, addLocalPaidReaction, loadSendPaidReactionsAs } = getActions();\n\n  const [starsAmount, setStarsAmount] = useState(DEFAULT_STARS_AMOUNT);\n  const [isTouched, markTouched, unmarkTouched] = useFlag();\n  const [shouldSendAsAnonymous, setShouldSendAsAnonymous] = useState(true);\n  const [sendAsPeerId, setSendAsPeerId] = useState(currentUserId);\n\n  const chatId = chat?.id;\n\n  const senderPeer = sendAsPeerId ? (selectPeer(getGlobal(), sendAsPeerId)) : currentUser;\n\n  const oldLang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const lang = useLang();\n\n  const handleShowInTopSendersChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setShouldSendAsAnonymous(!e.target.checked);\n  });\n\n  const handleAmountChange = useLastCallback((value: number) => {\n    setStarsAmount(value);\n    markTouched();\n  });\n\n  useEffect(() => {\n    if (chatId && !sendPaidReactionsAsPeerIds) {\n      loadSendPaidReactionsAs({ chatId });\n    }\n  }, [chatId, sendPaidReactionsAsPeerIds]);\n\n  const filteredMyReactorIds = useMemo(() => {\n    const result = sendPaidReactionsAsPeerIds?.map((peer) => peer.id)\n      .filter((id) => id !== chatId);\n    result?.unshift(currentUserId);\n    return result;\n  }, [sendPaidReactionsAsPeerIds, chatId, currentUserId]);\n\n  const canChangeSendAsPeer = filteredMyReactorIds && filteredMyReactorIds.length > 1;\n\n  useEffect(() => {\n    if (!modal) {\n      unmarkTouched();\n    }\n  }, [modal]);\n\n  useEffect(() => {\n    const currentReactor = message?.reactions?.topReactors?.find((reactor) => reactor.isMy);\n    if (currentReactor) {\n      setShouldSendAsAnonymous(Boolean(currentReactor.isAnonymous));\n      if (currentReactor.peerId) {\n        setSendAsPeerId(currentReactor.peerId);\n      }\n      return;\n    }\n\n    setShouldSendAsAnonymous(defaultPrivacy?.type === 'anonymous' || false);\n    if (defaultPrivacy?.type === 'peer' && filteredMyReactorIds?.includes(defaultPrivacy.peerId)) {\n      setSendAsPeerId(defaultPrivacy.peerId);\n      return;\n    }\n\n    setSendAsPeerId(currentUserId);\n  }, [defaultPrivacy, message?.reactions?.topReactors, filteredMyReactorIds, currentUserId]);\n\n  const handleSend = useLastCallback(() => {\n    if (!modal) return;\n\n    addLocalPaidReaction({\n      chatId: modal.chatId,\n      messageId: modal.messageId,\n      count: starsAmount,\n      isPrivate: shouldSendAsAnonymous,\n      peerId: shouldSendAsAnonymous || sendAsPeerId === currentUserId ? undefined : sendAsPeerId,\n      shouldIgnoreDefaultPrivacy: true,\n    });\n    closePaidReactionModal();\n  });\n\n  const handleSendAsPeerChange = useLastCallback((peerId: string) => {\n    setShouldSendAsAnonymous(false);\n    setSendAsPeerId(peerId);\n  });\n\n  const renderMenuItem = useLastCallback((peerId: string) => {\n    const peer = selectPeer(getGlobal(), peerId);\n    const isSelected = sendAsPeerId === peerId && !shouldSendAsAnonymous;\n    if (!peer) return undefined;\n\n    return (\n      <MenuItem\n\n        onClick={() => handleSendAsPeerChange(peerId)}\n      >\n        <Avatar\n          size=\"small\"\n          peer={peer}\n        />\n        <div className={buildClassName(styles.itemInfo)}>\n          <FullNameTitle className={styles.itemTitle} peer={peer} noFake noVerified />\n          <span className={styles.itemSubtitle}>\n            {isApiPeerUser(peer) ? lang('PeerPersonalAccount') : lang('PeerChannel')}\n          </span>\n        </div>\n        <Icon\n          className={styles.itemIcon}\n          name={isSelected ? 'check' : 'placeholder'}\n        />\n      </MenuItem>\n    );\n  });\n\n  const SendAsPeerMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.sendAsPeerMenuButton, isOpen ? 'active' : '')}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Avatar\n          className={styles.sendAsPeerButtonAvatar}\n          size=\"mini\"\n          peer={shouldSendAsAnonymous ? ANONYMOUS_PEER : senderPeer}\n        />\n        <Icon\n          name=\"down\"\n          className={styles.buttonDownIcon}\n        />\n      </Button>\n    );\n  }, [isMobile, lang, senderPeer, shouldSendAsAnonymous]);\n\n  const sendAsPeersMenu = useMemo(() => {\n    if (!canChangeSendAsPeer) return undefined;\n    return (\n      <DropdownMenu\n        className={buildClassName(styles.sendAsPeerMenu, 'with-menu-transitions')}\n        bubbleClassName={styles.sendAsPeerMenuBubble}\n        trigger={SendAsPeerMenuButton}\n        positionX=\"right\"\n        autoClose\n      >\n        {filteredMyReactorIds.map((id) => (\n          renderMenuItem(id)\n        ))}\n      </DropdownMenu>\n    );\n  }, [SendAsPeerMenuButton, filteredMyReactorIds, canChangeSendAsPeer]);\n\n  const topReactors = useMemo(() => {\n    const global = getGlobal();\n    const all = message?.reactions?.topReactors;\n    if (!all) {\n      return undefined;\n    }\n\n    const result: ReactorData[] = [];\n    let hasCurrentSender = false;\n    let myReactorAmount = 0;\n\n    all.forEach((reactor) => {\n      const peer = reactor.peerId ? selectPeer(global, reactor.peerId) : undefined;\n      if (!peer && !reactor.isAnonymous && !reactor.isMy) return;\n      if (reactor.isMy) {\n        myReactorAmount = reactor.count;\n      }\n\n      if (reactor.isMy && (reactor.peerId !== sendAsPeerId || (reactor.isAnonymous && !shouldSendAsAnonymous))) return;\n\n      const isCurrentReactor = sendAsPeerId === reactor.peerId || (shouldSendAsAnonymous && reactor.isAnonymous);\n\n      if (isCurrentReactor) {\n        hasCurrentSender = true;\n      }\n\n      result.push({\n        amount: reactor.count,\n        localAmount: isCurrentReactor && isTouched ? starsAmount : 0,\n        isMy: reactor.isMy,\n        isAnonymous: reactor.isAnonymous,\n        user: peer,\n      });\n    });\n\n    if (!hasCurrentSender) {\n      const sender = selectPeer(global, sendAsPeerId);\n      result.push({\n        amount: myReactorAmount,\n        localAmount: isTouched ? starsAmount : 0,\n        isMy: true,\n        user: sender,\n      });\n    }\n\n    result.sort((a, b) => (b.amount + b.localAmount) - (a.amount + a.localAmount));\n\n    return result.slice(0, MAX_TOP_REACTORS);\n  }, [isTouched, message?.reactions?.topReactors, starsAmount, sendAsPeerId, shouldSendAsAnonymous]);\n\n  const chatTitle = chat && getPeerTitle(oldLang, chat);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      onClose={closePaidReactionModal}\n      isSlim\n      hasAbsoluteCloseButton\n      contentClassName={styles.content}\n      isLowStackPriority\n    >\n      <div className={styles.sendAsPeersMenuContainer}>\n        {sendAsPeersMenu}\n      </div>\n      <div className={styles.headerControlPanel}>\n        <BalanceBlock balance={starBalance} className={styles.modalBalance} withAddButton />\n      </div>\n\n      <StarSlider\n        className={styles.slider}\n        defaultValue={DEFAULT_STARS_AMOUNT}\n        maxValue={maxAmount}\n        onChange={handleAmountChange}\n      />\n      <h3 className={styles.title}>{oldLang('StarsReactionTitle')}</h3>\n      <div className={styles.description}>\n        {renderText(oldLang('StarsReactionText', chatTitle), ['simple_markdown', 'emoji'])}\n      </div>\n      <Separator>\n        {topReactors && <div className={styles.topLabel}>{oldLang('StarsReactionTopSenders')}</div>}\n      </Separator>\n      {topReactors && (\n        <div className={styles.top}>\n          {topReactors.map((reactor) => {\n            const countText = formatInteger(reactor.amount + reactor.localAmount);\n            const peer = (reactor.isAnonymous || !reactor.user || (reactor.isMy && shouldSendAsAnonymous))\n              ? ANONYMOUS_PEER : reactor.user;\n            const text = 'isCustomPeer' in peer ? oldLang(peer.titleKey)\n              : peer && getPeerTitle(oldLang, peer);\n            return (\n              <PeerBadge\n                className={styles.topPeer}\n                key={`${reactor.user?.id || 'anonymous'}-${countText}`}\n                peer={peer}\n                badgeText={countText}\n                badgeIcon=\"star\"\n                badgeClassName={styles.topBadge}\n                text={text}\n              />\n            );\n          })}\n        </div>\n      )}\n      {topReactors && (<Separator className={styles.separator} />)}\n      <Checkbox\n        className={buildClassName(styles.checkBox, 'dialog-checkbox')}\n        checked={!shouldSendAsAnonymous}\n        onChange={handleShowInTopSendersChange}\n        label={oldLang('StarsReactionShowMeInTopSenders')}\n      />\n      <Button\n        size=\"smaller\"\n        onClick={handleSend}\n      >\n        {lang('SendPaidReaction', { amount: starsAmount }, {\n          withNodes: true,\n          specialReplacement: {\n            [STARS_ICON_PLACEHOLDER]: <Icon className={styles.buttonStar} name=\"star\" />,\n          },\n        })}\n      </Button>\n      <p className={styles.disclaimer}>\n        {lang('StarsReactionTerms', {\n          link: <SafeLink text={lang('StarsReactionLinkText')} url={lang('StarsReactionLink')} />,\n        }, {\n          withNodes: true,\n        })}\n      </p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal.chatId);\n    const message = modal && selectChatMessage(global, modal.chatId, modal.messageId);\n    const starBalance = global.stars?.balance;\n    const maxAmount = global.appConfig?.paidReactionMaxAmount || MAX_REACTION_AMOUNT;\n    const defaultPrivacy = global.settings.paidReactionPrivacy;\n    const sendPaidReactionsAsPeerIds = chat?.sendPaidReactionsAsPeerIds;\n    const currentUserId = global.currentUserId!;\n    const currentUser = selectUser(global, currentUserId)!;\n\n    return {\n      chat,\n      message,\n      starBalance,\n      maxAmount,\n      defaultPrivacy,\n      sendPaidReactionsAsPeerIds,\n      currentUserId,\n      currentUser,\n    };\n  },\n)(PaidReactionModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jKOG0It6\",\"header\":\"A_fX4EXY\",\"spacer\":\"ATowWJ60\",\"title\":\"gDNtv9oz\",\"balance-container\":\"eAKZVhOT\",\"balanceContainer\":\"eAKZVhOT\",\"balance-caption\":\"vbwprYel\",\"balanceCaption\":\"vbwprYel\",\"star-balance\":\"lXuIlbVK\",\"starBalance\":\"lXuIlbVK\",\"balance\":\"dIEx_Iqi\",\"optionsSection\":\"Y68CEIKn\",\"checkboxTitle\":\"H4taXei_\",\"actionMessageView\":\"CB1mxsgp\",\"messageInput\":\"o5r2IPoA\",\"limited\":\"mWzLu0c0\",\"footer\":\"jxWZSvet\",\"switcher\":\"zZUpGRSI\",\"switcherStarIcon\":\"zAee80Dv\",\"description\":\"nTPAv1ci\",\"main-button\":\"IDuhjrne\",\"mainButton\":\"IDuhjrne\",\"star\":\"Q4NlMT0o\",\"background\":\"ZORVRSG3\",\"customBgImage\":\"Eny_G3JI\",\"customBgColor\":\"TkJZPU2u\",\"withTransition\":\"soDpW2YR\",\"blurred\":\"M6k91TdM\",\"withRightColumn\":\"FBcNO8hj\"};","import type { ChangeEvent } from 'react';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { GiftOption } from './GiftModal';\nimport {\n  type ApiMessage, type ApiPeer, type ApiStarsAmount, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { getPeerTitle, isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectPeerPaidMessagesStars, selectTabState, selectTheme, selectThemeValues, selectUserFullInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PremiumProgress from '../../common/PremiumProgress';\nimport ActionMessage from '../../middle/message/ActionMessage';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport styles from './GiftComposer.module.scss';\n\nexport type OwnProps = {\n  gift: GiftOption;\n  giftByStars?: GiftOption;\n  peerId: string;\n};\n\nexport type StateProps = {\n  captionLimit?: number;\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  peer?: ApiPeer;\n  currentUserId?: string;\n  isPaymentFormLoading?: boolean;\n  starBalance?: ApiStarsAmount;\n  paidMessagesStars?: number;\n  areUniqueStarGiftsDisallowed?: boolean;\n  shouldDisallowLimitedStarGifts?: boolean;\n};\n\nconst LIMIT_DISPLAY_THRESHOLD = 50;\n\nfunction GiftComposer({\n  gift,\n  giftByStars,\n  peerId,\n  peer,\n  captionLimit,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  backgroundColor,\n  customBackground,\n  currentUserId,\n  isPaymentFormLoading,\n  starBalance,\n  paidMessagesStars,\n  areUniqueStarGiftsDisallowed,\n  shouldDisallowLimitedStarGifts,\n}: OwnProps & StateProps) {\n  const {\n    sendStarGift, sendPremiumGiftByStars, openInvoice, openGiftUpgradeModal, openStarsBalanceModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [giftMessage, setGiftMessage] = useState<string>('');\n  const [shouldHideName, setShouldHideName] = useState<boolean>(false);\n  const [shouldPayForUpgrade, setShouldPayForUpgrade] = useState<boolean>(false);\n  const [shouldPayByStars, setShouldPayByStars] = useState<boolean>(false);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  useEffect(() => {\n    if (shouldDisallowLimitedStarGifts) {\n      setShouldPayForUpgrade(true);\n    }\n  }, [shouldDisallowLimitedStarGifts, shouldPayForUpgrade]);\n\n  const isStarGift = 'id' in gift && gift.type === 'starGift';\n  const isPremiumGift = 'months' in gift;\n  const hasPremiumByStars = giftByStars && 'amount' in giftByStars;\n  const isPeerUser = peer && isApiPeerUser(peer);\n  const isSelf = peerId === currentUserId;\n\n  const localMessage = useMemo(() => {\n    if (isPremiumGift) {\n      const currentGift = shouldPayByStars && hasPremiumByStars ? giftByStars : gift;\n      return {\n        id: -1,\n        chatId: '0',\n        isOutgoing: false,\n        senderId: currentUserId,\n        date: Math.floor(Date.now() / 1000),\n        content: {\n          action: {\n            mediaType: 'action',\n            type: 'giftPremium',\n            amount: currentGift.amount,\n            currency: currentGift.currency,\n            months: gift.months,\n            message: giftMessage ? { text: giftMessage } : undefined,\n          },\n        },\n      } satisfies ApiMessage;\n    }\n\n    if (isStarGift) {\n      return {\n        id: -1,\n        chatId: '0',\n        isOutgoing: false,\n        senderId: currentUserId,\n        date: Math.floor(Date.now() / 1000),\n        content: {\n          action: {\n            mediaType: 'action',\n            type: 'starGift',\n            message: giftMessage?.length ? {\n              text: giftMessage,\n            } : undefined,\n            isNameHidden: shouldHideName || undefined,\n            starsToConvert: gift.starsToConvert,\n            canUpgrade: shouldPayForUpgrade || undefined,\n            alreadyPaidUpgradeStars: shouldPayForUpgrade ? gift.upgradeStars : undefined,\n            gift,\n            peerId,\n            fromId: currentUserId,\n          },\n        },\n      } satisfies ApiMessage;\n    }\n    return undefined;\n  }, [currentUserId, gift, giftMessage, isStarGift,\n    shouldHideName, shouldPayForUpgrade, peerId,\n    shouldPayByStars, hasPremiumByStars, giftByStars, isPremiumGift]);\n\n  const handleGiftMessageChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setGiftMessage(e.target.value);\n  });\n\n  const handleShouldHideNameChange = useLastCallback(() => {\n    setShouldHideName(!shouldHideName);\n  });\n\n  const handleShouldPayForUpgradeChange = useLastCallback(() => {\n    setShouldPayForUpgrade(!shouldPayForUpgrade);\n  });\n\n  const toggleShouldPayByStars = useLastCallback(() => {\n    if (hasPremiumByStars) setShouldPayByStars(!shouldPayByStars);\n  });\n\n  const handleOpenUpgradePreview = useLastCallback(() => {\n    if (!isStarGift) return;\n    openGiftUpgradeModal({\n      giftId: gift.id,\n      peerId,\n    });\n  });\n\n  const handleGetMoreStars = useLastCallback(() => {\n    openStarsBalanceModal({});\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    if (isStarGift) {\n      sendStarGift({\n        peerId,\n        shouldHideName,\n        gift,\n        message: giftMessage ? { text: giftMessage } : undefined,\n        shouldUpgrade: shouldPayForUpgrade,\n      });\n      return;\n    }\n\n    if (shouldPayByStars && hasPremiumByStars) {\n      sendPremiumGiftByStars({\n        userId: peerId,\n        months: giftByStars.months,\n        amount: giftByStars.amount,\n        message: giftMessage ? { text: giftMessage } : undefined,\n      });\n      return;\n    }\n\n    if (isPremiumGift) {\n      openInvoice({\n        type: 'giftcode',\n        userIds: [peerId],\n        currency: gift.currency,\n        amount: gift.amount,\n        option: gift,\n        message: giftMessage ? { text: giftMessage } : undefined,\n      });\n    }\n  });\n\n  const canUseStarsPayment = hasPremiumByStars && starBalance && (starBalance.amount > giftByStars.amount);\n  function renderOptionsSection() {\n    const symbolsLeft = captionLimit ? captionLimit - giftMessage.length : undefined;\n\n    const title = getPeerTitle(lang, peer!)!;\n    return (\n      <div className={styles.optionsSection}>\n\n        {!paidMessagesStars && (\n          <TextArea\n            className={styles.messageInput}\n            onChange={handleGiftMessageChange}\n            value={giftMessage}\n            label={lang('GiftMessagePlaceholder')}\n            maxLength={captionLimit}\n            maxLengthIndicator={\n              symbolsLeft && symbolsLeft < LIMIT_DISPLAY_THRESHOLD ? symbolsLeft.toString() : undefined\n            }\n          />\n        )}\n\n        {canUseStarsPayment && (\n          <ListItem className={styles.switcher} narrow ripple onClick={toggleShouldPayByStars}>\n            <span>\n              {lang('GiftPremiumPayWithStars', {\n                stars: formatStarsAsIcon(lang, giftByStars.amount, { className: styles.switcherStarIcon }),\n              }, { withNodes: true })}\n            </span>\n            <Switcher\n              checked={shouldPayByStars}\n              onChange={toggleShouldPayByStars}\n              label={lang('GiftPremiumPayWithStarsAcc')}\n            />\n          </ListItem>\n        )}\n\n        {hasPremiumByStars && starBalance && (\n          <div className={styles.description}>\n            {lang('GiftPremiumDescriptionYourBalance', {\n              stars: formatStarsAsIcon(lang, starBalance.amount, { className: styles.switcherStarIcon }),\n              link: <Link isPrimary onClick={handleGetMoreStars}>{lang('GetMoreStarsLinkText')}</Link>,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            })}\n          </div>\n        )}\n\n        {isStarGift && Boolean(gift.upgradeStars) && !areUniqueStarGiftsDisallowed && (\n          <ListItem\n            className={styles.switcher}\n            narrow\n            ripple\n            onClick={handleShouldPayForUpgradeChange}\n            disabled={shouldDisallowLimitedStarGifts}\n          >\n            <span>\n              {lang('GiftMakeUnique', {\n                stars: formatStarsAsIcon(lang, gift.upgradeStars, { className: styles.switcherStarIcon }),\n              }, { withNodes: true })}\n            </span>\n            <Switcher\n              checked={shouldPayForUpgrade}\n              onChange={handleShouldPayForUpgradeChange}\n              label={lang('GiftMakeUniqueAcc')}\n            />\n          </ListItem>\n        )}\n        {isStarGift && Boolean(gift.upgradeStars) && !areUniqueStarGiftsDisallowed && (\n          <div className={styles.description}>\n            {isPeerUser\n              ? lang('GiftMakeUniqueDescription', {\n                user: title,\n                link: <Link isPrimary onClick={handleOpenUpgradePreview}>{lang('GiftMakeUniqueLink')}</Link>,\n              }, {\n                withNodes: true,\n              })\n              : lang('GiftMakeUniqueDescriptionChannel', {\n                peer: title,\n                link: <Link isPrimary onClick={handleOpenUpgradePreview}>{lang('GiftMakeUniqueLink')}</Link>,\n              }, {\n                withNodes: true,\n              })}\n          </div>\n        )}\n\n        {isStarGift && (\n          <ListItem className={styles.switcher} narrow ripple onClick={handleShouldHideNameChange}>\n            <span>{lang('GiftHideMyName')}</span>\n            <Switcher\n              checked={shouldHideName}\n              onChange={handleShouldHideNameChange}\n              label={lang('GiftHideMyName')}\n            />\n          </ListItem>\n        )}\n        {isStarGift && (\n          <div className={styles.description}>\n            {isSelf ? lang('GiftHideNameDescriptionSelf')\n              : isPeerUser ? lang('GiftHideNameDescription', { receiver: title })\n                : lang('GiftHideNameDescriptionChannel')}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderFooter() {\n    const amount = shouldPayByStars && hasPremiumByStars\n      ? formatStarsAsIcon(lang, giftByStars.amount, { asFont: true })\n      : isStarGift\n        ? formatStarsAsIcon(lang, gift.stars + (shouldPayForUpgrade ? gift.upgradeStars! : 0), { asFont: true })\n        : isPremiumGift ? formatCurrency(lang, gift.amount, gift.currency) : undefined;\n\n    return (\n      <div className={styles.footer}>\n        {isStarGift && Boolean(gift.availabilityRemains) && (\n          <PremiumProgress\n            isPrimary\n            progress={gift.availabilityRemains / gift.availabilityTotal!}\n            rightText={lang('GiftSoldCount', {\n              count: gift.availabilityTotal! - gift.availabilityRemains,\n            })}\n            leftText={lang('GiftLeftCount', { count: gift.availabilityRemains })}\n            className={styles.limited}\n          />\n        )}\n        <Button\n          className={styles.mainButton}\n          size=\"smaller\"\n          onClick={handleMainButtonClick}\n          isLoading={isPaymentFormLoading}\n        >\n          {lang('GiftSend', {\n            amount,\n          }, {\n            withNodes: true,\n          })}\n        </Button>\n      </div>\n    );\n  }\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  if ((!isStarGift && !isPremiumGift) || !localMessage) return;\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll')}>\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        <ActionMessage\n          key={isStarGift ? gift.id : isPremiumGift ? gift.months : undefined}\n          message={localMessage}\n          threadId={MAIN_THREAD_ID}\n          appearanceOrder={0}\n        />\n      </div>\n      {renderOptionsSection()}\n      <div className={styles.spacer} />\n      {renderFooter()}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const theme = selectTheme(global);\n    const {\n      stars,\n    } = global;\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = selectThemeValues(global, theme) || {};\n    const peer = selectPeer(global, peerId);\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n    const userFullInfo = selectUserFullInfo(global, peerId);\n    const currentUserId = global.currentUserId;\n    const isGiftForSelf = currentUserId === peerId;\n    const areUniqueStarGiftsDisallowed = !isGiftForSelf\n      && userFullInfo?.disallowedGifts?.shouldDisallowUniqueStarGifts;\n    const shouldDisallowLimitedStarGifts = !isGiftForSelf\n      && userFullInfo?.disallowedGifts?.shouldDisallowLimitedStarGifts;\n\n    const tabState = selectTabState(global);\n\n    return {\n      starBalance: stars?.balance,\n      peer,\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      captionLimit: global.appConfig?.starGiftMaxMessageLength,\n      currentUserId: global.currentUserId,\n      isPaymentFormLoading: tabState.isPaymentFormLoading,\n      paidMessagesStars,\n      areUniqueStarGiftsDisallowed,\n      shouldDisallowLimitedStarGifts,\n    };\n  },\n)(GiftComposer));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"G1mBmzxs\",\"starGift\":\"f5ArEO1S\",\"monthsDescription\":\"rn9aWFNA\",\"description\":\"q4_ydkAx\",\"buy\":\"a8no5WH0\",\"star\":\"DvJLTVFU\",\"amount\":\"sbo2dMcH\",\"starsPriceBlock\":\"QB5SI7ta\",\"starsPriceIcon\":\"jgnEfoeM\",\"radialPattern\":\"Nkotr8Q4\",\"stickerWrapper\":\"rUSoeQXb\"};","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n  ApiSticker,\n} from '../../../api/types';\n\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport GiftRibbon from '../../common/gift/GiftRibbon';\nimport Button from '../../ui/Button';\n\nimport styles from './GiftItem.module.scss';\n\nexport type OwnProps = {\n  option: ApiPremiumGiftCodeOption;\n  optionByStars?: ApiPremiumGiftCodeOption;\n  baseMonthAmount?: number;\n  onClick: (gift: ApiPremiumGiftCodeOption) => void;\n};\n\nexport type StateProps = {\n  sticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 86;\n\nfunction GiftItemPremium({\n  sticker, canPlayAnimatedEmojis, baseMonthAmount, option, optionByStars, onClick,\n}: OwnProps & StateProps) {\n  const {\n    months, amount, currency,\n  } = option;\n  const lang = useLang();\n\n  const handleGiftClick = useLastCallback(() => {\n    onClick(option);\n  });\n\n  const perMonth = Math.floor(amount / months);\n  const discount = baseMonthAmount && baseMonthAmount > perMonth\n    ? Math.ceil(100 - perMonth / (baseMonthAmount / 100))\n    : undefined;\n\n  function renderMonths() {\n    const caption = months === 12\n      ? lang('Years', { count: 1 }, { pluralValue: 1 })\n      : lang('Months', { count: months }, { pluralValue: months });\n    return (\n      <div className={styles.monthsDescription}>\n        {caption}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.container}\n      tabIndex={0}\n      role=\"button\"\n      onClick={handleGiftClick}\n    >\n      <AnimatedIconFromSticker\n        sticker={sticker}\n        play={canPlayAnimatedEmojis}\n        noLoop\n        nonInteractive\n        size={GIFT_STICKER_SIZE}\n      />\n\n      {renderMonths()}\n      <div className={styles.description}>\n        {lang('PremiumGiftDescription')}\n      </div>\n      <Button className={styles.buy} nonInteractive size=\"tiny\" pill fluid>\n        {formatCurrencyAsString(amount, currency)}\n      </Button>\n      {optionByStars && (\n        <div className={styles.starsPriceBlock}>\n          {lang('GiftPremiumStarsPrice', {\n            stars: (formatStarsAsIcon(lang, optionByStars.amount, { className: styles.starsPriceIcon })),\n          }, { withNodes: true, withMarkdown: true })}\n        </div>\n      )}\n      {Boolean(discount) && (\n        <GiftRibbon color=\"purple\" text={lang('GiftDiscount', { percent: discount })} />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { option }): StateProps => {\n    const sticker = selectGiftStickerForDuration(global, option.months);\n    const canPlayAnimatedEmojis = selectCanPlayAnimatedEmojis(global);\n\n    return {\n      sticker,\n      canPlayAnimatedEmojis,\n    };\n  },\n)(GiftItemPremium));\n","import { memo, useMemo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiStarGift,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { getStickerFromGift } from '../../common/helpers/gifts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport GiftRibbon from '../../common/gift/GiftRibbon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\n\nimport styles from './GiftItem.module.scss';\n\nexport type OwnProps = {\n  gift: ApiStarGift;\n  observeIntersection?: ObserveFn;\n  onClick: (gift: ApiStarGift, target: 'original' | 'resell') => void;\n  isResale?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 90;\n\nfunction GiftItemStar({\n  gift, observeIntersection, onClick, isResale,\n}: OwnProps) {\n  const { openGiftInfoModal } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const [isVisible, setIsVisible] = useState(false);\n\n  const sticker = getStickerFromGift(gift);\n  const isGiftUnique = gift.type === 'starGiftUnique';\n  const uniqueGift = isGiftUnique ? gift : undefined;\n  const regularGift = !isGiftUnique ? gift : undefined;\n\n  const stars = !isGiftUnique ? regularGift?.stars : uniqueGift?.resellPriceInStars;\n  const resellMinStars = regularGift?.resellMinStars;\n  const priceInStarsAsString = !isGiftUnique && isResale && resellMinStars\n    ? lang.number(resellMinStars) + '+' : stars;\n  const isLimited = !isGiftUnique && Boolean(regularGift?.isLimited);\n  const isSoldOut = !isGiftUnique && Boolean(regularGift?.isSoldOut);\n\n  const handleGiftClick = useLastCallback(() => {\n    if (isSoldOut && !isResale) {\n      openGiftInfoModal({ gift });\n      return;\n    }\n\n    onClick(gift, isResale ? 'resell' : 'original');\n  });\n\n  const radialPatternBackdrop = useMemo(() => {\n    const { backdrop, pattern } = getGiftAttributes(gift) || {};\n\n    if (!backdrop || !pattern) {\n      return undefined;\n    }\n\n    const backdropColors = [backdrop.centerColor, backdrop.edgeColor];\n    const patternColor = backdrop.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={pattern.sticker}\n      />\n    );\n  }, [gift]);\n\n  const giftNumber = isGiftUnique ? gift.number : 0;\n\n  const giftRibbon = useMemo(() => {\n    if (isGiftUnique) {\n      const { backdrop } = getGiftAttributes(gift) || {};\n      if (!backdrop) {\n        return undefined;\n      }\n      return (\n        <GiftRibbon\n          color={[backdrop.centerColor, backdrop.edgeColor]}\n          text={\n            lang('GiftSavedNumber', { number: giftNumber })\n          }\n        />\n      );\n    }\n    if (isResale) {\n      return <GiftRibbon color=\"green\" text={lang('GiftRibbonResale')} />;\n    }\n    if (isSoldOut) {\n      return <GiftRibbon color=\"red\" text={lang('GiftSoldOut')} />;\n    }\n    if (isLimited) {\n      return <GiftRibbon color=\"blue\" text={lang('GiftLimited')} />;\n    }\n    return undefined;\n  }, [isGiftUnique, isResale, gift, isSoldOut, isLimited, lang, giftNumber]);\n\n  useOnIntersect(ref, observeIntersection, (entry) => {\n    const visible = entry.isIntersecting;\n    setIsVisible(visible);\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.container, styles.starGift, 'starGiftItem')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={handleGiftClick}\n    >\n      {radialPatternBackdrop}\n\n      <div\n        ref={stickerRef}\n        className={styles.stickerWrapper}\n        style={`width: ${GIFT_STICKER_SIZE}px; height: ${GIFT_STICKER_SIZE}px`}\n      >\n        {sticker && (\n          <StickerView\n            observeIntersectionForPlaying={observeIntersection}\n            observeIntersectionForLoading={observeIntersection}\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={GIFT_STICKER_SIZE}\n            shouldPreloadPreview\n          />\n        )}\n\n      </div>\n      <Button\n        className={styles.buy}\n        nonInteractive\n        size=\"tiny\"\n        color={isGiftUnique ? 'bluredStarsBadge' : 'stars'}\n        withSparkleEffect={isVisible}\n        pill\n        fluid\n      >\n        {formatStarsAsIcon(lang, priceInStarsAsString || 0, { asFont: true, className: styles.star })}\n      </Button>\n      {giftRibbon}\n    </div>\n  );\n}\n\nexport default memo(GiftItemStar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tJK1W0pJ\",\"transition\":\"pP8TxefR\",\"content\":\"o3V1HqbL\",\"resaleScreenRoot\":\"Vce_TsJO\",\"main\":\"cVXqeu9P\",\"giftSection\":\"v4eKefwN\",\"section\":\"EqfarEYb\",\"resaleStarGiftsContainer\":\"RSFcSNGL\",\"starGiftsContainer\":\"OQX3GZl5\",\"premiumGiftsGallery\":\"n40m3BK2\",\"header\":\"iqqoyRgW\",\"resaleHeader\":\"cJRBgg9B\",\"resaleHeaderContentContainer\":\"OXYQmfGK\",\"headerSlide\":\"BTWhJUQB\",\"headerText\":\"lLRmbpIu\",\"hiddenHeader\":\"XgGzn1cQ\",\"resaleHeaderText\":\"bp_KPx8I\",\"commonHeaderText\":\"ybZo03if\",\"resaleHeaderDescription\":\"XefHUFm1\",\"closeButton\":\"r_Y5uG1T\",\"balance\":\"soqAknia\",\"avatars\":\"N_7tYJKr\",\"logoBackground\":\"ieK4TzSb\",\"center\":\"Ey5gX40t\",\"description\":\"ZioU5h_k\",\"starGiftsDescription\":\"gFgzS8pV\",\"boostIcon\":\"Qi2YR6Dz\",\"optionBottom\":\"RTbClMKE\",\"secondaryInfo\":\"g0R9GSNq\",\"footer\":\"J3Gju3bv\",\"starGiftsTransition\":\"kB6IyXqS\",\"notFoundGiftsRoot\":\"UqnRlJ1n\",\"notFoundGiftsDescription\":\"g0VbwIG_\",\"notFoundGiftsLink\":\"j2zPEQr8\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo,\n  useMemo,\n  useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarGift,\n} from '../../../api/types';\nimport type { ResaleGiftsFilterOptions } from '../../../types';\n\nimport { RESALE_GIFTS_LIMIT } from '../../../config';\nimport { selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Transition from '../../ui/Transition';\nimport GiftItemStar from './GiftItemStar';\n\nimport styles from './GiftModal.module.scss';\n\nexport type OwnProps = {\n  onGiftClick: (gift: ApiStarGift) => void;\n};\n\ntype StateProps = {\n  gift?: ApiStarGift;\n  resellGifts?: ApiStarGift[];\n  filter: ResaleGiftsFilterOptions;\n  areGiftsAllLoaded?: boolean;\n  areGiftsLoading?: boolean;\n  updateIteration: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst GiftModalResaleScreen: FC<OwnProps & StateProps> = ({\n  resellGifts,\n  gift,\n  filter,\n  areGiftsAllLoaded,\n  areGiftsLoading,\n  updateIteration,\n  onGiftClick,\n}) => {\n  const {\n    loadResaleGifts,\n    updateResaleGiftsFilter,\n  } = getActions();\n  const scrollerRef = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const resellGiftsIds = useMemo(() => {\n    return resellGifts?.map((g) => g.id);\n  }, [resellGifts]);\n\n  const hasFilter = Boolean(filter?.modelAttributes?.length\n    || filter?.patternAttributes?.length || filter?.backdropAttributes?.length);\n\n  const handleLoadMoreResellGifts = useLastCallback(() => {\n    if (gift) {\n      loadResaleGifts({ giftId: gift.id });\n    }\n  });\n\n  const isGiftsEmpty = Boolean(!resellGifts || resellGifts.length === 0);\n\n  const [viewportIds, onLoadMore] = useInfiniteScroll(\n    handleLoadMoreResellGifts,\n    resellGiftsIds,\n    !gift,\n    RESALE_GIFTS_LIMIT,\n  );\n\n  const { observe } = useIntersectionObserver({ rootRef: scrollerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  const handleResetGiftsFilter = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: [],\n      backdropAttributes: [],\n      patternAttributes: [],\n    } });\n  });\n\n  function renderNothingFoundGiftsWithFilter() {\n    return (\n      <div className={styles.notFoundGiftsRoot}>\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.SearchingDuck}\n          nonInteractive\n          noLoop\n        />\n        <div className={styles.notFoundGiftsDescription}>\n          {lang('ResellGiftsNoFound')}\n        </div>\n        {hasFilter && (\n          <Link\n            className={styles.notFoundGiftsLink}\n            onClick={handleResetGiftsFilter}\n          >\n            {lang('ResellGiftsClearFilters')}\n          </Link>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div ref={scrollerRef} className={buildClassName(styles.resaleScreenRoot, 'custom-scroll')}>\n      <Transition\n        name=\"zoomFade\"\n        activeKey={updateIteration}\n      >\n        {isGiftsEmpty && areGiftsAllLoaded && renderNothingFoundGiftsWithFilter()}\n        <InfiniteScroll\n          className={buildClassName(styles.resaleStarGiftsContainer)}\n          items={viewportIds}\n          onLoadMore={onLoadMore}\n          itemSelector=\".starGiftItem\"\n          noFastList\n          preloadBackwards={RESALE_GIFTS_LIMIT}\n          scrollContainerClosest={`.${styles.resaleScreenRoot}`}\n        >\n          {resellGifts?.map((gift) => (\n            <GiftItemStar\n              key={gift.id}\n              gift={gift}\n              observeIntersection={observe}\n              isResale\n              onClick={onGiftClick}\n            />\n          ))}\n        </InfiniteScroll>\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    starGifts,\n  } = global;\n\n  const { resaleGifts } = selectTabState(global);\n  const gift = resaleGifts?.giftId ? starGifts?.byId[resaleGifts.giftId] : undefined;\n  const filter = resaleGifts.filter;\n  const areGiftsAllLoaded = resaleGifts.isAllLoaded;\n  const areGiftsLoading = resaleGifts.isLoading;\n  const updateIteration = resaleGifts.updateIteration;\n\n  return {\n    resellGifts: resaleGifts.gifts,\n    gift,\n    filter,\n    areGiftsAllLoaded,\n    areGiftsLoading,\n    updateIteration,\n  };\n})(GiftModalResaleScreen));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"KLFLR9ji\",\"thumb\":\"fCL5rY2D\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport StickerView from '../../common/StickerView';\n\nimport styles from './ResaleGiftMenuAttributeSticker.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  type: 'model' | 'pattern';\n  sticker: ApiSticker;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst ATTRIBUTE_STICKER_SIZE = 1.5 * REM;\n\nconst ResaleGiftMenuAttributeSticker: FC<StateProps & OwnProps> = ({\n  className,\n  type,\n  sticker,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  theme,\n}) => {\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const customColor = useDynamicColorListener(stickerRef, undefined, type !== 'pattern');\n\n  return (\n    <div\n      ref={stickerRef}\n      className={buildClassName(styles.root, className)}\n      style={`width: ${ATTRIBUTE_STICKER_SIZE}px; height: ${ATTRIBUTE_STICKER_SIZE}px`}\n    >\n      <StickerView\n        containerRef={stickerRef}\n        sticker={sticker}\n        size={ATTRIBUTE_STICKER_SIZE}\n        shouldPreloadPreview\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        thumbClassName={styles.thumb}\n        customColor={customColor}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    theme: selectTheme(global),\n  };\n})(ResaleGiftMenuAttributeSticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_VgmQnUg\",\"buttonsContainer\":\"IDlp6U6g\",\"itemIcon\":\"yuctLnuR\",\"sticker\":\"VT562JS0\",\"backdropAttributeMenuItemText\":\"D50wFfRL\",\"menuItemStickerText\":\"THcGWXSA\",\"menuItemText\":\"L6EVE2Ux\",\"backdrop\":\"A29QNxKb\",\"menuItemIcon\":\"GL4rVsev\",\"item\":\"qiYcBOYc\",\"menuContentContainer\":\"EDsBn29z\",\"menu\":\"ISaNdBwd\",\"left\":\"e4Kkh_MR\",\"right\":\"Kz_nCGC3\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { ElementRef, FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useMemo,\n  useRef,\n  useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeCounter,\n  ApiStarGiftAttributeIdBackdrop,\n  ApiStarGiftAttributeIdPattern,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributePattern,\n  StarGiftAttributeIdModel,\n} from '../../../api/types';\nimport type { ResaleGiftsFilterOptions, ResaleGiftsSortType } from '../../../types';\n\nimport { selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport SearchInput from '../../ui/SearchInput';\nimport ResaleGiftMenuAttributeSticker from './ResaleGiftMenuAttributeSticker';\n\nimport styles from './GiftResaleFilters.module.scss';\n\ntype OwnProps = {\n  dialogRef: ElementRef<HTMLDivElement>;\n};\ntype StateProps = {\n  filter: ResaleGiftsFilterOptions;\n  attributes?: ApiStarGiftAttribute[];\n  counters?: ApiStarGiftAttributeCounter[];\n};\n\nconst GiftResaleFilters: FC<StateProps & OwnProps> = ({\n  attributes,\n  counters,\n  filter,\n  dialogRef,\n}) => {\n  const lang = useLang();\n  const {\n    updateResaleGiftsFilter,\n  } = getActions();\n\n  const [searchModelQuery, setSearchModelQuery] = useState('');\n  const [searchBackdropQuery, setSearchBackdropQuery] = useState('');\n  const [searchPatternQuery, setSearchPatternQuery] = useState('');\n  const filteredAttributes = useMemo(() => {\n    const map: {\n      model: ApiStarGiftAttributeModel[];\n      pattern: ApiStarGiftAttributePattern[];\n      backdrop: ApiStarGiftAttributeBackdrop[];\n    } = {\n      model: [],\n      pattern: [],\n      backdrop: [],\n    };\n\n    for (const counter of counters ?? []) {\n      const { attribute } = counter;\n\n      if (!counter.count) {\n        continue;\n      }\n\n      const found = attributes?.find((attr) => {\n        if (attr.type === 'backdrop' && attribute.type === 'backdrop') {\n          return attr.backdropId === attribute.backdropId;\n        }\n\n        if (attr.type === 'model' && attribute.type === 'model') {\n          return attr.sticker.id === attribute.documentId;\n        }\n\n        if (attr.type === 'pattern' && attribute.type === 'pattern') {\n          return attr.sticker.id === attribute.documentId;\n        }\n\n        return false;\n      });\n\n      if (found?.type === 'backdrop') {\n        map.backdrop.push(found);\n      }\n      if (found?.type === 'model') {\n        map.model.push(found);\n      }\n      if (found?.type === 'pattern') {\n        map.pattern.push(found);\n      }\n    }\n\n    return map;\n  }, [attributes, counters]);\n\n  const filteredAndSearchedAttributes = useMemo(() => {\n    const filterBySearch = <T extends { name?: string }>(items: T[], query: string): T[] => {\n      if (!query.trim()) return items;\n\n      return items.filter(\n        (item): item is T => Boolean(item.name?.toLowerCase().includes(query.toLowerCase())),\n      );\n    };\n\n    return {\n      model: filterBySearch(filteredAttributes.model, searchModelQuery),\n      pattern: filterBySearch(filteredAttributes.pattern, searchPatternQuery),\n      backdrop: filterBySearch(filteredAttributes.backdrop, searchBackdropQuery),\n    };\n  }, [filteredAttributes, searchModelQuery, searchBackdropQuery, searchPatternQuery]);\n\n  // Sort Menu\n  const sortMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isSortContextMenuOpen,\n    contextMenuAnchor: sortContextMenuAnchor,\n    handleContextMenu: handleSortContextMenu,\n    handleContextMenuClose: handleSortContextMenuClose,\n    handleContextMenuHide: handleSortContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getSortMenuElement = useLastCallback(() => sortMenuRef.current!);\n\n  // Model Menu\n  const modelMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isModelContextMenuOpen,\n    contextMenuAnchor: modelContextMenuAnchor,\n    handleContextMenu: handleModelContextMenu,\n    handleContextMenuClose: handleModelContextMenuClose,\n    handleContextMenuHide: handleModelContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getModelMenuElement = useLastCallback(\n    () => modelMenuRef.current!,\n  );\n\n  // Backdrop Menu\n  const backdropMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isBackdropContextMenuOpen,\n    contextMenuAnchor: backdropContextMenuAnchor,\n    handleContextMenu: handleBackdropContextMenu,\n    handleContextMenuClose: handleBackdropContextMenuClose,\n    handleContextMenuHide: handleBackdropContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getBackdropMenuElement = useLastCallback(() => backdropMenuRef.current!);\n\n  // Pattern Menu\n  const patternMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isPatternContextMenuOpen,\n    contextMenuAnchor: patternContextMenuAnchor,\n    handleContextMenu: handlePatternContextMenu,\n    handleContextMenuClose: handlePatternContextMenuClose,\n    handleContextMenuHide: handlePatternContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getPatternMenuElement = useLastCallback(() => patternMenuRef.current!);\n\n  const SortMenuButton: FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const sortType = filter.sortType;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {sortType === 'byDate' && lang('ValueGiftSortByDate')}\n         {sortType === 'byNumber' && lang('ValueGiftSortByNumber')}\n         {sortType === 'byPrice' && lang('ValueGiftSortByPrice')}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n\n  const ModelMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const attributesCount = filter?.modelAttributes?.length || 0;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {attributesCount === 0 && lang('GiftAttributeModel')}\n         {attributesCount > 0\n           && lang('GiftAttributeModelPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n  const BackdropMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const attributesCount = filter?.backdropAttributes?.length || 0;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {attributesCount === 0 && lang('GiftAttributeBackdrop')}\n         {attributesCount > 0\n           && lang('GiftAttributeBackdropPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n  const PatternMenuButton: FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n  = useMemo(() => {\n    const attributesCount = filter?.patternAttributes?.length || 0;\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <div\n        className={styles.item}\n        onClick={onTrigger}\n      >\n        {attributesCount === 0 && lang('GiftAttributeSymbol')}\n        {attributesCount > 0\n          && lang('GiftAttributeSymbolPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n        <Icon\n          name=\"dropdown-arrows\"\n          className={styles.itemIcon}\n        />\n      </div>\n    );\n  }, [lang, filter]);\n\n  const handleSortMenuItemClick = useLastCallback((type: ResaleGiftsSortType) => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      sortType: type,\n    } });\n  });\n\n  const handleSelectedAllModelsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: [],\n    } });\n  });\n  const handleSelectedAllPatternsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      patternAttributes: [],\n    } });\n  });\n  const handleSelectedAllBackdropsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      backdropAttributes: [],\n    } });\n  });\n\n  const handleModelMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributeModel) => {\n    if (!counters) return;\n    const attributes = filter.modelAttributes || [];\n    const modelAttribute\n      = counters.find((counter): counter is ApiStarGiftAttributeCounter<StarGiftAttributeIdModel> =>\n        counter.attribute.type === 'model' && counter.attribute.documentId === attribute.sticker.id,\n      )?.attribute;\n\n    if (!modelAttribute) return;\n\n    const isActive = attributes.some((item) => item.documentId === modelAttribute.documentId);\n    const updatedAttributes = isActive\n      ? attributes.filter((item) => item.documentId !== modelAttribute.documentId)\n      : [...attributes, modelAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: updatedAttributes,\n    } });\n  });\n\n  const handlePatternMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributePattern) => {\n    if (!counters) return;\n    const attributes = filter.patternAttributes || [];\n    const patternAttribute = counters.find(\n      (counter): counter is ApiStarGiftAttributeCounter<ApiStarGiftAttributeIdPattern> =>\n        counter.attribute.type === 'pattern' && counter.attribute.documentId === attribute.sticker.id,\n    )?.attribute;\n\n    if (!patternAttribute) return;\n\n    const isActive = attributes.some((item) => item.documentId === patternAttribute.documentId);\n    const updatedAttributes = isActive\n      ? attributes.filter((item) => item.documentId !== patternAttribute.documentId)\n      : [...attributes, patternAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      patternAttributes: updatedAttributes,\n    } });\n  });\n\n  const handleBackdropMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributeBackdrop) => {\n    if (!counters) return;\n    const attributes = filter.backdropAttributes || [];\n    const backdropAttribute = counters.find(\n      (counter): counter is ApiStarGiftAttributeCounter<ApiStarGiftAttributeIdBackdrop> =>\n        counter.attribute.type === 'backdrop' && counter.attribute.backdropId === attribute.backdropId,\n    )?.attribute;\n\n    if (!backdropAttribute) return;\n\n    const isActive = attributes.some((item) => item.backdropId === backdropAttribute.backdropId);\n    const updatedAttributes = isActive\n      ? attributes.filter((item) => item.backdropId !== backdropAttribute.backdropId)\n      : [...attributes, backdropAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      backdropAttributes: updatedAttributes,\n    } });\n  });\n\n  function renderSortMenuItems() {\n    return (\n      <>\n        <MenuItem icon=\"sort-by-price\" onClick={() => { handleSortMenuItemClick('byPrice'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByPrice')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byPrice' ? 'check' : 'placeholder'}\n          />\n        </MenuItem>\n        <MenuItem icon=\"sort-by-date\" onClick={() => { handleSortMenuItemClick('byDate'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByDate')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byDate' ? 'check' : 'placeholder'}\n          />\n\n        </MenuItem>\n        <MenuItem icon=\"sort-by-number\"onClick={() => { handleSortMenuItemClick('byNumber'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByNumber')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byNumber' ? 'check' : 'placeholder'}\n          />\n        </MenuItem>\n      </>\n    );\n  }\n\n  function renderSortMenu() {\n    return (\n      <Menu\n        isOpen={isSortContextMenuOpen}\n        anchor={sortContextMenuAnchor}\n        ref={sortMenuRef}\n        className={buildClassName(\n          styles.menu,\n          styles.left,\n          'with-menu-transitions',\n        )}\n        getMenuElement={getSortMenuElement}\n        autoClose\n        onClose={handleSortContextMenuClose}\n        onCloseAnimationEnd={handleSortContextMenuHide}\n        positionX=\"left\"\n      >\n        {renderSortMenuItems()}\n      </Menu>\n    );\n  }\n\n  const handleSearchModelInputReset = useCallback(() => {\n    setSearchModelQuery('');\n  }, []);\n  const handleSearchBackdropInputReset = useCallback(() => {\n    setSearchBackdropQuery('');\n  }, []);\n  const handleSearchPatternInputReset = useCallback(() => {\n    setSearchPatternQuery('');\n  }, []);\n  const handleSearchInputClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n  });\n\n  const modelMenuItemsContainerRef = useRef<HTMLDivElement>();\n  const { observe } = useIntersectionObserver({\n    rootRef: modelMenuItemsContainerRef,\n    isDisabled: !modelContextMenuAnchor,\n  });\n\n  function renderModelMenuItems() {\n    const models = filteredAndSearchedAttributes.model;\n    const selectedAttributes = filter.modelAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n    return (\n      <div className={styles.menuContentContainer} ref={modelMenuItemsContainerRef}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchModelQuery}\n          onChange={setSearchModelQuery}\n          onReset={handleSearchModelInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllModelsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {models.map((model) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.documentId === model.sticker.id);\n          return (\n            <MenuItem\n              key={model.name}\n              onClick={() => {\n                handleModelMenuItemClick(model);\n              }}\n            >\n              <ResaleGiftMenuAttributeSticker\n                className={styles.sticker}\n                sticker={model.sticker}\n                type=\"model\"\n                observeIntersectionForLoading={observe}\n                observeIntersectionForPlaying={observe}\n              />\n              <div className={styles.menuItemStickerText}>\n                {model.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderModelMenu() {\n    return (\n      <Menu\n        isOpen={isModelContextMenuOpen}\n        anchor={modelContextMenuAnchor}\n        ref={modelMenuRef}\n        className={buildClassName(\n          styles.menu,\n          styles.left,\n          'with-menu-transitions',\n        )}\n        getMenuElement={getModelMenuElement}\n        autoClose\n        onClose={handleModelContextMenuClose}\n        onCloseAnimationEnd={handleModelContextMenuHide}\n      >\n        {renderModelMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderBackdropMenuItems() {\n    const backdrops = filteredAndSearchedAttributes.backdrop;\n    const selectedAttributes = filter.backdropAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n\n    return (\n      <div className={styles.menuContentContainer}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchBackdropQuery}\n          onChange={setSearchBackdropQuery}\n          onReset={handleSearchBackdropInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllBackdropsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {backdrops.map((backdrop) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.backdropId === backdrop.backdropId);\n\n          return (\n            <MenuItem\n              key={backdrop.name}\n              onClick={() => {\n                handleBackdropMenuItemClick(backdrop);\n              }}\n            >\n              <RadialPatternBackground\n                className={styles.backdrop}\n                backgroundColors={[backdrop.centerColor, backdrop.edgeColor]}\n                patternColor={backdrop.patternColor}\n              />\n              <div className={styles.backdropAttributeMenuItemText}>\n                {backdrop.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderBackdropMenu() {\n    return (\n      <Menu\n        isOpen={isBackdropContextMenuOpen}\n        anchor={backdropContextMenuAnchor}\n        ref={backdropMenuRef}\n        className={buildClassName(styles.menu, styles.right, 'with-menu-transitions')}\n        getMenuElement={getBackdropMenuElement}\n        autoClose\n        onClose={handleBackdropContextMenuClose}\n        onCloseAnimationEnd={handleBackdropContextMenuHide}\n        positionX=\"right\"\n      >\n        {renderBackdropMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderPatternMenuItems() {\n    const patterns = filteredAndSearchedAttributes.pattern;\n    const selectedAttributes = filter.patternAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n\n    return (\n      <div className={styles.menuContentContainer}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchPatternQuery}\n          onChange={setSearchPatternQuery}\n          onReset={handleSearchPatternInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllPatternsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {patterns.map((pattern) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.documentId === pattern.sticker.id);\n\n          return (\n            <MenuItem\n              key={pattern.name}\n              onClick={() => {\n                handlePatternMenuItemClick(pattern);\n              }}\n            >\n\n              <ResaleGiftMenuAttributeSticker\n                className={styles.sticker}\n                sticker={pattern.sticker}\n                type=\"pattern\"\n              />\n\n              <div className={styles.menuItemStickerText}>\n                {pattern.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderPatternMenu() {\n    return (\n      <Menu\n        isOpen={isPatternContextMenuOpen}\n        anchor={patternContextMenuAnchor}\n        ref={patternMenuRef}\n        className={buildClassName(styles.menu, styles.right, 'with-menu-transitions')}\n        getMenuElement={getPatternMenuElement}\n        autoClose\n        onClose={handlePatternContextMenuClose}\n        onCloseAnimationEnd={handlePatternContextMenuHide}\n      >\n        {renderPatternMenuItems()}\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      {Boolean(sortContextMenuAnchor) && renderSortMenu()}\n      {Boolean(modelContextMenuAnchor) && renderModelMenu()}\n      {Boolean(backdropContextMenuAnchor) && renderBackdropMenu()}\n      {Boolean(patternContextMenuAnchor) && renderPatternMenu()}\n      <div className={styles.buttonsContainer}>\n        <SortMenuButton\n          onTrigger={handleSortContextMenu}\n          isOpen={isSortContextMenuOpen}\n        />\n        <ModelMenuButton\n          onTrigger={handleModelContextMenu}\n          isOpen={isModelContextMenuOpen}\n        />\n        <BackdropMenuButton\n          onTrigger={handleBackdropContextMenu}\n          isOpen={isBackdropContextMenuOpen}\n        />\n        <PatternMenuButton\n          onTrigger={handlePatternContextMenu}\n          isOpen={isPatternContextMenuOpen}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const { resaleGifts } = selectTabState(global);\n\n  const attributes = resaleGifts.attributes;\n  const counters = resaleGifts.counters;\n  const filter = resaleGifts.filter;\n\n  return {\n    attributes,\n    counters,\n    filter,\n  };\n})(GiftResaleFilters));\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cUjwvN00\",\"item-selected\":\"medfcJpd\",\"itemSelected\":\"medfcJpd\",\"item\":\"dO7FKYY4\",\"selected-item\":\"B2lEJk1v\",\"selectedItem\":\"B2lEJk1v\",\"star\":\"Pb7AU805\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { StarGiftCategory } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarGiftCategoryList.module.scss';\n\ntype OwnProps = {\n  onCategoryChanged: (category: StarGiftCategory) => void;\n};\n\ntype StateProps = {\n  idsByCategory?: Record<StarGiftCategory, string[]>;\n  areLimitedStarGiftsDisallowed?: boolean;\n};\n\nconst StarGiftCategoryList = ({\n  idsByCategory,\n  onCategoryChanged,\n  areLimitedStarGiftsDisallowed,\n}: StateProps & OwnProps) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const starCategories: number[] | undefined = useMemo(() => idsByCategory && Object.keys(idsByCategory)\n    .filter((category) => category !== 'all' && category !== 'limited')\n    .map(Number)\n    .sort((a, b) => a - b),\n  [idsByCategory]);\n\n  const hasResale = idsByCategory && idsByCategory['resale'].length > 0;\n\n  const [selectedCategory, setSelectedCategory] = useState<StarGiftCategory>('all');\n\n  function handleItemClick(category: StarGiftCategory) {\n    setSelectedCategory(category);\n    onCategoryChanged(\n      category,\n    );\n  }\n\n  function renderCategoryName(category: StarGiftCategory) {\n    if (category === 'all') return lang('AllGiftsCategory');\n    if (category === 'stock') return lang('StockGiftsCategory');\n    if (category === 'limited') return lang('LimitedGiftsCategory');\n    if (category === 'resale') return lang('GiftCategoryResale');\n    return category;\n  }\n\n  function renderCategoryItem(category: StarGiftCategory) {\n    return (\n      <div\n        className={buildClassName(\n          styles.item,\n          selectedCategory === category && styles.selectedItem,\n        )}\n        onClick={() => handleItemClick(category)}\n      >\n        {Number.isInteger(category) && (\n          <StarIcon\n            className={styles.star}\n            type=\"gold\"\n            size=\"middle\"\n          />\n        )}\n        {renderCategoryName(category)}\n      </div>\n    );\n  }\n\n  useHorizontalScroll(ref, undefined, true);\n\n  return (\n    <div ref={ref} className={buildClassName(styles.list, 'no-scrollbar')}>\n      {renderCategoryItem('all')}\n      {!areLimitedStarGiftsDisallowed && renderCategoryItem('limited')}\n      {!areLimitedStarGiftsDisallowed && hasResale && renderCategoryItem('resale')}\n      {renderCategoryItem('stock')}\n      {starCategories?.map(renderCategoryItem)}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { starGifts } = global;\n\n    return {\n      idsByCategory: starGifts?.idsByCategory,\n    };\n  },\n)(StarGiftCategoryList));\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiDisallowedGifts,\n  ApiPeer,\n  ApiPremiumGiftCodeOption,\n  ApiStarGift,\n  ApiStarGiftRegular,\n  ApiStarsAmount,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { StarGiftCategory } from '../../../types';\n\nimport { STARS_CURRENCY_CODE } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport { getPeerTitle, isApiPeerChat, isApiPeerUser } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { selectPeer, selectUserFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from '../stars/BalanceBlock';\nimport GiftSendingOptions from './GiftComposer';\nimport GiftItemPremium from './GiftItemPremium';\nimport GiftItemStar from './GiftItemStar';\nimport GiftModalResaleScreen from './GiftModalResaleScreen';\nimport GiftResaleFilters from './GiftResaleFilters';\nimport StarGiftCategoryList from './StarGiftCategoryList';\n\nimport styles from './GiftModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['giftModal'];\n};\n\nexport type GiftOption = ApiPremiumGiftCodeOption | ApiStarGift;\n\ntype StateProps = {\n  boostPerSentGift?: number;\n  starGiftsById?: Record<string, ApiStarGiftRegular>;\n  starGiftIdsByCategory?: Record<StarGiftCategory, string[]>;\n  starBalance?: ApiStarsAmount;\n  peer?: ApiPeer;\n  isSelf?: boolean;\n  disallowedGifts?: ApiDisallowedGifts;\n  resaleGiftsCount?: number;\n  areResaleGiftsLoading?: boolean;\n};\n\nconst AVATAR_SIZE = 100;\nconst INTERSECTION_THROTTLE = 200;\nconst SCROLL_THROTTLE = 200;\n\nconst runThrottledForScroll = throttle((cb) => cb(), SCROLL_THROTTLE, true);\n\nconst GiftModal: FC<OwnProps & StateProps> = ({\n  modal,\n  starGiftsById,\n  starGiftIdsByCategory,\n  starBalance,\n  peer,\n  isSelf,\n  disallowedGifts,\n  resaleGiftsCount,\n  areResaleGiftsLoading,\n}) => {\n  const {\n    closeGiftModal, openGiftInfoModal, resetResaleGifts, loadResaleGifts,\n  } = getActions();\n  const dialogRef = useRef<HTMLDivElement>();\n  const transitionRef = useRef<HTMLDivElement>();\n  const giftHeaderRef = useRef<HTMLHeadingElement>();\n\n  const scrollerRef = useRef<HTMLDivElement>();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const user = peer && isApiPeerUser(peer) ? peer : undefined;\n  const chat = peer && isApiPeerChat(peer) ? peer : undefined;\n\n  const [selectedGift, setSelectedGift] = useState<GiftOption | undefined>();\n  const [selectedResellGift, setSelectedResellGift] = useState<ApiStarGift | undefined>();\n  const [shouldShowMainScreenHeader, setShouldShowMainScreenHeader] = useState(false);\n  const [isMainScreenHeaderForStarGifts, setIsMainScreenHeaderForStarGifts] = useState(false);\n  const [isGiftScreenHeaderForStarGifts, setIsGiftScreenHeaderForStarGifts] = useState(false);\n\n  const [selectedCategory, setSelectedCategory] = useState<StarGiftCategory>('all');\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    const {\n      shouldDisallowPremiumGifts,\n      ...disallowedGiftTypes\n    } = disallowedGifts;\n    return !isSelf && Object.values(disallowedGiftTypes).every(Boolean);\n  }, [isSelf, disallowedGifts]);\n\n  const areUnlimitedStarGiftsDisallowed = !isSelf && disallowedGifts?.shouldDisallowUnlimitedStarGifts;\n  const areLimitedStarGiftsDisallowed = !isSelf && disallowedGifts?.shouldDisallowLimitedStarGifts;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const allGifts = renderingModal?.gifts;\n  const filteredGifts = useMemo(() => {\n    return allGifts?.sort((prevGift, gift) => prevGift.months - gift.months)\n      .filter((gift) => gift.users === 1 && gift.currency !== 'XTR');\n  }, [allGifts]);\n\n  const giftsByStars = useMemo(() => {\n    const mapGifts = new Map();\n\n    if (!filteredGifts) return mapGifts;\n\n    filteredGifts.forEach((gift) => {\n      const giftByStars = allGifts?.find(\n        (starsGift) => starsGift.currency === STARS_CURRENCY_CODE\n          && starsGift.months === gift.months,\n      );\n      if (giftByStars) {\n        mapGifts.set(gift, giftByStars);\n      }\n    });\n\n    return mapGifts;\n  }, [allGifts, filteredGifts]);\n\n  const baseGift = useMemo(() => {\n    return filteredGifts?.reduce((prev, gift) => (prev.amount < gift.amount ? prev : gift));\n  }, [filteredGifts]);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: scrollerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const isResaleScreen = Boolean(selectedResellGift) && !selectedGift;\n  const isGiftScreen = Boolean(selectedGift);\n  const shouldShowHeader = isResaleScreen || isGiftScreen || shouldShowMainScreenHeader;\n  const isHeaderForStarGifts = isGiftScreen ? isGiftScreenHeaderForStarGifts : isMainScreenHeaderForStarGifts;\n\n  useEffect(() => {\n    if (selectedResellGift) {\n      loadResaleGifts({ giftId: selectedResellGift.id });\n    }\n  }, [selectedResellGift]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setShouldShowMainScreenHeader(false);\n      setSelectedGift(undefined);\n      setSelectedResellGift(undefined);\n      setSelectedCategory('all');\n    }\n  }, [isOpen]);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLDivElement>) => {\n    if (isGiftScreen) return;\n    const currentTarget = e.currentTarget;\n\n    runThrottledForScroll(() => {\n      const { scrollTop } = currentTarget;\n\n      setShouldShowMainScreenHeader(scrollTop > 150);\n\n      if (transitionRef.current && giftHeaderRef.current) {\n        const { top: headerTop } = giftHeaderRef.current.getBoundingClientRect();\n        const { top: transitionTop } = transitionRef.current.getBoundingClientRect();\n        setIsMainScreenHeaderForStarGifts(headerTop - transitionTop <= 0);\n      }\n    });\n  });\n\n  const giftPremiumDescription = lang('GiftPremiumDescription', {\n    user: getUserFullName(user)!,\n    link: (\n      <SafeLink\n        text={lang('GiftPremiumDescriptionLinkCaption')}\n        url={lang('GiftPremiumDescriptionLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const starGiftDescription = chat\n    ? lang('StarGiftDescriptionChannel', { peer: getPeerTitle(lang, chat) }, {\n      withNodes: true,\n      withMarkdown: true,\n    })\n    : isSelf\n      ? lang('StarGiftDescriptionSelf', undefined, {\n        withNodes: true,\n        renderTextFilters: ['br'],\n      })\n      : lang('StarGiftDescription', {\n        user: getUserFullName(user)!,\n      }, { withNodes: true, withMarkdown: true });\n\n  function renderGiftPremiumHeader() {\n    return (\n      <h2 className={buildClassName(styles.headerText, styles.center)}>\n        {lang('GiftPremiumHeader')}\n      </h2>\n    );\n  }\n\n  function renderGiftPremiumDescription() {\n    return (\n      <p className={buildClassName(styles.description, styles.center)}>\n        {giftPremiumDescription}\n      </p>\n    );\n  }\n\n  function renderStarGiftsHeader() {\n    return (\n      <h2 ref={giftHeaderRef} className={buildClassName(styles.headerText, styles.center)}>\n        {lang(isSelf ? 'StarsGiftHeaderSelf' : 'StarsGiftHeader')}\n      </h2>\n    );\n  }\n\n  function renderStarGiftsDescription() {\n    return (\n      <p className={buildClassName(styles.description, styles.starGiftsDescription, styles.center)}>\n        {starGiftDescription}\n      </p>\n    );\n  }\n\n  const handleGiftClick = useLastCallback((gift: GiftOption, target?: 'resell' | 'original') => {\n    if (target === 'resell') {\n      if (!('id' in gift)) {\n        return;\n      }\n      if (isResaleScreen) {\n        openGiftInfoModal({ gift, recipientId: renderingModal?.forPeerId });\n        return;\n      }\n      setSelectedResellGift(gift);\n      return;\n    }\n    setSelectedGift(gift);\n    setIsGiftScreenHeaderForStarGifts('id' in gift);\n  });\n\n  function renderStarGifts() {\n    const filteredGiftIds = starGiftIdsByCategory?.[selectedCategory]?.filter((giftId) => {\n      const gift = starGiftsById?.[giftId];\n      if (!gift) return false;\n\n      const { isLimited, isSoldOut, upgradeStars } = gift;\n      if (areUnlimitedStarGiftsDisallowed && !areLimitedStarGiftsDisallowed) {\n        return isLimited;\n      }\n      if (areLimitedStarGiftsDisallowed && !areUnlimitedStarGiftsDisallowed) {\n        return !isLimited && !isSoldOut;\n      }\n      if (areUnlimitedStarGiftsDisallowed && areLimitedStarGiftsDisallowed) {\n        return Boolean(isLimited && Boolean(upgradeStars));\n      }\n\n      return true;\n    });\n\n    return (\n      <div className={styles.starGiftsContainer}>\n        {starGiftsById && filteredGiftIds?.flatMap((giftId) => {\n          const gift = starGiftsById[giftId];\n          const shouldShowResale = selectedCategory !== 'stock' && Boolean(gift.availabilityResale);\n          const shouldDuplicateAsResale = selectedCategory !== 'resale' && shouldShowResale && !gift.isSoldOut;\n\n          const elements = [\n            <GiftItemStar\n              key={giftId}\n              gift={gift}\n              observeIntersection={observeIntersection}\n              isResale={shouldShowResale && !shouldDuplicateAsResale}\n              onClick={handleGiftClick}\n            />,\n          ];\n\n          if (shouldDuplicateAsResale) {\n            elements.push(\n              <GiftItemStar\n                key={`resale_${giftId}`}\n                isResale\n                gift={gift}\n                observeIntersection={observeIntersection}\n                onClick={handleGiftClick}\n              />,\n            );\n          }\n\n          return elements;\n        })}\n      </div>\n    );\n  }\n\n  function renderPremiumGifts() {\n    return (\n      <div className={styles.premiumGiftsGallery}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <GiftItemPremium\n              option={gift}\n              optionByStars={giftsByStars.get(gift)}\n              baseMonthAmount={baseGift ? Math.floor(baseGift.amount / baseGift.months) : undefined}\n              onClick={handleGiftClick}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  const onCategoryChanged = useLastCallback((category: StarGiftCategory) => {\n    setSelectedCategory(category);\n  });\n\n  const handleCloseModal = useLastCallback(() => {\n    setSelectedGift(undefined);\n    setSelectedResellGift(undefined);\n    resetResaleGifts();\n    closeGiftModal();\n  });\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (isResaleScreen) {\n      setSelectedResellGift(undefined);\n      resetResaleGifts();\n      return;\n    }\n    if (isGiftScreen) {\n      setSelectedGift(undefined);\n      return;\n    }\n    handleCloseModal();\n  });\n\n  function renderMainScreen() {\n    return (\n      <div ref={scrollerRef} className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <div className={styles.avatars}>\n          <Avatar\n            size={AVATAR_SIZE}\n            peer={peer}\n          />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n        </div>\n        {!isSelf && !chat && !disallowedGifts?.shouldDisallowPremiumGifts && (\n          <>\n            {renderGiftPremiumHeader()}\n            {renderGiftPremiumDescription()}\n            {renderPremiumGifts()}\n          </>\n        )}\n\n        {!areAllGiftsDisallowed && (\n          <>\n            {renderStarGiftsHeader()}\n            {renderStarGiftsDescription()}\n            <StarGiftCategoryList\n              areLimitedStarGiftsDisallowed={areLimitedStarGiftsDisallowed}\n              onCategoryChanged={onCategoryChanged}\n            />\n            <Transition\n              name=\"zoomFade\"\n              activeKey={getCategoryKey(selectedCategory)}\n              className={styles.starGiftsTransition}\n            >\n              {renderStarGifts()}\n            </Transition>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  const isBackButton = isGiftScreen || isResaleScreen;\n\n  const buttonClassName = buildClassName(\n    'animated-close-icon',\n    isBackButton && 'state-back',\n  );\n\n  function renderHeader() {\n    if (!shouldShowHeader) return undefined;\n    if (isResaleScreen) {\n      const isFirstLoading = areResaleGiftsLoading && !resaleGiftsCount;\n      return (\n        <div className={styles.resaleHeaderContentContainer}>\n          <h2 className={styles.resaleHeaderText}>\n            {selectedResellGift.title}\n          </h2>\n          {isFirstLoading\n            && (\n              <div className={styles.resaleHeaderDescription}>\n                {lang('Loading')}\n              </div>\n            )}\n          {!isFirstLoading && resaleGiftsCount !== undefined\n            && (\n              <div className={styles.resaleHeaderDescription}>\n                {lang('HeaderDescriptionResaleGifts', {\n                  count: resaleGiftsCount,\n                }, { withNodes: true, withMarkdown: true, pluralValue: resaleGiftsCount })}\n              </div>\n            )}\n          <GiftResaleFilters dialogRef={dialogRef} />\n        </div>\n      );\n    }\n    return (\n      <h2 className={styles.commonHeaderText}>\n        {lang(isHeaderForStarGifts ? (isSelf ? 'StarsGiftHeaderSelf' : 'StarsGiftHeader') : 'GiftPremiumHeader')}\n      </h2>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={handleCloseModal}\n      isOpen={isOpen}\n      isSlim\n      contentClassName={styles.content}\n      className={buildClassName(styles.modalDialog, styles.root)}\n      isLowStackPriority\n    >\n      <Button\n        className={styles.closeButton}\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        onClick={handleCloseButtonClick}\n        ariaLabel={isBackButton ? oldLang('Common.Back') : oldLang('Common.Close')}\n      >\n        <div className={buttonClassName} />\n      </Button>\n      <BalanceBlock className={styles.balance} balance={starBalance} withAddButton />\n      <div className={buildClassName(\n        styles.header,\n        isResaleScreen && styles.resaleHeader,\n        !shouldShowHeader && styles.hiddenHeader)}\n      >\n        <Transition\n          name=\"slideVerticalFade\"\n          activeKey={!shouldShowHeader ? 0 : isResaleScreen ? 1 : isHeaderForStarGifts ? 2 : 3}\n          slideClassName={styles.headerSlide}\n        >\n          {renderHeader()}\n        </Transition>\n      </div>\n      <Transition\n        ref={transitionRef}\n        className={styles.transition}\n        name=\"pushSlide\"\n        activeKey={isGiftScreen ? 1 : isResaleScreen ? 2 : 0}\n      >\n        {!isGiftScreen && !isResaleScreen && renderMainScreen()}\n        {isResaleScreen && selectedResellGift\n          && (\n            <GiftModalResaleScreen\n              onGiftClick={handleGiftClick}\n            />\n          )}\n        {isGiftScreen && renderingModal?.forPeerId && (\n          <GiftSendingOptions\n            gift={selectedGift}\n            giftByStars={giftsByStars.get(selectedGift)}\n            peerId={renderingModal.forPeerId}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): StateProps => {\n  const {\n    starGifts,\n    stars,\n    currentUserId,\n  } = global;\n\n  const peer = modal?.forPeerId ? selectPeer(global, modal.forPeerId) : undefined;\n  const isSelf = Boolean(currentUserId && modal?.forPeerId === currentUserId);\n  const userFullInfo = peer ? selectUserFullInfo(global, peer?.id) : undefined;\n\n  const { resaleGifts } = selectTabState(global);\n  const resaleGiftsCount = resaleGifts.count;\n  const areResaleGiftsLoading = resaleGifts.isLoading !== false;\n\n  return {\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    starGiftsById: starGifts?.byId,\n    starGiftIdsByCategory: starGifts?.idsByCategory,\n    starBalance: stars?.balance,\n    peer,\n    isSelf,\n    disallowedGifts: userFullInfo?.disallowedGifts,\n    resaleGiftsCount,\n    areResaleGiftsLoading,\n  };\n})(GiftModal));\n\nfunction getCategoryKey(category: StarGiftCategory) {\n  if (category === 'all') return 0;\n  if (category === 'limited') return 1;\n  if (category === 'resale') return 2;\n  if (category === 'stock') return 3;\n  return category + 3;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"W3JMs1YE\",\"picker\":\"wOipz1Y_\"};","import {\n  memo, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCanGift } from '../../../../global/selectors';\nimport { unique } from '../../../../util/iteratees';\nimport sortChatIds from '../../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport PickerModal from '../../../common/pickers/PickerModal';\n\nimport styles from './GiftRecipientPicker.module.scss';\n\nexport type OwnProps = {\n  modal?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n}\n\nconst GiftRecipientPicker = ({\n  modal,\n  currentUserId,\n  userIds,\n}: OwnProps & StateProps) => {\n  const { closeGiftRecipientPicker, openGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n  const isOpen = modal;\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const global = getGlobal();\n    const idsWithSelf = userIds ? userIds.concat(currentUserId!) : undefined;\n    const filteredPeerIds = idsWithSelf ? filterPeersByQuery({ ids: idsWithSelf, query: searchQuery }) : [];\n\n    return sortChatIds(unique(filteredPeerIds).filter((peerId) => {\n      return selectCanGift(global, peerId);\n    }), undefined, [currentUserId!]);\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((selectedId: string) => {\n    openGiftModal({ forUserId: selectedId });\n    closeGiftRecipientPicker();\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeGiftRecipientPicker}\n      title={oldLang('GiftTelegramPremiumOrStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onSelectedIdChange={handleSelectedUserIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        forceShowSelf\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n  };\n})(GiftRecipientPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef0cKSqQ\",\"giftPreview\":\"IvuNzslN\",\"backdrop\":\"dNukis4X\",\"arrow\":\"oufsMLLF\"};","import { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiPeer, ApiStarGiftUnique,\n} from '../../../api/types';\n\nimport { getGiftAttributes } from '../helpers/gifts';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport AnimatedIconFromSticker from '../AnimatedIconFromSticker';\nimport Avatar from '../Avatar';\nimport Icon from '../icons/Icon';\nimport RadialPatternBackground from '../profile/RadialPatternBackground';\n\nimport styles from './GiftTransferPreview.module.scss';\n\ntype OwnProps = {\n  peer: ApiPeer;\n  gift: ApiStarGiftUnique;\n};\n\nconst AVATAR_SIZE = 4 * REM;\nconst GIFT_STICKER_SIZE = 3 * REM;\n\nconst GiftTransferPreview = ({\n  peer,\n  gift,\n}: OwnProps) => {\n  const giftAttributes = useMemo(() => {\n    return getGiftAttributes(gift);\n  }, [gift]);\n\n  if (!giftAttributes) return undefined;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.giftPreview}>\n        <RadialPatternBackground\n          className={styles.backdrop}\n          backgroundColors={[giftAttributes.backdrop!.centerColor, giftAttributes.backdrop!.edgeColor]}\n          patternColor={giftAttributes.backdrop?.patternColor}\n          patternIcon={giftAttributes.pattern?.sticker}\n        />\n        <AnimatedIconFromSticker\n          className={styles.sticker}\n          size={GIFT_STICKER_SIZE}\n          sticker={giftAttributes.model?.sticker}\n        />\n      </div>\n      <Icon name=\"next\" className={styles.arrow} />\n      <Avatar\n        peer={peer}\n        size={AVATAR_SIZE}\n        className={styles.avatar}\n      />\n    </div>\n  );\n};\n\nexport default memo(GiftTransferPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"nnublcCk\",\"header\":\"p7FTs7_p\",\"title\":\"pIbzzTir\",\"description\":\"CCPfr26t\",\"soldOut\":\"kjWcRp4W\",\"headerSplitButton\":\"XOMI_4PO\",\"headerButton\":\"WA0INleU\",\"giftResalePriceContainer\":\"BN8gf5y6\",\"starAmountIcon\":\"_5guecUe\",\"giftResalePriceStar\":\"H_q8o2vY\",\"left\":\"aOhTHZlf\",\"right\":\"rJOB1u5Q\",\"footer\":\"bho0GTYt\",\"footerDescription\":\"VUylTszM\",\"unknown\":\"zDauXmpS\",\"giftValue\":\"w_E4LkUj\",\"uniqueAttribute\":\"OJQnkf17\",\"uniqueGift\":\"I6o_pGAm\",\"modalHeader\":\"ie9tImaj\",\"modalCloseButton\":\"p38RBGdC\",\"ownerAddress\":\"DavMRg4Q\",\"copyIcon\":\"SLX5tX8C\"};","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiEmojiStatusType,\n  ApiPeer,\n  ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getHasAdminRight } from '../../../../global/helpers';\nimport { getPeerTitle, isApiPeerChat, isApiPeerUser } from '../../../../global/helpers/peers';\nimport { getMainUsername } from '../../../../global/helpers/users';\nimport { selectPeer, selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\nimport { CUSTOM_PEER_HIDDEN } from '../../../../util/objects/customPeer';\nimport { getServerTime } from '../../../../util/serverTime';\nimport { formatPercent } from '../../../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport BadgeButton from '../../../common/BadgeButton';\nimport GiftMenuItems from '../../../common/gift/GiftMenuItems';\nimport GiftTransferPreview from '../../../common/gift/GiftTransferPreview';\nimport Icon from '../../../common/icons/Icon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\nimport DropdownMenu from '../../../ui/DropdownMenu';\nimport Link from '../../../ui/Link';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport UniqueGiftHeader from '../UniqueGiftHeader';\n\nimport styles from './GiftInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftInfoModal'];\n};\n\ntype StateProps = {\n  fromPeer?: ApiPeer;\n  targetPeer?: ApiPeer;\n  releasedByPeer?: ApiPeer;\n  currentUserId?: string;\n  starGiftMaxConvertPeriod?: number;\n  hasAdminRights?: boolean;\n  currentUserEmojiStatus?: ApiEmojiStatusType;\n  collectibleEmojiStatuses?: ApiEmojiStatusType[];\n  tonExplorerUrl?: string;\n  currentUser?: ApiUser;\n  recipientPeer?: ApiPeer;\n};\n\nconst STICKER_SIZE = 120;\n\nconst GiftInfoModal = ({\n  modal,\n  fromPeer,\n  targetPeer,\n  releasedByPeer,\n  currentUserId,\n  starGiftMaxConvertPeriod,\n  hasAdminRights,\n  currentUserEmojiStatus,\n  collectibleEmojiStatuses,\n  tonExplorerUrl,\n  currentUser,\n  recipientPeer,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftInfoModal,\n    changeGiftVisibility,\n    convertGiftToStars,\n    openChatWithInfo,\n    focusMessage,\n    openGiftUpgradeModal,\n    showNotification,\n    buyStarGift,\n    closeGiftModal,\n  } = getActions();\n\n  const [isConvertConfirmOpen, openConvertConfirm, closeConvertConfirm] = useFlag();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState<boolean>(false);\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingFromPeer = useCurrentOrPrev(fromPeer);\n  const renderingTargetPeer = useCurrentOrPrev(targetPeer);\n\n  const isTargetChat = renderingTargetPeer && isApiPeerChat(renderingTargetPeer);\n\n  const { gift: typeGift } = renderingModal || {};\n  const isSavedGift = typeGift && 'gift' in typeGift;\n  const savedGift = isSavedGift ? typeGift : undefined;\n  const isSender = savedGift?.fromId === currentUserId;\n  const canConvertDifference = (savedGift && starGiftMaxConvertPeriod && (\n    savedGift.date + starGiftMaxConvertPeriod - getServerTime()\n  )) || 0;\n  const conversionLeft = Math.ceil(canConvertDifference / 60 / 60 / 24);\n\n  const gift = isSavedGift ? typeGift.gift : typeGift;\n  const giftSticker = gift && getStickerFromGift(gift);\n  const hasConvertOption = canConvertDifference > 0 && Boolean(savedGift?.starsToConvert);\n\n  const isGiftUnique = gift && gift.type === 'starGiftUnique';\n  const uniqueGift = isGiftUnique ? gift : undefined;\n\n  const giftSubtitle = useMemo(() => {\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    if (releasedByPeer) {\n      const releasedByUsername = `@${getMainUsername(releasedByPeer)}`;\n      const ownerTitle = releasedByUsername || getPeerTitle(lang, releasedByPeer);\n      const fallbackText = isApiPeerUser(releasedByPeer)\n        ? lang('ActionFallbackUser')\n        : lang('ActionFallbackChannel');\n\n      return lang('GiftInfoCollectibleBy', {\n        number: gift.number, owner: ownerTitle || fallbackText }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('GiftInfoCollectible', { number: gift.number });\n  }, [gift, releasedByPeer, lang]);\n\n  const canFocusUpgrade = Boolean(savedGift?.upgradeMsgId);\n  const canManage = !canFocusUpgrade && savedGift?.inputGift && (\n    isTargetChat ? hasAdminRights : renderingTargetPeer?.id === currentUserId\n  );\n\n  const resellPriceInStars = isGiftUnique ? gift.resellPriceInStars : undefined;\n  const canBuyGift = !canManage && Boolean(resellPriceInStars);\n\n  const giftOwnerTitle = (() => {\n    if (!isGiftUnique) return undefined;\n    const { ownerName, ownerId } = gift;\n    const global = getGlobal(); // Peer titles do not need to be reactive\n    const owner = ownerId ? selectPeer(global, ownerId) : undefined;\n    return owner ? getPeerTitle(lang, owner) : ownerName;\n  })();\n\n  const handleClose = useLastCallback(() => {\n    closeGiftInfoModal();\n  });\n\n  const handleFocusUpgraded = useLastCallback(() => {\n    const giftChat = isSender ? renderingTargetPeer : renderingFromPeer;\n    if (!savedGift?.upgradeMsgId || !giftChat) return;\n    const { upgradeMsgId } = savedGift;\n    focusMessage({ chatId: giftChat.id, messageId: upgradeMsgId });\n    handleClose();\n  });\n\n  const handleTriggerVisibility = useLastCallback(() => {\n    const { inputGift, isUnsaved } = savedGift!;\n    changeGiftVisibility({ gift: inputGift!, shouldUnsave: !isUnsaved });\n    handleClose();\n  });\n\n  const handleConvertToStars = useLastCallback(() => {\n    const { inputGift } = savedGift!;\n    convertGiftToStars({ gift: inputGift! });\n    closeConvertConfirm();\n    handleClose();\n  });\n\n  const handleOpenUpgradeModal = useLastCallback(() => {\n    if (!savedGift) return;\n    openGiftUpgradeModal({ giftId: savedGift.gift.id, gift: savedGift });\n  });\n\n  const handleBuyGift = useLastCallback(() => {\n    if (gift?.type !== 'starGiftUnique' || !gift.resellPriceInStars) return;\n    setIsConfirmModalOpen(true);\n  });\n\n  const closeConfirmModal = useLastCallback(() => {\n    setIsConfirmModalOpen(false);\n  });\n\n  const handleConfirmBuyGift = useLastCallback(() => {\n    const peer = recipientPeer || currentUser;\n    if (!peer || gift?.type !== 'starGiftUnique' || !gift.resellPriceInStars) return;\n    closeConfirmModal();\n    closeGiftModal();\n    buyStarGift({ peerId: peer.id, slug: gift.slug, stars: gift.resellPriceInStars });\n  });\n\n  const giftAttributes = useMemo(() => {\n    return gift && getGiftAttributes(gift);\n  }, [gift]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isMenuOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger }) => (\n      <div\n        className={buildClassName(\n          styles.headerButton,\n          styles.left,\n        )}\n        tabIndex={0}\n        role=\"button\"\n        aria-haspopup=\"menu\"\n        aria-label={lang('AriaMoreButton')}\n        onClick={onTrigger}\n      >\n        <Icon\n          name=\"more\"\n          className={styles.icon}\n        />\n      </div>\n    );\n  }, [lang]);\n\n  const renderFooterButton = useLastCallback(() => {\n    if (canBuyGift) {\n      return (\n        <Button noForcedUpperCase size=\"smaller\" onClick={handleBuyGift}>\n          {lang('ButtonBuyGift', {\n            stars: formatStarsAsIcon(lang, resellPriceInStars, { asFont: true }),\n          }, { withNodes: true })}\n        </Button>\n      );\n    }\n\n    if (canFocusUpgrade) {\n      return (\n        <Button size=\"smaller\" onClick={handleFocusUpgraded}>\n          {lang('GiftInfoViewUpgraded')}\n        </Button>\n      );\n    }\n\n    if (canManage && savedGift?.alreadyPaidUpgradeStars && !savedGift.upgradeMsgId) {\n      return (\n        <Button size=\"smaller\" isShiny onClick={handleOpenUpgradeModal}>\n          {lang('GiftInfoUpgradeForFree')}\n        </Button>\n      );\n    }\n\n    return (\n      <Button size=\"smaller\" onClick={handleClose}>\n        {lang('OK')}\n      </Button>\n    );\n  });\n\n  const saleDateInfo = useMemo(() => {\n    if (!gift) return undefined;\n    let text = '';\n    if (gift.type === 'starGift') {\n      if (gift.firstSaleDate) {\n        text += `${lang('GiftInfoFirstSale')} ${formatDateTimeToString(gift.firstSaleDate * 1000, lang.code, true)}`;\n      }\n      if (gift.lastSaleDate) {\n        text += '\\n';\n        text += `${lang('GiftInfoLastSale')} ${formatDateTimeToString(gift.lastSaleDate * 1000, lang.code, true)}`;\n      }\n    }\n\n    return text;\n  }, [gift, lang]);\n\n  const modalData = useMemo(() => {\n    if (!typeGift || !gift) {\n      return undefined;\n    }\n\n    const {\n      fromId, isNameHidden, starsToConvert, isUnsaved, isConverted, upgradeMsgId,\n    } = savedGift || {};\n    const canConvert = hasConvertOption && Boolean(starsToConvert);\n\n    const isVisibleForMe = isNameHidden && renderingTargetPeer;\n\n    const description = (() => {\n      if (!savedGift) return lang('GiftInfoSoldOutDescription');\n      if (isTargetChat) return undefined;\n\n      if (savedGift.upgradeMsgId) return lang('GiftInfoDescriptionUpgraded');\n      if (savedGift.canUpgrade && savedGift.alreadyPaidUpgradeStars) {\n        return canManage\n          ? lang('GiftInfoDescriptionFreeUpgrade')\n          : lang('GiftInfoPeerDescriptionFreeUpgradeOut', { peer: getPeerTitle(lang, renderingTargetPeer!)! });\n      }\n      if (!canManage && !isSender) return undefined;\n      if (isConverted && canConvert) {\n        return canManage\n          ? lang('GiftInfoDescriptionConverted', {\n            amount: starsToConvert,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          })\n          : lang('GiftInfoPeerDescriptionOutConverted', {\n            amount: starsToConvert,\n            peer: getPeerTitle(lang, renderingTargetPeer!)!,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          });\n      }\n\n      if (savedGift.canUpgrade && canManage) {\n        if (canConvert) {\n          return lang('GiftInfoDescriptionUpgrade', {\n            amount: starsToConvert,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          });\n        }\n\n        return lang('GiftInfoDescriptionUpgradeRegular');\n      }\n\n      if (canManage) {\n        if (canConvert) {\n          return lang('GiftInfoDescription', {\n            amount: starsToConvert,\n          }, {\n            withNodes: true,\n            withMarkdown: true,\n            pluralValue: starsToConvert,\n          });\n        }\n\n        return lang('GiftInfoDescriptionRegular');\n      }\n\n      if (canConvert) {\n        return lang('GiftInfoPeerDescriptionOut', {\n          amount: starsToConvert,\n          peer: getPeerTitle(lang, renderingTargetPeer!)!,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n          pluralValue: starsToConvert,\n        });\n      }\n\n      return lang('GiftInfoPeerDescriptionOutRegular', { peer: getPeerTitle(lang, renderingTargetPeer!)! });\n    })();\n\n    function getTitle() {\n      if (isGiftUnique) return gift.title;\n      if (!savedGift) return lang('GiftInfoSoldOutTitle');\n\n      return canManage ? lang('GiftInfoReceived') : lang('GiftInfoTitle');\n    }\n\n    const uniqueGiftContextMenu = (\n      <DropdownMenu\n        className=\"with-menu-transitions\"\n        trigger={SettingsMenuButton}\n        positionX=\"right\"\n      >\n        <GiftMenuItems\n          peerId={renderingModal!.peerId!}\n          gift={typeGift}\n          canManage={canManage}\n          collectibleEmojiStatuses={collectibleEmojiStatuses}\n          currentUserEmojiStatus={currentUserEmojiStatus}\n        />\n      </DropdownMenu>\n    );\n\n    const uniqueGiftModalHeader = (\n      <div\n        className={styles.modalHeader}\n      >\n        {Boolean(canManage && resellPriceInStars) && (\n          <div className={styles.giftResalePriceContainer}>\n            {formatStarsAsIcon(lang, resellPriceInStars!, {\n              asFont: true,\n              className: styles.giftResalePriceStar,\n            })}\n          </div>\n        )}\n        <div className={styles.headerSplitButton}>\n          {isOpen && uniqueGiftContextMenu}\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon\n              name=\"close\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n\n    const uniqueGiftHeader = isGiftUnique && (\n      <div className={buildClassName(styles.header, styles.uniqueGift)}>\n        <UniqueGiftHeader\n          backdropAttribute={giftAttributes!.backdrop!}\n          patternAttribute={giftAttributes!.pattern!}\n          modelAttribute={giftAttributes!.model!}\n          title={gift.title}\n          subtitle={giftSubtitle}\n          subtitlePeer={releasedByPeer}\n        />\n      </div>\n    );\n\n    const regularHeader = (\n      <div className={styles.header}>\n        <AnimatedIconFromSticker\n          className={styles.giftSticker}\n          sticker={giftSticker}\n          size={STICKER_SIZE}\n        />\n        <h1 className={styles.title}>\n          {getTitle()}\n        </h1>\n        {Boolean(description) && (\n          <p className={buildClassName(styles.description, !savedGift && gift?.type === 'starGift' && styles.soldOut)}>\n            {description}\n          </p>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n    if (gift.type === 'starGift') {\n      const hasFrom = fromId || isNameHidden;\n\n      if (hasFrom) {\n        tableData.push([\n          lang('GiftInfoFrom'),\n          !fromId ? (\n            <>\n              <Avatar size=\"small\" peer={CUSTOM_PEER_HIDDEN} />\n              <span className={styles.unknown}>{oldLang(CUSTOM_PEER_HIDDEN.titleKey!)}</span>\n            </>\n          ) : { chatId: fromId },\n        ]);\n      }\n\n      if (savedGift?.date) {\n        tableData.push([\n          lang('GiftInfoDate'),\n          <span title={saleDateInfo}>{formatDateTimeToString(savedGift.date * 1000, lang.code, true)}</span>,\n        ]);\n      }\n\n      if (gift.firstSaleDate && !savedGift) {\n        tableData.push([\n          lang('GiftInfoFirstSale'),\n          formatDateTimeToString(gift.firstSaleDate * 1000, lang.code, true),\n        ]);\n      }\n\n      if (gift.lastSaleDate && !savedGift) {\n        tableData.push([\n          lang('GiftInfoLastSale'),\n          formatDateTimeToString(gift.lastSaleDate * 1000, lang.code, true),\n        ]);\n      }\n\n      const starsValue = gift.stars + (savedGift?.alreadyPaidUpgradeStars || 0);\n\n      tableData.push([\n        lang('GiftInfoValue'),\n        <div className={styles.giftValue}>\n          {formatStarsAsIcon(lang, starsValue, { className: styles.starAmountIcon })}\n          {canManage && hasConvertOption && Boolean(starsToConvert) && (\n            <BadgeButton onClick={openConvertConfirm}>\n              {lang('GiftInfoConvert', { amount: starsToConvert }, { pluralValue: starsToConvert })}\n            </BadgeButton>\n          )}\n        </div>,\n      ]);\n\n      if (gift.availabilityTotal) {\n        tableData.push([\n          lang('GiftInfoAvailability'),\n          lang('GiftInfoAvailabilityValue', {\n            count: gift.availabilityRemains || 0,\n            total: gift.availabilityTotal,\n          }, {\n            pluralValue: gift.availabilityRemains || 0,\n          }),\n        ]);\n      }\n\n      if (gift.upgradeStars && !upgradeMsgId) {\n        tableData.push([\n          lang('GiftInfoStatus'),\n          <div className={styles.giftValue}>\n            {lang('GiftInfoStatusNonUnique')}\n            {canManage && <BadgeButton onClick={handleOpenUpgradeModal}>{lang('GiftInfoUpgradeBadge')}</BadgeButton>}\n          </div>,\n        ]);\n      }\n\n      if (savedGift?.message) {\n        tableData.push([\n          undefined,\n          renderTextWithEntities(savedGift.message),\n        ]);\n      }\n    }\n\n    if (isGiftUnique) {\n      const { ownerName, ownerAddress, ownerId } = gift;\n      const ownerPeer = ownerId ? selectPeer(getGlobal(), ownerId) : undefined;\n      const {\n        model, backdrop, pattern, originalDetails,\n      } = giftAttributes || {};\n\n      if (ownerAddress) {\n        tableData.push([\n          lang('GiftInfoOwner'),\n          <span\n            className={styles.ownerAddress}\n            onClick={() => {\n              copyTextToClipboard(ownerAddress);\n              showNotification({\n                message: { key: 'WalletAddressCopied' },\n                icon: 'copy',\n              });\n            }}\n          >\n            {ownerAddress}\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </span>,\n        ]);\n      } else if (ownerPeer || ownerName) {\n        tableData.push([\n          lang('GiftInfoOwner'),\n          ownerId ? { chatId: ownerId, withEmojiStatus: true } : ownerName || '',\n        ]);\n      }\n\n      if (model) {\n        tableData.push([\n          lang('GiftAttributeModel'),\n          <span className={styles.uniqueAttribute}>\n            {model.name}\n            <BadgeButton>{formatPercent(model.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      if (backdrop) {\n        tableData.push([\n          lang('GiftAttributeBackdrop'),\n          <span className={styles.uniqueAttribute}>\n            {backdrop.name}\n            <BadgeButton>{formatPercent(backdrop.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      if (pattern) {\n        tableData.push([\n          lang('GiftAttributeSymbol'),\n          <span className={styles.uniqueAttribute}>\n            {pattern.name}\n            <BadgeButton>{formatPercent(pattern.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      tableData.push([\n        lang('GiftInfoAvailability'),\n        lang('GiftInfoIssued', {\n          issued: gift.issuedCount,\n          total: gift.totalCount,\n        }),\n      ]);\n\n      if (originalDetails) {\n        const {\n          date, recipientId, message, senderId,\n        } = originalDetails;\n        const global = getGlobal(); // Peer titles do not need to be reactive\n\n        const openChat = (id: string) => {\n          openChatWithInfo({ id });\n          closeGiftInfoModal();\n        };\n\n        const recipient = selectPeer(global, recipientId)!;\n        const sender = senderId ? selectPeer(global, senderId) : undefined;\n\n        const formattedDate = formatDateTimeToString(date * 1000, lang.code, true);\n        const recipientLink = (\n\n          <Link onClick={() => openChat(recipientId)} isPrimary>\n            {getPeerTitle(lang, recipient)}\n          </Link>\n        );\n\n        let text: TeactNode | undefined;\n        if (!sender || senderId === recipientId) {\n          text = message ? lang('GiftInfoPeerOriginalInfoText', {\n            peer: recipientLink,\n            text: renderTextWithEntities(message),\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          }) : lang('GiftInfoPeerOriginalInfo', {\n            peer: recipientLink,\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          });\n        } else {\n          const senderLink = (\n\n            <Link onClick={() => openChat(sender.id)} isPrimary>\n              {getPeerTitle(lang, sender)}\n            </Link>\n          );\n          text = message ? lang('GiftInfoPeerOriginalInfoTextSender', {\n            peer: recipientLink,\n            sender: senderLink,\n            text: renderTextWithEntities(message),\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          }) : lang('GiftInfoPeerOriginalInfoSender', {\n            peer: recipientLink,\n            date: formattedDate,\n            sender: senderLink,\n          }, {\n            withNodes: true,\n          });\n        }\n\n        tableData.push([\n          undefined,\n          <span>{text}</span>,\n        ]);\n      }\n    }\n\n    const tonLink = tonExplorerUrl && isGiftUnique && gift.giftAddress && (\n      `${tonExplorerUrl}${gift.giftAddress}`\n    );\n\n    const footer = (\n      <div className={styles.footer}>\n        {(canManage || tonLink || canBuyGift) && (\n          <div className={styles.footerDescription}>\n            {tonLink && (\n              <div>\n                {lang('GiftInfoTonText', {\n                  link: <SafeLink url={tonLink} shouldSkipModal text={lang('GiftInfoTonLinkText')} />,\n                }, { withNodes: true })}\n              </div>\n            )}\n            {canManage && (\n              <div>\n                {lang(`GiftInfo${isTargetChat ? 'Channel' : ''}${isUnsaved ? 'Hidden' : 'Saved'}`, {\n                  link: (\n                    <Link isPrimary onClick={handleTriggerVisibility}>\n                      {lang(`GiftInfoSaved${isUnsaved ? 'Show' : 'Hide'}`)}\n                    </Link>\n                  ),\n                }, {\n                  withNodes: true,\n                })}\n              </div>\n            )}\n            {!canBuyGift && isVisibleForMe && (\n              <div>\n                {lang('GiftInfoSenderHidden')}\n              </div>\n            )}\n            {canBuyGift && giftOwnerTitle && (\n              <div>\n                {lang('GiftInfoBuyGift', {\n                  user: giftOwnerTitle,\n                }, { withNodes: true })}\n              </div>\n            )}\n          </div>\n        )}\n        {renderFooterButton()}\n      </div>\n    );\n\n    return {\n      modalHeader: isGiftUnique ? uniqueGiftModalHeader : undefined,\n      header: isGiftUnique ? uniqueGiftHeader : regularHeader,\n      tableData,\n      footer,\n    };\n  }, [\n    typeGift, savedGift, renderingTargetPeer, giftSticker, lang,\n    canManage, hasConvertOption, isSender, oldLang, tonExplorerUrl,\n    gift, giftAttributes, renderFooterButton, isTargetChat,\n    SettingsMenuButton, isGiftUnique, renderingModal,\n    collectibleEmojiStatuses, currentUserEmojiStatus, saleDateInfo,\n    canBuyGift, giftOwnerTitle, isOpen, resellPriceInStars, giftSubtitle,\n    releasedByPeer,\n  ]);\n\n  return (\n    <>\n      <TableInfoModal\n        isOpen={isOpen}\n        modalHeader={modalData?.modalHeader}\n        header={modalData?.header}\n        hasBackdrop={isGiftUnique}\n        tableData={modalData?.tableData}\n        footer={modalData?.footer}\n        className={styles.modal}\n        onClose={handleClose}\n        withBalanceBar={Boolean(canBuyGift)}\n        isLowStackPriority\n      />\n      {uniqueGift && currentUser && Boolean(resellPriceInStars) && (\n        <ConfirmDialog\n          isOpen={isConfirmModalOpen}\n          noDefaultTitle\n          onClose={closeConfirmModal}\n          confirmLabel={lang('ButtonBuyGift', {\n            stars: formatStarsAsIcon(lang, resellPriceInStars, { asFont: true }),\n          }, { withNodes: true })}\n          confirmHandler={handleConfirmBuyGift}\n        >\n\n          <GiftTransferPreview\n            peer={recipientPeer || currentUser}\n            gift={uniqueGift}\n          />\n          {!recipientPeer\n            && (\n              <p>\n                {lang('GiftBuyConfirmDescription', {\n                  gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                  stars: formatStarsAsText(lang, resellPriceInStars),\n                }, {\n                  withNodes: true,\n                  withMarkdown: true,\n                })}\n              </p>\n            )}\n          {recipientPeer\n            && (\n              <p>\n                {lang('GiftBuyForPeerConfirmDescription', {\n                  gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                  stars: formatStarsAsText(lang, resellPriceInStars),\n                  peer: getPeerTitle(lang, recipientPeer),\n                }, {\n                  withNodes: true,\n                  withMarkdown: true,\n                })}\n              </p>\n            )}\n        </ConfirmDialog>\n      )}\n      {savedGift && (\n        <ConfirmDialog\n          isOpen={isConvertConfirmOpen}\n          onClose={closeConvertConfirm}\n          confirmHandler={handleConvertToStars}\n          title={lang('GiftInfoConvertTitle')}\n        >\n          <div>\n            {lang('GiftInfoPeerConvertDescription', {\n              amount: formatStarsAsText(lang, savedGift.starsToConvert!),\n              peer: getPeerTitle(lang, renderingFromPeer!)!,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            })}\n          </div>\n          {hasConvertOption && (\n            <div>\n              {lang('GiftInfoConvertDescriptionPeriod', {\n                count: conversionLeft,\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n                pluralValue: conversionLeft,\n              })}\n            </div>\n          )}\n          <div>{lang('GiftInfoConvertDescription2')}</div>\n        </ConfirmDialog>\n      )}\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const typeGift = modal?.gift;\n    const isSavedGift = typeGift && 'gift' in typeGift;\n    const currentUserId = global.currentUserId;\n\n    const fromId = isSavedGift && typeGift.fromId;\n    const fromPeer = fromId ? selectPeer(global, fromId) : undefined;\n    const targetPeer = modal?.peerId ? selectPeer(global, modal.peerId) : undefined;\n    const chat = targetPeer && isApiPeerChat(targetPeer) ? targetPeer : undefined;\n    const hasAdminRights = chat && getHasAdminRight(chat, 'postMessages');\n    const currentUser = selectUser(global, currentUserId!);\n    const recipientPeer = modal?.recipientId && currentUserId !== modal.recipientId\n      ? selectPeer(global, modal.recipientId) : undefined;\n    const currentUserEmojiStatus = currentUser?.emojiStatus;\n    const collectibleEmojiStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    const gift = isSavedGift ? typeGift.gift : typeGift;\n    const releasedByPeerId = gift?.type === 'starGiftUnique' && gift.releasedByPeerId;\n    const releasedByPeer = releasedByPeerId ? selectPeer(global, releasedByPeerId) : undefined;\n\n    return {\n      fromPeer,\n      targetPeer,\n      releasedByPeer,\n      currentUserId,\n      starGiftMaxConvertPeriod: global.appConfig?.starGiftMaxConvertPeriod,\n      tonExplorerUrl: global.appConfig?.tonExplorerUrl,\n      hasAdminRights,\n      currentUserEmojiStatus,\n      collectibleEmojiStatuses,\n      currentUser,\n      recipientPeer,\n    };\n  },\n)(GiftInfoModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionContainer\":\"wqkAvYGE\",\"descriptionPrice\":\"r9R0VR_w\",\"inputPrice\":\"ElDo1Bru\"};","import {\n  memo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { TabState } from '../../../../global/types';\n\nimport { formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\nimport styles from './GiftResalePriceComposerModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftResalePriceComposerModal'];\n};\n\nexport type StateProps = {\n  starsStargiftResaleCommissionPermille?: number;\n  starsStargiftResaleAmountMin: number;\n  starsStargiftResaleAmountMax?: number;\n  starsUsdWithdrawRate?: number;\n};\n\nconst GiftResalePriceComposerModal = ({\n  modal, starsStargiftResaleCommissionPermille,\n  starsStargiftResaleAmountMin, starsStargiftResaleAmountMax, starsUsdWithdrawRate,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftResalePriceComposerModal,\n    closeGiftInfoModal,\n    updateStarGiftPrice,\n    showNotification,\n  } = getActions();\n  const isOpen = Boolean(modal);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const { gift: typeGift } = renderingModal || {};\n  const isSavedGift = typeGift && 'gift' in typeGift;\n  const savedGift = isSavedGift ? typeGift : undefined;\n  const hasPrice = Boolean(price);\n\n  const lang = useLang();\n\n  const handleChangePrice = useLastCallback((e) => {\n    const value = e.target.value;\n    const number = parseFloat(value);\n    const result = value === '' || Number.isNaN(number) ? undefined\n      : starsStargiftResaleAmountMax ? Math.min(number, starsStargiftResaleAmountMax) : number;\n    setPrice(result);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeGiftResalePriceComposerModal();\n  });\n\n  const handleSellGift = useLastCallback(() => {\n    if (!savedGift || savedGift.gift.type !== 'starGiftUnique' || !savedGift.inputGift || !price) return;\n    closeGiftResalePriceComposerModal();\n    closeGiftInfoModal();\n    updateStarGiftPrice({ gift: savedGift.inputGift, price });\n    showNotification({\n      icon: 'sell-outline',\n      message: {\n        key: 'NotificationGiftIsSale',\n        variables: {\n          gift: lang('GiftUnique', { title: savedGift.gift.title, number: savedGift.gift.number }),\n        },\n      },\n    });\n  });\n  const commission = starsStargiftResaleCommissionPermille;\n  const isPriceCorrect = hasPrice && price > starsStargiftResaleAmountMin;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={lang('GiftSellTitle')}\n      hasCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      <div className={styles.inputPrice}>\n        <InputText\n          label={lang('InputPlaceholderGiftResalePrice')}\n          onChange={handleChangePrice}\n          value={price?.toString()}\n          inputMode=\"numeric\"\n          tabIndex={0}\n          teactExperimentControlled\n        />\n      </div>\n\n      <div className={styles.descriptionContainer}>\n        <span>\n          {!isPriceCorrect && Boolean(commission) && lang('DescriptionComposerGiftMinimumPrice', {\n            stars: formatStarsAsText(lang, starsStargiftResaleAmountMin),\n          }, {\n            withMarkdown: true,\n            withNodes: true,\n          })}\n          {isPriceCorrect && lang('DescriptionComposerGiftResalePrice',\n            {\n              stars: formatStarsAsText(lang, commission ? Number((price * (commission)).toFixed()) : price),\n            },\n            {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n        </span>\n\n        {isPriceCorrect && Boolean(starsUsdWithdrawRate) && (\n          <span className={styles.descriptionPrice}>\n            {`≈ ${formatCurrencyAsString(\n              price * starsUsdWithdrawRate,\n              'USD',\n              lang.code,\n            )}`}\n          </span>\n        )}\n      </div>\n\n      <Button noForcedUpperCase disabled={!isPriceCorrect} size=\"smaller\" onClick={handleSellGift}>\n        {isPriceCorrect && lang('ButtonSellGift', {\n          stars: formatStarsAsIcon(lang, price, { asFont: true }),\n        }, { withNodes: true })}\n        {!isPriceCorrect && lang('Sell')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const configPermille = global.appConfig?.starsStargiftResaleCommissionPermille;\n    const starsStargiftResaleCommissionPermille = configPermille ? (configPermille / 1000) : undefined;\n    const starsStargiftResaleAmountMin = global.appConfig?.starsStargiftResaleAmountMin || 0;\n    const starsStargiftResaleAmountMax = global.appConfig?.starsStargiftResaleAmountMax;\n\n    const starsUsdWithdrawRateX1000 = global.appConfig?.starsUsdWithdrawRateX1000;\n    const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n\n    return {\n      starsStargiftResaleCommissionPermille,\n      starsStargiftResaleAmountMin,\n      starsStargiftResaleAmountMax,\n      starsUsdWithdrawRate,\n    };\n  },\n)(GiftResalePriceComposerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"EWaVCxY4\",\"footerButton\":\"_Dt6RSQV\"};","import {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributePattern,\n  ApiStarGiftRegular,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport { getStickerMediaHash } from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport { formatStarsAsIcon } from '../../../../util/localization/format';\nimport { fetch } from '../../../../util/mediaLoader';\n\nimport useInterval from '../../../../hooks/schedulers/useInterval';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Checkbox from '../../../ui/Checkbox';\nimport TableAboutModal, { type TableAboutData } from '../../common/TableAboutModal';\nimport UniqueGiftHeader from '../UniqueGiftHeader';\n\nimport styles from './GiftUpgradeModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftUpgradeModal'];\n};\n\ntype StateProps = {\n  recipient?: ApiPeer;\n};\n\ntype Attributes = {\n  model: ApiStarGiftAttributeModel;\n  pattern: ApiStarGiftAttributePattern;\n  backdrop: ApiStarGiftAttributeBackdrop;\n};\n\nconst PREVIEW_UPDATE_INTERVAL = 3000;\n\nconst GiftUpgradeModal = ({ modal, recipient }: OwnProps & StateProps) => {\n  const { closeGiftUpgradeModal, upgradeGift } = getActions();\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingRecipient = useCurrentOrPrev(recipient);\n  const [shouldKeepOriginalDetails, setShouldKeepOriginalDetails] = useState(false);\n\n  const [previewAttributes, setPreviewAttributes] = useState<Attributes | undefined>();\n\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => closeGiftUpgradeModal());\n\n  const handleUpgrade = useLastCallback(() => {\n    const gift = renderingModal?.gift;\n    if (!gift?.inputGift) return;\n\n    upgradeGift({\n      gift: gift.inputGift,\n      shouldKeepOriginalDetails,\n      upgradeStars: !gift.alreadyPaidUpgradeStars ? (gift.gift as ApiStarGiftRegular).upgradeStars : undefined,\n    });\n    handleClose();\n  });\n\n  const updatePreviewAttributes = useLastCallback(() => {\n    if (!renderingModal?.sampleAttributes) return;\n    setPreviewAttributes(getRandomAttributes(renderingModal.sampleAttributes, previewAttributes));\n  });\n\n  useInterval(updatePreviewAttributes, isOpen ? PREVIEW_UPDATE_INTERVAL : undefined, true);\n\n  useEffect(() => {\n    if (isOpen && renderingModal?.sampleAttributes) {\n      updatePreviewAttributes();\n    }\n  }, [isOpen, renderingModal?.sampleAttributes]);\n\n  // Preload stickers and patterns\n  useEffect(() => {\n    const attributes = renderingModal?.sampleAttributes;\n    if (!attributes) return;\n    const patternStickers = attributes.filter((attr): attr is ApiStarGiftAttributeModel => attr.type === 'pattern')\n      .map((attr) => attr.sticker);\n    const modelStickers = attributes.filter((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')\n      .map((attr) => attr.sticker);\n\n    const mediaHashes = [...patternStickers, ...modelStickers].map((sticker) => getStickerMediaHash(sticker, 'full'));\n    mediaHashes.forEach((hash) => {\n      fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n  }, [renderingModal?.sampleAttributes]);\n\n  const modalData = useMemo(() => {\n    if (!previewAttributes || !isOpen) {\n      return undefined;\n    }\n\n    const gift = renderingModal?.gift;\n\n    const listItemData = [\n      ['diamond', lang('GiftUpgradeUniqueTitle'), lang('GiftUpgradeUniqueDescription')],\n      ['trade', lang('GiftUpgradeTransferableTitle'), lang('GiftUpgradeTransferableDescription')],\n      ['auction', lang('GiftUpgradeTradeableTitle'), lang('GiftUpgradeTradeableDescription')],\n    ] satisfies TableAboutData;\n\n    const subtitle = renderingRecipient\n      ? lang('GiftPeerUpgradeText', { peer: getPeerTitle(lang, renderingRecipient) })\n      : lang('GiftUpgradeTextOwn');\n\n    const header = (\n      <UniqueGiftHeader\n        modelAttribute={previewAttributes.model}\n        backdropAttribute={previewAttributes.backdrop}\n        patternAttribute={previewAttributes.pattern}\n        title={lang('GiftUpgradeTitle')}\n        subtitle={subtitle}\n      />\n    );\n\n    const footer = (\n      <div className={styles.footer}>\n        {!gift && (\n          <Button className={styles.footerButton} size=\"smaller\" onClick={handleClose}>\n            {lang('OK')}\n          </Button>\n        )}\n        {gift && (\n          <>\n            <Checkbox\n              label={lang('GiftUpgradeKeepDetails')}\n              onCheck={setShouldKeepOriginalDetails}\n              checked={shouldKeepOriginalDetails}\n            />\n            <Button className={styles.footerButton} size=\"smaller\" isShiny onClick={handleUpgrade}>\n              {gift.alreadyPaidUpgradeStars\n                ? lang('GeneralConfirm')\n                : lang('GiftUpgradeButton', {\n                  amount: formatStarsAsIcon(lang, (gift.gift as ApiStarGiftRegular).upgradeStars!, { asFont: true }),\n                }, { withNodes: true })}\n            </Button>\n          </>\n        )}\n      </div>\n    );\n\n    return {\n      listItemData,\n      header,\n      footer,\n    };\n  }, [previewAttributes, isOpen, lang, renderingRecipient, renderingModal?.gift, shouldKeepOriginalDetails]);\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={modalData?.header}\n      footer={modalData?.footer}\n      listItemData={modalData?.listItemData}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const recipientId = modal?.recipientId;\n    const recipient = recipientId ? selectPeer(global, recipientId) : undefined;\n\n    return {\n      recipient,\n    };\n  },\n)(GiftUpgradeModal));\n\nfunction getRandomAttributes(list: ApiStarGiftAttribute[], previousSelection?: Attributes): Attributes {\n  const models = list.filter((attr): attr is ApiStarGiftAttributeModel => (\n    attr.type === 'model' && attr.name !== previousSelection?.model.name\n  ));\n  const patterns = list.filter((attr): attr is ApiStarGiftAttributePattern => (\n    attr.type === 'pattern' && attr.name !== previousSelection?.pattern.name\n  ));\n  const backdrops = list.filter((attr): attr is ApiStarGiftAttributeBackdrop => (\n    attr.type === 'backdrop' && attr.name !== previousSelection?.backdrop.name\n  ));\n\n  const randomModel = models[Math.floor(Math.random() * models.length)];\n  const randomPattern = patterns[Math.floor(Math.random() * patterns.length)];\n  const randomBackdrop = backdrops[Math.floor(Math.random() * backdrops.length)];\n\n  return {\n    model: randomModel,\n    pattern: randomPattern,\n    backdrop: randomBackdrop,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"qL0cHbwS\",\"profileBlock\":\"t18QCmAb\",\"titleContainer\":\"q8w7tnmR\",\"radialPattern\":\"_1RfhkfB\",\"lockIcon\":\"jiPObOWv\",\"avatar\":\"JK2zOWA7\",\"userTitle\":\"lxxbgNCl\",\"status\":\"MLMdxkUg\",\"giftTitle\":\"wxg_5ou_\",\"infoDescription\":\"KSCLIMZm\",\"footer\":\"VDrvalBo\"};","import { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { selectIsCurrentUserPremium, selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport buildStyle from '../../../../util/buildStyle';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useCustomEmoji from '../../../common/hooks/useCustomEmoji';\n\nimport Avatar from '../../../common/Avatar';\nimport FullNameTitle from '../../../common/FullNameTitle';\nimport Icon from '../../../common/icons/Icon';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport Button from '../../../ui/Button';\nimport TableAboutModal, { type TableAboutData } from '../../common/TableAboutModal';\n\nimport styles from './GiftStatusInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftStatusInfoModal'];\n};\n\ntype StateProps = {\n  currentUser: ApiUser;\n  isCurrentUserPremium?: boolean;\n};\n\nconst GiftStatusInfoModal = ({\n  modal,\n  currentUser,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftStatusInfoModal,\n    setEmojiStatus,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const { emojiStatus } = renderingModal || {};\n\n  const subtitleColor = emojiStatus?.textColor;\n\n  const patternIcon = useCustomEmoji(emojiStatus?.patternDocumentId);\n\n  const handleClose = useLastCallback(() => {\n    closeGiftStatusInfoModal();\n  });\n\n  const onWearClick = useLastCallback(() => {\n    if (emojiStatus) {\n      setEmojiStatus({ emojiStatus });\n    }\n    closeGiftStatusInfoModal();\n  });\n\n  const radialPatternBackdrop = useMemo(() => {\n    if (!emojiStatus || !isOpen) return undefined;\n\n    const backdropColors = [emojiStatus.centerColor, emojiStatus.edgeColor];\n    const patternColor = emojiStatus.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={patternIcon.customEmoji}\n      />\n    );\n  }, [emojiStatus, isOpen, patternIcon]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    return {\n      ...currentUser,\n      emojiStatus,\n    } satisfies ApiUser;\n  }, [currentUser, emojiStatus]);\n\n  const header = useMemo(() => {\n    return (\n      <div className={styles.header}>\n        <div\n          className={buildClassName(styles.profileBlock)}\n          style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}\n        >\n\n          {radialPatternBackdrop}\n          <Avatar peer={mockPeerWithStatus} size=\"jumbo\" className={styles.avatar} />\n          <FullNameTitle\n            peer={mockPeerWithStatus}\n            className={styles.userTitle}\n            withEmojiStatus\n            noFake\n            noVerified\n            statusSparklesColor={subtitleColor}\n          />\n          <p className={styles.status} style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}>\n            {lang('Online')}\n          </p>\n        </div>\n        <div className={styles.titleContainer}>\n          <div className={styles.giftTitle}>\n            {\n              lang('UniqueStatusWearTitle', {\n                gift: mockPeerWithStatus?.emojiStatus?.title,\n              })\n            }\n          </div>\n          <div className={styles.infoDescription}>\n            {\n              lang('UniqueStatusBenefitsDescription')\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }, [subtitleColor, radialPatternBackdrop, mockPeerWithStatus, lang]);\n\n  const listItemData = [\n    ['radial-badge', lang('UniqueStatusBadgeBenefitTitle'), lang('UniqueStatusBadgeDescription')],\n    ['unique-profile', lang('UniqueStatusProfileDesignBenefitTitle'), lang('UniqueStatusProfileDesignDescription')],\n    ['proof-of-ownership', lang('UniqueStatusProofOfOwnershipBenefitTitle'),\n      lang('UniqueStatusProofOfOwnershipDescription')],\n  ] satisfies TableAboutData;\n\n  const footer = useMemo(() => {\n    if (!isOpen) return undefined;\n    return (\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={onWearClick}\n        >\n          {lang('UniqueStatusWearButton')}\n          {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.lockIcon} />}\n        </Button>\n      </div>\n    );\n  }, [lang, isCurrentUserPremium, isOpen]);\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={header}\n      listItemData={listItemData}\n      footer={footer}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!)!;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      currentUser,\n      isCurrentUserPremium,\n    };\n  },\n)(GiftStatusInfoModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"LQgz8Nlx\",\"giftPreview\":\"hgs0ts_O\",\"backdrop\":\"OnBhMaBw\",\"description\":\"HBxB4QPY\",\"arrow\":\"kXTOUpfb\",\"noPassword\":\"BnqLhoKr\"};","import {\n  memo,\n  useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiStarGiftUnique } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { type CustomPeer, SettingsScreens } from '../../../../types';\n\nimport { getDays } from '../../../../util/dates/units';\nimport { getServerTime } from '../../../../util/serverTime';\nimport { getGiftAttributes } from '../../../common/helpers/gifts';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport PasswordForm from '../../../common/PasswordForm';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\n\nimport styles from './GiftWithdrawModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftWithdrawModal'];\n};\n\ntype StateProps = {\n  hasPassword?: boolean;\n  passwordHint?: string;\n};\n\nconst FRAGMENT_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'fragment',\n  title: '',\n  customPeerAvatarColor: '#000000',\n};\nconst GIFT_STICKER_SIZE = 4.5 * REM;\n\nconst GiftWithdrawModal = ({ modal, hasPassword, passwordHint }: OwnProps & StateProps) => {\n  const {\n    closeGiftWithdrawModal,\n    clearGiftWithdrawError,\n    closeGiftInfoModal,\n    processStarGiftWithdrawal,\n    openSettingsScreen,\n  } = getActions();\n  const isOpen = Boolean(modal);\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const lang = useLang();\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const gift = renderingModal?.gift?.gift as ApiStarGiftUnique;\n  const giftAttributes = gift && getGiftAttributes(gift);\n  const exportDelay = renderingModal?.gift?.canExportAt\n    ? Math.max(renderingModal.gift.canExportAt - getServerTime(), 0) : undefined;\n\n  const handleClose = useLastCallback(() => {\n    closeGiftWithdrawModal();\n  });\n\n  const handleSubmit = useLastCallback((password: string) => {\n    processStarGiftWithdrawal({\n      gift: renderingModal!.gift.inputGift!,\n      password,\n    });\n  });\n\n  const handleSetUpPassword = useLastCallback(() => {\n    openSettingsScreen({\n      screen: SettingsScreens.TwoFaDisabled,\n    });\n    closeGiftWithdrawModal();\n    closeGiftInfoModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={lang('GiftWithdrawTitle')}\n      hasCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {giftAttributes && (\n        <>\n          <div className={styles.header}>\n            <div className={styles.giftPreview}>\n              <RadialPatternBackground\n                className={styles.backdrop}\n                backgroundColors={[giftAttributes.backdrop!.centerColor, giftAttributes.backdrop!.edgeColor]}\n                patternColor={giftAttributes.backdrop?.patternColor}\n                patternIcon={giftAttributes.pattern?.sticker}\n              />\n              <AnimatedIconFromSticker\n                className={styles.sticker}\n                size={GIFT_STICKER_SIZE}\n                sticker={giftAttributes.model?.sticker}\n              />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar\n              peer={FRAGMENT_PEER}\n              size=\"giant\"\n              className={styles.avatar}\n            />\n          </div>\n          <p className={styles.description}>\n            {lang('GiftWithdrawDescription', {\n              gift: `${gift.title} #${gift.number}`,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n              renderTextFilters: ['br'],\n            })}\n          </p>\n        </>\n      )}\n      {Boolean(exportDelay) && (\n        <p className={styles.exportHint}>\n          {lang('GiftWithdrawWait', { days: getDays(exportDelay) }, { pluralValue: getDays(exportDelay) })}\n        </p>\n      )}\n      {!hasPassword && (\n        <>\n          <span className={styles.noPassword}>{lang('ErrorPasswordMissing')}</span>\n          <Button className=\"mt-2\" size=\"smaller\" onClick={handleSetUpPassword}>{lang('SetUp2FA')}</Button>\n        </>\n      )}\n      {hasPassword && !exportDelay && (\n        <PasswordForm\n          shouldShowSubmit\n          placeholder={lang('CheckPasswordPlaceholder')}\n          error={renderingModal?.errorKey && lang.withRegular(renderingModal?.errorKey)}\n          description={lang('CheckPasswordDescription')}\n          clearError={clearGiftWithdrawError}\n          isLoading={renderingModal?.isLoading}\n          hint={passwordHint}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isOpen}\n          onChangePasswordVisibility={setShouldShowPassword}\n          submitLabel={lang('GiftWithdrawSubmit')}\n          onSubmit={handleSubmit}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword,\n        },\n      },\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      hasPassword,\n      passwordHint,\n    };\n  },\n)(GiftWithdrawModal));\n","import {\n  getIsHeavyAnimating, useCallback, useRef, useState,\n} from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useHeavyAnimation from './useHeavyAnimation';\nimport useRunDebounced from './useRunDebounced';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useDebouncedMemo<R, D extends unknown[]>(\n  resolverFn: () => R, ms: number, dependencies: D,\n): R | undefined {\n  const [value, setValue] = useState<R>();\n  const { isFrozen, updateWhenUnfrozen } = useHeavyAnimationFreeze();\n  const runDebounced = useRunDebounced(ms, true);\n\n  useSyncEffect(() => {\n    if (isFrozen) {\n      updateWhenUnfrozen();\n      return;\n    }\n\n    runDebounced(() => {\n      setValue(resolverFn());\n    });\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...dependencies, isFrozen]);\n\n  return value;\n}\n\nfunction useHeavyAnimationFreeze() {\n  const isPending = useRef(false);\n\n  const updateWhenUnfrozen = useCallback(() => {\n    isPending.current = true;\n  }, []);\n\n  const forceUpdate = useForceUpdate();\n  const handleUnfreeze = useCallback(() => {\n    if (!isPending.current) {\n      return;\n    }\n\n    isPending.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n  useHeavyAnimation(noop, handleUnfreeze);\n\n  return {\n    isFrozen: getIsHeavyAnimating(),\n    updateWhenUnfrozen,\n  };\n}\n\nfunction noop() {\n}\n","import { useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\nimport useAsync from './useAsync';\nimport useDebouncedMemo from './useDebouncedMemo';\nimport useLastCallback from './useLastCallback';\n\nconst DEBOUNCE_TIMEOUT = 300;\n\nexport async function peerGlobalSearch(query: string) {\n  const searchResult = await callApi('searchChats', { query });\n  if (!searchResult) return undefined;\n\n  const ids = [...searchResult.accountResultIds, ...searchResult.globalResultIds];\n\n  return ids;\n}\n\nexport function prepareChatMemberSearch(chat: ApiChat) {\n  return async (query: string) => {\n    const searchResult = await callApi('fetchMembers', {\n      chat,\n      memberFilter: 'search',\n      query,\n    });\n\n    return searchResult?.members?.map((member) => member.userId) || [];\n  };\n}\n\nexport default function usePeerSearch({\n  query,\n  queryFn = peerGlobalSearch,\n  defaultValue,\n  debounceTimeout = DEBOUNCE_TIMEOUT,\n  isDisabled,\n}: {\n  query: string;\n  queryFn?: (query: string) => Promise<string[] | undefined>;\n  defaultValue?: string[];\n  debounceTimeout?: number;\n  isDisabled?: boolean;\n}) {\n  const debouncedQuery = useDebouncedMemo(() => query, debounceTimeout, [query]);\n  const [currentResultsQuery, setCurrentResultsQuery] = useState<string>('');\n  const searchQuery = !query ? query : debouncedQuery; // Ignore debounce if query is empty\n  const queryCallback = useLastCallback(queryFn);\n\n  const result = useAsync(async () => {\n    if (!searchQuery || isDisabled) {\n      setCurrentResultsQuery('');\n      return Promise.resolve(defaultValue);\n    }\n\n    const answer = await queryCallback(searchQuery);\n    setCurrentResultsQuery(searchQuery);\n    return answer;\n  }, [searchQuery, defaultValue, queryCallback, isDisabled], defaultValue);\n\n  return {\n    ...result,\n    currentResultsQuery,\n  };\n}\n","import {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiStarGiftUnique } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport type { UniqueCustomPeer } from '../../../../types';\n\nimport { ALL_FOLDER_ID } from '../../../../config';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectCanGift, selectPeer } from '../../../../global/selectors';\nimport { unique } from '../../../../util/iteratees';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { getGiftAttributes } from '../../../common/helpers/gifts';\nimport sortChatIds from '../../../common/helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePeerSearch from '../../../../hooks/usePeerSearch';\n\nimport GiftTransferPreview from '../../../common/gift/GiftTransferPreview';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport PickerModal from '../../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['giftTransferModal'];\n};\n\ntype StateProps = {\n  contactIds?: string[];\n  currentUserId?: string;\n};\n\ntype Categories = 'withdraw';\n\nconst GiftTransferModal = ({\n  modal, contactIds, currentUserId,\n}: OwnProps & StateProps) => {\n  const { closeGiftTransferModal, openGiftWithdrawModal, transferGift } = getActions();\n  const isOpen = Boolean(modal);\n\n  const lang = useLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const uniqueGift = renderingModal?.gift?.gift as ApiStarGiftUnique;\n  const giftAttributes = uniqueGift && getGiftAttributes(uniqueGift);\n\n  const [selectedId, setSelectedId] = useState<string | undefined>();\n\n  const renderingSelectedPeerId = useCurrentOrPrev(selectedId);\n  const renderingSelectedPeer = useMemo(() => {\n    const global = getGlobal();\n    return renderingSelectedPeerId ? selectPeer(global, renderingSelectedPeerId) : undefined;\n  }, [renderingSelectedPeerId]);\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n\n  const sortedLocalIds = useMemo(() => {\n    return unique([\n      ...(contactIds || []),\n      ...(orderedChatIds || []),\n    ]);\n  }, [contactIds, orderedChatIds]);\n\n  const { result: foundIds, currentResultsQuery } = usePeerSearch({\n    query: searchQuery,\n    defaultValue: sortedLocalIds,\n  });\n\n  const isLoading = currentResultsQuery !== searchQuery;\n\n  const categories = useMemo(() => {\n    if (currentResultsQuery) return MEMO_EMPTY_ARRAY;\n\n    return [{\n      type: 'withdraw',\n      isCustomPeer: true,\n      avatarIcon: 'toncoin',\n      peerColorId: 5,\n      title: lang('GiftTransferTON'),\n    }] satisfies UniqueCustomPeer<Categories>[];\n  }, [lang, currentResultsQuery]);\n\n  const handleCategoryChange = useLastCallback((category: Categories) => {\n    if (category !== 'withdraw') return;\n\n    openGiftWithdrawModal({\n      gift: renderingModal!.gift,\n    });\n    closeGiftTransferModal();\n  });\n\n  const displayIds = useMemo(() => {\n    if (isLoading) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n\n    return sortChatIds((foundIds || []).filter((peerId) => (\n      peerId !== currentUserId && selectCanGift(global, peerId)\n    )),\n    false);\n  }, [isLoading, foundIds, currentUserId]);\n\n  const closeConfirmModal = useLastCallback(() => {\n    setSelectedId(undefined);\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      setSelectedId(undefined);\n    }\n  }, [isOpen]);\n\n  const handleTransfer = useLastCallback(() => {\n    if (!renderingModal?.gift.inputGift) return;\n    transferGift({\n      gift: renderingModal.gift.inputGift,\n      recipientId: renderingSelectedPeerId!,\n      transferStars: renderingModal.gift.transferStars,\n    });\n\n    closeConfirmModal();\n    closeGiftTransferModal();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={closeGiftTransferModal}\n      title={lang('GiftTransferTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      ignoreFreeze\n    >\n      <PeerPicker<Categories>\n        itemIds={displayIds}\n        categories={categories}\n        onSelectedCategoryChange={handleCategoryChange}\n        withDefaultPadding\n        withPeerUsernames\n        isSearchable\n        noScrollRestore\n        isLoading={isLoading}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onFilterChange={setSearchQuery}\n        onSelectedIdChange={setSelectedId}\n      />\n      {giftAttributes && (\n        <ConfirmDialog\n          isOpen={Boolean(selectedId)}\n          noDefaultTitle\n          onClose={closeConfirmModal}\n          confirmLabel={renderingModal?.gift.transferStars\n            ? lang(\n              'GiftTransferConfirmButton',\n              { amount: formatStarsAsIcon(lang, renderingModal.gift.transferStars, { asFont: true }) },\n              { withNodes: true },\n            ) : lang('GiftTransferConfirmButtonFree')}\n          confirmHandler={handleTransfer}\n        >\n          {renderingSelectedPeer && (\n            <GiftTransferPreview\n              peer={renderingSelectedPeer}\n              gift={uniqueGift}\n            />\n          )}\n          <p>\n            {renderingModal?.gift.transferStars\n              ? lang('GiftTransferConfirmDescription', {\n                gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                amount: formatStarsAsText(lang, renderingModal.gift.transferStars),\n                peer: getPeerTitle(lang, renderingSelectedPeer!),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })\n              : lang('GiftTransferConfirmDescriptionFree', {\n                gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                peer: getPeerTitle(lang, renderingSelectedPeer!),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })}\n          </p>\n        </ConfirmDialog>\n      )}\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { contactList, currentUserId } = global;\n\n    return {\n      contactIds: contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(GiftTransferModal));\n","import { memo, useState } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectUser } from '../../../../global/selectors';\nimport { formatStarsAsText } from '../../../../util/localization/format';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Checkbox from '../../../ui/Checkbox';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['chatRefundModal'];\n};\n\ntype StateProps = {\n  user?: ApiUser;\n};\n\nconst ChatRefundModal = ({ modal, user }: OwnProps & StateProps) => {\n  const { closeChatRefundModal, toggleNoPaidMessagesException } = getActions();\n\n  const [shouldRefundStars, setShouldRefundStars] = useState(false);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingUser = useCurrentOrPrev(user);\n\n  const { starsToRefund, userId } = renderingModal || {};\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n\n  const handleConfirmRemoveFee = useLastCallback(() => {\n    closeChatRefundModal();\n    if (!userId) return;\n\n    toggleNoPaidMessagesException ({ userId, shouldRefundCharged: shouldRefundStars });\n  });\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeChatRefundModal}\n      title={lang('RemoveFeeTitle')}\n      confirmLabel={lang('ConfirmRemoveMessageFee')}\n      confirmHandler={handleConfirmRemoveFee}\n    >\n      {lang('ConfirmDialogMessageRemoveFee', {\n        peer: renderingUser && getPeerTitle(lang, renderingUser),\n      }, {\n        withMarkdown: true,\n        withNodes: true,\n      })}\n      {\n        Boolean(starsToRefund) && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('ConfirmDialogRemoveFeeRefundStars', {\n              amount: formatStarsAsText(lang, starsToRefund),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n            checked={shouldRefundStars}\n            onCheck={setShouldRefundStars}\n          />\n        )\n      }\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): StateProps => {\n  const user = modal?.userId ? selectUser(global, modal.userId) : undefined;\n\n  return {\n    user,\n  };\n})(ChatRefundModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n  withBalanceBar?: boolean;\n  isLowStackPriority?: true;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n  withBalanceBar,\n  isLowStackPriority,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n      withBalanceBar={withBalanceBar}\n      isLowStackPriority={isLowStackPriority}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {Boolean(label) && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n"],"names":["memo","StarTopupOptionList","isActive","className","options","selectedStarOption","selectedStarCount","starsNeeded","onClick","oldLang","useOldLang","lang","useLang","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","useFlag","useEffect","renderingOptions","canExtend","useMemo","undefined","maxOption","reduce","max","option","stars","forceShowAll","result","currentStackedStarsCount","canExtendOptions","forEach","index","isExtended","push","starsCount","Math","min","isWide","length","_jsxs","buildClassName","styles","children","map","isOdd","isActiveOption","perUserStarCount","winner","winners","find","opt","users","perUserStars","wideOption","active","optionTop","formatInteger","_jsx","stackedStars","dir","isRtl","Array","from","StarIcon","stackedStar","type","size","optionBottom","formatCurrency","amount","currency","Boolean","renderText","Button","moreOptions","isText","noForcedUpperCase","Icon","iconDown","name","TableAboutModal","isOpen","listItemData","headerIconName","header","footer","buttonText","hasBackdrop","withSeparator","onClose","onButtonClick","contentClassName","Modal","hasAbsoluteCloseButton","absoluteCloseButtonColor","icon","title","subtitle","ListItem","isStatic","multiline","iconClassName","Separator","PickerModal","confirmButtonText","isConfirmDisabled","shouldAdaptToSearch","withFixedHeight","onConfirm","withPremiumGradient","modalProps","hasButton","isSlim","headerClassName","color","disabled","withGlobal","global","modal","user","forUserId","selectUser","StarsGiftModal","closeStarsGiftModal","openInvoice","requestConfetti","getActions","dialogRef","useRef","renderingModal","useCurrentOrPrev","selectedOption","setSelectedOption","useState","isHeaderHidden","setHeaderHidden","showConfetti","useLastCallback","dialog","current","top","left","width","height","querySelector","getBoundingClientRect","withStars","isCompleted","handleClick","userId","id","handleClose","bottomText","parts","split","SafeLink","url","text","modalDialog","content","main","onScroll","e","scrollTop","currentTarget","round","closeButton","ariaLabel","hiddenHeader","starHeaderText","headerInfo","_Fragment","Avatar","peer","avatar","logoBackground","src","StarsBackground","alt","draggable","logo","StarLogo","headerText","center","formatCurrencyAsString","code","description","getPeerTitle","section","starsGiftOptions","secondaryInfo","chats","listIds","currentUserId","userIds","contactList","activeListIds","archivedListIds","archived","StarsGiftingPickerModal","closeStarsGiftingPickerModal","openStarsGiftModal","searchQuery","setSearchQuery","displayedUserIds","usersById","getGlobal","byId","combinedIds","unique","filteredUserIds","filterPeersByQuery","ids","query","sortChatIds","filter","isSupport","isUserBot","isDeletedUser","SERVICE_NOTIFICATIONS_USER_ID","handleSelectedUserIdsChange","newSelectedId","hasCloseButton","onEnter","PeerPicker","itemIds","filterValue","filterPlaceholder","onFilterChange","isSearchable","withDefaultPadding","withStatus","onSelectedIdChange","BalanceBlock","balance","withAddButton","openStarsBalanceModal","balanceBlock","balanceInfo","smallerText","balanceBottom","formatStarsAmount","BadgeButton","addStarsButton","addStarsIcon","StarsSubscriptionItem","subscription","openStarsSubscriptionModal","peerId","pricing","until","isCancelled","photo","useSelector","selectPeer","selectProvidedPeer","hasExpired","Date","now","formattedDate","formatDateToString","root","preview","subscriptionStar","info","webPhoto","status","statusEnded","statusPricing","star","statusPeriod","getTransactionTitle","transaction","paidMessages","count","withNodes","pluralValue","isGiftResale","isNegativeStarsAmount","starRefCommision","formatPercent","isGiftUpgrade","extendedMedia","subscriptionPeriod","isReaction","giveawayPostId","isMyGift","isGift","starGift","customPeer","buildStarsTransactionCustomPeer","titleKey","starsAmount","nanos","SingleMediaThumb","boughtMedia","media","video","mediaHash","getMediaHash","thumb","getMediaThumbUri","mediaBlob","useMedia","blurry","full","PaidMediaThumb","isTransactionPreview","isLocked","slice","reverse","item","i","arr","realIndex","MediaSpoiler","isVisible","thumbDataUri","thumbnail","dataUri","noOutline","StarsTransactionItem","openStarsTransactionModal","date","transactionPeer","selectOptionalPeer","isUniqueGift","giftSticker","getStickerFromGift","data","avatarPeer","CUSTOM_PEER_PREMIUM","subtitleKey","number","isRefund","hasFailed","isPending","previewContent","backdrop","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","uniqueGiftBackground","AnimatedIconFromSticker","sticker","play","formatDateTimeToString","negative","positive","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS_KEYS","TRANSACTION_ITEM_CLASS","shouldForceHeight","history","all","transactions","starsBalanceState","canBuyPremium","selectIsPremiumPurchaseBlocked","StarsBalanceModal","closeStarsBalanceModal","loadStarsTransactions","loadStarsSubscriptions","openStarsGiftingPickerModal","subscriptions","selectedTabIndex","setSelectedTabIndex","areBuyOptionsShown","showBuyOptions","hideBuyOptions","originStarsPayment","originReaction","originGift","topup","shouldOpenOnBuy","ongoingTransactionAmount","form","invoice","totalAmount","subscriptionInfo","subscriptionPricing","gift","balanceNeeded","starsNeededText","channel","selectChat","chatId","getChatTitle","bot","botId","getUserFullName","purpose","PAID_MESSAGES_PURPOSE","withMarkdown","shouldShowItems","shouldSuggestGifting","transactionTabs","key","tosText","handleLoadMoreTransactions","handleLoadMoreSubscriptions","openStarsGiftingPickerModalHandler","handleBuyStars","minimal","modalBalance","starButton","topupOptions","tos","list","sectionTitle","nextOffset","isLoading","loadMore","loadMoreIcon","container","Transition","activeKey","renderCount","shouldRestoreHeight","transition","InfiniteScroll","onLoadMore","items","scrollContainerClosest","itemSelector","noFastList","noScrollRestoreOnTop","TabList","tabs","tabClassName","tab","activeTab","onSwitchTab","messageInputInvoice","inputInvoice","message","selectChatMessage","messageId","chat","isPaidMedia","paidMedia","paidMediaMessage","paidMediaChat","StarPaymentModal","closeStarsPaymentModal","sendStarPaymentForm","markLoading","unmarkLoading","prevModal","usePrevious","isBotSubscription","canShowPeerItem","descriptionText","botName","starsText","areAllPhotos","every","duration","areAllVideos","mediaText","channelTitle","disclaimerText","link","inviteCustomPeer","getCustomPeerFromInvite","handlePayment","paymentContent","paymentImages","paymentPhoto","avatarStar","PeerBadge","avatarWebPhoto","avatarSize","badgeIcon","badgeText","badgeClassName","amountBadge","paymentImageBackground","PeerChip","botItem","paymentButton","formatStarsAsIcon","asFont","disclaimer","UniqueGiftHeader","modelAttribute","backdropAttribute","patternAttribute","subtitlePeer","resellPrice","openChat","deps","useTransitionActiveKey","subtitleColor","textColor","radialPatternBackdrop","backdropColors","patternColor","patternIcon","slideClassName","direction","style","buildStyle","paidMessageCommission","appConfig","starsPaidMessageCommissionPermille","starCount","starsGiftSticker","selectGiftStickerForStars","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","topSticker","StarsTransactionModal","showNotification","openMediaViewer","closeStarsTransactionModal","handleOpenMedia","origin","MediaViewerOrigin","StarsTransaction","standaloneMedia","flatMap","Object","values","starModalData","giftAttributes","toName","getStarsPeerTitleKey","messageLink","getMessageLink","giveawayMessageLink","mediaAmount","m","shouldDisplayAvatar","uniqueGiftHeader","pattern","model","regularHeader","noLoop","percent","tableData","peerLabel","containerClassName","copyTextToClipboard","footerTextParts","renderingModalData","TableInfoModal","StarsSubscriptionModal","closeStarsSubscriptionModal","fulfillStarsSubscription","changeStarsSubscription","checkChatInvite","loadStarStatus","buttonState","canRefulfill","canRestart","chatInviteHash","invoiceSlug","handleButtonClick","hash","slug","hasBotCancelled","isApiPeerUser","specialReplacement","STARS_ICON_PLACEHOLDER","footerTos","DEFAULT_POINTS","getProgress","points","value","pointIndex","findIndex","point","prevPoint","nextPoint","getValue","progress","floor","StarSlider","maxValue","defaultValue","onChange","floatingBadgeRef","setValue","useEffectOnce","updateSafeBadgePosition","badge","parent","parentElement","requestMeasure","safeMinX","offsetLeft","offsetWidth","safeMaxX","requestMutation","setProperty","useResizeObserver","handleChange","event","newValue","Number","floatingBadgeWrapper","floatingBadge","ref","floatingBadgeText","floatingBadgeIcon","AnimatedCounter","floatingBadgeTriangle","viewBox","fill","x1","x2","y1","y2","offset","d","Sparkles","preset","sparkles","slider","step","ANONYMOUS_PEER","avatarIcon","customPeerAvatarColor","isCustomPeer","starBalance","maxAmount","paidReactionMaxAmount","defaultPrivacy","settings","paidReactionPrivacy","sendPaidReactionsAsPeerIds","currentUser","PaidReactionModal","closePaidReactionModal","addLocalPaidReaction","loadSendPaidReactionsAs","setStarsAmount","isTouched","markTouched","unmarkTouched","shouldSendAsAnonymous","setShouldSendAsAnonymous","sendAsPeerId","setSendAsPeerId","senderPeer","isMobile","useAppLayout","handleShowInTopSendersChange","target","checked","handleAmountChange","filteredMyReactorIds","unshift","canChangeSendAsPeer","currentReactor","reactions","topReactors","reactor","isMy","isAnonymous","includes","handleSend","isPrivate","shouldIgnoreDefaultPrivacy","handleSendAsPeerChange","renderMenuItem","isSelected","MenuItem","itemInfo","FullNameTitle","itemTitle","noFake","noVerified","itemSubtitle","itemIcon","SendAsPeerMenuButton","onTrigger","ripple","sendAsPeerMenuButton","sendAsPeerButtonAvatar","buttonDownIcon","sendAsPeersMenu","DropdownMenu","sendAsPeerMenu","bubbleClassName","sendAsPeerMenuBubble","trigger","positionX","autoClose","hasCurrentSender","myReactorAmount","isCurrentReactor","localAmount","sender","sort","a","b","chatTitle","isLowStackPriority","sendAsPeersMenuContainer","headerControlPanel","topLabel","countText","topPeer","topBadge","separator","Checkbox","checkBox","label","buttonStar","theme","selectTheme","isBlurred","isBackgroundBlurred","background","customBackground","backgroundColor","selectThemeValues","paidMessagesStars","selectPeerPaidMessagesStars","userFullInfo","selectUserFullInfo","isGiftForSelf","areUniqueStarGiftsDisallowed","disallowedGifts","shouldDisallowUniqueStarGifts","shouldDisallowLimitedStarGifts","tabState","selectTabState","captionLimit","starGiftMaxMessageLength","isPaymentFormLoading","giftByStars","sendStarGift","sendPremiumGiftByStars","openGiftUpgradeModal","giftMessage","setGiftMessage","shouldHideName","setShouldHideName","shouldPayForUpgrade","setShouldPayForUpgrade","shouldPayByStars","setShouldPayByStars","customBackgroundValue","useCustomBackground","isStarGift","isPremiumGift","hasPremiumByStars","isPeerUser","isSelf","localMessage","currentGift","isOutgoing","senderId","action","mediaType","months","isNameHidden","starsToConvert","canUpgrade","alreadyPaidUpgradeStars","upgradeStars","fromId","handleGiftMessageChange","handleShouldHideNameChange","handleShouldPayForUpgradeChange","toggleShouldPayByStars","handleOpenUpgradePreview","giftId","handleGetMoreStars","handleMainButtonClick","shouldUpgrade","canUseStarsPayment","bgClassName","inert","ActionMessage","threadId","MAIN_THREAD_ID","appearanceOrder","symbolsLeft","TextArea","maxLength","maxLengthIndicator","toString","narrow","Switcher","Link","isPrimary","receiver","renderOptionsSection","availabilityRemains","PremiumProgress","availabilityTotal","rightText","leftText","renderFooter","selectGiftStickerForDuration","baseMonthAmount","optionByStars","handleGiftClick","perMonth","discount","ceil","tabIndex","role","nonInteractive","caption","renderMonths","pill","fluid","GiftRibbon","observeIntersection","isResale","openGiftInfoModal","stickerRef","setIsVisible","isGiftUnique","uniqueGift","regularGift","resellPriceInStars","resellMinStars","priceInStarsAsString","isLimited","isSoldOut","giftNumber","giftRibbon","useOnIntersect","entry","visible","isIntersecting","StickerView","observeIntersectionForPlaying","observeIntersectionForLoading","containerRef","shouldPreloadPreview","withSparkleEffect","starGifts","resaleGifts","areGiftsAllLoaded","isAllLoaded","areGiftsLoading","updateIteration","resellGifts","gifts","GiftModalResaleScreen","onGiftClick","loadResaleGifts","updateResaleGiftsFilter","scrollerRef","resellGiftsIds","g","hasFilter","modelAttributes","patternAttributes","backdropAttributes","handleLoadMoreResellGifts","isGiftsEmpty","viewportIds","useInfiniteScroll","RESALE_GIFTS_LIMIT","observe","useIntersectionObserver","rootRef","throttleMs","handleResetGiftsFilter","resaleScreenRoot","notFoundGiftsRoot","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","SearchingDuck","notFoundGiftsDescription","notFoundGiftsLink","resaleStarGiftsContainer","preloadBackwards","GiftItemStar","ATTRIBUTE_STICKER_SIZE","REM","ResaleGiftMenuAttributeSticker","customColor","useDynamicColorListener","thumbClassName","attributes","counters","GiftResaleFilters","searchModelQuery","setSearchModelQuery","searchBackdropQuery","setSearchBackdropQuery","searchPatternQuery","setSearchPatternQuery","filteredAttributes","counter","attribute","found","attr","backdropId","documentId","filteredAndSearchedAttributes","filterBySearch","trim","toLowerCase","sortMenuRef","isContextMenuOpen","isSortContextMenuOpen","contextMenuAnchor","sortContextMenuAnchor","handleContextMenu","handleSortContextMenu","handleContextMenuClose","handleSortContextMenuClose","handleContextMenuHide","handleSortContextMenuHide","useContextMenuHandlers","getSortMenuElement","modelMenuRef","isModelContextMenuOpen","modelContextMenuAnchor","handleModelContextMenu","handleModelContextMenuClose","handleModelContextMenuHide","getModelMenuElement","backdropMenuRef","isBackdropContextMenuOpen","backdropContextMenuAnchor","handleBackdropContextMenu","handleBackdropContextMenuClose","handleBackdropContextMenuHide","getBackdropMenuElement","patternMenuRef","isPatternContextMenuOpen","patternContextMenuAnchor","handlePatternContextMenu","handlePatternContextMenuClose","handlePatternContextMenuHide","getPatternMenuElement","SortMenuButton","sortType","isMenuOpen","ModelMenuButton","attributesCount","BackdropMenuButton","PatternMenuButton","handleSortMenuItemClick","handleSelectedAllModelsClick","handleSelectedAllPatternsClick","handleSelectedAllBackdropsClick","handleModelMenuItemClick","updatedAttributes","some","handlePatternMenuItemClick","handleBackdropMenuItemClick","handleSearchModelInputReset","useCallback","handleSearchBackdropInputReset","handleSearchPatternInputReset","handleSearchInputClick","stopPropagation","preventDefault","modelMenuItemsContainerRef","isDisabled","Menu","anchor","menu","getMenuElement","onCloseAnimationEnd","menuItemText","menuItemIcon","models","selectedAttributes","isSelectedAll","menuContentContainer","SearchInput","search","onReset","placeholder","menuItemStickerText","renderModelMenuItems","right","backdrops","backdropAttributeMenuItemText","renderBackdropMenuItems","patterns","renderPatternMenuItems","buttonsContainer","idsByCategory","StarGiftCategoryList","onCategoryChanged","areLimitedStarGiftsDisallowed","starCategories","keys","category","hasResale","selectedCategory","setSelectedCategory","renderCategoryName","renderCategoryItem","handleItemClick","isInteger","useHorizontalScroll","runThrottledForScroll","throttle","cb","forPeerId","resaleGiftsCount","areResaleGiftsLoading","boostPerSentGift","boostsPerSentGift","starGiftsById","starGiftIdsByCategory","GiftModal","closeGiftModal","resetResaleGifts","transitionRef","giftHeaderRef","isApiPeerChat","selectedGift","setSelectedGift","selectedResellGift","setSelectedResellGift","shouldShowMainScreenHeader","setShouldShowMainScreenHeader","isMainScreenHeaderForStarGifts","setIsMainScreenHeaderForStarGifts","isGiftScreenHeaderForStarGifts","setIsGiftScreenHeaderForStarGifts","areAllGiftsDisallowed","shouldDisallowPremiumGifts","disallowedGiftTypes","areUnlimitedStarGiftsDisallowed","shouldDisallowUnlimitedStarGifts","allGifts","filteredGifts","prevGift","giftsByStars","mapGifts","Map","starsGift","STARS_CURRENCY_CODE","set","baseGift","prev","isResaleScreen","isGiftScreen","shouldShowHeader","isHeaderForStarGifts","handleScroll","headerTop","transitionTop","giftPremiumDescription","starGiftDescription","renderTextFilters","recipientId","handleCloseModal","handleCloseButtonClick","isBackButton","buttonClassName","resaleHeader","headerSlide","isFirstLoading","resaleHeaderContentContainer","resaleHeaderText","resaleHeaderDescription","commonHeaderText","renderHeader","avatars","premiumGiftsGallery","GiftItemPremium","get","starGiftsDescription","starGiftsTransition","filteredGiftIds","starGiftsContainer","shouldShowResale","availabilityResale","shouldDuplicateAsResale","elements","renderStarGifts","GiftSendingOptions","GiftRecipientPicker","closeGiftRecipientPicker","openGiftModal","idsWithSelf","concat","filteredPeerIds","selectCanGift","selectedId","forceShowSelf","AVATAR_SIZE","GIFT_STICKER_SIZE","GiftTransferPreview","giftPreview","arrow","typeGift","isSavedGift","fromPeer","targetPeer","hasAdminRights","getHasAdminRight","recipientPeer","currentUserEmojiStatus","emojiStatus","collectibleEmojiStatuses","statuses","releasedByPeerId","releasedByPeer","starGiftMaxConvertPeriod","tonExplorerUrl","GiftInfoModal","closeGiftInfoModal","changeGiftVisibility","convertGiftToStars","openChatWithInfo","focusMessage","buyStarGift","isConvertConfirmOpen","openConvertConfirm","closeConvertConfirm","isConfirmModalOpen","setIsConfirmModalOpen","renderingFromPeer","renderingTargetPeer","isTargetChat","savedGift","isSender","canConvertDifference","getServerTime","conversionLeft","hasConvertOption","giftSubtitle","ownerTitle","getMainUsername","fallbackText","owner","canFocusUpgrade","upgradeMsgId","canManage","inputGift","canBuyGift","giftOwnerTitle","ownerName","ownerId","handleFocusUpgraded","giftChat","handleTriggerVisibility","isUnsaved","shouldUnsave","handleConvertToStars","handleOpenUpgradeModal","handleBuyGift","closeConfirmModal","handleConfirmBuyGift","SettingsMenuButton","headerButton","renderFooterButton","isShiny","saleDateInfo","firstSaleDate","lastSaleDate","modalData","isConverted","canConvert","isVisibleForMe","uniqueGiftContextMenu","GiftMenuItems","uniqueGiftModalHeader","modalHeader","giftResalePriceContainer","giftResalePriceStar","headerSplitButton","moreIcon","soldOut","CUSTOM_PEER_HIDDEN","unknown","starsValue","giftValue","starAmountIcon","total","renderTextWithEntities","ownerAddress","ownerPeer","originalDetails","copyIcon","withEmojiStatus","uniqueAttribute","rarityPercent","issued","issuedCount","totalCount","recipient","recipientLink","senderLink","tonLink","giftAddress","footerDescription","shouldSkipModal","withBalanceBar","ConfirmDialog","noDefaultTitle","confirmLabel","confirmHandler","formatStarsAsText","configPermille","starsStargiftResaleCommissionPermille","starsStargiftResaleAmountMin","starsStargiftResaleAmountMax","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","GiftResalePriceComposerModal","closeGiftResalePriceComposerModal","updateStarGiftPrice","price","setPrice","hasPrice","handleChangePrice","parseFloat","isNaN","handleSellGift","variables","commission","isPriceCorrect","InputText","inputMode","teactExperimentControlled","toFixed","GiftUpgradeModal","closeGiftUpgradeModal","upgradeGift","renderingRecipient","shouldKeepOriginalDetails","setShouldKeepOriginalDetails","previewAttributes","setPreviewAttributes","handleUpgrade","updatePreviewAttributes","sampleAttributes","previousSelection","random","getRandomAttributes","useInterval","getStickerMediaHash","fetch","ApiMediaFormat","BlobUrl","onCheck","isCurrentUserPremium","selectIsCurrentUserPremium","GiftStatusInfoModal","closeGiftStatusInfoModal","setEmojiStatus","useCustomEmoji","patternDocumentId","onWearClick","customEmoji","mockPeerWithStatus","statusSparklesColor","FRAGMENT_PEER","byKey","hasPassword","twoFaSettings","hint","passwordHint","GiftWithdrawModal","closeGiftWithdrawModal","clearGiftWithdrawError","processStarGiftWithdrawal","openSettingsScreen","shouldShowPassword","setShouldShowPassword","exportDelay","canExportAt","handleSubmit","password","handleSetUpPassword","screen","SettingsScreens","TwoFaDisabled","exportHint","days","getDays","noPassword","PasswordForm","shouldShowSubmit","error","errorKey","withRegular","clearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","submitLabel","onSubmit","noop","async","peerGlobalSearch","searchResult","callApi","accountResultIds","globalResultIds","contactIds","GiftTransferModal","closeGiftTransferModal","openGiftWithdrawModal","transferGift","setSelectedId","renderingSelectedPeerId","renderingSelectedPeer","orderedChatIds","useFolderManagerForOrderedIds","ALL_FOLDER_ID","sortedLocalIds","foundIds","currentResultsQuery","queryFn","debounceTimeout","debouncedQuery","resolverFn","ms","dependencies","isFrozen","updateWhenUnfrozen","forceUpdate","useForceUpdate","handleUnfreeze","useHeavyAnimation","getIsHeavyAnimating","useHeavyAnimationFreeze","runDebounced","useRunDebounced","useSyncEffect","useDebouncedMemo","setCurrentResultsQuery","queryCallback","useAsync","Promise","resolve","answer","usePeerSearch","categories","MEMO_EMPTY_ARRAY","peerColorId","handleCategoryChange","displayIds","handleTransfer","transferStars","ignoreFreeze","onSelectedCategoryChange","withPeerUsernames","noScrollRestore","ChatRefundModal","closeChatRefundModal","toggleNoPaidMessagesException","shouldRefundStars","setShouldRefundStars","renderingUser","starsToRefund","handleConfirmRemoveFee","shouldRefundCharged","headerAvatarPeer","handleOpenChat","clickArg","badgeIconClassName","textClassName","clickable"],"sourceRoot":""}