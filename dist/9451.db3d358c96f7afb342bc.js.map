{"version":3,"file":"9451.db3d358c96f7afb342bc.js","mappings":"0rEA6Ee,SAASA,EAAiBC,GACvC,IAAKA,EAAQ,OAEb,GAAoB,eAAhBA,EAAOC,KACT,MAAO,CACLC,MAAOF,EAAOE,MAAMF,EAAOG,YAC3BC,SAAkC,IAAxBJ,EAAOE,MAAMG,QAI3B,GAAoB,WAAhBL,EAAOC,KAAmB,CAC5B,MAAMK,EAASN,EAAOO,eAAeC,OAAOR,EAAOG,YACnD,OAAIG,EACK,CACLJ,MAAOI,QAGX,CACF,CAEA,MAAM,OACJG,EAAM,SAAEC,EAAQ,MAAEC,EAAK,MAAEC,EAAK,QAAEC,EAAO,UAAEC,IACvCC,EAAAA,EAAAA,KAAkBf,EAAOgB,SAE7B,GAAIP,GAAQE,MACV,MAAO,CACLT,MAAOO,EAAOE,MACdP,UAAU,GAId,GAAIM,KAAaO,EAAAA,EAAAA,KAAgBP,KAAaQ,EAAAA,EAAAA,KAAgBR,IAC5D,MAAO,CACLR,MAAOQ,GAIX,GAAIG,EAAS,CACX,MAAQF,MAAOQ,EAAcP,MAAOQ,EAAcV,SAAUW,GAAoBR,EAC1ES,EAAkBD,KAAoBJ,EAAAA,EAAAA,KAAgBI,KAAoBH,EAAAA,EAAAA,KAAgBG,IAE1FnB,EAAQkB,IADQE,EAAkBD,OAAkBE,IACXJ,EAC/C,GAAIjB,EACF,MAAO,CACLA,QACAE,UAAU,EAGhB,CAEA,GAAIU,EAAW,CACb,MAAMU,EAAgBV,EAAUU,cAAcxB,EAAOG,YAAc,GACnE,KAAM,cAAeqB,GAAgB,CACnC,MAAQb,MAAOc,EAAeb,MAAOc,GAAkBF,EACvD,MAAO,CACLtB,MAAQuB,GAAiBC,EAE7B,CACF,CAEA,MAAMxB,EAAQU,GAASD,EAEvB,OAAIT,EACK,CACLA,QACAE,SAAUQ,GAAOe,YAHrB,CAQF,C,0DC+DA,SAASC,EAAYC,EAAsDC,GACzE,MAAMC,EAAQrB,SAASsB,cAAc,OACrCD,EAAME,UAAUC,IAAI,SAEpB,MAAMC,EAAM,IAAIC,MAchB,GAbAD,EAAIE,WAAY,EAChBF,EAAIG,cAAgBC,EAAAA,EAEE,iBAAXV,EACTM,EAAIK,IAAMX,EACDA,aAAkBY,iBAC3BN,EAAIK,IAAMX,EAAOa,OAEjBP,EAAIK,IAAMX,EAAOW,IAGnBT,EAAMY,YAAYR,GAEdL,IAAWc,EAAAA,GAAkBC,eAAiBf,IAAWc,EAAAA,GAAkBE,eAAgB,CAC7Ff,EAAME,UAAUC,IAAI,eAChBJ,IAAWc,EAAAA,GAAkBE,gBAC/Bf,EAAME,UAAUC,IAAI,QAEtB,MAAMa,EAAcrC,SAASsC,cAC3BlB,IAAWc,EAAAA,GAAkBC,cACzB,kCACA,gCAEFE,GACFhB,EAAMY,YAAYI,EAAYE,WAAU,GAE5C,CAEA,OAAOlB,CACT,CAwBA,SAASmB,EAA2BC,EAAwBC,GAC1D,MAAMC,EAAqB3C,SAASsC,cAA8B,2CAClE,IAAIM,EAAeH,EAAUI,UAAYH,EAAQI,QAAwB,4BAA6BD,UAKtG,OAJIJ,EAAUM,GAAGC,SAAS,kBACxBJ,GAAgBH,EAAUQ,cAAeJ,UAAYJ,EAAUK,QAAwB,YAAaD,WAG/FD,EAAeD,EAAmBO,WACpCN,EAAeF,EAAQS,aAAeR,EAAmBO,UAAYP,EAAmBQ,YAC/F,CAYA,SAASC,EAAShC,EAA2Bd,EAAsB+C,GACjE,IAAIC,EACAC,EAEJ,OAAQnC,GACN,KAAKc,EAAAA,GAAkBsB,MACvB,KAAKtB,EAAAA,GAAkBuB,eAErBH,EAAqB,yDAAuDI,EAAAA,EAAAA,KAAiBpD,EAASyC,GAAIM,KAC1GE,EAAgB,cAChB,MAEF,KAAKrB,EAAAA,GAAkByB,aACrBL,EAAqB,iBAAgBD,IACrCE,EAAgB,MAChB,MAEF,KAAKrB,EAAAA,GAAkB0B,YACrBN,EAAqB,iBAAeI,EAAAA,EAAAA,KAAiBpD,EAASyC,GAAIM,KAClEE,EAAgB,MAChB,MAEF,KAAKrB,EAAAA,GAAkB2B,aACrBP,EAAqB,iBAAeI,EAAAA,EAAAA,KAAiBpD,EAASyC,GAAIM,KAClEE,EAAgB,MAChB,MAEF,KAAKrB,EAAAA,GAAkB4B,mBACrBR,EAAoB,2DACpBC,EAAgB,gBAChB,MAEF,KAAKrB,EAAAA,GAAkBE,eACrBkB,EAAoB,gEACpBC,EAAgB,gBAChB,MAEF,KAAKrB,EAAAA,GAAkBC,cACrBmB,EAAoB,mEACpBC,EAAgB,gBAChB,MAEF,KAAKrB,EAAAA,GAAkB6B,gBACrBT,EAAqB,6CAA2CI,EAAAA,EAAAA,KAAiBpD,EAASyC,GAAIM,KAC9FE,EAAgB,cAChB,MAEF,KAAKrB,EAAAA,GAAkB8B,iBACrBV,EAAoB,6BACpBC,EAA0B,IAAVF,EAAe,4BAA2BA,yBAA0BxC,EACpF,MAEF,KAAKqB,EAAAA,GAAkB+B,iBACrBX,EAAoB,mEACpBC,EAAiB,GAAEW,EAAAA,mBAAwCA,EAAAA,kCAC3D,MAEF,KAAKhC,EAAAA,GAAkBiC,gBACvB,KAAKjC,EAAAA,GAAkBkC,OACvB,QACEd,EAAqB,6CAA2CI,EAAAA,EAAAA,KAAiBpD,EAASyC,GAAIM,KAC9FE,EAAiB,GAAEW,EAAAA,mBAAwCA,EAAAA,kCAG/D,MAAMzB,EAAYzC,SAASsC,cAA2BgB,GAChDe,EAAWd,EACbd,GAAW6B,iBAAsDf,QAAiB1C,EAEtF,MAAO,CACL4B,YACA8B,QAASF,IAAW,GAExB,CAEA,SAASG,EAAWnD,EAAuBD,GACzC,OAAQA,GACN,KAAKc,EAAAA,GAAkBsB,MACvB,KAAKtB,EAAAA,GAAkBuB,eACvB,KAAKvB,EAAAA,GAAkBkC,OACvB,KAAKlC,EAAAA,GAAkBiC,gBACvB,KAAKjC,EAAAA,GAAkB8B,iBACvB,KAAK9B,EAAAA,GAAkByB,aACrBtC,EAAME,UAAUC,IAAI,mBACpB,MAEF,KAAKU,EAAAA,GAAkB0B,YACvB,KAAK1B,EAAAA,GAAkBE,eACvB,KAAKF,EAAAA,GAAkBC,cACvB,KAAKD,EAAAA,GAAkB2B,aACpBxC,EAAMoD,WAA2BC,MAAMC,UAAY,QACpD,MAEF,KAAKzC,EAAAA,GAAkB4B,mBACvB,KAAK5B,EAAAA,GAAkB6B,gBACrB1C,EAAME,UAAUC,IAAI,UAChBJ,IAAWc,EAAAA,GAAkB6B,iBAC/B1C,EAAME,UAAUC,IAAI,qBAI5B,C,4FCvXA,MAAMoD,GAASC,EAAAA,EAAAA,KAAa,GACtBC,EAAwBF,EAAO,GA8ErC,SAASG,EAAuB7E,GAE9B,GAAIA,EAAM8E,gCAA6E,mBAApC9E,EAAM+E,0BAEvD,OAAO/E,EAAM+E,0BAA0BC,KAAKhF,EAGhD,CAeO,SAASiF,IACd,GAAInF,SAASoF,wBACX,IACEpF,SAASqF,sBACX,CAAE,MAAOC,GACHC,EAAAA,KAEFC,QAAQC,IAAI,8BAA+BH,EAE/C,CAEJ,C,2DCxHA,MAIMI,EAAQ,IAAIC,I,yCCclB,MAAMC,EAAsBC,EAAAA,GASfC,EAAgBC,IAKR,IALS,MAC5BvG,EAAK,SACLwG,EAAQ,OACR5E,EAAM,MACN6E,GACcF,EACd,MAAMG,EAAgBF,GAAiC,UAArBxG,GAAO2G,YAA0B3G,EAAM4G,QACnEC,EAAgBL,GAAiC,UAArBxG,GAAO2G,WAAyB3G,EAAM4G,QAClEE,EAAkC,aAArB9G,GAAO2G,UACpBC,EAAgC,UAArB5G,GAAO2G,YAA0B3G,EAAM+G,SAAaD,IAAc9F,EAAAA,EAAAA,KAAgBhB,GAC7FgH,EAA+B,UAArBhH,GAAO2G,WAA0BG,IAAc/F,EAAAA,EAAAA,KAAgBf,GACzEyB,EAA6B,UAArBzB,GAAO2G,WAAyB3G,EAAMyB,MAC9CwF,EAAoBrF,IAAWc,EAAAA,GAAkB0B,YACjD8C,EAAetF,IAAWc,EAAAA,GAAkB2B,aAE5C8C,GAAuBC,EAAAA,EAAAA,KAAQ,IAAOC,IAC1C,GAAKrH,EAEL,OAAK0G,IAAiBG,GAAmBQ,EAIrCR,GAAiBQ,GACZC,EAAAA,EAAAA,KAA8BtH,IAGhCuH,EAAAA,EAAAA,KAAavH,EAAOqH,EAAS,OAAS,YAPpCG,EAAAA,EAAAA,IAAyBxH,EAOqB,GACtD,CAAC6G,EAAeH,EAAe1G,IAE5ByH,GAAmBC,EAAAA,EAAAA,GACvB1H,IAEIiH,GAAqBC,GAAgBJ,KACtCS,EAAAA,EAAAA,KAAavH,EAAO,kBACvBqB,EACAsG,EAAAA,GAAeC,QACfnB,GAEIoB,EAAmBV,IACnBW,GAAiBJ,EAAAA,EAAAA,GACrBG,OACAxG,EACAsG,EAAAA,GAAeC,QACfnB,IAGAsB,UAAWC,EAAgB,aAC3BC,IACEC,EAAAA,EAAAA,GACFf,GAAqB,QACrB9F,EACArB,IAASmI,EAAAA,EAAAA,KAAenI,EAAO,QAC/ByG,GAGI2B,EAAepI,GAAS,YAAaA,EAAQA,EAAMqI,aAAUhH,EACnE,IAAIiH,GAAkB1B,IAAYwB,GAAgBJ,IAAsBF,GAAkBL,EAC1F,MAAMc,EChFO,SAAqBC,GAClC,MAAMC,GAAaC,EAAAA,EAAAA,MAEnB,IAAIC,GAAY,GAEhBC,EAAAA,EAAAA,IAAc,KAMZ,GAJAD,GAAY,EAEZF,EAAWI,aAAUxH,GAEhBmH,EACH,OAGF,MAAMvG,EAAM,IAAIC,MAEhB,GADAD,EAAIK,IAAMkG,GACLvG,EAAI6G,MACP,OAGF,MAAMC,GAASC,EAAAA,EAAAA,IAAY/G,IAC3BgH,EAAAA,EAAAA,GAASF,EAAOG,WAAW,MAAO,EAAG,EAAGH,EAAOD,MAAOC,EAAOI,OAzBlD,EACI,GA0BfV,EAAWI,QAAUE,EAAOK,WAAW,GACtC,CAACZ,IAIJ,MAAMa,EF3BO,SAAiBb,GAAsD,IAApCc,EAAUC,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GAAU9C,EAAc8C,UAAApJ,OAAA,EAAAoJ,UAAA,QAAAlI,EAClF,MAAMoH,GAAaC,EAAAA,EAAAA,IAA2BF,EAAUtC,EAAMsD,IAAIhB,QAAWnH,GACvEoI,GAAaf,EAAAA,EAAAA,MACbgB,GAAcC,EAAAA,EAAAA,KAqCpB,OAnCIF,EAAWZ,SAAWS,IACxBM,aAAaH,EAAWZ,SACxBY,EAAWZ,aAAUxH,IAGvBwI,EAAAA,EAAAA,KAAU,KACR,IAAKrB,GAAWC,EAAWI,SAAWS,EACpC,OAGF,MAAMrH,EAAM,IAAIC,MAEhBD,EAAI6H,OAAS,KACX,MAAMf,GAASC,EAAAA,EAAAA,IAAY/G,IAC3BgH,EAAAA,EAAAA,GAASF,EAAOG,WAAW,MAAO,EAAG,EAAGH,EAAOD,MAAOC,EAAOI,OAzBpD,EACI,GAyBb,MAAMY,EAAiBhB,EAAOK,YAE9BX,EAAWI,QAAUkB,EACrBL,IAEIxD,EAAM8D,MA7BO,KA8Bf9D,EAAM+D,QAER/D,EAAMgE,IAAI1B,EAASuB,EAAe,EAGhCtD,EACFgD,EAAWZ,QAAUsB,OAAOC,YAAW,KACrCnI,EAAIK,IAAMkG,CAAO,GAChB/B,GAEHxE,EAAIK,IAAMkG,CACZ,GACC,CAACA,EAAS/B,EAAOiD,EAAaJ,IAE1Bb,EAAWI,OACpB,CEduBwB,CAAQ7B,QAAWnH,EAAWiJ,QAAQ7B,EAAWI,UAEtE,OAAOJ,EAAWI,UAAaF,GAAaU,GAAiBb,QAAWnH,CAC1E,CDgDuBkJ,EAAajC,GAAiBtI,IAASwK,EAAAA,EAAAA,KAAiBxK,IACxEsI,GAAiB1G,IAAWc,EAAAA,GAAkB2B,eACjDiE,EAAgBC,GAEd1B,GAAiBiB,IACnBQ,EAAgBR,GAElB,MAAM2C,EAAWrC,GAAgBJ,IAC7BnB,GAAkBD,OAAmEvF,EAAvDyG,GAAkBL,GAAoBa,GAGlEoC,EAAY1K,IAAS2K,EAAAA,EAAAA,KAAiB3K,GAEtC4K,EAAUN,QAAQlC,GAElByC,GAAazD,EAAAA,EAAAA,KAAQ,IACrBZ,EACKK,EAAgBiE,EAAAA,GAA+BzE,EAAAA,GAGpDS,EACK9G,EAAM0K,UAGX1D,GACK+D,EAAAA,EAAAA,KAAuB/K,GAG5B4G,GACKoE,EAAAA,EAAAA,KAAmBhL,GAGrBoG,GACN,CAACI,EAAUM,EAAYE,EAASJ,EAASC,EAAe7G,IAE3D,MAAO,CACLuH,aAAcJ,EACdnH,QACA4G,UACAI,UACAvF,QACAqF,aACAwB,gBACAmC,WACAI,aACA5D,oBACAJ,gBACA+D,UACA3C,eACAyC,YACD,E,8CErHH,MA4EA,GAAeO,EAAAA,EAAAA,KA5EyB1E,IAMlC,IANmC,OACvC2E,EAAM,OACNC,EAAM,MACN1K,EAAK,QACL2K,EAAO,oBACPC,GACD9E,EACC,MAAM,mBAAE+E,IAAuBC,EAAAA,EAAAA,OAExBC,EAAgBC,IAAqBC,EAAAA,EAAAA,IAA0B,SAC/DC,EAAaC,IAAkBF,EAAAA,EAAAA,IAAS,IAEzCG,GAAeC,EAAAA,EAAAA,IAAgB,KACnCR,EAAmB,CACjBS,OAAQZ,EAAQ1K,QAAOuL,OAAQR,EAAgBG,gBAEjDP,GAAS,IAGLa,GAAqBH,EAAAA,EAAAA,IAAiBI,IAC1CT,EAAkBS,EAAyB,IAGvCC,GAA0BL,EAAAA,EAAAA,IAAiBM,IAC/CR,EAAeQ,EAAEC,OAAOH,MAAM,IAG1BI,GAAOC,EAAAA,EAAAA,KAEPC,GAA8DpF,EAAAA,EAAAA,KAAQ,IAAM,CAChF,CAAE8E,MAAO,OAAQO,MAAOH,EAAK,2BAC7B,CAAEJ,MAAO,WAAYO,MAAOH,EAAK,+BACjC,CAAEJ,MAAO,cAAeO,MAAOH,EAAK,kCACpC,CAAEJ,MAAO,aAAcO,MAAOH,EAAK,kCACnC,CAAEJ,MAAO,YAAaO,MAAOH,EAAK,+BAClC,CAAEJ,MAAO,eAAgBO,MAAO,iBAChC,CAAEP,MAAO,kBAAmBO,MAAO,oBACnC,CAAEP,MAAO,QAASO,MAAOH,EAAK,8BAC7B,CAACA,IAEJ,IAAKnB,IAAW1K,EACd,OAGF,MAAMiM,EAAQJ,EAAK,qBAEnB,OACEK,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASA,EACTyB,QAAS3B,EAASW,OAAexK,EACjCgK,oBAAqBA,EACrByB,UAAU,SACVJ,MAAOA,GAEPC,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,iBACLC,QAAST,EACTU,SAAUjB,EACVkB,SAAU3B,IAEZmB,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,iCACZJ,MAAOP,EACPuB,SAAUf,IAEZQ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,SAASR,UAAU,wBAAwBS,QAAM,EAACC,QAAS3B,GACtES,EAAK,sBAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASpC,GAAUkB,EAAK,YAErE,I,2BC3FZ,MAAOmB,GAAeC,KAAiBrI,EAAAA,EAAAA,IAAa,GAErC,SAASsI,KAKtB,OAJAC,EAAAA,EAAAA,KAAkB,KAChBF,GAAc,EAAE,IAGX,CAACD,GAAeC,GACzB,CCSA,MA6CA,IAAezC,EAAAA,EAAAA,KA7C+B1E,IAMxC,IANyC,OAC7C2E,EAAM,MACNzK,EAAK,UACLoN,EAAS,QACTzC,EAAO,UACP0C,GACDvH,EACC,MAAM,mBACJwH,EAAkB,gBAClBC,IACEzC,EAAAA,EAAAA,MAEE0C,GAAoBC,EAAAA,EAAAA,KAAY,KACpCJ,OACIK,EAAAA,EAAAA,KAASN,GACXE,EAAmB,CAAEtN,UAErBuN,EAAgB,CACdvN,QACAsL,OAAQ8B,IAGZzC,GAAS,GACR,CAAC0C,EAAWD,EAAWzC,EAAS2C,EAAoBtN,EAAOuN,IAExD1B,GAAOC,EAAAA,EAAAA,KAEb,OACEI,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASA,EACTyB,QAASoB,EACTnB,UAAU,+BACVJ,MAAOJ,EAAK,eAEZK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,SAASR,UAAU,wBAAwBS,QAAM,EAACC,QAASS,GACtE3B,EAAK,wBAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASpC,GAAUkB,EAAK,YAErE,I,wCCEZ,MAgUA,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAEW,IAFT,KACPC,EAAI,eAAEC,GACPF,EACC,MAAMG,GAAWC,EAAAA,EAAAA,KAAeL,IAC1B,OAAEzM,GAAW6M,EAASE,YAEtB7N,EAAyB,YAAfyN,GAAMxO,KAAqBwO,EAAKzN,aAAUO,EACpDuN,EAA6B,WAAfL,GAAMxO,KAAoBwO,EAAKK,iBAAcvN,EAC3DwN,EAA6B,WAAfN,GAAMxO,MAAqBwO,EAAKlO,cAAcC,OAAOiO,EAAKtO,YAExE6O,GAAqBC,EAAAA,EAAAA,KAAyBV,IAC9C,SAAEW,IAAaD,EAAAA,EAAAA,KAAyBV,IAAW,CAAC,EACpDY,GAAcC,EAAAA,EAAAA,KAAyBb,EAAQvN,GAC/CqO,GAAkBC,EAAAA,EAAAA,KAAsBf,GACxCgB,EAAkBvO,IAAWwO,EAAAA,EAAAA,KAAsBjB,EAAQvN,GAASiL,SAClEwD,UAAWC,GAAsBR,GACpClO,IAAW2O,EAAAA,EAAAA,KAAgCpB,EAAQvN,EAASkO,IAAc,CAAC,EAC1EU,EAAkBb,GAAgBA,EAAYtL,KAAOqL,GAAae,cAClEC,EAAkBpB,GAAkBlE,QAAQuE,GAC5CU,EAAYC,GAAoBI,EAChCC,EAAYrB,GAAkBlE,QAAQuE,KAAiBa,EACvDI,EAAkBhB,GAAoB/O,KAE5C,MAAO,CACLoP,kBACAF,cACAI,kBACAE,YACAM,YACAC,kBACAlO,SACD,GAhCewM,EAhUkC7H,IAgBhD,IAhBiD,KACrDgI,EAAI,UACJxG,EAAS,QACTnB,EAAO,gBACPyI,EAAe,YACfJ,EAAW,gBACXc,EAAe,UACfR,EAAS,UACTM,EAAS,gBACTC,EAAe,gBACfX,EAAe,OACfvN,EACAoO,eAAgBC,EAAQ,mBACxBC,EAAkB,eAClBC,EAAc,UACdC,GACD7J,EACC,MAAO8J,EAAmBC,EAAiBC,IAAoBC,EAAAA,EAAAA,IAAQ,IAChE/C,EAAeC,GAAiBC,MACjC,SAAE8C,IAAaC,EAAAA,EAAAA,OAEf,cACJC,EAAa,oBACbC,EAAmB,mBACnBC,EAAkB,gBAClBC,EAAe,gBACfC,EAAe,uBACfC,IACEzF,EAAAA,EAAAA,MAEE0F,EAA2B,YAAf1C,GAAMxO,MAElB,MAAEC,GAAUH,EAAiB0O,IAAS,CAAC,EACvC2C,EAAWlR,IAASmR,EAAAA,EAAAA,KAAiBnR,GACrCoR,EAAgBpR,IAASqR,EAAAA,EAAAA,KAAiBlC,EAAiBnP,IAEzDiI,aAAcqJ,IAAqBpJ,EAAAA,EAAAA,GACzClI,IAASuH,EAAAA,EAAAA,KAAavH,EAAO,aAC5BoR,EACDpR,IAASmI,EAAAA,EAAAA,KAAenI,EAAO,aAG3BuR,GAAsBzF,EAAAA,EAAAA,IAAgB,KAC1C,GAAK9L,EAEL,GAAIoR,EACFR,EAAoB,CAAE5Q,cACjB,CACL,MAAMc,EAAyB,YAAfyN,GAAMxO,KAAqBwO,EAAKzN,aAAUO,EAC1DsP,EAAc,CAAE3Q,QAAOwR,cAAe1Q,GACxC,KAGI2Q,GAAgB3F,EAAAA,EAAAA,IAAgB,KACpC,MAAM4F,EAAajE,IAEnBC,GADegE,EAAa,EAAIA,EAAa,GACtB,EAAE,IAGrBC,GAAe7F,EAAAA,EAAAA,IAAgB,KACnC,MAAM4F,EAAajE,IAEnBC,GADegE,EAAa,EAAIA,EAAa,GACtB,EAAE,IAGrBE,GAAe9F,EAAAA,EAAAA,IAAgB,KACnC,GAAmB,WAAfyC,GAAMxO,KAAmB,OAC7B,MAAM,YAAE6O,EAAW,cAAEvO,EAAa,WAAEJ,GAAesO,EAC7CM,EAAcxO,GAAeC,OAAOL,IACtCkO,EAAAA,EAAAA,KAASS,EAAYrL,IACvBsN,EAAmB,CAAEpQ,MAAOoO,IAE5BiC,EAAgB,CAAE/E,OAAQ6C,EAAYrL,GAAI9C,MAAOoO,IAGnDkC,EAAgB,CACdnP,OAAQA,EACRmK,OAAQ6C,EAAYrL,GACpBtD,WAAY,EACZ4R,cAAc,GACb,CACDC,uBAAuB,GACvB,IAGExF,GAAOC,EAAAA,EAAAA,KAEPwF,GAA8D3K,EAAAA,EAAAA,KAAQ,IACnE4K,IAAA,IAAC,UAAEC,EAAS,OAAE/G,GAAQ8G,EAAA,OAC3BrF,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACNR,UAAW5B,EAAS,cAAW7J,EAC/BmM,QAASyE,EACTE,UAAU,gBAEVxF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mBACN,GAEV,IAEH,SAASsF,IACP,MAAuB,WAAf7D,GAAMxO,KACZ4M,EAAAA,GAAA7K,cAACuQ,GAAuB,CACtBnH,OAAQmF,EACRjF,QAASmF,EACTzC,UAAWqC,EACXtC,UAAWU,EAAKK,YAAYrL,GAC5B9C,MAAO8N,EAAKlO,cAAcC,OAAOiO,EAAKtO,mBAEtCoB,CACN,CAmCA,MAAMiR,GAAyBxG,EAAAA,EAAAA,IAAgB,KAC1B,YAAfyC,GAAMxO,KACRiR,EAAuB,CACrBuB,WAAgC,cAApBzC,EACZhP,QAASyN,EAAKzN,QACdgN,UAAWqC,IAGbG,GACF,IAGF,GAAIG,EAAU,CACZ,MAAM+B,EAA6B,GAkDnC,GAjDIvB,GAAa1C,EAAKzN,QAAQ2R,sBAAwBlE,EAAKzN,QAAQ4R,QAAQnS,SAAW8O,GACpFmD,EAAUG,KAAK,CACbC,KAAM,UACNpF,QAAS4C,EACTyC,SAAUvG,EAAK,aAGd2C,IACCrI,EACF4L,EAAUG,KAAK,CACbC,KAAMxB,EAAgB,QAAU,WAChC5D,QAAS+D,EACTsB,SAAUzB,EAAiB,GAAE0B,KAAKZ,MAAyB,IAAnBZ,qBAA4C,aAGtFkB,EAAUG,KAAK,CACbC,KAAM,WACNG,KAAMhL,EACNiL,SAAU9B,EACV2B,SAAUvG,EAAK,wBAKjByD,GACFyC,EAAUG,KAAK,CACbC,KAAM,OACNpF,QAASyC,EACT4C,SAAUvG,EAAK,uBAIfuD,GACF2C,EAAUG,KAAK,CACbC,KAAM,aACNpF,QAASoE,EACTiB,SAAUvG,EAAK,+BAIfiD,GACFiD,EAAUG,KAAK,CACbC,KAAM,SACNpF,QAAS8E,EACTO,SAAUvG,EAAK,UACf2G,aAAa,IAIQ,IAArBT,EAAUrS,OACZ,OAGF,OACEwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,6BACbH,EAAAA,GAAA7K,cAACoR,GAAAA,EAAY,CACXC,QAASpB,EACTqB,UAAU,SAETZ,EAAUa,KAAIC,IAAA,IAAC,KACdV,EAAI,QAAEpF,EAAO,KAAEuF,EAAI,SAAEC,EAAQ,SAAEH,EAAQ,YAAEI,GAC1CK,EAAA,OACC3G,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPC,IAAKZ,EACLA,KAAMA,EACNG,KAAMA,EACNC,SAAUA,EACVxF,QAASA,EACTyF,YAAaA,GAEZJ,EACQ,KAGdzB,GAAiBzE,EAAAA,GAAA7K,cAAC2R,GAAAA,EAAe,CAACC,SAAUpC,EAAkBtH,KAAK,IAAI2J,SAAO,IAC9EpE,GAAa6C,IAGpB,CAEA,OACEzF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACZmE,GAAa1C,EAAKzN,QAAQ2R,sBAAwBpD,GACjD1C,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK,WAChBkB,QAAS4C,GAETzD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,uBAzIrB,WACE,IAAImC,GAA8B,eAAfV,GAAMxO,KAIzB,MAAsB,qBAAfwO,GAAMxO,OAAgC6G,EAC3C+F,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK,qBAChBkB,QAAS+D,GAERH,EACCzE,EAAAA,GAAA7K,cAAC2R,GAAAA,EAAe,CAACC,SAAUpC,EAAkBtH,KAAK,IAAIwD,QAAS+D,IAE/D5E,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,wBAIjBH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL0F,KAAMhL,EACNiL,SAAU9B,EACVgB,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK,sBAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,wBAGnB,CA6GK8G,GACDjH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK,gBAChBkB,QAASiE,GAET9E,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,wBAEfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK,eAChBkB,QAASmE,GAEThF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,uBAEdiD,GACCpD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK1F,EAAU,8BAAgC,+BAC1D4G,QAASyC,GAETtD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oBAGhB+C,GACClD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK,6BAChBkB,QAASoE,GAETjF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BAGhByC,GACC5C,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK,UAChBkB,QAAS8E,GAET3F,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,sBAGjBH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK,SAChBkB,QAAS0C,GAETvD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEdyC,GAAa6C,IACV,K,gHCrXH,SAASyB,GAAgBC,GAC9B,MAAMC,GAAMrL,EAAAA,EAAAA,IAAUoL,KAQtB,OANAE,EAAAA,GAAAA,IAAc,IACLF,EAASG,WAAU,KACxBF,EAAIlL,QAAUiL,GAAU,MAIrBC,CACT,C,wCCbA,MAAOG,GAAoBC,KAAsB9O,EAAAA,EAAAA,KAAa,IACvD+O,GAAaC,KAAehP,EAAAA,EAAAA,KAAa,GAEjC,SAASiP,KAOtB,MAAO,EANYC,EAAAA,GAAAA,IACjB,IAAML,OAAyBE,MAE/B,CAACF,GAAoBE,KAGHD,GAAoBE,GAC1C,C,gBCIA,MAmFA,GAvEwC9N,IAElC,IAFmC,KACvCiO,EAAO,GAAE,WAAEC,EAAU,WAAEC,EAAU,QAAElH,EAAO,qBAAEmH,EAAoB,YAAE1F,EAAW,qBAAE2F,GAChFrO,EACC,MAAOsO,EAAaC,IAAkBpJ,EAAAA,EAAAA,KAAS,IACzC,SAAE+E,IAAaC,EAAAA,EAAAA,OACdqE,GAAgBT,KACjBU,GAAWC,EAAAA,GAAAA,IAAgB,MAAOC,EAAAA,KAAgBH,KAAyB,CAACA,KAElFlL,EAAAA,EAAAA,KAAU,KACR,MAAMsL,EAAgB3U,SAASsC,cAAc,kCAEvCsS,EAAmBA,KACvB,MAAMjM,EAASgM,EAAgBA,EAAcE,aAAe,EAE5DP,EAAe3L,EAAe,EAANmM,EAAAA,EAAQ,EAIlCF,IAEA,MAAMG,GAAeC,EAAAA,GAAAA,IAASJ,EAhCP,KAgC6C,GAIpE,OAFAjL,OAAOsL,iBAAiB,SAAUF,GAAc,GAEzC,KACLpL,OAAOuL,oBAAoB,SAAUH,GAAc,EAAM,CAC1D,GACA,IAQH,MAAMI,GAAgB7J,EAAAA,EAAAA,IAAgB,KACpC6I,GAAsB,IAGlBiB,GAAaC,EAAAA,GAAAA,GACjB,oBACAnB,GAAc,eACdM,GAAY,YACZ/F,GAAe,eACf2F,GAAwB,UAG1B,OACEjI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW8I,EAAYpI,QAnB9B,SAAmBpB,GACboI,GACFpI,EAAE0J,iBAEN,GAgBKxL,QAAQkK,IACP7H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,8BAA8BU,QAAUiD,OAAqBpP,EAAVmM,GAChEb,EAAAA,GAAA7K,cAAA,KAAGgL,UAAY,6CAA2C+H,EAAc,YAAc,IAAMkB,IAAI,QAC7FvB,IAINlK,QAAQmK,IACP9H,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GAAe,8BAA+B,uBACzD7L,KAAK,UACLsD,MAAM,UACN0I,eAAa,EACbxI,QAASmI,GAERlB,GAGD,E,4BC9FH,MAAOwB,GAAgBC,KAAkB7Q,EAAAA,EAAAA,IAAa,GAE9C,SAAS8Q,KAKtB,OAJAvI,EAAAA,EAAAA,KAAkB,KAChBsI,GAAe,EAAE,IAGZ,CAACD,GAAgBC,GAC1B,C,4BCRO,MAAOE,GAAmBC,KAAqBhR,EAAAA,EAAAA,KAAa,GAEpD,SAASiR,KAKtB,OAJA1I,EAAAA,EAAAA,KAAkB,KAChByI,IAAkB,EAAM,IAGnB,CAACD,GAAmBC,GAC7B,C,kdCLA,MAAME,GAAYC,EAAAA,IAAcC,EAAAA,GAC1BC,GAAsBF,EAAAA,IAAcC,EAAAA,GAAU,GAAM,IACpDE,GAAaJ,GAAY,GAAK,GAC9BK,GAAmB,IAEnBC,IAAcC,EAAAA,GAAAA,MAEpB,IAAIC,GAEG,MAAMC,GAOXC,WAAAA,CAAYC,EAAanO,GAA2BoO,GAAA,cANjB,IAAIhR,KAAKgR,GAAA,mBAE9B,GAACA,GAAA,sBAKbC,KAAKrO,OAASA,EACd8N,GAAYQ,SAAQ,CAAA9Q,EAAgB1C,KAAU,IAAzB,UAAEyT,GAAW/Q,EAC3B+Q,EAAUC,QAAQ,CACrBvK,KAAM,qBACNwK,KAAM,CACJN,EACAP,GACA9S,EACA4T,GAAAA,GACAL,KAAKM,QAAQhS,KAAK0R,QAEpB,GAEN,CAEQM,OAAAA,CAAQC,EAAcC,GAC5BR,KAAKS,OAAO3N,IAAIyN,EAAMC,GAClBD,IAASP,KAAKU,aAChBV,KAAKW,OAAOJ,EAEhB,CAEQK,UAAAA,GACNZ,KAAKS,OAAOR,SAASO,IACnBA,EAAMK,OAAO,IAEfb,KAAKS,OAAO5N,OACd,CAEA8N,MAAAA,CAAOJ,GACLP,KAAKU,YAAcH,EACnB,MAAMC,EAAQR,KAAKS,OAAOrO,IAAImO,GAC9B,QAAKC,KACLM,EAAAA,EAAAA,KAAgB,KACdd,KAAKrO,OAAOD,MAAQ8O,EAAM9O,MAC1BsO,KAAKrO,OAAOI,OAASyO,EAAMzO,OACfiO,KAAKrO,OAAOG,WAAW,MAC/BiP,UAAUP,EAAO,EAAG,EAAGR,KAAKrO,OAAOD,MAAOsO,KAAKrO,OAAOI,OAAO,KAE5D,EACT,CAEAiP,OAAAA,GACEhB,KAAKY,aACLnB,GAAYQ,SAAQrF,IAAmB,IAAlB,UAAEsF,GAAWtF,EAC3BsF,EAAUC,QAAQ,CACrBvK,KAAM,wBACNwK,KAAM,IACN,GAEN,EAkBFX,GAAYQ,SAAQ/D,IAAgB,IAAf,OAAE+E,GAAQ/E,EAC7B+E,EAAO5C,iBAAiB,WAAW6C,UACjC,MAAM,KAAEvY,EAAI,UAAEwY,EAAS,OAAEzY,GAAWsM,EAAEoM,KAMtC,GAAa,gBAATzY,EACF,OAGF,MAAM0Y,QAAeC,EAAAA,GAAAA,IAAQ,gBAAiB,CAAEC,YAAahR,EAAAA,GAAeiR,eAAgB9Y,IAC5F,IAAK2Y,EACH,OAGF,MAAM,YAAEI,GAAgBJ,EAExBJ,EAAOS,YAAY,CACjB/Y,KAAM,eACNwY,YACAE,OAAQI,GACP,CAACA,GAAc,GAClB,I,gBCnHJ,SAAqJ,WCwCrJ,IAAIE,GAEJ,MAoPA,IAAe9N,EAAAA,EAAAA,KApPgB1E,IAYzB,IAZ0B,SAC9ByS,EAAQ,eACRC,EAAc,QACdC,EAAO,WACPC,EAAU,aACVC,EAAY,IACZlC,EAAG,SACHmC,EAAQ,UACRC,EAAS,kBACTC,EAAiB,OACjBC,EAAM,YACNC,GACDlT,EAEC,MAAMmT,GAAYhR,EAAAA,EAAAA,IAAuB,OAClCiR,GAAwBxD,MACxByD,GAAgBtD,KACjBL,GAAiB4D,EAAAA,GAAAA,IAAmBF,EApBvB,MAqBZG,EAAiBC,IAAmBC,EAAAA,EAAAA,IAAU/D,MAC9CgE,EAAkBC,IAAoBF,EAAAA,EAAAA,IAAU,IAChDG,EAAgBC,IAAkBJ,EAAAA,EAAAA,IAAU,GAC7CK,GAAc3R,EAAAA,EAAAA,KAAgB,IAC7B4R,EAAkBC,IAAqB7O,EAAAA,EAAAA,KAAS,IAChD8O,EAAWC,IAAgB/O,EAAAA,EAAAA,KAAS,GAErCgP,GAAmBhS,EAAAA,EAAAA,IAA0B,MAE7CiS,GAAajS,EAAAA,EAAAA,IAAuB,MAEpCkS,GAAclS,EAAAA,EAAAA,IAAuB,MAErCmS,GAAiBnS,EAAAA,EAAAA,IAAuB,MAExCoS,GAAc1T,EAAAA,EAAAA,KAAQ,IFCvB,SAA8B0B,EAAeK,GAGlD,MAAM4R,GAFNjS,EAAQgK,KAAKZ,MAAMpJ,EAAQ4N,MAC3BvN,EAAS2J,KAAKZ,MAAM/I,EAASuN,KAU7B,OARI5N,EAAQ8N,KACV9N,EAAQ8N,GACRzN,EAAS2J,KAAKZ,MAAMpJ,EAAQiS,IAE1B5R,EAASyN,KACXzN,EAASyN,GACT9N,EAAQgK,KAAKZ,MAAM/I,EAAS4R,IAEvB,CAAEjS,QAAOK,SAClB,CEbW6R,CAAqB7B,GAAYrQ,OAAS,EAAGqQ,GAAYhQ,QAAU,IACzE,CAACgQ,IAEE8B,GAAanP,EAAAA,EAAAA,IAAiB6L,IAClCA,EAAO7E,KAAKoI,MAAMvD,GAClByC,EAAezC,GFgDZ,SAA4BA,GAC5BZ,IACEA,GAAagB,OAAOJ,EAC7B,CElDIwD,CAAmBxD,EAAK,IAqK1B,OAlKA9N,EAAAA,EAAAA,KAAU,KACR,IAAI0P,GAAsBrC,GAAQgC,EAClC,OF+BG,SAA6BhC,EAAanO,GAK/C,OAJIgO,IACFA,GAAaqB,UAEfrB,GAAe,IAAIC,GAAaE,EAAKnO,GAC9B,KACLgO,IAAcqB,UACdrB,QAAe1V,CAAS,CAE5B,CExCW+Z,CAAoBlE,EAAKwD,EAAiB7R,QAAS,GACzD,CAACqO,EAAKgC,EAASK,KAElB1P,EAAAA,EAAAA,KAAU,KACR0Q,GAAkB,EAAM,GACvB,CAAClB,KAEJxP,EAAAA,EAAAA,KAAU,KAGR,GAFIkP,IAAiBA,KACrBA,QAAkB1X,GACbgZ,EAAYxR,UAAY2R,EAAW,CACtC,MAAM7C,EAAO1B,IACPoF,EAAYrC,EAAWrB,EAC7BoB,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9BC,KAAM5D,EACN6D,GAAIxC,EACJA,SAAuB,IAAZqC,EAAoBjC,EAC/BqC,SAAU1B,GAEd,IACC,CAAC9D,EAAgBuE,EAAWT,EAAiBX,EAAcJ,KAE9DnP,EAAAA,EAAAA,KAAU,KACHyP,IAAaM,MACZb,IAAiBA,KACrBA,QAAkB1X,EACpB,GACC,CAACiY,EAAWQ,EAAiBF,KAEhC/P,EAAAA,EAAAA,KAAU,KACR,GAAIyP,EAAW,CACTP,IAAiBA,KACrBA,QAAkB1X,EAClB,MAAMsW,EAAO1B,IACPoF,EAAYrC,EAAWrB,EAC7BoB,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9BC,KAAM5D,EACN6D,GAAIxC,EACJA,SAAuB,IAAZqC,EAAoBjC,EAC/BqC,SAAU1B,GAEd,IAEC,CAACT,EAAWF,EAAcJ,KAE7B0C,EAAAA,EAAAA,KAAgB,KACd,IAAKd,EAAY/R,QAAS,OAC1B,MAAM6K,GAAWxB,EAAAA,GAAAA,IAAO4H,IAAoBd,EAAY,IAAK,GAC7D4B,EAAY/R,QAAQ3D,MAAM4D,MAAS,GAAE4K,IAAW,GAC/C,CAACoG,EAAiBd,KAErB0C,EAAAA,EAAAA,KAAgB,KACTf,EAAW9R,UAChB8R,EAAW9R,QAAQ3D,MAAMyW,KAAQ,GAAE1B,QAAsB,GACxD,CAACA,KAEJyB,EAAAA,EAAAA,KAAgB,KACTb,EAAehS,UACpBgS,EAAehS,QAAQ+S,WAAYC,EAAAA,GAAAA,IAAoB1B,KAAiB,GACvE,CAACA,KAEJtQ,EAAAA,EAAAA,KAAU,KACR,IAAK6P,EAAU7Q,UAAYwQ,EAAU,OACrC,MAAMyC,EAASpC,EAAU7Q,QACzB,IAAIkT,EAAaD,EAAOE,wBAEpBrE,EAAO,EACPsE,EAAS,EAEb,MAAMC,EAAmB9P,IACvB,MAAM+P,EAAQ/P,aAAagQ,WAAahQ,EAAE+P,MAAQ/P,EAAEiQ,QAAQ,GAAGF,MACzDG,GAAIC,EAAAA,GAAAA,IAAMvD,IAAamD,EAAQJ,EAAWJ,MAAQI,EAAWjT,OAAQ,EAAGkQ,GAC9E,GAAIO,EAAmB,MAAO,CAAC+C,EAAG,GAC7BP,EAAWjT,QAAOiT,EAAaD,EAAOE,yBAC3C,MAAMQ,EAAU7B,EAAW9R,QAI3B,MAAO,CAACyT,GAHEC,EAAAA,GAAAA,IACRJ,EAAQJ,EAAWJ,KAAOa,EAAQC,YAAc,GAAI,EAAGV,EAAWjT,MAAQ0T,EAAQC,YAAc,GAErF,EAGTC,EAAgBA,KAChB3D,IAAiBA,KACrBA,QAAkB1X,CAAS,EAmBvBsb,EAAiBA,KACrBD,IACArC,EAAYxR,SAAU,EACtB0R,GAAkB,GAClBE,GAAa,GACbV,EAAgBpC,GAChB6B,EAAO7B,GAEPvN,YAAW,KACTiQ,EAAYxR,SAAU,CAAK,GA/Jd,IAgKC,EAGZ+T,GAAUC,EAAAA,GAAAA,IAAcf,EAAQ,CACpCgB,UArBsBC,KACtBL,IACAnC,GAAkB,GAClBE,GAAa,GACbhB,GAAa,EAkBbuD,UAAWL,EACXnP,QAASmP,EACTM,OAjCkB7Q,IAClBsQ,IACAnC,GAAkB,IAChB5C,EAAMsE,GAAUC,EAAgB9P,GAC7B6O,EAAWtD,GAChBuC,EAAiB+B,GACjBlC,EAAgBpC,EAAK,IA8BvB,GAAIzC,EAAAA,IAAgBqE,EAClB,OAAOqD,EAGT,MAAMM,EAAuB9Q,IAC3BmO,GAAkB,IAChB5C,EAAMsE,GAAUC,EAAgB9P,GAClC8N,EAAiB+B,GACZhB,EAAWtD,EAAK,EAGjBwF,EAAuBA,KAC3B5C,GAAkB,EAAM,EAO1B,OAJAuB,EAAOrG,iBAAiB,YAAayH,GACrCpB,EAAOrG,iBAAiB,aAAcyH,GACtCpB,EAAOrG,iBAAiB,aAAc0H,GAE/B,KACLP,IACAd,EAAOpG,oBAAoB,YAAawH,GACxCpB,EAAOpG,oBAAoB,aAAcwH,GACzCpB,EAAOpG,oBAAoB,aAAcyH,EAAqB,CAC/D,GACA,CACDnE,EACAiC,EACA5B,EACAG,EACAC,EACAS,EACAH,EACAU,EACAlB,EACAH,IAIAzM,EAAAA,GAAA7K,cAAA,OAAKgL,UDxPmB,WCwPUiH,IAAK2F,IACnCH,GACA5M,EAAAA,GAAA7K,cAACsb,EAAAA,EAAc,CACblS,QAAM,EACN8J,UAAWsF,EACXxN,UD7PuC,WC8PvC5H,MAAQ,UAAS4V,EAAYhS,oBAAoBgS,EAAY3R,WAC7D4K,IAAK4G,GAELhO,EAAAA,GAAA7K,cAAA,UAAQgL,UDjQ0D,WCiQzBiH,IAAK2G,IAC9C/N,EAAAA,GAAA7K,cAAA,OAAKgL,UDlQsF,YCmQzFH,EAAAA,GAAA7K,cAAA,QAAMgL,UDnQgH,WCmQ7EiH,IAAK8G,MAIpDlO,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACbpE,EAAe5F,KAAIrB,IAAA,IAAC,MACnBsL,EAAK,IACLC,GACDvL,EAAA,OACCrF,EAAAA,GAAA7K,cAAA,OACE0R,IAAM,GAAE8J,KAASC,IACjBzQ,UD9Q+J,WCgR/J5H,MAAQ,SAAgB,IAARoY,cAAwB,IAAY,IAANC,MAC9C,KAGN5Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OACEiS,IAAK6G,EACL9N,WAAW+I,EAAAA,GAAAA,GDvR0K,WCuR5I2E,GDvRiK,eC0R1M,ICjOJnY,GAAa+J,IACjBA,EAAE0J,iBAAiB,EAGf0H,GAAiB,CACrB,GACA,EACA,IACA,GA8MF,IAAevS,EAAAA,EAAAA,KAzM2B1E,IAyBpC,IAzBqC,IACzC2Q,EAAG,eACH+B,EAAc,iBACdwE,EAAgB,SAChBzE,EAAQ,QACRE,EAAO,SACPwE,EAAQ,qBACR9I,EAAoB,UACpB0E,EAAS,sBACTqE,EAAqB,aACrBC,EAAY,WACZC,EAAU,kBACVtE,EAAiB,OACjBuE,EAAM,QACNC,EAAO,aACP3E,EAAY,WACZD,EAAU,mBACV6E,EAAkB,cAClBC,EAAa,eACbC,EAAc,qBACdC,EAAoB,4BACpBC,EAA2B,yBAC3BC,EAAwB,YACxBC,EAAW,OACX9E,GACDjT,EACC,MAAOgY,EAAoBC,EAAkBC,IAAqBjO,EAAAA,EAAAA,MAC3DyF,GAAkBE,KACnB2B,GAAc7C,EAAAA,GAAAA,IAAgB,IAAMnC,KAAK4L,MAAMzI,MAAmB,CAACA,KAClE0I,EAAclE,IAAgBT,EAAAA,EAAAA,KAAU,IAEzC,SAAEvJ,IAAaC,EAAAA,EAAAA,OACdqE,EAAc6J,GAAiBtK,KAChCuK,GAAY5J,EAAAA,GAAAA,GAAgBF,IAElClL,EAAAA,EAAAA,KAAU,KACR,IAAKqL,EAAAA,KAAiBN,EAAsB,OAC5C,IAAIkK,EACJ,GAAKD,GAAcvF,IAAaiF,IAAsBI,IAOtD,OAHAG,EAAU3U,OAAOC,YAAW,KAC1BwU,GAAc,EAAM,GA7CO,KA+CtB,KACDE,GAAS3U,OAAOP,aAAakV,EAAQ,EAPrCA,GAAS3U,OAAOP,aAAakV,EAQlC,GACA,CAACxF,EAAWuF,EAAWD,EAAeL,EAAoBI,EAAc/J,KAE3E8G,EAAAA,EAAAA,KAAgB,KACVmD,EACFre,SAASue,KAAKhd,UAAUC,IAAI,0BAE5BxB,SAASue,KAAKhd,UAAUid,OAAO,0BAE1B,KACLxe,SAASue,KAAKhd,UAAUid,OAAO,yBAAyB,IAEzD,CAACH,KAEJhV,EAAAA,EAAAA,KAAU,KACHgV,GACHJ,GACF,GACC,CAACA,EAAmBI,IAEvB,MAAMvS,GAAOC,EAAAA,EAAAA,KAEP0S,GAAanT,EAAAA,EAAAA,IAAiBoT,IAClCzE,GAAa,GACbjB,EAAO0F,EAAS,IAGZC,GAAkBrT,EAAAA,EAAAA,IAAgB,KACtC2O,GAAa,EAAK,IAGd2E,GAAahY,EAAAA,EAAAA,KAAQ,IACV,IAAX0W,GAAgBC,EAAgB,aAChCD,EAAS,GAAY,gBACrBA,EAAS,GAAY,gBAClB,iBACN,CAACA,EAAQC,IAEZ,OACEpR,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAe,sBAAuBjB,GAAwB,SAAUiK,GAAa,UAChGrR,QAASnL,IAETsK,EAAAA,GAAA7K,cAACud,GAAQ,CACPnI,IAAKA,EACL8B,SAAUA,EACVE,QAASA,EACTI,UAAWA,EACXC,kBAAmBA,EACnBJ,WAAYA,EACZF,eAAgBA,EAChBG,aAAcA,EACdI,OAAQyF,EACRxF,YAAa0F,EACb9F,SAAUwF,IAEZlS,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL8E,UAAW7F,EAAK,iBAChBtC,KAAK,OACLsV,QAAS7O,EACTnD,MAAM,oBACNR,UAAU,OACVoF,OAAK,EACL1E,QAAS8Q,GAET3R,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,OAAQyD,EAAY,aAAe,gBAElE3M,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL8E,UAAU,SACVnI,KAAK,OACLsD,MAAM,oBACNR,UAAU,SACVoF,OAAK,EACL1E,QAASyQ,GAETtR,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,OAAQuJ,OAErC3I,EAAAA,IACA9J,EAAAA,GAAA7K,cAACyd,GAAAA,EAAW,CAACC,MAAI,EAAC1S,UAAU,gBAAgBZ,MAAO6R,EAAU,EAAa,IAATD,EAAc5Q,SAAUgR,IAmEnG,SAAoBpG,EAAqBkB,GACvC,OACErM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACX,IAAE+O,EAAAA,GAAAA,IAAoB/D,SAAkB+D,EAAAA,GAAAA,IAAoB7C,KAGpE,CAvESyG,CAAW3H,EAAakB,IACvB6E,GACAlR,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oBACX,IAAE4S,EAAAA,GAAAA,IAAepT,EAAMoR,EAAWD,SAAuBiC,EAAAA,GAAAA,IAAepT,EAAMoR,MAGpF/Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL8E,UAAU,gBACVnI,KAAK,OACLsD,MAAM,oBACNR,UAAU,gBACVoF,OAAK,EACL1E,QAASgR,GAEP,GAAEpF,MAELgF,GACCzR,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL8E,UAAU,qBACVnI,KAAK,OACLsD,MAAM,oBACNR,UAAU,aACVoF,OAAK,EACL1E,QAAS6Q,GAET1R,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mBAGhB6Q,GACChR,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL8E,UAAU,aACVnI,KAAK,OACLsD,MAAM,oBACNR,UAAU,aACVoF,OAAK,EACL1E,QAASwQ,GAETrR,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,QAAS+H,EAAe,mBAAqB,uBAIhFjR,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACHzU,OAAQqT,EACRzR,WAAW+I,EAAAA,GAAAA,GACT,sBACC8H,GAAyB,iBACzBS,GAA+B,UAElChL,UAAU,QACVwM,UAAU,SACVC,WAAS,EACTzU,QAASqT,GAERjB,GAAenK,KAAKyM,GAEnBnT,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACwM,SAAU3G,IAAiB0G,EAAMtS,QAASA,IAAM2Q,EAAqB2B,IAC3E,GAAEA,SAIN,I,uOC9MV,MAgUA,IAAe7U,EAAAA,EAAAA,KA5TmB1E,IAoB5B,IApB6B,IACjC2Q,EAAG,MACHzV,EAAK,WACLue,EAAU,WACV7G,EAAU,aACVlR,EAAY,SACZyV,EAAQ,kBACRuC,EAAiB,OACjBC,EAAM,OACNpC,EAAM,QACNC,EAAO,aACP3E,EAAY,QACZhO,EAAO,qBACPwJ,EAAoB,mBACpBuL,EAAkB,YAClBlR,EAAW,gBACXmR,EAAe,kBACf7G,EAAiB,mBACjB8G,EAAkB,qBAClB1L,GACDpO,EACC,MAAM,qBACJ+Z,EAAoB,oBACpBC,EAAmB,2BACnBC,EAA0B,qBAC1BC,IACElV,EAAAA,EAAAA,MAEEmV,GAAWhY,EAAAA,EAAAA,IAAyB,OACnC4Q,EAAWqH,IAAgBjV,EAAAA,EAAAA,KAAUwJ,EAAAA,KAAiBuB,EAAAA,KACtDmH,EAAcgD,EAAeC,IAAkBC,EAAAA,GAAAA,IAAcJ,EAAUC,IACxE,SAAElQ,IAAaC,EAAAA,EAAAA,MACfsI,EAAW0H,EAAS7X,SAASmQ,UAAY,EACzC+H,EAAWtf,GAASuX,GArCF,GAuClBgI,GAAwBlV,EAAAA,EAAAA,IAAgB,KAExCmV,EAAAA,IACJR,EAAqB,CAAEzL,UAAU,GAAO,IAGpCkM,GAAwBpV,EAAAA,EAAAA,IAAgB,KACxCmV,EAAAA,IACJR,EAAqB,CAAEzL,UAAU,GAAQ,KAIzCoJ,EACA+C,EACAC,GjBtFW,SACbC,EACAxU,EACAyU,GAEA,MAAOC,EAAaC,IAAkB9V,EAAAA,EAAAA,KAAS,IACxC2N,EAAUoI,IAAe/V,EAAAA,EAAAA,KAAS,IAEzCgQ,EAAAA,EAAAA,KAAgB,KAEd,GAAKjF,EAAAA,IAAUiL,EAAAA,KAAYL,EAAMxY,QAAS,OAC1C,MAAMnI,EAAQ2gB,EAAMxY,QACd8Y,EAAUpc,EAAuB7E,GAGvC,KAFmBF,SAASohB,yBAA4BP,EAAMxY,SAASgZ,+BACtDxgB,IAAZsgB,EACW,OAEhBjhB,EAAMohB,sBAAuB,EAC7BN,GAAe,GACf,MAAMO,EAAkBA,KACtBlV,IACA4U,GAAY,GACZnc,GAAsB,EAAK,EAEvB0c,EAAkBA,KACtB1c,GAAsB,GACtBmc,GAAY,GACZH,GAAS,EAIX,OAFA5gB,EAAM+U,iBAAiB,wBAAyBsM,GAChDrhB,EAAM+U,iBAAiB,wBAAyBuM,GACzC,KACLthB,EAAMgV,oBAAoB,wBAAyBqM,GACnDrhB,EAAMgV,oBAAoB,wBAAyBsM,EAAgB,CACpE,GACA,CAACX,EAAOxU,EAASyU,IAEpB,MAAMzb,GAAuBqI,EAAAA,EAAAA,KAAY,KACvC,IAAKmT,EAAMxY,QAAS,OACpB,MACM8Y,EAAUpc,EADF8b,EAAMxY,SAEhB8Y,EACFA,EAAQ,UAERhc,GACF,GACC,CAAC0b,IAEEF,GAAwBjT,EAAAA,EAAAA,KAAY,KACxC,IAAKmT,EAAMxY,QAAS,OACpBhD,IACA,MAAMnF,EAAQ2gB,EAAMxY,QACdyQ,GAAY2I,EAAAA,EAAAA,GAAkBvhB,GAC9BihB,EAAUpc,EAAuB7E,GACnCihB,EACFA,EAAQ,sBA0Bd,SAAiCjhB,GAC/B,GAAIA,EAAMwhB,wBACR,IACExhB,EAAMwhB,yBACR,CAAE,MAAOpc,GACHC,EAAAA,KAEFC,QAAQC,IAAI,8BAA+BH,EAE/C,CAEJ,CAnCMoc,CAAwBxhB,GAGtB4Y,IACF6I,EAAAA,EAAAA,GAASzhB,EACX,GACC,CAAC2gB,EAAOxb,IAEX,OAAK0b,EAIE,CAACA,EAAaJ,EAAuB9H,GAHnC,EAAC,EAIZ,CiBiBM+I,CAAoB1B,EAAUM,EAAuBE,IAElD,CAAEmB,EAAgBC,GAAgBhO,KAEnCiO,GAAkBzW,EAAAA,EAAAA,IAAgB,KACtCuW,GAAe,EAAK,IAGhBG,GAAmB1W,EAAAA,EAAAA,IAAiBM,IACxC,MAAMqW,EAAS/B,EAAS7X,SAASmT,wBAC5ByG,IACDrW,EAAEsW,QAAUD,EAAO9G,MAAQvP,EAAEsW,QAAUD,EAAOE,OAASvW,EAAEwW,QAAUH,EAAOI,KAAOzW,EAAEwW,QAAUH,EAAOK,SACtGT,GAAe,EACjB,KAGI,QACJnJ,GAAO,WAAE2E,GAAU,eAAE5E,GAAc,kBAAE8J,GAAiB,iBAAEtF,KACtDuF,EAAAA,GAAAA,KACEC,IAAgBC,EAAAA,GAAAA,GAAoBxC,OAAUrf,GAAY6V,IAG9DiM,aAAcC,GACdC,qBAAsBC,KACpBC,EAAAA,GAAAA,IACD1F,KAAeoF,QAAe5hB,OAAWA,EAAW,SAGrD8hB,aAAcK,GACdH,qBAAsBI,KACpBF,EAAAA,GAAAA,GACF9M,EAAAA,KAAW6C,IAAc8J,KAAwBH,QAAe5hB,OAAWA,EAAW,SAGxFwI,EAAAA,EAAAA,KAAU,KACRyY,EAAac,GAAoB,GAChC,CAACd,EAAcc,MAElBvZ,EAAAA,EAAAA,KAAU,KACJqW,IAAWD,GAAqBgD,GAClCvC,EAAS7X,QAAS6a,QACTxM,IAAQhC,EAAAA,KAIjBiN,EAAAA,EAAAA,GAASzB,EAAS7X,QACpB,GACC,CAACqX,EAAQD,EAAmB/I,EAAKqJ,EAAqB0C,MAEzDpZ,EAAAA,EAAAA,KAAU,KACR6W,EAAS7X,QAASiV,OAASA,CAAM,GAChC,CAACA,KAEJjU,EAAAA,EAAAA,KAAU,KACR6W,EAAS7X,QAASuQ,aAAeA,CAAY,GAC5C,CAACA,IAEJ,MAAMuK,IAAkB7X,EAAAA,EAAAA,IAAiBM,IACvCA,EAAE0J,kBACEwD,GACFoH,EAAS7X,QAAS6a,QAClB/C,GAAa,MAEbwB,EAAAA,EAAAA,GAASzB,EAAS7X,SAClB8X,GAAa,GACf,IAGIiD,IAAc9X,EAAAA,EAAAA,IAAiBM,IAC/BiU,IACF1L,KAAuB,GACvBvJ,EAAQgB,IAENgU,IAGAD,EACF/U,EAAQgB,GAERuX,GAAgBvX,GAClB,KAGFyX,EAAAA,GAAAA,GAAgBnD,EAAUqC,IAE1B,MAAO,CAAE7M,IAAkBC,MACpB,CAAEE,IAAqBC,KAExBwN,IAAmBhY,EAAAA,EAAAA,IAAiBM,IACxC,MAAM1L,EAAQ0L,EAAE2X,cACZrjB,EAAMsjB,YA/IU,IAgJlB3N,IAAkB,GAClBH,GAAexV,EAAMoX,cAElBiJ,GAAYrgB,EAAMoX,cAAgBpX,EAAMsY,WAC3C9C,GAAe,GACfyK,GAAa,GACf,IAGIsD,IAAcnY,EAAAA,EAAAA,IAAgB,KAC9BiV,IACJ7K,GAAe,GACfyK,GAAa,GACb0B,GAAe,GAAK,IAGhB6B,IAAyBpY,EAAAA,EAAAA,IAAgB,KACzC8R,GAAgBiD,EAClBA,KACUjD,GAAgBgD,GAC1BA,GACF,IAGI3B,IAAanT,EAAAA,EAAAA,IAAiBoT,IAClCwB,EAAS7X,QAASiP,YAAcoH,CAAQ,IAGpCiF,IAAqBrY,EAAAA,EAAAA,IAAiBsY,IAC1C9D,EAAqB,CAAExC,OAAQsG,EAAY,KAAM,IAG7CC,IAAoBvY,EAAAA,EAAAA,IAAgB,KAExC4U,EAAS7X,QAASyb,OAAS5D,EAAS7X,QAASyb,MAC7C/D,EAAoB,CAAExC,SAAUA,GAAU,IAGtCwG,IAA2BzY,EAAAA,EAAAA,IAAiB0Y,IAChDhE,EAA2B,CAAEpH,aAAcoL,GAAkB,KAG/D3a,EAAAA,EAAAA,KAAU,KACR,IAAKoW,EAAmB,OACxB,MAAMwE,EAAU1O,IACd,IAAK6H,EAAc,OACnB,MAAMld,EAAQggB,EAAS7X,QACjB6b,GAAUnI,EAAAA,GAAAA,IAAM7b,EAAMoX,YA9Ld,EA8L4B/B,EAAmB,EAAGrV,EAAMsY,UAClE2L,OAAOC,SAASF,KAClBhkB,EAAMoX,YAAc4M,EACtB,EAEIG,EAAiBzY,IACrB,IAAIgV,EACJ,OAAQhV,EAAEoH,KACR,IAAK,IACL,IAAK,QACHpH,EAAE0Y,iBACFnB,GAAgBvX,GAChB,MACF,IAAK,OACL,IAAK,YACHA,EAAE0Y,iBACFL,GAAQ,GACR,MACF,IAAK,QACL,IAAK,aACHrY,EAAE0Y,iBACFL,EAAO,GAEX,EAKF,OAFAjkB,SAASiV,iBAAiB,UAAWoP,GAAe,GAE7C,KACLrkB,SAASkV,oBAAoB,UAAWmP,GAAe,EAAM,CAC9D,GACA,CAAClB,GAAiB1D,EAAmBrC,EAAcwD,IAEtD,MAAM2D,GAAe5L,GAAe,UAASA,EAAWrQ,oBAAoBqQ,EAAWhQ,WACjF6b,GAAc,yBAAwBhF,KACtCiF,IAAwB/P,EAAAA,KAAiBN,EAE/C,OAEEjI,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,cACVoY,YAAaD,GAAuB1C,OAAkBlhB,EACtD8jB,WAAYF,GAAuBzC,OAAmBnhB,GAEtDsL,EAAAA,GAAA7K,cAAA,OACEoD,MAAO6f,IAGN9V,GACCtC,EAAAA,GAAA7K,cAAA,OACEsjB,cAAe/iB,EAAAA,EACfgjB,cAAgBnQ,EAAAA,QAAwC7T,EAAzB6iB,GAC/B1W,QAAUiD,OAA6BpP,EAAlBsiB,GACrB7W,UAAU,cAGdH,EAAAA,GAAA7K,cAAA,QAAAwjB,GAAA,CACEvR,IAAK2M,EACL6E,SAAUrQ,EAAAA,GACVsQ,aAAa,aACbC,aAAW,EACXC,KAAM3E,EAENuD,MAAO7iB,GAASsc,EAChBxa,GAAG,qBACH2B,MAAO8f,GACPW,UAAWA,IAAMtP,IAAkB,GACnCuP,OAAQA,IAAMjF,GAAa,GAC3BkF,QAAS5B,GACTzW,QAAUiD,GAAamN,OAA6Bvc,EAAduiB,GACtCyB,cAAgBnQ,EAAAA,QAAwC7T,EAAzB6iB,IAE3BnB,GAAiB,CACrB+C,QAAU1Z,IACRuU,GAAa,GACboC,GAAkB+C,QAAQ1Z,EAAE,EAE9B2Z,aAAcjC,GACdxhB,IAAK4U,MAGRsM,IACC7W,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAAC6E,OAAK,EAACpF,UAAY,eAAc2W,KAAwBjW,QAASmW,IACvEhX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oBAGhBsW,IACCzW,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW,CAAC,oBAAqBwW,IAAmB0C,KAAK,OAC1DnI,IAAclR,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,aAAY,gBAC3CH,EAAAA,GAAA7K,cAAC2R,GAAAA,EAAe,CACdzJ,KAAK,KACL0J,SAAUmK,GAAa,EAAI5V,EAC3BuF,QAASpC,MAIb3J,IAAU4e,IAAuB4C,IACjCtW,EAAAA,GAAA7K,cAACmkB,GAAmB,CAClB/O,IAAKA,EACLoC,UAAWA,EACXL,eAAgBA,GAChBwE,iBAAkBA,GAClBI,WAAYA,GACZF,sBAAuBrT,QAAQsW,GAC/BxC,4BAA6BA,EAC7BR,aAAcA,EACdrE,kBAAmBA,EACnBmE,SAAUA,EACV1E,SAAUA,EACVE,QAASA,GACTC,WAAYA,EACZvE,qBAAsBA,EACtB4E,OAAQyF,GACRjB,mBAAoBkG,GACpB7F,yBAA0B8C,EAC1B7C,YAAaqF,GACb7F,OAAQA,EACR1E,aAAcA,EACd2E,QAASA,EACTE,cAAeoG,GACfnG,eAAgBiG,GAChBhG,qBAAsBoG,KAGtB,ICpKV,IAAetZ,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA2B,IAAzB,KAAEzD,GAAMyD,EACf,MAAM,OACJ8L,EAAM,QACNC,EAAO,aACP3E,EAAY,SACZpE,EAAQ,OACRpT,IACE8M,EAAAA,EAAAA,KAAeL,GAAQM,YACrB7N,EAAwB,YAAdyN,EAAKxO,KAAqBwO,EAAKzN,aAAUO,EACnD6kB,EAAiC,qBAAd3X,EAAKxO,KAA8BwO,EAAKzN,aAAUO,EAG3E,MAAO,CACLO,SACAukB,YAJkBrlB,GAAWolB,EAK7BjX,YAAanO,IAAWoO,EAAAA,EAAAA,KAAyBb,EAAQvN,GACzDgd,SACAC,UACA/I,WACAoE,eACD,GArBehL,EAxJO7H,IAeE,IAfD,KAC1BgI,EAAI,SACJ8K,EAAQ,YACR8M,EAAW,OACXvkB,EAAM,cACNwkB,EAAa,YACbnX,EAAW,OACX6O,EAAM,aACN1E,EAAY,QACZ2E,EAAO,SACP/I,EAAQ,SACRqR,EAAQ,QACRjb,EAAO,cACPkb,EAAa,qBACb3R,GACsBpO,EACtB,MAAM+F,GAAOC,EAAAA,EAAAA,KAEP/F,EAAyB,WAAd+H,EAAKxO,KAChBsgB,EAAmC,qBAAd9R,EAAKxO,MAC1B,MAAEC,GAAUH,EAAiB0O,IAAS,CAAC,GAEvC,QACJ3H,EAAO,QACPI,EAAO,cACPsB,EAAa,SACbmC,EAAQ,WACRI,EAAU,MACVpJ,EAAK,QACLmJ,EAAO,cACP/D,EAAa,UACb6D,EAAS,aACTzC,GACE3B,EAAc,CAChBtG,QAAOwG,WAAU5E,SAAQ6E,QAAO2f,GArCT,OAwClB,CAAE/D,GAAkB/N,KAErBpJ,EAASZ,QAAQtK,IACjB,SAAEyQ,IAAaC,EAAAA,EAAAA,MAEf6V,GAAuBza,EAAAA,EAAAA,IAAgB,KAC3CuW,GAAe,EAAK,IAGtB,IAAKriB,EAAO,OAEZ,GAAkB,WAAduO,EAAKxO,KACP,OAAK8G,EAaD8F,EAAAA,GAAA7K,cAAA,OAAK0R,IAAKxT,EAAMuD,GAAIuJ,UAAU,sBAC5BH,EAAAA,GAAA7K,cAAC0kB,GAAW,CACVhT,IAAKxT,EAAMuD,GACX2T,IAAKzM,EACLhJ,OAAK,EACLue,WAAY1X,EACZ6Q,YAAYsN,EAAAA,EAAAA,IAA+B5b,GAAa,GAAO,GAC/D5C,aAAcA,EACdyV,SAAUhT,EACVuV,kBAAmB/U,GAAUmO,EAC7BpK,YAAaA,EACbsK,mBAAoBmN,EAAAA,IAA2B9b,EAC/CsV,QAAS7G,EACTjO,QAASA,EACT2S,SAAO,EACPoC,oBAAkB,EAClBrC,OAAQ,EACRsC,gBAAiBiG,EACjBjN,aAAc,EACdiH,mBAAoBA,EACpB1L,qBAAsBA,KA/B1BhI,EAAAA,GAAA7K,cAAA,OAAK0R,IAAKxT,EAAMuD,GAAIuJ,UAAU,sBAC3B6Z,GACClc,GACAgc,EAAAA,EAAAA,IAA+B5b,GAAa,IAC3C4F,IAAaxB,EACdA,IAiCV,MAAM2X,EAAYT,IAAqD,wBAArCA,EAAYzT,QAAQnS,QAAQR,KAC1DuM,EAAK,qCACLua,EAAAA,EAAAA,GAAkB,CAAE/lB,QAASqlB,EAAaW,eAAe,EAAMC,kBAAkB,KAC/EtS,EAAa0R,GAAe,eAAgBA,EAAcA,EAAY1R,gBAAapT,EACnF2lB,EAAY1c,QAAQsc,GACpBzN,GAAasN,EAAAA,EAAAA,IAA+B5b,EAAamc,EAAWpgB,GACpEgO,EAAuBnE,GAyI/B,SAAkC0I,GAChC,QAAKA,GACEA,EAAWrQ,MA5OiB,GA6OrC,CA5I2Cme,CAAyB9N,GAElE,OACExM,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAe,qBAAsBmR,GAAa,cAC7D9B,YAAatQ,IAAyBM,EAAAA,GAAeqR,OAAuBllB,GAE3E2F,GAAW2f,GACVlc,EACA0O,GACC1I,IAAaxB,EACdA,GAEDrI,IAAayS,EAMZ1M,EAAAA,GAAA7K,cAAC0kB,GAAW,CACVhT,IAAKxT,EAAMuD,GACX2T,IAAKzM,EACLhJ,MAAOA,EACPue,WAAY1X,EACZ6Q,WAAYA,EACZlR,aAAcA,EACdyV,SAAUhT,EACVuV,kBAAmB/U,GAAUmO,EAC7B6G,QAAS7G,EACTE,mBAAoBmN,EAAAA,IAA2B9b,EAC/CQ,QAASA,EACT2S,QAASA,EACT/I,SAAUA,EACVJ,qBAAsBA,EACtB3F,YAAaA,EACb6O,OAAQA,EACRsC,gBAAiBiG,EACjBjN,aAAcA,EACdiH,mBAAoBA,EACpB1L,qBAAsBA,IAmEhC,SAA4BtM,EAAkB6e,EAA2BC,EAAmBlY,GAC1F,MAAM8V,EAAemC,GAAc,UAASA,EAAUpe,oBAAoBoe,EAAU/d,WAC9E6b,EAAc,yBAAwB3c,KAC5C,OAAOA,EAEHsE,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,eAETmC,GAAetC,EAAAA,GAAA7K,cAAA,OAAKsjB,cAAe/iB,EAAAA,EAAWyK,UAAU,cACzDH,EAAAA,GAAA7K,cAAA,OACEoD,MAAO6f,GAGPpY,EAAAA,GAAA7K,cAAA,SACEoD,MAAO8f,EACPlY,WAAW+I,EAAAA,GAAAA,GAAe5G,GAAe,gBACzC9M,UAAWmI,QAAQ6c,OAMzBxa,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,kBACV5H,MAAOgiB,EAAa,UAASA,EAAUpe,UAAY,IAEnD6D,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAGvB,CA1H+B6N,CACvB7S,EACA6Q,GACC1I,IAAaxB,EACdA,IAyBD2X,GACCja,EAAAA,GAAA7K,cAACulB,GAAiB,CAChB7S,KAAMoS,EACNnS,WAAYA,EACZjH,QAAS8Y,EACTrX,YAAaA,EACb2F,qBAAsBA,EACtBF,WAAY9N,IAAYnF,EACxBkT,qBAAsBA,IAGtB,KA6BV,SAASgS,GAAYte,EAAkB6e,EAA2BC,EAAmBlY,GACnF,OAAO5G,EAEHsE,EAAAA,GAAA7K,cAAA,OAAKoD,MAAM,uBACR+J,GAAetC,EAAAA,GAAA7K,cAAA,OAAKsjB,cAAe/iB,EAAAA,EAAWyK,UAAU,cACzDH,EAAAA,GAAA7K,cAAA,OACEQ,IAAK+F,EACLif,IAAI,GACJxa,WAAW+I,EAAAA,GAAAA,GAAe5G,GAAe,gBACzC/J,MAAOgiB,EAAa,UAASA,EAAUpe,UAAY,GACnD3G,UAAWmI,QAAQ6c,MAKvBxa,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,kBACV5H,MAAOgiB,EAAa,UAASA,EAAUpe,UAAY,IAEnD6D,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAGvB,CCxNA,MAAM,aAAEia,GAAY,aAAEC,IAAiBC,EAAAA,GA2BjCC,GAAaxS,EAAAA,GAAe,GAAK,EACjCyS,GAAqB,IAS3B,IAAI5O,GACA6O,GAA0C,IAQzCC,GAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,2BAAdA,EAAAA,EAAc,uBAAdA,CAAc,EAAdA,IAAc,IAKnB,MA4rBA,IAAe5c,EAAAA,EAAAA,KA5rByB1E,IAelC,IAfmC,KACvCgI,EAAI,QACJ3H,EAAO,MACPnF,EAAK,OACLyJ,EAAM,cACNkb,EAAa,SACbpR,EAAQ,mBACR8S,EAAkB,SAClBC,EAAQ,sBACRC,EAAqB,YACrBC,EAAW,WACXC,EAAU,QACV9c,EAAO,cACPkb,EAAa,qBACb3R,GACDpO,EAEC,MAAM4hB,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC0f,GAAiB1f,EAAAA,EAAAA,IAAuB,MAExC2f,GAAe3f,EAAAA,EAAAA,IAAuB,MAEtC4f,GAAgB5f,EAAAA,EAAAA,IAAuB,MACvC6f,GAAmB7f,EAAAA,EAAAA,IAAkB,CAAE8f,EAAG,EAAGC,EAAG,EAAGC,MAAO,IAC1DC,GAAoBjgB,EAAAA,EAAAA,SAAmCrH,GACvDunB,GAAwBlgB,EAAAA,EAAAA,SAA4BrH,GACpDwnB,GAAgBngB,EAAAA,EAAAA,KAAO,IACtB2Q,EAAUoI,IAAe/V,EAAAA,EAAAA,KAAS,IAClC+B,GAAiBE,KAClBmb,GAAoBpgB,EAAAA,EAAAA,IAAO+E,KAC3BmQ,GAAemL,EAAAA,GAAAA,OACdC,EAAaC,IAAkBvd,EAAAA,EAAAA,KAAS,IACxCwd,EAAcC,IAAgBnP,EAAAA,EAAAA,IAAqB,CAAEwO,EAAG,EAAGC,EAAG,EAAGC,MAAO,IACzEU,EAAevV,GAAaqV,IAC3BG,EAAeC,IAAiBtP,EAAAA,EAAAA,IAAuCzL,GACxEgb,EAAgB1V,GAAawV,GAC7BG,GAAWvU,EAAAA,GAAAA,IAAgB,IAA+B,IAAzBiU,IAAeR,OAAa,CAACQ,IAC9DO,GAAaxU,EAAAA,GAAAA,GAAgBoU,IAC3BlgB,OAAQugB,EAAc5gB,MAAO6gB,EAAW,WAAEC,IAAeC,EAAAA,GAAAA,MAC1D3V,EAAoBC,EAAoBmO,GAAgBhO,KAEzDhI,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,SAAUnO,EACV6e,OAAQ3e,EACR4e,kBAAkB,IAGpB,MAAMC,GAAsBC,EAAAA,GAAAA,GAAqBhC,EAAY,CAACA,GAxElC,KAwEsE,GAC5FiC,GAA+BD,EAAAA,GAAAA,IAAqB,KACxDvB,EAAkB9f,aAAUxH,CAAS,GACpC,GA1EkB,KA0EE,GAEjB+oB,GAAuBF,EAAAA,GAAAA,IAAsBhe,GAAUuV,EAAYvV,IAAQ,GA3E3D,KA2EgF,GAEhGme,EAAqB/f,QAAQ7I,IAAUgV,EAAAA,IACvC6T,GAAkBpV,EAAAA,GAAe,GAAKyU,EAAc,GAEpDY,IAA2Bze,EAAAA,EAAAA,IAAiBM,IAChD,IAAK8I,EAAAA,GAAc,OACnB,MAAMsV,EAAWd,EAAetd,EAAEqe,MAhFZ,IAiFjBD,GAAYpe,EAAE+P,MAAQmO,KACtBE,GAAYpe,EAAE+P,MAAQwN,EAAcW,IACzCnW,GAAoBD,IAAqB,KAG3CwW,EAAAA,GAAAA,IAAW,IAAMvW,GAAmB,IAAOwT,KAE3C9d,EAAAA,EAAAA,KAAU,KACR,MAAM,MAAE6e,EAAK,EAAEF,EAAC,EAAEC,GAAMW,EAAavgB,QAE3B,IAAN2f,GAAiB,IAANC,GAAqB,IAAVC,GACxBY,EAAc/a,EAChB,GACC,CAACA,EAAM+a,EAAeF,KAEzBvf,EAAAA,EAAAA,KAAU,KACHke,GAAa0B,IAAc3B,GAChCE,EAAsByB,EAAW,GAChC,CAACA,EAAYzB,EAAuBD,EAAUD,KAEjDpM,EAAAA,EAAAA,KAAgB,KACd,MAAM,EAAE8M,EAAC,EAAEC,EAAC,MAAEC,GAAUQ,IACxB5G,EAAuB,IAAVoG,GACTL,EAAaxf,UACfwf,EAAaxf,QAAQ3D,MAAMylB,UAAYC,IAAmBjB,EAAcnB,EAAId,KAE1EU,EAAevf,UACjBuf,EAAevf,QAAQ3D,MAAMylB,UAAYC,GAAkBpC,EAAGC,EAAGC,IAE/DJ,EAAczf,UAChByf,EAAczf,QAAQ3D,MAAMylB,UAAYC,GAAkBjB,EAAcnB,EAAId,IAC9E,GACC,CAACwB,EAAc5G,EAAcqH,KAEhC9f,EAAAA,EAAAA,KAAU,KACR,IAAKse,EAAatf,cAAqCxH,IAA1BkoB,EAAc1gB,SAAyBmM,GAAY4I,EAC9E,OAEF,IAAIiN,EAAgBtC,EAAiB1f,QACrC,MAAMiiB,EAAiB,CACrBtC,EAAG,EACHC,EAAG,GAECsC,EAAiB,CACrBvC,EAAG,EACHC,EAAG,GAECuC,EAAW,CACfxC,EAAG,EACHC,EAAG,GAEL,IACI/V,EADAuY,EAAkBC,KAAKC,MAE3B,MAAMC,GAAqBC,EAAAA,GAAAA,KAAS,KAClCJ,EAAkBC,KAAKC,KAAK,GAC3B,KAAK,GAAO,GAETG,EAAeC,IACnB,MAAMC,EAAcjC,EAAc1gB,QAClC,QAAoBxH,IAAhBmqB,EAA2B,OAAO,EACtC,MAAMC,EAAWxD,EAAYuD,EAAaD,GAC1C,QAAiBlqB,IAAboqB,EAAwB,CAC1B,MAAMxP,GAAU0N,EAAcjC,IAAc6D,EAEtC/C,EADYY,EAAavgB,QACX2f,EAAIvM,EAMxB,OALAwF,GAAY,GACZ6H,EAAcmC,GACdxB,EAAoBwB,GACpBrB,GAAqB,GACrBS,EAAgB,CAAErC,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAChCtC,GAILrN,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9BC,KAAMiN,EACNhN,GAAI,EACJxC,SAAU2O,GACV+D,OAAQnE,GACR9L,SAAWvP,GAAUid,EAAa,CAChCV,EAAG,EACHD,EAAGtc,EACHwc,MAAO,OAGJ,IAdLS,EAAa0B,IACN,EAcX,CACA,OAAO,CAAK,EAGRc,EAAsBvf,IAC1B,MAAM,MAAEsc,GAAUU,EAAavgB,QAC/B,GAAc,IAAV6f,EAAa,MAAO,EAAC,GAAO,GAChC,GAAKtc,EAAEC,OAAuB/I,QAAQ,2BACpC,MAAO,EAAC,GAAO,GAEjB,IAAIioB,EAAY,EAChB,OAAI7B,EAAetd,EAAEqe,MAlLD,GAmLX,EAAC,GAAO,IAEbre,EAAE+P,MAAQmO,GACZiB,GAAa,EACJnf,EAAE+P,MAAQwN,EAAcW,KACjCiB,EAAY,GAIP,CAD6B,IAAdA,EADDD,EAAYC,IAEG,EAGhC1G,EAAiBzY,IACrB,MAAM,MAAEsc,GAAUU,EAAavgB,QAC/B,GAAc,IAAV6f,EACJ,OAAQtc,EAAEoH,KACR,IAAK,OACL,IAAK,YACH8X,GAAa,GACb,MAEF,IAAK,QACL,IAAK,aACHA,EAAY,GAEhB,EAGIM,EAA4B,SAAA5Z,GAGE,IAFlC,EAAEwW,EAAC,EAAEC,EAAC,MAAEC,GAAkB1W,EAC1B3O,EAASkG,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAAG,EAEZ,MAAMsiB,EAAqBjD,EAAsB/f,QACjD,IAAKgjB,EAAoB,MAAO,CAAC,CAAErD,IAAGC,IAAGC,UAAS,GAAM,GAExD,IAAIoD,GAAY,EACZC,GAAY,EAEhB,MAAMC,GAAWrC,EAAcA,EAAcjB,GAAS,EAChDuD,GAAWvC,EAAeA,EAAehB,GAAS,EAIlDwD,EAAapZ,KAAKqZ,KAAKN,EAAmBlQ,KAAO+M,EAAOsD,GACxDI,EAAazC,EAAckC,EAAmBlJ,MAAQ+F,EAC5DoD,GAAYO,EAAAA,GAAAA,IAAU7D,EAAG4D,EAAYF,GACrC1D,GAAIjM,EAAAA,GAAAA,IAAMiM,EAAG4D,EAAYF,GAEzB,MAAMI,EAAaxZ,KAAKqZ,KAAKN,EAAmBhJ,IAAM6F,EAAQrlB,EAAW4oB,GACnEM,EAAa7C,EAAemC,EAAmB/I,OAAS4F,EAI9D,OAHAqD,GAAYM,EAAAA,GAAAA,IAAU5D,EAAG8D,EAAYD,GACrC7D,GAAIlM,EAAAA,GAAAA,IAAMkM,EAAG8D,EAAYD,GAElB,CAAC,CAAE9D,IAAGC,IAAGC,SAASoD,EAAWC,EACtC,EAEM/O,EAAa5Q,IAGjB,GAAIyc,EAAchgB,QAEhB,YADAggB,EAAchgB,SAAU,GAGX,YAAXuD,EAAErM,MACJkpB,GAAe,GAEjB,MAAM0B,EAAYvB,EAAavgB,SACzB,EAAE4f,EAAC,MAAEC,GAAUiC,EACrB,IAAInC,EAAImC,EAAUnC,EAClB,MAAMgE,EAAO1Z,KAAK2Z,IAAIjE,GAChBkE,EAAO5Z,KAAK2Z,IAAIhE,GAMtB,GAJA0B,IACAC,GAAqB,GAGjB1B,EAAQ,EAaV,OAZAmC,EAAgB,CAAErC,EAAG,EAAGC,EAAG,EAAGC,MAAO,QACrC3P,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9BC,KAAM,CAACiN,EAAGC,EAAGC,GACblN,GAAI,CAAC,EAAG,EAAG,GACXxC,SAAU2O,GACV+D,OAAQnE,GACR9L,SAAWvP,GAAUid,EAAa,CAChCX,EAAGtc,EAAM,GACTuc,EAAGvc,EAAM,GACTwc,MAAOxc,EAAM,QAKnB,GAAIwc,EAAQ,EAAG,CAEb,MAAMiE,EAAK7Z,KAAK8Z,IAAIlE,EA9QX,GA+QHmE,EAAcF,EAAKjE,EAIzB,IAAIoE,EAAKtE,EAAIqE,GAAe9B,EAAevC,EAAIqE,EAAc9B,EAAevC,GACxEuE,EAAKtE,EAAIoE,GAAe9B,EAAetC,EAAIoE,EAAc9B,EAAetC,GAG5E,MAAMuE,EAAI,IAGV,GAAe,UAAX5gB,EAAErM,MAAoB8qB,EAAcnC,QAAUA,EAAO,CAEvD,MAAMuE,EAAKna,KAAK2Z,IAAI3B,EAAetC,IAAM0C,KAAKC,MAAQF,GAChDiC,EAAKpa,KAAK2Z,IAAI3B,EAAerC,IAAMyC,KAAKC,MAAQF,GAGtD6B,GAAMha,KAAK2Z,IAAI3B,EAAetC,GAAKyE,EAAKD,EAAIhC,EAASxC,EACrDuE,GAAMja,KAAK2Z,IAAI3B,EAAerC,GAAKyE,EAAKF,EAAIhC,EAASvC,CACvD,CAcA,OAZCoC,GAAiBe,EAA0B,CAAEpD,EAAGsE,EAAIrE,EAAGsE,EAAIrE,MAAOiE,GArSrD,SAsSd5T,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9BC,KAAM,CAACiN,EAAGC,EAAGC,GACblN,GAAI,CAACqP,EAAcrC,EAAGqC,EAAcpC,EAAGoC,EAAcnC,OACrD1P,SAAU2O,GACV+D,OAAQnE,GACR9L,SAAWvP,GAAUid,EAAa,CAChCX,EAAGtc,EAAM,GACTuc,EAAGvc,EAAM,GACTwc,MAAOxc,EAAM,OAInB,CAMA,GALA2e,EAAgB,CACdrC,IACAC,IACAC,SAEEgE,GAhUgB,GAkUlB,YADAthB,IAIF,GAAIshB,EAAO,EAYT,YAXA3T,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9BC,KAAMkN,EACNjN,GAAI,EACJxC,SAAU2O,GACV+D,OAAQnE,GACR9L,SAAWvP,GAAUid,EAAa,CAChCX,EAAG,EACHC,EAAGvc,EACHwc,aAMN,MAAM6C,EAAY/C,EAAI,EAAI,GAAK,EACzBgD,EAAcjC,EAAc1gB,QAC5B4iB,EAAWD,GAAevD,EAAYuD,EAAahD,EAAI,EAAI,GAAK,GAKhE2E,EAAOnC,EAASxC,EAAI,GAAK,EAAI,OAClBnnB,IAAboqB,GAA0Be,GA7VV,IA6VuCjB,IAAc4B,IAIvE3E,IAHgBmB,EAAcjC,IAAc6D,EAI5CjC,EAAcmC,GACdxB,EAAoBwB,IAGtB1S,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9BC,KAAMiN,EACNhN,GAAI,EACJxC,SAAU2O,GACV+D,OAAQnE,GACR9L,SAAWvP,GAAUid,EAAa,CAChCV,EAAG,EACHD,EAAGtc,EACHwc,MAAOA,GAAS,KAElB,EAGE9L,GAAUC,EAAAA,GAAAA,IAAcsL,EAAatf,QAAS,CAClDukB,cAAc,EACdC,gBAAgB,EAChBC,wBAAyB,0DACzBC,QA5WW,EA6WXC,QA9WW,EA+WXC,cAlXkB,EAmXlBC,eAAe,EACf5Q,UAAY1Q,IACV,GAAIuhB,GAAqBvhB,GAAI,OAC7B,MAAM,EAAEoc,EAAC,EAAEC,EAAC,MAAEC,GAAUU,EAAavgB,QACrC,GAAe,cAAXuD,EAAErM,OACJkpB,GAAe,GACD,IAAVP,IAMN,GADAuC,EAAkBC,KAAKC,MACb,IAAN3C,GAAiB,IAANC,GAAqB,IAAVC,EAAa,CACrC,IAAKN,EAAevf,QAAS,OAE7B,GADA6J,EAAU0V,EAAevf,QAAQ/F,cAAc,eAC1C4P,EAAS,OAEdkW,EAAsB/f,QAAU6J,EAAQsJ,uBAC1C,OAXI5P,EAAE0Y,gBAWN,EAEF7H,OAAQA,CAAC2Q,EAAOC,EAAYva,EAGzBwa,KAAe,IAHY,YAC5BC,EAAW,YACXC,GACD1a,EACC,GAAIuV,EAAchgB,SAAW8kB,GAAqBC,GAAQ,OAE1D,GAAInX,EAAAA,IAAgC,eAAtBoX,EAAa9tB,KAAuB,CAChD,MAAM,MAAEoc,GAAW0R,EAAgCxR,QAAQ,GAC3D,GAAIF,GAAS8R,GAAAA,IAA6B9R,GAASwN,EAAcsE,GAAAA,GAC/D,MAEJ,CACIlV,KACFA,KACAA,QAAkB1X,GAEpB2pB,EAASxC,EAAIsC,EAAetC,EAAIuF,EAChC/C,EAASvC,EAAIqC,EAAerC,EAAIuF,EAChClD,EAAetC,EAAIuF,EACnBjD,EAAerC,EAAIuF,EACnB,MAAME,EAAapb,KAAK2Z,IAAIsB,GACtBI,EAAarb,KAAK2Z,IAAIuB,IACtB,EAAExF,EAAC,EAAEC,EAAC,MAAEC,GAAUU,EAAavgB,QAOrC,GAHAuiB,IAGc,IAAV1C,GAkBJ,GAAmB,cAAfkF,EAAM7tB,KAAV,CACA,GAAI4oB,EAAkB9f,UAAYgf,GAAeuG,WAG3CzF,EAAkB9f,UAAYgf,GAAewG,YAC5Cvb,KAAK2Z,IAAIjE,GAAK8F,GAAAA,IAA6BJ,EAAaC,EAAaI,GAAAA,IAA2B,CACnG5F,EAAkB9f,QAAUgf,GAAewG,WAC3C5M,GAAY,GACZ,MAAM+M,EAAQ7E,EAAcjC,GACtBoF,GAAKvQ,EAAAA,GAAAA,IAAMwR,GAAcS,EAAOA,GAatC,OAZArF,EAAa,CACXX,EAAGsE,EACHrE,EAAG,EACHC,eAKiB,UAAfkF,EAAM7tB,MAAoB+S,KAAK2Z,IAAIK,GAAM2B,MAC3CzR,EAAU4Q,GACV/E,EAAchgB,SAAU,GAG5B,CAGF,GAAI8f,EAAkB9f,UAAYgf,GAAeuG,UAC5Ctb,KAAK2Z,IAAIhE,GAAK6F,GAAAA,IAA6BH,EAAaD,EAAaK,GAAAA,GAA2B,CACnG5F,EAAkB9f,QAAUgf,GAAeuG,SAC3C,MAAMI,EAAQ9E,EACRqD,GAAKxQ,EAAAA,GAAAA,IAAMyR,GAAcQ,EAAOA,GACtCrF,EAAa,CACXX,EAAG,EACHC,EAAGsE,EACHrE,UAEiB,UAAfkF,EAAM7tB,MAAoB+S,KAAK2Z,IAAIM,GAAM2B,MAC3C1R,EAAU4Q,GACV/E,EAAchgB,SAAU,EAE5B,CAxCsC,MAlBtC,CACE,MAAMikB,EAAKjC,EAAcrC,EAAIuF,EACvBhB,EAAKlC,EAAcpC,EAAIuF,EAC7B,GAAI,CAAC,QAAS,aAAaxqB,SAASoqB,EAAM7tB,MAAO,CAC/C,MAAO4qB,EAAWmB,EAAWC,GAAaH,EAA0B,CAAEpD,EAAGsE,EAAIrE,EAAGsE,EAAIrE,SAta1E,IAyaV,OAFIoF,GAAYA,GAAYhC,GAAYC,QACxC5C,EAAawB,EAEf,CACI,YAAaiD,GAAkC,IAAzBA,EAAMvR,QAAQlc,QACtCgpB,EAAa,CACXX,EAAGsE,EACHrE,EAAGsE,EACHrE,SAIN,CAyCA,EAEFiG,OAAQA,CAACviB,EAACkC,KASJ,IATM,KACVsgB,EAAI,WACJC,EAAU,eACVC,EAAc,eACdC,EAAc,YACdhB,EAAW,YACXC,EAAW,eACXgB,EAAc,eACdC,GACD3gB,EACKyK,IAAiBA,KACrB+V,EAAiBA,GAAkBnF,EAAc,EACjDoF,EAAiBA,GAAkBrF,EAAe,EAClDsF,EAAiBA,GAAkBrF,EAAc,EACjDsF,EAAiBA,GAAkBvF,EAAe,EAGlD,MAAMhB,EAAQkG,IAAQrS,EAAAA,GAAAA,IAAMsO,EAAcnC,MAAQmG,EAAaK,GAAgBC,IACzEtC,EAAcnE,EAAQmC,EAAcnC,MACpC0G,EAAUtc,KAAK2Z,IAAI3Z,KAAK8Z,IAAI/B,EAAcrC,EAAG,IAC7C6G,EAAUvc,KAAK2Z,IAAI3Z,KAAK8Z,IAAI/B,EAAcpC,EAAG,IAGnDsC,EAAevC,EAAIwG,EACnBjE,EAAetC,EAAIwG,EAGnB,MAAMK,EAAgBF,EAAUN,EAC1BS,EAAgBF,EAAUN,EAG1BS,EAAgBF,EAAgBzC,EAAcyC,EAC9CG,EAAgBF,EAAgB1C,EAAc0C,GAE7C5E,GAAaiB,EAA0B,CAC5CpD,EAAGqC,EAAcrC,EAAIgH,EAAezB,EACpCtF,EAAGoC,EAAcpC,EAAIgH,EAAezB,EACpCtF,UAGFS,EAAawB,EAAU,EAEzBnd,OAAAA,CAAQpB,GACN6c,GAAe,GACf,MAAOyG,EAAeC,GAAgBhE,EAAmBvf,GACzD,GAAIsjB,EAAJ,CAGE,GAFAtjB,EAAE0Y,iBACF1Y,EAAE0J,kBACEZ,EAAAA,GAAc,OACbya,GAAcvkB,GAErB,MAC4B,IAAxByf,EAAcnC,OAAexT,EAAAA,KAC7BmV,GAAuBuF,GAAsBxjB,EAAEC,OAAuB,iBACxEjB,GAEJ,EACAia,aAAAA,CAAcjZ,EAACyjB,GAGZ,IAHc,QACf7D,EAAO,QACPC,GACD4D,EACC,MAAOH,GAAiB/D,EAAmBvf,GAC3C,GAAIsjB,EAGF,OAFAtjB,EAAE0Y,sBACF1Y,EAAE0J,kBAGJ,IAAKZ,EAAAA,IAA2B,UAAX9I,EAAErM,KAAkB,OACzC,MAAM,EAAEyoB,EAAC,EAAEC,EAAC,MAAEC,GAAUU,EAAavgB,QAIrC,GAAc,IAAV6f,EAAa,CACf,GAAU,IAANF,GAAiB,IAANC,EAAS,OACxBoC,EAAgBe,EAA0B,CACxCpD,EALkBwD,EAtiBN,EAsiBkCA,EAM9CvD,EALkBwD,EAviBN,EAuiBkCA,EAM9CvD,MA7iBY,IA8iBX,EACL,MACEmC,EAAgB,CACdrC,EAAG,EACHC,EAAG,EACHC,MAAO,GAGX3P,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9BC,KAAM,CAACiN,EAAGC,EAAGC,GACblN,GAAI,CAACqP,EAAcrC,EAAGqC,EAAcpC,EAAGoC,EAAcnC,OACrD1P,SAAU2O,GACV+D,OAAQnE,GACR9L,SAAWvP,IACT,MAAMye,EAAY,CAChBnC,EAAGtc,EAAM,GACTuc,EAAGvc,EAAM,GACTwc,MAAOxc,EAAM,IAEfid,EAAawB,EAAU,GAG7B,EACA3N,cAGF,OADAxc,SAASiV,iBAAiB,UAAWoP,GAAe,GAC7C,KACLjI,IACApc,SAASkV,oBAAoB,UAAWmP,GAAe,EAAM,CAC9D,GAEH,CACE0E,EACAY,EACAG,GACArC,EACArK,EACA5I,EACA5J,EACA6e,EACAX,EACAc,EACAjB,EACAkB,EACAjB,EACAM,EACAC,EACAvD,KAGFvc,EAAAA,EAAAA,KAAU,KACR,MAAM6H,EAAajE,IACbqiB,OAA+CzuB,IAA9BynB,EAAkBjgB,SACpCigB,EAAkBjgB,UAAY6I,EACnC,IAAKyW,EAAatf,UAAYinB,GAAkB9a,GAAY4I,EAAc,OAC1EkL,EAAkBjgB,QAAU6I,EAC5B,MAAM,MAAEgX,GAAUU,EAAavgB,QACzBkN,EAAMrE,EAAa,GAAK,EAAI,EAGlC,IAAIqe,EAAQ,IACRC,EAAY,EACZtH,GAJYwG,IAIQnZ,EAAM,GAC1B2S,GAJYyG,IAIQpZ,EAAM,IAChB,IAAV2S,GAAe3S,EAAM,IAAGga,EAAQ,IAChCnI,IAAqBA,KACzBA,IAAsBtM,EAAAA,EAAAA,IAAc,CAClCC,KAAMxF,EACNyF,GAAIzF,EAAMga,EACV/W,SAAU2O,GACV+D,OAAQlE,GACR/L,SAAWvP,IACT,IAAKic,EAAatf,QAAS,OAC3B,MAAMonB,GAAQ/d,EAAAA,GAAAA,IAAMhG,EAAQ8jB,EAAW,GACvCA,EAAY9jB,EAEZ,MAAMgkB,EAAa,IAAIC,WAAW,QAAS,CACzCC,OAAQH,EACRI,SAAS,IAEXlI,EAAatf,QAAQynB,cAAcJ,EAAW,IAEhD,GACD,CAACziB,EAAeuH,EAAU4I,EAAcwL,IAE3C,MAAOmH,GAAU9E,KAAYrkB,EAAAA,EAAAA,KAAQ,SAChB/F,IAAfooB,EAAiC,MAACpoB,OAAWA,GAC1C,CAAC4mB,EAAYwB,GAAa,GAAIxB,EAAYwB,EAAY,KAC5D,CAACA,EAAYxB,IAEhB,QAAmB5mB,IAAfooB,EAA0B,OAE9B,MAAM+G,QAAuBnvB,IAAbkvB,GACVE,QAAuBpvB,IAAboqB,GACVpF,GAAW2C,GAAeQ,EAEhC,OACE7c,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oBAAoBiH,IAAKoU,GACtCxb,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBAAmBiH,IAAKsU,GACpCmI,KAAYhH,IAAaI,GACxBjd,EAAAA,GAAA7K,cAAC4uB,GAAkB,CACjBtK,cAAeA,EACfC,SAAUA,GACV9X,KAAMgiB,GACNnlB,QAASA,EACTkb,cAAeA,EACf3R,qBAAsBA,KAI5BhI,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACT,mBACA,2BACAwQ,IAAY,4BAEd7Y,QAAS+c,GACTxW,IAAKqU,GAELzb,EAAAA,GAAA7K,cAAC4uB,GAAkB,CACjBniB,KAAMkb,EACNrD,cAAeA,EACf/M,SAAUA,EACVgN,SAAUA,GACVjb,QAASA,EACTkb,cAAeA,EACf3R,qBAAsBA,KAG1BhI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBAAmBiH,IAAKuU,GACpCmI,KAAYjH,IAAaI,GACxBjd,EAAAA,GAAA7K,cAAC4uB,GAAkB,CACjBtK,cAAeA,EACfC,SAAUA,GACV9X,KAAMkd,GACNrgB,QAASA,EACTkb,cAAeA,EACf3R,qBAAsBA,KAI3B6b,KAAYhH,IAAatU,EAAAA,IACxBvI,EAAAA,GAAA7K,cAAA,UACE/B,KAAK,SACL+M,UAAY,mBAAkBlG,IAAYnF,GAAS,WACnD,aAAY6K,EAAK,oBACjByJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,IAG7BovB,KAAYjH,IAAatU,EAAAA,IACxBvI,EAAAA,GAAA7K,cAAA,UACE/B,KAAK,SACL+M,UAAY,mBAAkBlG,IAAYnF,GAAS,WACnD,aAAY6K,EAAK,QACjByJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,IAG1B,IAMV,SAASupB,KAA2C,IAAlBnC,EAAClf,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAAG,EAAGmf,EAAKnf,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAAG,EAC/C,MAAQ,gBADkBA,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAAG,GACLqnB,QAAQ,SAASnI,EAAEmI,QAAQ,oBAAoBlI,EAAMkI,QAAQ,KACvF,CAEA,SAAShB,GAAsBiB,EAAsBC,GACnD,QAAKD,MACDA,EAAQE,QAAQD,IACbxmB,QAAQumB,EAAQvtB,QAAQwtB,IACjC,CAEA,SAASnD,GAAqBvhB,GAC5B,MAAMC,EAASD,EAAEC,OACjB,QAAIujB,GAAsBvjB,EAAQ,0BAC5BujB,GACFvjB,EACA,gGAIFD,EAAE0Y,kBAFO,EAMb,C,2BC7wBA,MA8FA,IAAe1W,EAAAA,EAAAA,KACb,CAACC,EAAM2D,KAA2B,IAAzB,KAAEzD,GAAMyD,EACf,MAAMlR,EAAyB,YAAfyN,GAAMxO,KAAqBwO,EAAKzN,aAAUO,EACpD2vB,EAAgBlwB,IAAWmwB,EAAAA,EAAAA,KAAa5iB,EAAQvN,GAItD,MAAO,CACLowB,MAH2B,WAAf3iB,GAAMxO,KAAoBwO,EAAKK,YAAcoiB,EAI1D,GATL,EA3F8CzqB,IAGxC,IAHyC,MAC7C2qB,EAAK,KACL3iB,GACDhI,EACC,MAAM,iBACJ4qB,EAAgB,aAChBC,EAAY,eACZC,IACE9lB,EAAAA,EAAAA,OAEE,SAAEkF,IAAaC,EAAAA,EAAAA,MAEf4gB,GAAqBxlB,EAAAA,EAAAA,IAAgB,KAGzC,GAFAqlB,IAEmB,YAAf5iB,GAAMxO,KAAoB,OAE9B,MAAMe,EAAUyN,EAAKzN,QAEjB2P,EACFrG,YAAW,KACTinB,EAAe,CAAEE,OAAO,GAAS,CAAEC,gBAAgB,IACnDJ,EAAa,CAAErlB,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAAK,GAxB5C,KA2BrB6tB,EAAa,CAAErlB,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAC5D,IAGI+I,GAAOC,EAAAA,EAAAA,KAEPklB,GAAWrqB,EAAAA,EAAAA,KAAQ,KACvB,IAAKmH,GAAsB,eAAdA,EAAKxO,KAAuB,OAEzC,MAAM6O,EAA4B,WAAdL,EAAKxO,KAAoBwO,EAAKK,iBAAcvN,EAC1DhB,EAA8B,WAAdkO,EAAKxO,KAAoBwO,EAAKlO,mBAAgBgB,EAC9DjB,EAASC,GAAeC,OAAOiO,EAAKtO,YACpCyxB,EAAmBtxB,GAAQmD,KAAOlD,GAAesxB,eAAepuB,GAChEquB,EAAmBxxB,GAAQmD,KAAOlD,GAAewxB,eAAetuB,GAChEuuB,EAAqB,YAAdvjB,EAAKxO,KAAqBwO,EAAKzN,QAAQgxB,KAAO1xB,GAAQ0xB,KACnE,IAAKA,EAAM,OAEX,MAAMC,GAAgBC,EAAAA,GAAAA,IAAoB1lB,EAAa,IAAPwlB,GAAa,GACvDG,EAAQ5xB,GAAe4xB,OACvB5xB,EAAc4xB,OAAS5xB,GAAesxB,cAAgB,EAAI,GAC1DO,EAAe3jB,EAAKtO,WAAc,GAAKI,GAAewxB,eAAiB,EAAI,GAC3EM,EAAYF,GAAS3lB,EAAK,KAAM,CAAC4lB,EAAcD,IAE/CG,EAAkB,GACxB,GAAIhyB,EAAQ,CACV,MAAMiyB,GAAQlkB,EAAAA,EAAAA,KAASS,EAAarL,SAA+BlC,EAAzBuN,EACpC0jB,EAAYD,IAAQE,EAAAA,EAAAA,KAAcF,GAClCG,EAAUH,IAAQI,EAAAA,EAAAA,KAAYJ,GACpCD,EAAMzf,KAAKrG,EACTslB,EAAmB,qCACfF,EAAmB,qCACjBY,EAAY,8BACVE,EAAU,4BAA8B,+BAEpD,CAQA,OANIL,GAAcP,GAAqBF,GACrCU,EAAMzf,KAAKwf,GAGbC,EAAMzf,KAAKof,GAEJK,EAAMpM,KAAM,MAAa,GAC/B,CAACzX,EAAMjC,IAEV,IAAK4kB,EACH,OAGF,MAAMwB,GAAcC,EAAAA,EAAAA,KAAermB,EAAM4kB,GAEzC,OACEvkB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,aAAaU,QAAS8jB,GACnC3kB,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAACpf,IAAK0d,EAAM3tB,GAAIyG,KAAK,SAAS6oB,KAAM3B,IAC3CvkB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,QACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,QAAQiJ,IAAI,QACxB2c,IAAeI,EAAAA,GAAAA,GAAWJ,IAE7B/lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,OAAOiJ,IAAI,QACvB0b,IAGD,ICjCJ9J,GAAqB,IAwY3B,IAAe1c,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,YAAEM,EAAW,4BAAEokB,IAAgCrkB,EAAAA,EAAAA,KAAeL,IAC9D,OACJtC,EAAM,SACNiD,EAAQ,UACRuJ,EAAS,OACT3W,EAAM,SACNoT,EAAQ,mBACRge,EAAkB,gBAClBC,EAAe,WACfhzB,EAAU,aACV4R,EAAY,mBACZwO,GACE1R,EACEyX,GAAgB8M,EAAAA,EAAAA,KAA+B7kB,EAAQ,0BAEvD,cAAE8kB,EAAa,SAAEpL,GAAa1Z,EAC9B+kB,EAAiB9oB,QAAQyB,KAAWsnB,EAAAA,EAAAA,KAAqBhlB,EAAQtC,GAEvE,GAAI8F,EAAc,CAChB,MAAMghB,GAAOS,EAAAA,EAAAA,KAAWjlB,EAAQtC,GAChC,IAAIyC,GAAiB,EACjBqkB,IACFrkB,GAAiBL,EAAAA,EAAAA,KAAS0kB,EAAKtvB,IAAMsvB,EAAKtvB,KAAO4vB,GAAgBI,EAAAA,EAAAA,KAAYV,IAG/E,MAAMxyB,GAAgBmzB,EAAAA,EAAAA,KAAiBnlB,EAAQtC,GAE/C,MAAO,CACL1L,gBACAD,OAAQC,GAAeC,OAAOL,GAC9B2O,YAAaikB,EACb/K,mBAAoBznB,GAAeozB,UACnCL,iBACA5kB,iBACA4X,gBACAxkB,SACAmxB,8BACA/d,WACAie,kBACAhzB,aACA8nB,WAEJ,CAEA,IAAIjnB,EASAolB,EAOAwN,EAfA3nB,GAAUwM,IAEVzX,EADEc,GAAU,CAACc,EAAAA,GAAkBuB,eAAgBvB,EAAAA,GAAkBiC,iBAAiBnB,SAAS5B,IACjF+xB,EAAAA,EAAAA,KAAuBtlB,EAAQtC,EAAQwM,IAEvCqb,EAAAA,EAAAA,KAAkBvlB,EAAQtC,EAAQwM,IAK5C8H,GAAsBtU,GACpBnK,IAAWc,EAAAA,GAAkB+B,mBAC/ByhB,GAAmB2N,EAAAA,EAAAA,KAAuBxlB,EAAQtC,IAMlDA,IAEA2nB,EADE9xB,GAAU,CAACc,EAAAA,GAAkBuB,eAAgBvB,EAAAA,GAAkBiC,iBAAiBnB,SAAS5B,IAC5EkyB,EAAAA,EAAAA,KAA4BzlB,EAAQtC,IAEpCgoB,EAAAA,EAAAA,KAAmB1lB,EAAQtC,IAI9C,IAAI+b,GAAqB,EACzB,MAAMkM,EAAiBpyB,IAAWc,EAAAA,GAAkBkC,OAC9CqvB,EAAgBryB,IAAWc,EAAAA,GAAkBsB,MACnD,IAAIkwB,EAEJ,GAAInoB,GAAUiD,GAAYuJ,EACxB,GAAIya,IAAuBgB,GAAkBC,GAAgB,CAC3D,MAAME,GAAgBC,EAAAA,EAAAA,KAA6B/lB,GACnDyZ,EAAqBxd,QAAQ6pB,GAAeV,WAC5C,MAAM,SAAEY,GAAcF,GAAeG,gBAAmB,CAAC,EACzDJ,EAAsBG,CACxB,MAAO,GAAIzyB,IAAWc,EAAAA,GAAkB0B,YAAa,CACnD,MAAM+vB,GAAgBI,EAAAA,EAAAA,KAA+BlmB,IAC/C,SAAEgmB,GAAcF,GAAiBA,EAAcK,eAAiBL,EAAcK,cAAcx0B,OAAU,CAAC,EAC7Gk0B,EAAsBG,CACxB,MAAWL,GAAkBC,KAE3BC,GADqBO,EAAAA,EAAAA,KAA8BpmB,EAAQtC,EAAQiD,EAAUuJ,KACvCmc,EAAAA,EAAAA,KAAgBrmB,EAAQtC,EAAQiD,IAI1E,MAAO,CACLjD,SACAiD,WACAuJ,YACA6a,iBACAxxB,SACAd,UACA4yB,eACAxN,mBACAgO,sBACA9N,gBACApR,WACA+d,8BACAC,qBACAC,kBACAhzB,aACA6nB,qBACAC,WACD,GA/Ge3Z,EArYA7H,IAsBF,IAtBG,OACnBwF,EAAM,SACNiD,EAAQ,UACRuJ,EAAS,QACTzX,EAAO,oBACPozB,EAAmB,eACnBd,EAAc,eACd5kB,EAAc,OACd5M,EAAM,OACNxB,EAAM,YACNwO,EAAW,cACXvO,EAAa,aACbqzB,EAAY,iBACZxN,EAAgB,gBAChB+M,EAAe,WACfhzB,EAAU,cACVmmB,EAAa,SACbpR,EAAQ,4BACR+d,EAA2B,mBAC3BC,EAAkB,mBAClBlL,GAAkB,SAClBC,IACWxhB,EACX,MAAM,gBACJwK,GAAe,iBACfogB,GAAgB,gBAChBwD,GAAe,aACfvD,GAAY,eACZC,GAAc,wBACduD,GAAuB,sBACvBC,GAAqB,sBACrBC,GAAqB,QACrBC,KACExpB,EAAAA,EAAAA,MAEEL,GAASZ,QAAQsE,GAAe9N,GAAWmyB,GAAmB/M,IAC9D,SAAEzV,KAAaC,EAAAA,EAAAA,MAGfskB,IAAetsB,EAAAA,EAAAA,MACfusB,GAAWn0B,GAASm0B,UAAYrmB,GAAarL,IAAMzC,GAASiL,OAC5DmpB,IAAeC,EAAAA,EAAAA,GAA0CF,IACzDG,GAAkBhP,EAAgB,YAAc,OAChDiP,GAAmB/qB,QAAQ8b,IAAkB2M,IAG5CuC,GAAyBC,GAAuBC,KAA0BhlB,EAAAA,EAAAA,KAE3EilB,GvB7GD,SAA2BlvB,GASF,IATG,QACjCzF,EAAO,YAAE8N,EAAW,cAAEvO,EAAa,gBAAE4yB,EAAe,WAAEhzB,EAAU,iBAAEimB,GAQnE3f,EACC,OAAIqI,GAAevO,EACV,CACLN,KAAM,SACN6O,cACAvO,gBACAJ,WAAYA,GAIZgzB,EACK,CACLlzB,KAAM,aACNC,MAAOizB,EACPhzB,WAAYA,GAIZa,EACK,CACLf,KAAM,UACNe,UACAb,cAIAimB,EACK,CACLnmB,KAAM,mBACNe,QAASolB,EACTjmB,mBAJJ,CASF,CuBiEsBy1B,CAAmB,CACrC50B,UAAS8N,cAAaqkB,kBAAiB5yB,gBAAeJ,aAAYimB,sBAE9D,MAAElmB,GAAK,SAAEE,IAAaL,EAAiB41B,KAAgB,CAAC,GAExD,QACJ7uB,GAAO,QACPI,GAAO,cACPsB,GAAa,SACbmC,GAAQ,WACRI,GAAU,MACVpJ,GAAK,kBACLwF,IACEX,EAAc,CAChBtG,SAAOwG,SAAU8D,QAAQsE,GAAchN,SAAQ6E,MAAO4uB,IAAoB1N,KAGtE5X,GAAkB,MACtB,GAAIqjB,EAAgB,OAAO,EAC3B,GAA0B,WAAtBqC,IAAa11B,OAAsB6O,EAAa,OAAO,EAC3D,MAAM+mB,EAAOF,GAAYp1B,cACzB,OAAIL,KAAU21B,EAAK9D,aAEpB,EANuB,GAOlBhT,IAAa7J,GAAY9J,GAEzB0qB,IAAkBxuB,EAAAA,EAAAA,KAAQ,IACvB4rB,EACHkB,GACA2B,EAAAA,EAAAA,KAAuBnC,GAAgB,CAAC,EAAGQ,GAAuB,GAAIjtB,KACzE,CAACysB,EAAcQ,EAAqBjtB,GAAmB+rB,KAEtD9nB,IAAYgqB,IAAgBA,KAAiBD,SAAqC5zB,IAAzB2zB,GAAansB,UACxEmsB,GAAansB,QAAU3I,GAAW,EAAKqY,GAAatY,GAGtD,MAAO61B,IrB9JA1wB,GqBgKPyE,EAAAA,EAAAA,KAAU,KACR,IAAKqB,IAAU4qB,KACb,QAGFC,EAAAA,EAAAA,MACA,MAAMC,GAAuBC,EAAAA,EAAAA,MAE7B,MAAO,KACLD,KACAE,EAAAA,EAAAA,KAAuB,CACxB,GACA,CAAChrB,GAAQ4qB,MAEZjsB,EAAAA,EAAAA,KAAU,KACJgV,IACFlZ,GACF,GACC,CAACkZ,MAEJhV,EAAAA,EAAAA,KAAU,KACJ4G,KACFyH,EAAAA,EAAAA,KAAgB,KACd1X,SAASue,KAAKhd,UAAUo0B,OAAO,uBAAwBjrB,GAAO,GAElE,GACC,CAACuF,GAAUvF,KAGd,MAAMkrB,IAAY1tB,EAAAA,EAAAA,IAAuB,OACzC2tB,EAAAA,EAAAA,GAAgBD,IAEhB,MAAM1sB,IAAcC,EAAAA,EAAAA,MACpBE,EAAAA,EAAAA,KAAU,KACR,MAAMysB,EAAMnsB,OAAOosB,WAAWC,EAAAA,IAG9B,OAFAF,EAAI7gB,iBAAiB,SAAU/L,IAExB,KACL4sB,EAAI5gB,oBAAoB,SAAUhM,GAAY,CAC/C,GACA,CAACA,KAEJ,MAAM+sB,IAActB,EAAAA,EAAAA,GAA8Cr0B,GAC5D41B,IAAevB,EAAAA,EAAAA,GAA2CngB,GAC1D2hB,IAAaxB,EAAAA,EAAAA,GAAsBvzB,GACnC2uB,IAAW4E,EAAAA,EAAAA,GAAsBM,IACjCmB,IAAoBzB,EAAAA,EAAAA,GAAsB7sB,IAC1Cse,GAAY9lB,GAAU+lB,EAAAA,EAAAA,GAAkB,CAAE/lB,UAASgmB,eAAe,EAAMC,kBAAkB,SAAU1lB,EACpG2lB,GAAY1c,QAAQsc,IACpBiQ,GAAuBH,IAAgBnG,KAAakF,IAE1D5rB,EAAAA,EAAAA,KAAU,KACJwrB,IAAoBnqB,KAAW2rB,KAAyBtG,OAC1DuG,EAAAA,EAAAA,IAAoBnP,GAAqBoP,EAAAA,KtBnNxC,SACL/P,EACAplB,EACA0G,EACAuC,EACAjE,EACA9F,EACAb,GAEA,MAAQ8E,QAASiyB,GAAcpzB,EAAShC,EAAQd,EAASb,GACzD,IAAK+2B,EACH,OAGF,MAAQluB,MAAO6gB,GAAgBsN,EAAAA,EAAWztB,OAExCV,MAAOouB,EAAgB/tB,OAAQguB,IAC7BC,EAAAA,EAAAA,IAAkCpQ,EAAWpgB,IACzCkC,MAAOuuB,EAASluB,OAAQmuB,IAAaC,EAAAA,EAAAA,IAC3CL,EAAgBC,EAAiBtsB,EAAW/B,MAAO+B,EAAW1B,QAE1DquB,GAAU7N,EAAc0N,GAAW,EACnCI,EA6OR,SAAsBzQ,GACpB,MAAMsP,EAAMnsB,OAAOosB,WAAWC,EAAAA,IAC9B,IAAIkB,EAAe,MAKnB,OAJI1Q,IAAc9R,EAAAA,KAChBwiB,GAAgBpB,EAAIvF,QAAU,KAAQ,OAGjC2G,EAAepiB,EAAAA,CACxB,CArPgBqiB,CAAa3Q,IAAcmQ,EAAkBG,GAAY,EAEvE,IACEzU,IAAK+U,EAASjc,KAAMkc,EAAU/uB,MAAOgvB,EAAW3uB,OAAQ4uB,GACtDf,EAAUhb,wBAEd,GAAI,CACFtZ,EAAAA,GAAkB0B,YAClB1B,EAAAA,GAAkBsB,MAClBtB,EAAAA,GAAkBuB,eAClBvB,EAAAA,GAAkB2B,cAClBb,SAAS5B,GAAS,CAClB,MAAMo2B,EAgMV,SAAiBC,EAAmBC,EAAoBrV,EAAalH,EAAc7S,EAAeK,GAChG,GAAI8uB,IAAcC,EAAY,CAC5B,MAAMluB,EAAO8I,KAAKqZ,IAAIrjB,EAAOK,IAAW8uB,EAAYC,GACpDvc,IAAS3R,EAAOlB,GAAS,EACzB+Z,IAAQ7Y,EAAOb,GAAU,EACzBL,EAAQkB,EACRb,EAASa,CACX,MAAO,GAAIiuB,EAAYC,EAAY,CACjC,MAAMC,EAAWrvB,EAEjB6S,KADA7S,EAAQK,GAAU8uB,EAAYC,IACbC,GAAY,CAC/B,MAAO,GAAID,EAAaD,EAAW,CACjC,MAAMG,EAAYjvB,EAElB0Z,KADA1Z,EAASL,GAASovB,EAAaD,IACdG,GAAa,CAChC,CAEA,MAAO,CACLvV,MAAKlH,OAAM7S,QAAOK,SAEtB,CApNsBkvB,CAAQhB,EAASC,EAAUM,EAASC,EAAUC,EAAWC,GAC3EH,EAAUI,EAAUnV,IACpBgV,EAAWG,EAAUrc,KACrBmc,EAAYE,EAAUlvB,MACtBivB,EAAaC,EAAU7uB,MACzB,CAEA,MAAMmvB,EAAkBT,EAAWC,EAAY,GAAMN,EAASH,EAAU,GAClEkB,EAAkBX,EAAUG,EAAa,GAAMN,EAAQH,EAAW,GAClEkB,EAAaV,EAAYT,EACzBoB,EAAaV,EAAaT,GAEhCpf,EAAAA,EAAAA,KAAgB,KACd,MAAMrW,EAAQH,EAAY4G,GAAiB0uB,IAC3C0B,EAAAA,EAAAA,IAAY72B,EAAO,CACjBghB,IAAM,GAAE4U,MACR9b,KAAO,GAAE6b,MACT1uB,MAAQ,GAAEuuB,MACVluB,OAAS,GAAEmuB,MACX3M,UAAY,eAAc2N,QAAqBC,iBAA8BC,MAAeC,OAE9FzzB,EAAWnD,EAAOD,GAElBpB,SAASue,KAAKtc,YAAYZ,GAC1BrB,SAASue,KAAKhd,UAAUC,IAAI,oBAE5BkW,EAAAA,EAAAA,KAAgB,KACdrW,EAAMqD,MAAMylB,UAAY,GAsT9B,SAAoB9oB,GACjBA,EAAMoD,WAA2BC,MAAMC,UAAY,UACpDtD,EAAME,UAAUid,OAAO,kBAAmB,SAC5C,CAxTM2Z,CAAW92B,GAEXuI,YAAW,MACT8N,EAAAA,EAAAA,KAAgB,KACV1X,SAASue,KAAK6Z,SAAS/2B,IACzBrB,SAASue,KAAK8Z,YAAYh3B,GAE5BrB,SAASue,KAAKhd,UAAUid,OAAO,kBAAkB,GACjD,GAxEiB,IAyEG+X,EAAAA,IAAoB,GAC5C,GAEN,CsB0IM+B,CAAe9R,GAAWplB,EAAS0G,GAAgBuC,GAAajE,GAAS9F,EAASb,IAGhFo1B,KAAqBnqB,IAAUqlB,MACjCuG,EAAAA,EAAAA,IAAoBnP,GAAqBoP,EAAAA,KtB5IxC,SACLn1B,EAA2B0G,EAAuBxH,EAAsBb,GAExE,MAAM,UAAEgD,EAAW8B,QAASg0B,GAAYn1B,EAAShC,EAAQd,EAASb,GAClE,IAAK84B,EACH,OAGF,MAAM/B,EAAYx2B,SAASw4B,eAAe,eAAgBl2B,cACxD,kEAEF,IAAKk0B,EACH,OAGF,MACEnU,IAAK+U,EAASjc,KAAMkc,EAAU/uB,MAAOgvB,EAAW3uB,OAAQ4uB,GACtDf,EAAUhb,yBAEZ6G,IAAKoW,EAAWtd,KAAM6b,EAAQ1uB,MAAOuuB,EAASluB,OAAQmuB,GACpDyB,EAAQ/c,wBAEZ,IAAIyb,EAAQwB,EACZ,KAAKC,EAAAA,EAAAA,GAAoBj2B,GAAY,CACnC,MAAQkG,OAAQugB,GAAiBuN,EAAAA,EAAWztB,MAC5CiuB,EAAQwB,EAAYrB,GAAWN,EAAW5N,CAC5C,CAEA,MAAM4O,EAAkBT,EAAWC,EAAY,GAAMN,EAASH,EAAU,GAClEkB,EAAkBX,EAAUG,EAAa,GAAMN,EAAQH,EAAW,GACxE,IAAIkB,EAAaV,EAAYT,EACzBoB,EAAaV,EAAaT,EAE9B,MAAM6B,EACJ,CAACz2B,EAAAA,GAAkBkC,OAAQlC,EAAAA,GAAkBiC,iBAAiBnB,SAAS5B,KACnEoB,EAA2BC,EAAW81B,IAE1C,CAACr2B,EAAAA,GAAkBsB,MAAOtB,EAAAA,GAAkBuB,gBAAgBT,SAAS5B,KACjEoB,EAA2BC,EAAW81B,GAGxC,CACFr2B,EAAAA,GAAkB0B,YAClB1B,EAAAA,GAAkBsB,MAClBtB,EAAAA,GAAkBuB,eAClBvB,EAAAA,GAAkB2B,cAClBb,SAAS5B,KACL42B,EAAaC,EACfD,EAAaC,EACJA,EAAaD,IACtBC,EAAaD,IAIjB,MAAMY,EAAgB54B,SAAS64B,uBAAuB,SAAS,GACzDx3B,EAAQu3B,GAAiB13B,EAAY4G,GAAiBywB,EAASn3B,GAErE,IAAIyb,EACJ,GAAI+b,EAAe,CACjB,MAAM,IACJvW,EAAG,KAAElH,EAAI,MAAE7S,EAAK,OAAEK,GAChBiwB,EAAcpd,wBAIlBqB,EAAS,CACPic,WAAY,OACZzW,IAAM,GAAE4U,MACR9b,KAAO,GAAE6b,MACT+B,gBAAiB,WACjB5O,UAAY,eAAchP,EAAO6b,QAAa3U,EAAM4U,iBARvC3uB,EAAQuuB,MACRluB,EAASmuB,KAQtBxuB,MAAQ,GAAEuuB,MACVluB,OAAS,GAAEmuB,MAEf,MACEja,EAAS,CACPwF,IAAM,GAAE4U,MACR9b,KAAO,GAAE6b,MACT1uB,MAAQ,GAAEuuB,MACVluB,OAAS,GAAEmuB,MACX3M,UAAY,eAAc2N,QAAqBC,iBAA8BC,MAAeC,OAIhGvgB,EAAAA,EAAAA,KAAgB,MACdwgB,EAAAA,EAAAA,IAAY72B,EAAOwb,GACd+b,GAAe54B,SAASue,KAAKtc,YAAYZ,GAC9CrB,SAASue,KAAKhd,UAAUC,IAAI,oBAE5BkW,EAAAA,EAAAA,KAAgB,KACVkhB,IACFA,EAAcl0B,MAAMo0B,WAAa,IAGnCz3B,EAAMqD,MAAMylB,UAAY,GAEpBwO,IACFt3B,EAAMqD,MAAMs0B,QAAU,KAGxBx0B,EAAWnD,EAAOD,GAElBwI,YAAW,MACT8N,EAAAA,EAAAA,KAAgB,KACV1X,SAASue,KAAK6Z,SAAS/2B,IACzBrB,SAASue,KAAK8Z,YAAYh3B,GAE5BrB,SAASue,KAAKhd,UAAUid,OAAO,kBAAkB,GACjD,GA1LiB,IA2LG+X,EAAAA,IAAoB,GAC5C,GAEN,CsB6BM0C,CAAe9C,GAAaC,GAAoBH,GAAalG,IAAUtwB,YACzE,GACC,CACDqI,GAAeuC,GAAYmc,GAAWqO,GAAkBnqB,GAAQtE,GAAS9F,EAASc,EAClFg1B,GAAmBrG,GAAUkG,GAAaE,GAAYE,GAAsB52B,IAG9E,MAAMy5B,IAAc5tB,EAAAA,EAAAA,IAAgB,IAAMqlB,OAEpCwI,IAAoB7tB,EAAAA,EAAAA,IAAgB,KACxC4tB,KAEK3tB,GAAWwM,IAEZ9H,GACFrG,YAAW,KACTinB,GAAe,CAAEE,OAAO,GAAS,CAAEC,gBAAgB,IACnDJ,GAAa,CAAErlB,SAAQiD,WAAUuJ,aAAY,GAC5CoP,IAEHyJ,GAAa,CAAErlB,SAAQiD,WAAUuJ,cACnC,IAGI5D,IAAuB7I,EAAAA,EAAAA,IAAiB8tB,IACvC1T,GAAqBna,IAE1B+oB,GAAsB,CAAE+E,QAASD,EAAahc,cAAc,EAAMzS,OAAQY,IAC1EgpB,GAAQ,CAAE7d,IAAKgP,EAAkBhP,MACjCia,KAAkB,IAGd2I,IAAgBhuB,EAAAA,EAAAA,IAAgB,KACpC6oB,GAAgB,CACdoF,WAAYhuB,EACZiuB,WAAY,CAACzhB,IACb,KAGJ1O,EAAAA,EAAAA,KAAU,IAAOqB,IAAS+uB,EAAAA,EAAAA,IAAsB,KAC9CP,IAAa,SACVr4B,GAAY,CAACq4B,GAAaxuB,MAE/BrB,EAAAA,EAAAA,KAAU,KACJjD,KAAYnF,KACdy4B,EAAAA,EAAAA,KACF,GACC,CAACz4B,GAAOmF,KAEX,MAAMohB,IAAwBlc,EAAAA,EAAAA,IAAiByC,IAC7C,GAAKA,IAAQuZ,GAAb,CAEA,GAAkB,WAAdvZ,EAAKxO,KAAmB,CAE1B,KADkBwO,EAAKtO,YAAcsO,EAAKlO,cAAcC,OAAOH,OAxMzC,GAyMN,OAChB00B,GAAsB,CAAE1pB,OAAQoD,EAAKK,YAAYrL,IACnD,CAEkB,YAAdgL,EAAKxO,MAAsBizB,GAC7B4B,GAAwB,CAAE7oB,SAAQiD,WAAUmrB,sBAAuB5rB,EAAKzN,QAAQyC,IAT3C,CAUvC,IAGI0kB,IAAcnc,EAAAA,EAAAA,IAAgB,CAACyP,EAAuBgQ,KAC1D,GAAkB,IAAdA,GAAmBrrB,GAAU,OAEjC,GAAkB,eAAdqb,EAAKxb,KAAuB,CAC9B,MAAQC,MAAOo6B,EAAWn6B,WAAYo6B,GAAmB9e,EACnD+e,EAAYD,EAAiB9O,EACnC,OAAI+O,GAAa,GAAKA,EAAYF,EAAUj6B,OACnC,CAAEJ,KAAM,aAAcC,MAAOo6B,EAAWn6B,WAAYq6B,QAG7D,CACF,CAEA,GAAkB,WAAd/e,EAAKxb,KAAmB,CAC1B,MAAQ6O,YAAa2rB,EAAiBl6B,cAAem6B,EAAmBv6B,WAAYo6B,GAAmB9e,EACjG+e,EAAYD,EAAiB9O,EACnC,OAAI+O,GAAa,GAAKE,GAAqBF,EAAYE,EAAkBl6B,OAAOH,OACvE,CACLJ,KAAM,SACN6O,YAAa2rB,EACbl6B,cAAem6B,EACfv6B,WAAYq6B,QAIhB,CACF,CAEA,GAAkB,qBAAd/e,EAAKxb,KAA6B,CACpC,MAAQe,QAAS25B,EAAsBx6B,WAAYy6B,GAA8Bnf,EAC3E+e,EAAYI,EAA6BnP,EAC/C,OAAI+O,GAAa,GAAKG,EACb,CAAE16B,KAAM,mBAAoBe,QAAS25B,EAAsBx6B,WAAYq6B,QAGhF,CACF,CAEA,MAAQx5B,QAAS65B,EAAa16B,WAAYo6B,GAAmB9e,EAEvD3a,GAAYg6B,EAAAA,EAAAA,KAAoBD,GACtC,GAAI/5B,EAAW,CACb,MAAM05B,EAAYD,EAAkB9O,EAEpC,GAAI+O,GAAa,GAAKA,EAAY15B,EAAUU,cAAcnB,OACxD,MAAO,CAAEJ,KAAM,UAAWe,QAAS65B,EAAa16B,WAAYq6B,EAEhE,CAEA,MAAMz2B,EAAQ+xB,IAAiBiF,QAAQF,EAAYp3B,IACnD,QAAclC,IAAVwC,EAAqB,OACzB,MACMi3B,EAAgBlF,GADJ/xB,EAAQ0nB,GAEpBwP,EAAcrH,IAAeoH,GACnC,OAAIC,EACK,CAAEh7B,KAAM,UAAWe,QAASi6B,QADrC,CAIgB,IAGZC,IAAsBlvB,EAAAA,EAAAA,IAAiByC,IAC3C,IAAKA,EAEH,YADAmrB,KAIF,MAAMuB,EAA2B,WAAd1sB,EAAKxO,KACpBwO,EAAKK,YAAYrL,GAAmB,YAAdgL,EAAKxO,KACzBwO,EAAKzN,QAAQiL,YAAS1K,EACtB65B,EAA8B,YAAd3sB,EAAKxO,KAAqBwO,EAAKzN,QAAQyC,QAAKlC,EAC5D85B,EAAoC,eAAd5sB,EAAKxO,KAAwBwO,EAAKvO,WAAQqB,EAEtE0P,GAAgB,CACdnP,OAAQA,EACRmK,OAAQkvB,EACR1iB,UAAW2iB,EACXjI,gBAAiBkI,EACjBl7B,WAAYsO,EAAKtO,WACjB4R,aAA4B,WAAdtD,EAAKxO,KACnBizB,sBACC,CACDlhB,uBAAuB,GACvB,IAGEspB,IAAqBtvB,EAAAA,EAAAA,IAAgB,KAGzC,IAFmBzL,GAAeC,OAAOH,QACpC8yB,GAAiB9yB,QAAUy1B,IAAiBz1B,QAAU,IACzC,IAAMs1B,GAEtB,YADAiE,KAIF,MAAM2B,EAAYpT,GAAYwN,IAAc,GACxC4F,EACFL,GAAoBK,GAII,WAArB5F,GAAY11B,OAAqBoO,EAAAA,EAAAA,KAASsnB,GAAY7mB,YAAYrL,KAA6B,eAArBkyB,GAAY11B,MAK3F25B,IAAa,IAGTptB,IAAOC,EAAAA,EAAAA,KAEb,OACEI,EAAAA,GAAA7K,cAACsb,EAAAA,EAAc,CACb7Z,GAAG,cACH2H,OAAQA,GACR8J,SAAUA,EACVsmB,0BAAwB,EACxBC,kBAAmBxI,GAEnBpmB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oBAAoBiJ,IAAKzJ,GAAKqkB,MAAQ,WAAQtvB,EAAW0S,IAAKqiB,IAC1E3lB,IACC9D,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,qBACVoF,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,GAAK,SAChBkB,QAASksB,IAET/sB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGjBH,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CAACC,UAAWzG,GAAansB,QAAUmE,KAAMooB,IAClDzoB,EAAAA,GAAA7K,cAAC45B,GAAU,CACTloB,IAAKxT,IAAOuD,GACZgL,KAAMknB,MAGV9oB,EAAAA,GAAA7K,cAAC65B,GAAkB,CACjB5zB,UAAW0C,GACX7D,QAASA,GACT2H,KAAMknB,GACNjnB,eAAgBA,EAChBuB,gBAAiBA,GACjBI,eAAgBirB,GAChBprB,eAAgBulB,GAChBrlB,mBAAoBwpB,GACpBtpB,UAAW0pB,KAEbntB,EAAAA,GAAA7K,cAAC85B,EAAiB,CAChB1wB,OAAQoqB,GACRlqB,QAASoqB,GACT/0B,MAAOL,EACP+K,OAAQyD,GAAarL,MAGzBoJ,EAAAA,GAAA7K,cAAC+5B,GAAiB,CAChBttB,KAAMknB,GACNzN,sBAAuBA,GACvBF,mBAAoBA,GACpBC,SAAUA,GACVE,YAAaA,GACblc,OAAQA,EACR/E,QAASA,GACTvF,MAAOA,GACPuN,SAAUA,EACV8sB,cAAeltB,GAAarL,GAC5B3B,OAAQA,EACRsJ,OAAQA,GACR8b,UAAWA,GACXpgB,QAASA,GACTwf,cAAeA,EACfhb,QAASsuB,GACTxR,WAAY8S,GACZhmB,SAAUA,EACVsR,cAAeqT,GACfhlB,qBAAsBA,KAET,K,eC5drB,SAAuB,WAAvB,GAA6C,WAA7C,GAAmE,WAAnE,GAAgG,WAAhG,GAAoI,WAApI,GAAuJ,WAAvJ,GAA4K,WAA5K,GAAwM,WAAxM,GAA4O,WAA5O,GAAiQ,WAAjQ,GAAuS,WAAvS,GAAgU,WAAhU,GAAsV,WAAtV,GAA2W,WAA3W,GAAwY,WAAxY,GAA2Z,WAA3Z,GAAqb,WAArb,GAA+c,WAA/c,GAAie,WAAje,GAAof,WAApf,GAA6gB,WAA7gB,GAAuiB,WAAviB,GAAgkB,WAAhkB,GAAwlB,WAAxlB,GAAknB,WAAlnB,GAAoqB,WAApqB,GAAwrB,WAAxrB,GAA0tB,WAA1tB,GAAkvB,WAAlvB,GAA0wB,WAA1wB,GAAkyB,WAAlyB,GAA4zB,WAA5zB,GAAm1B,WAAn1B,GAA42B,WAA52B,GAAi4B,WAAj4B,GAAm7B,WAAn7B,GAAq9B,WAAr9B,GAAy+B,WAAz+B,GAAigC,WAAjgC,GAA2hC,WAA3hC,GAAujC,WAAvjC,GAAglC,WAAhlC,GAAymC,WAAzmC,GAA+nC,WAA/nC,GAAopC,WAAppC,GAA8qC,WAA9qC,GAA2sC,WAA3sC,GAAiuC,WAAjuC,GAAmvC,WAAnvC,GAAqwC,WAArwC,GAA+yC,WAA/yC,GAAk0C,WAAl0C,GAAs1C,WAAt1C,GAA82C,WAA92C,GAAy4C,WAAz4C,GAAg6C,WAAh6C,GAAy7C,WAAz7C,GAAk9C,WAAl9C,GAAw+C,WCgBl+ConB,GAAgB,IAAMzmB,EAAAA,EACtB0mB,GAAgB,GAAM1mB,EAAAA,EAsJ5B,SAAS5T,GAAYC,GAAmD,IAAnCs6B,EAAO1yB,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GAAU2yB,EAAQ3yB,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GAC5D,MAAM1H,EAAQrB,SAASsB,cAAc,OACrCD,EAAME,UAAUC,IAAKk6B,EAA0B7e,GAAfA,IAEhC,MAAMpb,EAAM,IAAIC,MAKhB,GAJAD,EAAIE,WAAY,EAChBF,EAAIG,cAAgBC,EAAAA,EACpBJ,EAAIF,UAAUC,IAAIqb,IAEd4e,EAAS,CACX,MAAMlzB,EAASvI,SAASsB,cAAc,UACtCiH,EAAOhH,UAAUC,IAAIqb,IACrBpb,EAAI6H,OAAS,KACX,MAAMqyB,EAAMpzB,EAAOG,WAAW,KAAM,CAAEkzB,OAAO,KACvC,MACJtzB,EAAK,OACLK,GACElH,GAEJiW,EAAAA,EAAAA,KAAgB,KACdnP,EAAOD,MAAQA,EACfC,EAAOI,OAASA,EAEZkzB,EAAAA,KACFF,EAAIG,OAAU,aAGhBH,EAAIhkB,UAAUlW,GAAK,GAAa,EAAa6G,EAAQyzB,EAAYpzB,EAASozB,GAErEF,EAAAA,KACHpzB,EAAAA,EAAAA,GAASkzB,EAAK,EAAG,EAAGrzB,EAAOK,EAjCtB,EACI,EAiCX,GACA,EAEJlH,EAAIK,IAAMX,EACVE,EAAMY,YAAYsG,EACpB,MACE9G,EAAIK,IAAMX,EACVE,EAAMY,YAAYR,GAGpB,OAAOJ,CACT,CAEA,SAAS+B,GAAShC,EAA2B46B,GAC3C,IAAI14B,EACJ,MAAMC,EAAiB,KAAG04B,EAAAA,EAAAA,KAAmBD,KAE7C,OAAQ56B,GACN,KAAK86B,EAAAA,GAAkBC,YACrB74B,EAAqB,gBAAe84B,GAAAA,EAAkBC,OACtD,MACF,KAAKH,EAAAA,GAAkBp4B,mBACrBR,EAAoB,mDACpB,MACF,KAAK44B,EAAAA,GAAkBI,SACrBh5B,EAAoB,yBACpB,MACF,KAAK44B,EAAAA,GAAkBr4B,aACrBP,EAAoB,qCAIxB,MAAMb,EAAYzC,SAASsC,cAA2BgB,GAChDe,EAAW5B,GAAaA,EAAU6B,iBAAoC,GAAEf,SAE9E,MAAO,CACLd,YACA8B,QAASF,IAAW,GAExB,CC1OO,MAEDk4B,GAAoB,KACpBC,GAAqB,IACrBC,GAA0B,IAC1BC,GAA2B,IAC3BC,GAAmB,IACnBC,GAAoB,IA8BnB,SAASC,GAAgB92B,GAY7B,IAZ8B,MAC/BmiB,EAAK,YACL4U,EAAW,kBACXC,EAAiB,yBACjBC,EAAwB,WACxBC,GAODl3B,EACC,MAAMm3B,EA1Ce,IA0CgBH,EAAoBN,GAA0BE,IAC7EQ,GAAoB7qB,KAAK2Z,IAAI6Q,GAAe,KAC5CE,EAA2BP,GAA0BE,IA5CtC,IA6CfS,GAAcC,EAAAA,GAAAA,KAAoBH,EAAaC,GAAoBjV,GAEzE,OAAO+U,GAAcG,EAAcA,CACrC,CCtDe,SAASE,KACtB,MAAQh1B,MAAO6gB,EAAaxgB,OAAQugB,IAAiBG,EAAAA,GAAAA,KACrD,OAAOziB,EAAAA,EAAAA,KAAQ,IDMV,SAA6BuiB,EAAqBD,GAOvD,MAAMhB,EAyCR,SAAwBqV,EAAmBC,EAAoBC,EAAkBC,GAC/E,MAAMC,EAAaF,EAAWF,EACxBK,EAAcF,EAAYF,EAEhC,OAAOlrB,KAAK8Z,IAAIuR,EAAYC,EAC9B,CA9CgBC,CAAetB,GAAmBC,GAAoBrT,EAAaD,GAE3E4U,GAAmBT,EAAAA,GAAAA,IAAmBZ,GAA0BvU,GAChE6V,GAAaV,EAAAA,GAAAA,IAAmBV,GAAmBzU,GAEzD,MAAO,CACL8V,YAAa,CACX11B,MAAOw1B,EACPn1B,QAAQ00B,EAAAA,GAAAA,IAAmBX,GAA2BxU,IAExD+V,MAAO,CACL31B,MAAOy1B,EACPp1B,QAAQ00B,EAAAA,GAAAA,IAAmBT,GAAoB1U,IAEjDA,QACAgW,cAAeJ,EAAmBC,EAClCI,gBAAiBJ,EAAaD,EAElC,CC/BuBM,CAAoBjV,EAAaD,IAAe,CAACC,EAAaD,GACrF,CCFe,SAASmV,GACtBC,GACA,IADsBC,EAAoBx1B,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GAAUy1B,EAAkBz1B,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GAEtE,MAAM01B,EAAgBH,GAAS,YAAaA,EACtCI,EAAiBJ,GAAS,cAAeA,EACzCK,IAAUF,IAAgBG,EAAAA,EAAAA,KAAeN,GACzCO,EAAiBJ,GAAiB30B,QAAQw0B,EAAMQ,aAEtD,IAAIC,EACAN,IACEH,EAAMpsB,QAAQjS,OAAO8+B,YACvBA,EAAYT,EAAMpsB,QAAQjS,MAAM8+B,UAAU/2B,SAExCs2B,EAAMpsB,QAAQhS,OAAO6+B,WAAW/2B,UAClC+2B,EAAYT,EAAMpsB,QAAQhS,MAAM6+B,UAAU/2B,UAI9C,MAAMg3B,EAAcP,GAAgBQ,EAAAA,EAAAA,KAAkBX,QAASz9B,EACzDyG,GAAiBJ,EAAAA,EAAAA,GAAS83B,GAC1B54B,EAAU0D,QAAQ20B,GAAiBH,EAAMpsB,QAAQhS,OACjDg/B,EAAUT,GAAiBH,EAAMpsB,QAAQhS,OAAOg/B,QAChDC,EAAgBV,GAAgBQ,EAAAA,EAAAA,KAAkBX,EAAO,aAAUz9B,EACnEu+B,GAAgBl4B,EAAAA,EAAAA,GAASi4B,GAAgBb,EAAOl4B,EAAUe,EAAAA,GAAeiR,YAAcjR,EAAAA,GAAeC,SACtGi4B,EAAej5B,GAAWq4B,GAAgBQ,EAAAA,EAAAA,KAAkBX,EAAO,QAAQ,QAAQz9B,EACnFy+B,GAAep4B,EAAAA,EAAAA,GAASm4B,GAAef,EAAOn3B,EAAAA,GAAeiR,aAE7DmnB,EAAcz1B,QAAQs1B,GAAiBE,GACvCx3B,EAAgB1B,EAAUkB,EAAiB83B,GAAiB93B,EAC5Dk4B,GAAYl4B,IAAmBi4B,EAE/BE,EAAclB,GAAwBE,IAAkBH,EAAMoB,WAC9DC,EAAelB,GAAgBQ,EAAAA,EAAAA,KAAkBX,EAAO,iBAAcz9B,EAG5E,MAAO,CACL49B,gBACAC,iBACAC,UACAE,iBACAE,YACAC,cACA13B,iBACAlB,UACA84B,UACAC,gBACAC,gBACAC,eACAC,eACAC,cACAz3B,gBACA03B,WACAC,cACAG,mBApBwB14B,EAAAA,EAAAA,GAASy4B,GAAeF,IAAgBjB,GAsBpE,C,wCC7DA,SAA2I,WAA3I,GAA6J,WAA7J,GAAuM,WC6HvM,IAAe/zB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAYC,IAC9B,MAAMI,GAAWC,EAAAA,EAAAA,KAAeL,GAEhC,MAAO,CACLnD,OAAQuD,EAAS4xB,aAAaC,mBAC9BC,YAAalyB,EAAOmyB,QAAQD,YAC5BxB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GAClD,GAPiBD,EArGK7H,IAAgE,IAA/D,OAAE2E,EAAM,YAAEq1B,EAAW,qBAAExB,GAAmCx4B,EAClF,MAAM,mBACJm6B,EAAkB,oBAClBC,EAAmB,iBACnBC,EAAgB,iBAChBC,IACEt1B,EAAAA,EAAAA,OACGu1B,EAAcC,IAAmBr1B,EAAAA,EAAAA,KAAS,IAEjD7B,EAAAA,EAAAA,KAAU,KACR,IAAK02B,EAAa,OAClB,MAAMS,GAAaC,EAAAA,GAAAA,MACfV,EAAYW,eAAiBX,EAAYW,cAAgBF,GAC3DD,GAAgB,EAClB,GACC,CAACR,EAAar1B,IAEjB,MAAMoB,GAAOC,EAAAA,EAAAA,KAEP40B,GAAkBr1B,EAAAA,EAAAA,IAAgB,KACtCi1B,GAAgB,EAAM,IAGlBrH,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClC40B,EAAmB,CAAEx1B,QAAQ,GAAQ,IAGjCk2B,GAAiBt1B,EAAAA,EAAAA,IAAgB,KAChCizB,GAKL4B,IACAC,EAAiB,CACfl0B,MAAOJ,EAAK,iBACZxL,QAASwL,EAAK,uBAEhBo0B,EAAmB,CAAEx1B,QAAQ,KAT3B21B,EAAiB,CAAEQ,eAAgB,WASA,IAGvC,OACE10B,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UAAU,uBACVw0B,iBDpEiB,WCqEjBp2B,OAAQA,EACRq2B,QAAM,EACNn2B,QAASsuB,GAET/sB,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACL8C,UD7EwC,WC8ExCqF,UAAW7F,EAAK,SAChBkB,QAASksB,GAET/sB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UDnF8D,YCoFjEH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,kCAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UDtFiF,YCsFvDR,EAAK,gBACpCK,EAAAA,GAAA7K,cAAA,OAAKgL,UDvF0G,YCwF5GR,EAAKyyB,EAAuB,kBAAoB,2BAEnDpyB,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,WAAW+I,EAAAA,GAAAA,GAAewH,GAAiB,gBAC3CokB,WAAS,EACTC,UAAQ,EACRC,YAAah1B,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,yBAA0BwH,OAEpE1Q,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,oBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYwH,KAAmB/Q,EAAK,gCAEtEK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,WAAW+I,EAAAA,GAAAA,GAAewH,GAAiB,gBAC3CokB,WAAS,EACTC,UAAQ,EACRC,YAAah1B,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,2BAA4BwH,IAAc,oBAEpF1Q,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,kBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYwH,KAAmB/Q,EAAK,8BAEtEK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UD7GyK,WC8GzK9C,KAAK,UACL+V,SAAU+gB,EACVc,SAAU7C,EACV8C,qBAAsB9C,EACtBvxB,QAAS4zB,GAEPrC,EACE+B,EACGn0B,EAAAA,GAAA7K,cAACggC,GAAAA,EAAS,CAACC,QAAQ,cAAcC,OAAQzB,EAAaW,cAAgBe,MAAOd,IAC9E70B,EAAK,qBAHcA,EAAK,sBAK1B,K,gBC5EZ,UAAerB,EAAAA,EAAAA,KA/Bf,SAAgC1E,GAEnB,IAFoB,OAC/B2E,EAAM,MAAE4zB,EAAK,QAAE1zB,GACN7E,EACT,MAAM,YAAE27B,EAAW,cAAEC,IAAkB52B,EAAAA,EAAAA,MAEjCe,GAAOC,EAAAA,EAAAA,KAEP61B,GAAyBl0B,EAAAA,EAAAA,KAAY,KACpC4wB,IAILqD,IACAD,EAAY,CAAE/2B,OAAQ2zB,EAAM3zB,OAAQk3B,QAASvD,EAAMv7B,KACnD6H,IAAS,GACR,CAACA,EAAS0zB,IAEb,OACEnyB,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQA,EACRE,QAASA,EACTsB,MAAOJ,EAAK,oBACZkI,KAAMlI,EAAK,uBACXi2B,aAAcj2B,EAAK,UACnBk2B,eAAgBJ,EAChBK,sBAAoB,EACpB31B,UAAU,wBAGhB,I,oDCgBA,UAAe7B,EAAAA,EAAAA,KAtCf,SAAsB1E,GAQT,IARU,GACrBhD,EAAE,eACFm/B,EAAc,cACdvP,EAAa,UACbwP,EAAS,YACTC,EAAW,UACXC,EAAS,SACTC,GACSv8B,EACT,MAAM+F,GAAOC,EAAAA,EAAAA,MAENw2B,EAAaC,IAAkBt3B,EAAAA,EAAAA,IAAiB,IACjDu3B,GAAe77B,EAAAA,EAAAA,KAAQ,KAC3B,MAAM87B,GAAcR,GAAkB,IAAIpG,QAAQE,GAAWA,IAAWrJ,IACxE,OAAOgQ,EAAAA,GAAAA,KAAOC,EAAAA,EAAAA,KAAkB,IAAIR,GAAe,MAAOM,GAAaP,EAAWI,GAAa,GAC9F,CAACL,EAAgBvP,EAAe4P,EAAaH,EAAaD,IAE7D,OACEh2B,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACT7vB,IAAKjQ,EACL+/B,QAASL,EACTL,YAAaA,GAAeW,GAAAA,EAC5BC,kBAAmBX,EACnBY,YAAaV,EACbW,kBAAmBp3B,EAAK,UACxBq3B,cAAgB,GAAEpgC,kBAClBqgC,cAAY,EACZC,oBAAkB,EAClBC,eAAa,EACbC,oBAAqBjB,EACrBkB,eAAgBhB,EAChBiB,eAAa,EACbC,YAAU,EACVC,cAAc,YAGpB,I,4BCzDA,MC6FA,IAAel5B,EAAAA,EAAAA,KAlEf,SAAqB1E,GAER,IAFS,SACpB8S,EAAQ,eAAEqpB,EAAc,UAAEC,EAAS,cAAExP,EAAa,QAAE/nB,GAC3C7E,EACT,MAAM,iBAAE69B,IAAqB74B,EAAAA,EAAAA,MAEvBe,GAAOC,EAAAA,EAAAA,MACNw2B,EAAaC,IAAkBt3B,EAAAA,EAAAA,IAAiB,KAChD24B,EAAeC,IAAoB54B,EAAAA,EAAAA,KAAkB,IACrD64B,EAAuBC,IAA4B94B,EAAAA,EAAAA,IAAmB,IAEvE+4B,GAAiBr9B,EAAAA,EAAAA,KAAQ,KACrBs7B,GAAkB,IAAIpG,QAAQE,GAAWmG,EAAUnG,IAASkI,iBACnE,CAAChC,EAAgBC,IAEdM,GAAe77B,EAAAA,EAAAA,KAAQ,KAC3B,MAAM87B,GAAcR,GAAkB,IAAIpG,QAAQ/4B,GAAOA,IAAO4vB,IAChE,OAAOgQ,EAAAA,GAAAA,KAAOC,EAAAA,EAAAA,KAAkB,IAAIqB,KAAmBvB,GAAaP,EAAWI,GAAa,GAC3F,CAAC0B,EAAgB/B,EAAgBvP,EAAe4P,EAAaJ,KAEhEgC,EAAAA,GAAAA,IAAsB3yB,IAAoB,IAAlB4yB,GAAa5yB,GAC9B4yB,GAAgBvrB,IACnBirB,GAAiB,GACjBE,EAAyBC,GAC3B,GACC,CAACprB,EAAUorB,IAEd,MAAMI,GAAiC32B,EAAAA,EAAAA,KAAahC,IAClDs4B,EAAyBt4B,GACzBo4B,GAAiB,EAAK,GACrB,IAEGQ,GAAeh5B,EAAAA,EAAAA,IAAgB,KACnCs4B,EAAiB,CAAEW,QAASR,IAC5Bn5B,GAAS,IAGX,OACEuB,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTC,QAASL,GAAgB,GACzBL,YAAa2B,EACbd,YAAaV,EACbW,kBAAmBp3B,EAAK,UACxBq3B,cAAc,8BACdC,cAAY,EACZC,oBAAkB,EAClBE,oBAAqBc,EACrBb,eAAgBhB,EAChBiB,eAAa,EACbC,YAAU,EACVC,cAAc,aAGhBx3B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GDhFS,WCgF2BwuB,GDhFP,aCiF3C13B,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASb,EACT72B,QAASs3B,EACT3yB,UAAW7F,EAAK,SAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,sBAKvB,IC3FA,IAAgB,MAAQ,WAAW,OAAS,WAAW,YAAc,WAAW,YAAc,WAAW,QAAU,WAAW,QAAU,WAAW,MAAQ,WAAW,KAAO,WAAW,OAAS,WAAW,QAAU,WAAW,MAAQ,WAAW,KAAO,WAAW,OAAS,WAAW,cAAgB,WAAW,OAAS,WAAW,KAAO,WAAW,OAAS,YCkD9Vq4B,GAA2B,CAAC,CAChCn4B,KAAM,6BACNd,MAAO,YACPoB,MAAO,CAAC,UAAW,WACnBsF,KAAM,iBACNwyB,QAAS,gBACR,CACDp4B,KAAM,6BACNd,MAAO,WACPoB,MAAO,CAAC,UAAW,WACnBsF,KAAM,cACNwyB,QAAS,uBACR,CACDp4B,KAAM,iCACNd,MAAO,eACPoB,MAAO,CAAC,UAAW,WACnBsF,KAAM,kBACNwyB,QAAS,gBACR,CACDp4B,KAAM,qCACNd,MAAO,SACPoB,MAAO,CAAC,UAAW,WACnBsF,KAAM,eACNwyB,QAAS,iBACR,IAEEC,GAAO,SAAPA,GAAO,OAAPA,EAAAA,EAAO,qBAAPA,EAAAA,EAAO,yBAAPA,EAAAA,EAAO,+BAAPA,EAAAA,EAAO,uBAAPA,CAAO,EAAPA,IAAO,IAoUZ,UAAep6B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACxC,MACEgyB,aAAa,QACXgC,EAAO,OAAEl3B,KAETuD,EAAAA,EAAAA,KAAeL,GACbywB,EAAS3zB,GAAUk3B,GACrBiD,EAAAA,EAAAA,KAAgBj3B,EAAQlD,EAAQk3B,QAChChhC,EAEJ,MAAO,CACLy9B,MAAOA,GAAS,YAAaA,EAAQA,OAAoBz9B,EACzDkkC,WAAYzG,GAAS,eAAgBA,EAAQA,EAAMyG,gBAAalkC,EAChEqhC,eAAgBr0B,EAAOm3B,aAAaT,QACpCpC,UAAWt0B,EAAOo3B,MAAMC,KACxBvS,cAAe9kB,EAAO8kB,cACvB,GAhBiB/kB,EA7TpB,SAAsB7H,GAQI,IARH,OACrB2E,EAAM,MACN4zB,EAAK,WACLyG,EAAU,eACV7C,EAAc,UACdC,EAAS,cACTxP,EAAa,QACb/nB,GACsB7E,EACtB,MAAM,iBAAEo/B,EAAgB,qBAAEC,IAAyBr6B,EAAAA,EAAAA,MAE7Ce,GAAOC,EAAAA,EAAAA,MACNs5B,EAAaC,EAAWC,IAAcv1B,EAAAA,EAAAA,IAAQ,IAC9Cw1B,EAASC,IAAcv6B,EAAAA,EAAAA,IAAyC65B,IAChEW,EAAUC,IAAez6B,EAAAA,EAAAA,IAASozB,GAAOsH,cACzC3K,EAAW4K,IAAgB36B,EAAAA,EAAAA,IAAkB25B,GAAQW,UACrDM,EAAyBC,IAA8B76B,EAAAA,EAAAA,IAA4B,aACpF86B,EAAe/K,IAAc4J,GAAQW,QAErCvB,GAAiBr9B,EAAAA,EAAAA,KAAQ,KACrBs7B,GAAkB,IAAIpG,QAAQE,GAAWmG,EAAUnG,IAASkI,iBACnE,CAAChC,EAAgBC,IAEdE,GAAYz7B,EAAAA,EAAAA,KAAQ,KACxB,GAAIq0B,IAAc4J,GAAQoB,aACnBT,GAASU,cAAcvmC,QAAU6lC,EAAQU,aAAa,KAAOvT,GAElE,MAAO,CAACA,EAGM,GACf,CAACsI,EAAWtI,EAAe6S,GAASU,eAEjCC,GAAqBv/B,EAAAA,EAAAA,KAAQ,IAC7Bk/B,IAA4BN,GAAST,WAAmB,GACrDS,GAASY,cAAgB,IAC/B,CAACN,EAAyBN,GAASY,aAAcZ,GAAST,aAEvDsB,GAA2B/6B,EAAAA,EAAAA,IAAiBg7B,IAChDb,EAAW,IACND,EACHU,aAAcI,GAAQ3mC,OAAS2mC,GAAQxK,QAAQ/4B,GAAOA,IAAO4vB,IAAiB,CAACA,IAC/E,IAGE4T,GAA0Bj7B,EAAAA,EAAAA,IAAiBg7B,IAC/Cb,EAAW,IACND,EACHY,aAAcE,EACdvB,WAAYe,GACZ,KAGJz8B,EAAAA,EAAAA,KAAU,KACJqB,IACFm7B,EAAahB,GAAQW,SACrBF,IACF,GACC,CAAC56B,KAEJrB,EAAAA,EAAAA,KAAU,KACRo8B,EAAWV,EAAW,GACrB,CAACA,IAEJ,MAAMyB,GAAyBl7B,EAAAA,EAAAA,IAAgB,KACzC2vB,IAAc4J,GAAQW,QAK1BK,EAAahB,GAAQW,SAJnBD,GAI2B,IA+BzBkB,GAAuBn7B,EAAAA,EAAAA,IAAgB,KAC3Cq6B,GAAaD,EAAS,IAKlBpB,GAAeh5B,EAAAA,EAAAA,IAAgB,KACnC65B,EAAiB,CACfx6B,OAAQ2zB,EAAO3zB,OACfk3B,QAASvD,EAAOv7B,GAChByiC,QAASA,IAEPlH,EAAOsH,cAAgBF,GACzBN,EAAqB,CAAEz6B,OAAQ2zB,EAAO3zB,OAAQk3B,QAASvD,EAAOv7B,GAAI6iC,YAAaF,IAEjFH,GAAY,IAuDd,SAASmB,EAAc7tB,GACrB,OAAQoiB,GACN,KAAK4J,GAAQW,QACX,OAwCN,WACE,MAAMmB,EAAgBrI,EAyH1B,SAA+BsI,GAC7B,MAGMC,EAAQv0B,KAAKoI,MAAMksB,EAHH,MAIhBE,EAAmBF,EAJH,KAQtB,OAHyBt0B,KAAKoI,MAAMosB,EAJd,KAOK,GAAKD,EAAQ,EAAIA,CAC9C,CAnIkCE,CAAsBzI,EAAM0I,WAAa1I,EAAMhN,MAAQ,EAErF,OACEnlB,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOoqB,SACrB96B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAO3Q,OAAQJ,EAAK,qCACnCK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOqqB,MACpBvC,GAAQ9xB,KAAKs0B,IACZh7B,SAAAA,GAAA7K,cAAA,SACE0R,IAAKm0B,EAAOz7B,MACZY,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOsqB,OAAQA,EAAOz7B,QAAU85B,GAAST,YAAcloB,GAAOuqB,UAExFj7B,EAAAA,GAAA7K,cAAA,SACE/B,KAAK,QACLiN,KAAK,gBACLF,UAAWuQ,GAAOwqB,MAClB37B,MAAOy7B,EAAOz7B,MACd07B,QAASD,EAAOz7B,QAAU85B,GAAST,WACnCr4B,SAAUA,KAAM46B,OAhKAC,EAgKuBJ,EAAOz7B,WA/J5D+5B,EAAW,IACND,EACHT,WAAYwC,IAHhB,IAAgCA,CAgKqC,EACrDC,2BAAyB,IAE3Br7B,EAAAA,GAAA7K,cAAA,QACEgL,UAAWuQ,GAAOzK,KAClB1N,MAAQ,iBAAgByiC,EAAOr6B,MAAM,mBAAmBq6B,EAAOr6B,MAAM,MAErEX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAY,aAAY66B,EAAO/0B,UAEpCjG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO4qB,eACrBt7B,EAAAA,GAAA7K,cAAA,QAAMgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAO6qB,cAAe57B,EAAKq7B,EAAO36B,OACjE26B,EAAOvC,SACNz4B,EAAAA,GAAA7K,cAAA,OACEqmC,SAAU,EACVC,KAAK,SACLt7B,UAAWuQ,GAAO9c,OAClB,aAAY+L,EAAK,QACjBkB,QAAUpB,KA1K9B,SAA2BA,EAAqC7L,GAG9D,QAFA8B,EAAAA,EAAAA,GAAU+J,GAEF7L,GACN,IAAK,eACH8lC,EAAahB,GAAQgD,cACrB,MACF,IAAK,eACHhC,EAAahB,GAAQoB,WACrB,MACF,IAAK,eACHJ,EAAahB,GAAQiD,UACrB/B,EAA2B,aAC3B,MACF,IAAK,sBACHF,EAAahB,GAAQiD,UACrB/B,EAA2B,YAGjC,CAuJsCgC,CAAkBn8B,EAAGu7B,EAAOvC,QAAS,GAEvDz4B,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,GAAOmrB,aApI3B,kBADSjoC,EAqIiDonC,EAAOvC,SAnIhD,IAA1BX,EAAetkC,OACVmM,EAAK,wCAGgB,IAA1Bm4B,EAAetkC,QACVwyB,EAAAA,EAAAA,KAAermB,EAAMq2B,EAAU8B,EAAe,KAGhDn4B,EAAK,2BAA4Bm4B,EAAetkC,OAAQ,KAGjD,iBAAXI,GAAqD,cAAxBylC,GAAST,YAC1B,wBAAXhlC,GAA4D,aAAxBylC,GAAST,WAC5CS,GAASY,cAAczmC,OAIQ,IAAhC6lC,EAAQY,aAAazmC,OAChBmM,EAAK,mCAAmCm8B,EAAAA,EAAAA,KAAgB9F,EAAUqD,EAAQY,aAAa,MAGzFt6B,EAAK,kCAAmC05B,EAAQY,aAAazmC,OAAQ,KAPnEmM,EAAK,oCAUX05B,GAASU,cAAgD,IAAhCV,EAAQU,aAAavmC,OAIf,IAAhC6lC,EAAQU,aAAavmC,QAChBsoC,EAAAA,EAAAA,KAAgB9F,EAAUqD,EAAQU,aAAa,KAGjDp6B,EAAK,2BAA4B05B,EAAQU,aAAavmC,OAAQ,KAP5DmM,EAAK,6CA2GIK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iBAAiB,sBAtIlD,IAA0BvM,CA2If,MAGLoM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOoqB,SACrB96B,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAACliB,QAAM,EAAC9R,QAASy5B,GACxBt6B,EAAAA,GAAA7K,cAAA,YAAOwK,EAAK,cACZK,EAAAA,GAAA7K,cAAC4mC,GAAAA,EAAQ,CACPnlC,GAAG,sBACHkJ,MAAOH,EAAK,aACZs7B,QAAS1B,EACTxE,UAAQ,MAId/0B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOsrB,QACrBh8B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOsY,MAAOrpB,EAAK,gBAAiB66B,IACpDx6B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOurB,QACrBj8B,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACG,QAASs3B,GAAex4B,EAAK,6BAK/C,CA1Gau8B,GACT,KAAKxD,GAAQgD,aACX,OACE17B,EAAAA,GAAA7K,cAACgnC,GAAY,CACXt1B,IAAI,gBACJ6F,SAAUA,EACVqpB,eAAgBA,EAChBvP,cAAeA,EACfwP,UAAWA,EACXv3B,QAAS47B,IAGf,KAAK3B,GAAQiD,SACX,OACE37B,EAAAA,GAAA7K,cAACinC,GAAa,CACZv1B,IAAI,YACJjQ,GAAG,YACHm/B,eAAgBA,EAChBvP,cAAeA,EACfwP,UAAWA,EACXC,YAAa+D,EACb7D,SAAUiE,IAGhB,KAAK1B,GAAQoB,UACX,OACE95B,EAAAA,GAAA7K,cAACinC,GAAa,CACZv1B,IAAI,aACJjQ,GAAG,aACHm/B,eAAgBA,EAChBG,UAAWA,EACX1P,cAAeA,EACfwP,UAAWA,EACXC,YAAaoD,GAASU,aACtB5D,SAAU+D,IAIpB,CAsEA,OACEl6B,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQ26B,EACR/4B,WAAW+I,EAAAA,GAAAA,GAAewH,GAAO2rB,MAAO,wBACxC59B,QAAS26B,EACTkD,YAAU,EACV59B,oBAAqBD,GAErBuB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO6rB,QACrBv8B,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GAAewH,GAAO8rB,YAAa,gBAC9Cj3B,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACLwD,QAASw5B,EACT70B,UAA0B7F,EAAfk6B,EAAoB,cAAsB,iBAErD75B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,sBAAuB2wB,GAAgB,iBAExE75B,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CAACxuB,KAAK,YAAYyuB,UAAWA,GAhJ9C,WACE,OAAQA,GACN,KAAK4J,GAAQW,QACX,OAAOr5B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAO+rB,aAAc98B,EAAK,+BAClD,KAAK+4B,GAAQoB,UACX,OAAO95B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAO+rB,aAAc98B,EAAK,yCAClD,KAAK+4B,GAAQgD,aACX,OAAO17B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAO+rB,aAAc98B,EAAK,iBAClD,KAAK+4B,GAAQiD,SACX,OAAO37B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAO+rB,aAAc98B,EAAK,2CAEtD,CAsIS+8B,KAGL18B,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTC,UAAWA,EACXzuB,KAAK,YACLs8B,eAAe,yBACfx8B,UAAWuQ,GAAO3K,SAEjBw0B,GAIT,K,4BC/YA,IAAIqC,GACAjc,GAEJ,MAAMkc,GAAwC,CAC5CC,MAAM,EACNC,WAAW,EACXC,IAAI,EACJC,SAAS,EACTC,MAAM,EACNC,WAAW,EACXC,OAAO,EACPC,YAAY,EACZ,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,KAAK,GAsBDvlB,GAAkB1Y,IACtB,MAAMgkB,EAAS,WAAYhkB,EAAIA,EAAEgkB,OALThkB,IAChB,mBAAoBA,EAAIA,EAAEk+B,eAAe,GAAG1nB,QAAU,EAIpB2nB,CAAUn+B,GAEpD,IACGm9B,KAEGA,GAAa3Q,SAASxsB,EAAEC,SAExBk9B,GAAa7lC,WAAa,GAAK0sB,GAAU,GAEzCmZ,GAAa7lC,WAAc6lC,GAAaiB,aAAejB,GAAa5lC,cAAiBysB,GAAU,EACnG,CACA,GAAI9C,IAA4BlhB,EAAEC,OAAuB/I,QAAQgqB,IAA0B,OAC3FlhB,EAAE0Y,gBACJ,GAGF,SAAS2lB,GAA4Br+B,GAC/Bo9B,GAAap9B,EAAEoH,OArCrB,SAAmBnH,GACjB,KAAKA,GAAYA,aAAkBq+B,aAAc,OAAO,EACxD,MAAM7Z,EAAUxkB,EACVs+B,EAAU9Z,EAAQ8Z,QAAQC,cAChC,GAAgB,aAAZD,EAAwB,OAAO,EACnC,GAAgB,UAAZA,EAAqB,OAAO,EAChC,MAAM5qC,EAAO8wB,EAAQga,aAAa,QAClC,QAAK9qC,GACc,CACjB,OAAQ,WAAY,SAAU,QAAS,MAAO,MAC9C,SAAU,OAAQ,WAAY,iBAAkB,OAAQ,QAAS,QAEjD86B,QAAQ96B,EAAK6qC,gBAAkB,CACnD,CAwB8BE,CAAU1+B,EAAEC,SACtCD,EAAE0Y,gBAEN,CAEO,SAASimB,GAAiBC,EAAyBC,GAQxD,OAPA1B,GAAeyB,EACf1d,GAA0B2d,EAE1BzqC,SAASiV,iBAAiB,QAASqP,GAAgB,CAAEomB,SAAS,IAC9D1qC,SAASiV,iBAAiB,YAAaqP,GAAgB,CAAEomB,SAAS,IAClE1qC,SAAS2qC,UAAYV,GAEdW,EACT,CAEO,SAASA,KACd7B,QAAeloC,EACfisB,QAA0BjsB,EAC1Bb,SAASkV,oBAAoB,QAASoP,IACtCtkB,SAASkV,oBAAoB,YAAaoP,IAE1CtkB,SAAS2qC,UAAY,IACvB,C,yQCxCA,MAiGA,IAAelgC,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAAkC,IAAhC,YAAEstB,GAAattB,EAItB,MAAO,CACLq5B,OAJa/L,EAAYgM,YAAahY,EAAAA,EAAAA,KAAWjlB,EAAQixB,EAAYgM,iBAAcjqC,EAKnFy9B,MAJYQ,EAAY+C,SAAW/C,EAAYgM,YAC7ChG,EAAAA,EAAAA,KAAgBj3B,EAAQixB,EAAYgM,WAAYhM,EAAY+C,cAAWhhC,EAI1E,GARe+M,EAjGoC7H,IAKlD,IALmD,UACvDuG,EAAS,YACTwyB,EAAW,OACX+L,EAAM,MACNvM,GACDv4B,EACC,MAAM,gBAAEglC,EAAe,qBAAEC,EAAoB,SAAEC,IAAalgC,EAAAA,EAAAA,MAEtDwI,GAAMrL,EAAAA,EAAAA,IAAuB,MAE7B4D,GAAOC,EAAAA,EAAAA,MAEb1C,EAAAA,EAAAA,KAAU,MACHi1B,GAASQ,EAAYgM,YAAchM,EAAY+C,SAClDmJ,EAAqB,CACnBrgC,OAAQm0B,EAAYgM,WACpBI,SAAU,CAACpM,EAAY+C,UAE3B,GACC,CAAC/C,EAAaR,IAEjB,MAAMpM,EAAc2Y,GAAS1Y,EAAAA,EAAAA,KAAermB,EAAM++B,GAAU/L,EAAYqM,SAElEC,GAAoB9/B,EAAAA,EAAAA,IAAgB,KACxC,MAAM,WAAEw/B,EAAU,QAAEjJ,GAAY/C,EAC3BgM,KAEgBxM,GAAW,cAAeA,GAASA,EAAM+M,UAS5DJ,EAAS,CAAEloC,GAAI+nC,IANfC,EAAgB,CACdpgC,OAAQmgC,EACRjJ,UACAyJ,eAAe,IAInB,KAGI,YAAEloB,EAAW,gBAAEmoB,IAAoBC,EAAAA,GAAAA,GAAaJ,GA6BtD,OACEj/B,EAAAA,GAAA7K,cAAA,OACEiS,IAAKA,EACLjH,WAAW+I,EAAAA,GAAAA,GACT,kBACA/I,GACAm/B,EAAAA,GAAAA,GAAkBZ,GAAQ,GAAM,IAElCt1B,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,EAC1BmM,QAASoW,EACTsoB,YAAaH,GAEZV,GAAQ/9B,OAAO6+B,mBACdx/B,EAAAA,GAAA7K,cAACsqC,GAAAA,EAAmB,CAClBC,gBAAiBhB,EAAO/9B,MAAM6+B,kBAC9Br/B,UAAU,sCAGdH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gBA7CnB,WACE,GAAIgyB,GAAS,YAAaA,GAASA,EAAMpsB,QAAQ8B,KAC/C,OACE7H,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BACVw/B,EAAAA,GAAAA,GAAuBxN,EAAMpsB,QAAQ8B,MAM9C,CAoCO+3B,GACD5/B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBAnCrB,WACE,IAAKu+B,IAAW3Y,EACd,OAGF,MAAM9f,GAA8BzE,EAAAA,EAAAA,KAASk9B,EAAO9nC,IAAyB,cAAnB,iBAE1D,OACEoJ,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACGpyB,GAAQjG,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAM4F,EAAM9F,UAAU,uBACpC4lB,IAAeI,EAAAA,GAAAA,GAAWJ,GAGjC,CAuBS+Z,KAGD,K,gBCiCV,UAAexhC,EAAAA,EAAAA,KAtIf,SAAqB1E,GAER,IAFS,MACpBu4B,EAAK,WAAE4N,EAAU,UAAE5/B,EAAS,SAAE6/B,EAAQ,OAAEC,GAC/BrmC,EACT,MAAM+F,GAAOC,EAAAA,EAAAA,KAEPwH,GAAMrL,EAAAA,EAAAA,IAAuB,MAE7BmkC,GAAankC,EAAAA,EAAAA,IAAuB,MAEpCokC,GAAUpkC,EAAAA,EAAAA,IAAuB,MAEjCqkC,GAAoBrkC,EAAAA,EAAAA,IAAuB,MAC3CskC,GAAiBC,EAAAA,GAAAA,GAAiBnO,GAAO,GAEzCoO,EAAUF,GAAgBt6B,QAAQ8B,MAEjC24B,EAAaC,IAAkB1hC,EAAAA,EAAAA,KAAS,GACzC2hC,GAAiBC,EAAAA,GAAAA,GAAuBZ,QAAcrrC,EApBzB,KAqB7BksC,EAAoBb,GAAcW,GAExCxjC,EAAAA,EAAAA,KAAU,MACRqO,EAAAA,EAAAA,KAAgB,KACT20B,EAAWhkC,UAIZ6jC,GACFc,EAAAA,GAAAA,IAAcX,EAAWhkC,QAASwU,KAElCowB,EAAAA,GAAAA,IAAiBZ,EAAWhkC,QAASwU,IACvC,GACA,GACD,CAACqvB,IAEJ,MAAMgB,EAAYP,IAAgBI,GAC1BpqB,aAAcwqB,EAAoB,qBAAEtqB,IAAyBE,EAAAA,GAAAA,GACnEmqB,OAAWrsC,GAAW,EAAM,QAAQ,IAGtCqa,EAAAA,EAAAA,KAAgB,MACdkyB,EAAAA,EAAAA,KAAe,KACb,IAAKb,EAAkBlkC,QACrB,OAGF,MAAMglC,EAASd,EAAkBlkC,SAE3B,YAAEilC,GAAgBD,GAExB31B,EAAAA,EAAAA,KAAgB,KACd21B,EAAO3oC,MAAM6oC,YAAY,wBAA0B,GAAED,MAAgB,GACrE,GACF,GACD,KAEHpyB,EAAAA,EAAAA,KAAgB,MACdsyB,EAAAA,EAAAA,KAAoB,KAClB,IAAKnB,EAAWhkC,UAAYikC,EAAQjkC,QAClC,OAGF,MAAM5F,EAAY4pC,EAAWhkC,QACvBolC,EAAgBnB,EAAQjkC,QAExBqlC,EAAgBD,EAAc5qC,WAC9B,WAAE8qC,EAAU,WAAEC,IAAeC,EAAAA,GAAAA,GAA2BJ,GACxDK,EAAgBF,EApEN,EAqEVG,EAAgBL,EArEN,EAqEsBC,EAEtC,MAAO,KACDG,KACFd,EAAAA,GAAAA,IAAcvqC,EAAWoa,IACzB+vB,GAAe,IAGjBnqC,EAAUiC,MAAM6oC,YAAY,oBAAsB,GAAEQ,MAAkB,CACvE,GACD,GACD,CAACrB,KAEJrjC,EAAAA,EAAAA,KAAU,KACH6iC,GACH34B,EAAIlL,SAAS2lC,SAAS,CAAE3rB,IAAK,GAC/B,GACC,CAAC6pB,IAEJ,MAAM+B,GAAgB54B,EAAAA,GAAAA,GACpBwH,GACAkwB,GAAqBlwB,GACrBswB,GAAwBtwB,IAG1B,OACE1Q,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAgBvQ,IAC7CH,EAAAA,GAAA7K,cAAA,OACEiS,IAAK84B,EACL//B,UAAW2hC,EACXrG,KAAMsF,EAAY,cAAWrsC,EAC7BmM,QAASkgC,EAAYf,EAAWC,GAEhCjgC,EAAAA,GAAA7K,cAAA,OACEiS,IAAKA,EACLjH,WAAW+I,EAAAA,GAAAA,GAAewH,GAAqB,kBAAmB,kBAEjE2vB,GAAgB1N,aACf3yB,EAAAA,GAAA7K,cAAC4sC,GAAoB,CACnBpP,YAAa0N,EAAe1N,YAC5BxyB,UAAWuQ,KAGd2vB,GACCrgC,EAAAA,GAAA7K,cAAA,OAAKiS,IAAK+4B,EAAShgC,UAAWuQ,IAC5B1Q,EAAAA,GAAA7K,cAAC6sC,GAAAA,EAAW,CACVC,eAAgB5B,EAChB6B,uBAAqB,EACrB/nB,eAAa,OAMtB6mB,GACChhC,EAAAA,GAAA7K,cAAA,OACEiS,IAAKg5B,EACLjgC,WAAW+I,EAAAA,GAAAA,GAAewH,GAAwBgG,GAClD7V,QAASm/B,GAERrgC,EAAK,0BAKhB,I,4BCnKA,SAAuB,WAAvB,GAAkM,WAAlM,GAAqN,WC+KrN,IAAerB,EAAAA,EAAAA,KAtJK1E,IAGJ,IAHK,MACnBu4B,EAAK,UACLhyB,GACSvG,EACT,MAAM,mBAAEuoC,EAAkB,gBAAEna,EAAe,kBAAEoa,IAAsBxjC,EAAAA,EAAAA,MAC7De,GAAOC,EAAAA,EAAAA,MAEP,MACJyiC,EAAK,MAAEC,EAAK,OAAE9jC,EAAQ5H,GAAI8+B,EAAO,aAAE6M,GACjCpQ,GACE,WAAEqQ,EAAU,cAAEC,EAAa,eAAEC,GAAmBL,GAAS,CAAC,EAC1D1c,IAAankB,EAAAA,EAAAA,KAAShD,GAEtBmkC,EAA2BJ,IAAgBK,EAAAA,EAAAA,KAAeL,EAAcM,EAAAA,KAExEC,EAAanlC,SAChB2kC,GAAS3c,IACPwM,EAAM4Q,WACL5Q,EAAMoB,YAGNyP,GAAcC,EAAAA,EAAAA,KAAYzkC,EAAQk3B,GAElCwN,GAAgBzoC,EAAAA,EAAAA,KAAQ,KAC5B,MAAQq+B,OAASC,KAAM/C,KAAgBmN,EAAAA,EAAAA,MAEjCC,EAAkBf,GAAS,oBAAqBA,EAAQA,EAAMe,qBAAkB1uC,EACtF,GAAK0uC,EAEL,OAAOA,EAAgB18B,KAAK9P,GAAOo/B,EAAUp/B,KAAK+4B,OAAOhyB,QAAQ,GAChE,CAAC0kC,IAEEgB,GAA2BlkC,EAAAA,EAAAA,IAAgB,KAC/CgjC,EAAmB,CAAEzM,WAAU,IAG3B4N,GAAqBnkC,EAAAA,EAAAA,IAAgB,KACzC6oB,EAAgB,CAAEoF,WAAY5uB,EAAQk3B,WAAU,IAG5C6N,GAAkBpkC,EAAAA,EAAAA,IAAgB,KACtC,MAAMqkC,EAAWjB,OAAe7tC,EAAYmuC,EAAAA,IAC5CT,EAAkB,CAChB5jC,SACAk3B,UACAsN,cACAQ,YACA,IAGJ,OAAKhB,EASHxiC,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACTwH,GACAvQ,IAGFH,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GD3F0B,YC2FOyc,GD3FkB,YC4F9D9kB,QAAU8kB,OAAuCjxB,EAA3B2uC,GAErB1lC,QAAQulC,GAAe1vC,SACtBwM,EAAAA,GAAA7K,cAACsuC,GAAAA,EAAU,CACTpmC,KAAK,QACLqmC,MAAOR,EACP/iC,UDlG+E,aCsGlFwlB,EACC3lB,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,IAAc1Q,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,eAAeF,UDvGwK,aCuGzIqiC,GAExFxiC,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,IAAe/Q,EAAK,QAAS6iC,EAAY,MAE3D7kC,QAAQ+kC,KAAoB/c,GAC3B3lB,EAAAA,GAAA7K,cAAA,QAAMgL,UD5G0H,YC6G9HH,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,QAAQF,UD7G2I,aC8G7JuiC,IAIP1iC,EAAAA,GAAA7K,cAAA,OAAKgL,UDlHoG,aCmHxG2iC,GACC9iC,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,cACNtD,KAAK,UACLkI,OAAK,EACL1E,QAASyiC,EACT99B,UAAW7F,EAAK,WAChBQ,UAAWuQ,IAEX1Q,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,aAGdslB,GACC3lB,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG16B,QAAQ8kC,IACPziC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACLsmC,gBAAc,EACdn+B,UAAW7F,EAAK,iBAEhBK,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,UAEbL,EAAAA,GAAA7K,cAAA,YAAOstC,IAGXziC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLpF,UDlJyP,WCmJzPQ,MAAM,cACNtD,KAAK,UACLwD,QAAS0iC,EACT/9B,UAAW7F,EAAK,iBAEf4iC,GACCviC,EAAAA,GAAA7K,cAACyuC,GAAAA,EAAqB,CACpB/8B,KAAKg9B,EAAAA,EAAAA,KAAetB,GACpBS,YAAaA,EACbQ,SAAUjB,EACVuB,eAAgBnB,MAGjBJ,GAAgBI,IACjB3iC,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CACHx/B,KAAMsiC,EAA2B,QAAU,gBAC3CxiC,WAAW+I,EAAAA,GAAAA,GAAey5B,GDnKsP,eCuKrRhlC,QAAQ+kC,IAAoB1iC,EAAAA,GAAA7K,cAAA,YAAOutC,MA1F1C1iC,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAavQ,IACzCR,EAAK,gBA6FJ,ICzJJokC,GAA2B,EA8BjC,IAAezlC,EAAAA,EAAAA,KA5Bf,SAAsB1E,GAET,IAFU,SACrB8S,EAAQ,SAAEs3B,EAAQ,QAAE/pC,EAAO,SAAEoS,EAAW03B,GAAwB,SAAEE,EAAQ,gBAAEC,GACnEtqC,EACT,MAAMuqC,GAAqBhlC,EAAAA,EAAAA,IAAiB8hB,IACrChnB,GCxB+F,aDwBpFgnB,EAAMmjB,eACpBF,GACF,IAGIj7B,GAAaC,EAAAA,GAAAA,GC7BE,WD+BnB86B,GC/BuC,WDgCvCt3B,GChC2D,WDiC3Du3B,GCjCwH,YDoC1H,OACEjkC,EAAAA,GAAA7K,cAAA,QACEgL,UAAW8I,EACX,kBAECyD,GACC1M,EAAAA,GAAA7K,cAAA,KAAGoD,MAAQ,wBAAuB8T,KAAalM,UC1C2B,WD0CFkkC,eAAgBF,IAIhG,IEwDMG,GAAwBC,EAAAA,GAAY,EAAI,EAoyB9C,IAAejmC,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAqB,CAACC,EAAMC,KAK9B,IALgC,OAChDnD,EAAM,QACNk3B,EAAO,kBACP8O,EAAiB,kBACjB9gC,GACD/B,EACC,MAAM,UAAE8iC,GAAc/iC,EAChBgjC,GAAOC,EAAAA,EAAAA,KAAWjjC,EAAQlD,GAC1BknB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQlD,GAC1BsD,GAAWC,EAAAA,EAAAA,KAAeL,IAE9BgyB,aAAa,QACXtiB,EAAO,UACPyzB,EAAS,mBACTC,EAAkB,mBAClBnR,EAAkB,UAClBoR,GAEFC,iBAAmBtP,QAASuP,GAAkB,aAC9CC,EAAY,iBACZC,EAAgB,SAChBC,GACEtjC,GACIvD,OAAQ8mC,GAAuBH,GAAgB,CAAC,EAClD/S,GAAQwG,EAAAA,EAAAA,KAAgBj3B,EAAQlD,EAAQk3B,GACxCpD,EAAgBH,GAAS,YAAaA,EACtCmT,EAAmB3nC,QACvBknC,GAAaI,GAAoBnjC,EAASyjC,gBAAgB7P,SAAW8O,GAAqBM,GACvFO,GAAsB3hC,GAAqByhC,GAAoBxR,GAAsByR,GAGpFzS,EAAcL,EAAgBH,EAAMQ,iBAAcj+B,EAClD8wC,EAAalT,EAAgBH,EAAMqT,gBAAa9wC,EAChD+wC,EAAkB9S,GAAagM,YAChC6G,GAAYE,MAAMC,GAAwD,gBAAdA,EAAKvyC,QAAyBwyC,UACzFC,EAAgBJ,GAAkB9e,EAAAA,EAAAA,KAAWjlB,EAAQ+jC,QAAmB/wC,EACxEoxC,GAAsBvf,EAAAA,EAAAA,KAA+B7kB,EAAQ,yBAInE,MAAO,CACLwkB,KAAOwe,GAAQhf,EACfmgB,gBACAE,SALezT,GAAiBH,EAAM6T,QAASrf,EAAAA,EAAAA,KAAWjlB,EAAQywB,EAAM6T,aAAUtxC,EAMlFy9B,QACA8T,WAAYlB,GAAWmB,iBAAiB1nC,GACxC4S,UACAghB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GACjD4jC,mBACAa,qBAAsB1B,EAAW0B,qBACjCC,oBAAqB3B,EAAW4B,kBAAoB5B,EAAW6B,yBAC/DC,YAAa5oC,QAAQ+nB,GACrB8gB,sBAAuB7oC,QAAQ+nB,GAAM+gB,UACrC7S,YAAalyB,EAAOmyB,QAAQD,YAC5BkS,sBACD,GAvDiBrkC,EA/xBpB,SAAc7H,GAyBY,IAzBX,OACb4E,EAAM,QACNk3B,EAAO,KACPxP,EAAI,cACJ2f,EAAa,SACbE,EAAQ,QACR30B,EAAO,kBACPs1B,EAAiB,iBACjBC,EAAgB,MAChBxU,EAAK,WACL8T,EAAU,cACV9G,EAAa,WACbjhC,EAAU,iBACVonC,EAAgB,qBAChBa,EAAoB,oBACpBC,EAAmB,YACnBG,EAAW,sBACXC,EAAqB,eACrBI,EAAc,qBACdxU,EAAoB,YACpBwB,EAAW,oBACXkS,EAAmB,SACnBe,EAAQ,QACRpoC,EAAO,SACP6E,GACsB1J,EACtB,MAAM,UACJktC,EAAS,oBACTC,EAAmB,kBACnBC,EAAiB,cACjBxR,EAAa,uBACbyR,EAAsB,gBACtBjf,EAAe,cACfkf,EAAa,qBACbjO,EAAoB,SACpB6F,EAAQ,iBACR7K,EAAgB,uBAChBkT,EAAsB,iBACtBC,EAAgB,UAChBC,EAAS,eACTC,EAAc,mBACdvT,IACEn1B,EAAAA,EAAAA,MACEy1B,GAAaC,EAAAA,GAAAA,MAEb30B,GAAOC,EAAAA,EAAAA,MACP,SAAEkE,IAAaC,EAAAA,EAAAA,OACdwjC,EAAoBC,GAAsBC,KAA0B5jC,EAAAA,EAAAA,IAAQ,IAC5E6jC,GAA0BC,GAAWC,KAAc/jC,EAAAA,EAAAA,IAAQ,IAC3DgkC,GAAgBC,GAAkBC,KAAsBlkC,EAAAA,EAAAA,IAAQ,IAChEmkC,GAAcC,GAAgBC,KAAoBrkC,EAAAA,EAAAA,IAAQ,IAC1DskC,GAAmBC,GAAeC,KAAexkC,EAAAA,EAAAA,IAAQ,IACzDykC,GAAoBC,KAAyBxpC,EAAAA,EAAAA,KAAS,IACtDypC,GAAqBC,GAAyBC,KAA6B7kC,EAAAA,EAAAA,IAAQ,IACnFwuB,GAAoBsW,GAAsBC,KAA0B/kC,EAAAA,EAAAA,IAAQ,GAE7EkQ,IAAWhY,EAAAA,EAAAA,IAAyB,OACpC,eACJw2B,GAAc,QACdC,GAAO,eACPE,GAAc,UACdE,GAAS,eACTz3B,GAAc,QACdlB,GAAO,QACP84B,GAAO,cACPE,GAAa,aACbC,GAAY,aACZC,GAAY,YACZC,GAAW,SACXC,GAAQ,YACRC,GAAW,kBACXG,IACEvB,GAAcC,EAAOC,EAAsBC,IAEzCC,GAAgBH,GAAS,YAAaA,EACtC0W,GAAcrqC,IAAW2nC,EACzB2C,IAActnC,EAAAA,EAAAA,KAAShD,GACvBuqC,IAAeD,GACfE,GAAiBD,KAAenjB,EAAAA,EAAAA,KAAcM,GAC9Coc,GAAQhQ,IAAiBH,EAAMmQ,MAE/B2G,IAAkB3I,EAAAA,GAAAA,GACtBgC,IAASnQ,EAAMsH,iBAAc/kC,GAC7B,GAEIw0C,IAAsB5I,EAAAA,GAAAA,GAC1BgC,GAAQnQ,EAAMsH,iBAAc/kC,GAC5B,GAEIy0C,GAAkBxrC,QACtB2kC,IAAUnQ,EAAOhN,KAAOihB,GAAuB9R,EAAAA,GAAAA,OAG3C8U,GAAqBvD,GAAgB7f,EAAAA,EAAAA,KAAermB,EAAMkmC,GAC3DvT,IAAiBH,EAAMQ,aAAaqM,SAEnCqK,GAAc1rC,QAClB20B,IACGH,EAAM4Q,WACL8F,IACD3iB,GAAMojB,WAAW91C,QAGhB+1C,GAAW5rC,QACf20B,IACGH,EAAM4Q,WACL5Q,EAAMoB,aACNsV,KACAV,IAGAqB,GAAe7rC,QACnBy1B,KAAgBkS,GAAoB0C,KAAiBT,IAAuBY,KACxEG,KAAuBE,IAGvBn8B,GAAWimB,IAAiBH,EAAMpsB,QAAQhS,OAAOsY,SACnD8lB,EAAMpsB,QAAQhS,MAAMsY,cACpB3X,EAEE+0C,KAAuBnH,IAASwG,IAAiBD,IAAgBG,IACjEU,GAAmBpX,KAAkBmX,KAAuBnH,IAAS0G,IACrEvgB,GAAkB3kB,GAAYgiC,EAAsB,YAAc,QAGtEtvB,aAAcmzB,GACdjzB,qBAAsBkzB,KACpBhzB,EAAAA,GAAAA,IAA6Bwc,KAG/B1c,qBAAsBmzB,KACpBjzB,EAAAA,GAAAA,GAA4BjZ,QAAQs1B,KAElC6W,IAAWC,EAAAA,GAAAA,GAAcnX,IAAYS,IACrC2W,IAA8BC,EAAAA,GAAAA,GAA6B9uC,KAG/Dqb,aAAc0zB,GACdxzB,qBAAsByzB,KACpBvzB,EAAAA,GAAAA,GAA4B6yB,KAG9BjzB,aAAc4zB,GACd1zB,qBAAsB2zB,KACpBzzB,EAAAA,GAAAA,GAA4B4b,IAAW2V,KAEnCzxB,qBAAsB4zB,KAAkC1zB,EAAAA,GAAAA,IAA4B,IAE1FJ,aAAc+zB,GACd7zB,qBAAsB8zB,KACpB5zB,EAAAA,GAAAA,GAA4B4b,IAAWE,IAErC+X,IAAuBC,EAAAA,GAAAA,GAAa32B,GAAUkf,GAAe0X,GAAAA,IAEnEC,EAAAA,GAAAA,GAAkBpsC,EAAQk3B,IAE1Bx4B,EAAAA,EAAAA,KAAU,KACJw4B,GACFoR,EAAU,CAAEtoC,SAAQk3B,WACtB,GACC,CAACA,EAASl3B,KAEbtB,EAAAA,EAAAA,KAAU,KACR+pC,EAAuB,CAAEzoC,UAAS,GACjC,CAACA,KAGJtB,EAAAA,EAAAA,KAAU,KACR,MAAM2tC,GAAWrpC,EAAAA,EAAAA,KAAShD,IACrB+nC,GAAesE,GAClBxD,EAAU,CAAEjoC,OAAQZ,GACtB,GACC,CAAC+nC,EAAa/nC,KACjBtB,EAAAA,EAAAA,KAAU,KACJqpC,IAAgBC,GAClBY,EAAiB,CAAEhoC,OAAQZ,GAC7B,GACC,CAACgoC,EAAuBD,EAAa/nC,IAExC,MAAMssC,IAAmB3rC,EAAAA,EAAAA,IAAgB,KACnClF,IACF8Z,GAAS7X,SAAS6a,QAGpBgxB,KACAH,IAAY,IAGRmD,IAAkB5rC,EAAAA,EAAAA,IAAgB,KACjCqqC,KAEL7B,KACK1tC,IAAS6tC,KAAkB,IAG5BkD,IAAuB7rC,EAAAA,EAAAA,IAAgB,KAC3CspC,IAAyB,IAErBwC,IAAqB9rC,EAAAA,EAAAA,IAAgB,KACzCupC,IAA2B,IAGvBwC,IAAyB/rC,EAAAA,EAAAA,IAAgB,KAC7CwpC,KACAmC,IAAkB,IAGdK,IAA0BhsC,EAAAA,EAAAA,IAAgB,KAC9CypC,KACAmC,IAAiB,KAIjBxL,YAAa6L,GACbC,UAAWC,GACXC,aAAcC,GACdC,aAAcC,GACdC,WAAYC,KACVC,EAAAA,GAAAA,GAAa,CACfC,QAASd,GACT1V,MAAO2V,KAGH30B,IAAgBC,EAAAA,GAAAA,GACpBxC,QACArf,GACCuF,KAAYg5B,IAAiBwX,IAG1BsB,GAAa9Y,MAAmBC,IAAgBC,KAEtDj2B,EAAAA,EAAAA,KAAU,KACJ6uC,KAAez1B,IAAey0B,IAAiB,GAClD,CAACgB,GAAYz1B,MAEhB01B,EAAAA,GAAAA,GAAkB9D,GAAkBD,KAEpC/qC,EAAAA,EAAAA,KAAU,KACH6uC,IACLh4B,GAAS7X,SAAS+vC,MAAM,GACvB,CAACF,MAEJ7uC,EAAAA,EAAAA,KAAU,MACHo1B,IAAiBC,IAAkB4W,KAEnC7G,IAAU0G,KAGf1B,EAAe,CAAE9oC,SAAQk3B,WAAU,GAClC,CAACnD,GAAgB4W,GAAiB7W,GAAe9zB,EAAQk3B,EAAS4M,GAAO0G,MAE5E9rC,EAAAA,EAAAA,KAAU,KAENooC,IAAqB0C,IAAgBT,GAClCY,IAAqBG,IAAsBE,GAE9CsC,KAEAC,IACF,GACC,CACDA,GAAiB/C,GAAcG,GAAmBZ,EAClDjC,EAAkBgD,GAAoBE,MAGxCtrC,EAAAA,EAAAA,KAAU,KACR,KAAIqqC,GAAsBjC,GAAoB6C,IAa9C,OAFAt0C,SAASiV,iBAAiB,UAAWoP,GAE9B,KACLrkB,SAASkV,oBAAoB,UAAWmP,EAAc,EAVxD,SAASA,EAAczY,GAlRL,KAmRZA,EAAEysC,UACJzsC,EAAE0Y,iBACFowB,IAAuBD,IAE3B,CAMC,GACA,CAACH,GAAmBZ,EAAoBe,GAAoBhD,KAG/DtN,EAAAA,GAAAA,IAAsB3yB,IAMhB,IALJ8mC,EACAC,EACAC,EACAC,EACAC,GACDlnC,GAEIijC,IAAsBH,IAAqBZ,GACzCjC,IAAqB0C,IAAgBQ,IAMxC4D,IAA0BjE,IACvBgE,IAA2B5E,GAC3B8E,IAAyB/G,GACzBgH,IAAqBtE,IACrBuE,IAA4B/D,IAE/BD,IAAsB,EACxB,GACC,CAAChB,EAAoBY,GAAmB7C,EAAkB0C,GAAcQ,GAAqBF,KAEhG,MAAMkE,IAAiBrtC,EAAAA,EAAAA,IAAgB,KACrCV,IACAqgC,EAAS,CAAEloC,GAAI4H,GAAS,IAGpBiuC,IAAyBttC,EAAAA,EAAAA,IAAgB,KAC7CV,IACAqgC,EAAS,CAAEloC,GAAIivC,EAAejvC,IAAK,IAG/B81C,IAAsBvtC,EAAAA,EAAAA,IAAgB,KAC1CV,IACAqgC,EAAS,CAAEloC,GAAImvC,EAAUnvC,IAAK,IAG1B+1C,IAAsBxtC,EAAAA,EAAAA,IAAgB,KAC1C6nC,GAAmB,IAGf4F,IAAsBztC,EAAAA,EAAAA,IAAgB,KAC1Cq2B,GAAe,IAGXqX,IAA6B1tC,EAAAA,EAAAA,IAAiBM,IAClD,MAAM1L,EAAQ0L,EAAE2X,cACZrjB,EAAMsjB,YAAcitB,GACtBwD,KAEAC,KAEE17B,KAAY9G,EAAAA,GAAAA,IAAMxR,EAAMoX,YAAa,KAAM5F,EAAAA,GAAAA,IAAM8G,GAAU,IAC7DugC,IACF,KAGF1vC,EAAAA,EAAAA,KAAU,IACA0pC,KAAqBW,OAGxB7yC,GAH6Co4C,EAAAA,GAAAA,GAAyB,CACzEC,QAASH,GACTI,OAAQL,MAET,CAAC/F,EAAgBW,IAEpB,MAAM0F,IAAsB9tC,EAAAA,EAAAA,IAAgB,KAC1C+nC,EAAc,CAAE1oC,SAAQk3B,WAAU,IAG9BwX,IAAiB/tC,EAAAA,EAAAA,IAAgB,KACrC85B,EAAqB,CAAEz6B,SAAQk3B,UAAS+D,aAAa,GAAO,IAGxD0T,IAAmBhuC,EAAAA,EAAAA,IAAgB,KACvC85B,EAAqB,CAAEz6B,SAAQk3B,UAAS+D,aAAa,GAAQ,IAGzDhE,IAAyBt2B,EAAAA,EAAAA,IAAgB,KAC7C0nC,EAAS1U,EAAO,IAGZib,IAAyBjuC,EAAAA,EAAAA,IAAgB,KAC7CmE,GAAU,IAGNggC,IAAqBnkC,EAAAA,EAAAA,IAAgB,KACzC6oB,EAAgB,CAAEoF,WAAY5uB,EAAQk3B,WAAU,IAG5C2X,IAAwBluC,EAAAA,EAAAA,IAAgB,KAC5CgoC,GAAwB,IAGpBmG,IAAyBnuC,EAAAA,EAAAA,IAAgB,KAC7C,MAAMy5B,GAActG,IAAiBH,EAAM4Q,cACvCruC,EACAy9B,EAAMob,cAAgB,WAAcpb,EAAMqb,kBAAoB,eAAiB,SAEnF,IAAIr5C,EACJ,MAAMs5C,GAASznB,EAAAA,EAAAA,KAAermB,EAAMumB,GACpC,OAAQ0S,GACN,IAAK,SACHzkC,EAAUwL,EAAK,4BAA6B8tC,GAC5C,MACF,IAAK,WACHt5C,EAAUwL,EAAK,oBAAqB8tC,GACpC,MACF,IAAK,eACHt5C,EAAUwL,EAAK,wBAAyB8tC,GACxC,MACF,QACE,OAEJxZ,EAAiB,CAAE9/B,WAAU,IAGzBujB,IAAoBvY,EAAAA,EAAAA,IAAgB,KACpC4zB,GACFkB,EAAiB,CACf9/B,QAASwL,EAAK,mCAKlBoU,GAAS7X,QAASyb,OAAS5D,GAAS7X,QAASyb,MAC7CovB,EAAoB,CAAE31B,SAAUA,IAAU,IAGtCs8B,IAAyBvuC,EAAAA,EAAAA,IAAgB,KAC7C,GAAIy0B,EAAY+Z,cAAerZ,EAAAA,GAAAA,MAAkBV,EAAY+Z,YAA7D,CACE,MAAMC,EAAOha,EAAY+Z,aAAcrZ,EAAAA,GAAAA,MACvCL,EAAiB,CACfl0B,MAAOJ,EAAK,iBACZxL,QAASwL,EAAK,oCAAoCuP,EAAAA,GAAAA,IAAoB0+B,IACtEvhC,SAvamC,KA0avC,MAEA0nB,EAAmB,CAAEx1B,QAAQ,GAAO,IAGhCsvC,IAAiB1uC,EAAAA,EAAAA,IAAgB,KAChCs0B,KACLptB,EAAAA,GAAAA,GAASotB,GAAoB,SAAQj1B,KAAUk3B,KAAWz7B,GAAU,MAAQ,QAAQ,KAGtFiD,EAAAA,EAAAA,KAAU,KACHq1B,IAEL0B,EAAiB,CACf9/B,QAASwL,EAAK,kBACd,GACD,CAACA,EAAM4yB,KAEV,MAAMntB,IAA8D3K,EAAAA,EAAAA,KAAQ,IACnEkM,IAA2B,IAA1B,UAAErB,EAAS,OAAE/G,GAAQoI,EAC3B,OACE3G,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLoN,QAAS7O,EACTzG,KAAK,OACLsD,MAAM,oBACNE,QAASyE,EACTnF,WAAW+I,EAAAA,GAAAA,GAAewH,GAAenS,GAAU,UACnDiH,UAAW7F,EAAK,sBAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,kBAAmB,mBACzC,GAGZ,CAACpF,EAAUnE,IAmMd,OACEK,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAmB,wBAC7C6uB,YAAa6L,GACbC,UAAWC,GACXC,aAAcC,GACdC,aAAcC,GACdC,WAAYC,IAEZ5rC,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAoB45B,KAxMnDtqC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACZyuB,EAAgB,CAACzJ,GAAWuQ,GAAc,IAAIv/B,KAAK9P,GACnDoJ,EAAAA,GAAA7K,cAAC24C,GAAa,CACZjnC,IAAM,YAAWjQ,IACjB8V,SAAU9V,IAAOu7B,GAAOv7B,GACxBqD,QAASA,GACT+pC,SAAUrmC,QAAQw0B,GAAOv7B,KAAQ+vC,GAAoBD,EAAqB9vC,EAAKu7B,GAAOv7B,GAAKA,EAAKu7B,GAAOv7B,KACvGqtC,UAAW4D,GACXx7B,SAAUA,GACV63B,gBAAiB0I,QA6GvB5sC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CAACC,UAAW9W,OAAOxZ,GAAS6B,KAAMooB,GAAiBtoB,UAAWuQ,IApD3E1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACLC,KAAMA,EACN7oB,KAAK,OACLwD,QAAS2rC,KAEXxsC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,QAAM0L,QAAS2rC,GAAgBrsC,UAAWuQ,KACvCyV,EAAAA,GAAAA,IAAWH,EAAAA,EAAAA,KAAermB,EAAMumB,IAAS,KAE5ClmB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACb04B,IACCppC,EAAAA,GAAA7K,cAAA,QACEgL,WAAW+I,EAAAA,GAAAA,GACTwH,GAAkBA,GAAsBm1B,GAAiBn1B,IAE3D7P,QAASglC,EAAgB4G,QAAyB/3C,GAElDsL,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,SACXL,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,KACdyV,EAAAA,GAAAA,GAAWijB,MAIjBrD,GACC/lC,EAAAA,GAAA7K,cAAA,QACEgL,WAAW+I,EAAAA,GAAAA,GACTwH,GAAkBA,IAEpB7P,QAAS6rC,IAET1sC,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAACC,KAAM6f,EAAU1oC,KAAK,UAC7B2C,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,KACdyV,EAAAA,GAAAA,IAAWH,EAAAA,EAAAA,KAAermB,EAAMomC,IAAa,MAInD5T,GAAS,SAAUA,GAClBnyB,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,KAAmBq9B,EAAAA,GAAAA,IAAmBpuC,EAAM00B,EAAYlC,EAAMhN,OAEhFmN,IAAiBH,EAAM6b,UACtBhuC,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,IAAmB/Q,EAAK,2BAe/CK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IA3GtB,WACE,IAAKo4B,GAAa,OAElB,IAAImF,EAAc,iBAClB,MAAMC,EAA6C,CACjD,iBAAkB,CAAC,UAAW,WAC9B,cAAe,CAAC,UAAW,WAC3B,kBAAmB,CAAC,UAAW,WAC/B,eAAgB,CAAC,UAAW,YAG9B,GAAI5L,GAAO,CACT,MAAM,WAAE1J,GAAgBzG,GAAS,eAAgBA,GAASA,EAAMyG,YAAe,CAAC,EAEhF,OAAQA,GACN,IAAK,YACHqV,EAAc,iBACd,MACF,IAAK,WACHA,EAAc,cACd,MACF,IAAK,eACHA,EAAc,kBACd,MACF,IAAK,SACHA,EAAc,eAEpB,KAAO,CACL,IAAK9b,KAAW,YAAaA,IAAUA,EAAM4Q,SAC3C,OAGFkL,EAAc9b,EAAMqb,kBAChB,kBACCrb,EAAMob,cAAgB,cAAgB,cAC7C,CAEA,OACEvtC,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAyB4xB,IAAS5xB,IAC5D7P,QAASyhC,GAAQ+K,GAAwBC,GACzC/0C,MAAQ,iBAAgB21C,EAASD,GAAa,mBAAmBC,EAASD,GAAa,MAEvFjuC,EAAAA,GAAA7K,cAAA,KAAGgL,UAAY,aAAY8tC,IAAe,mBACzC3L,IAAStiC,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iBAAiB,mBAG9C,CA6DSguC,GACAl0C,IACC+F,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAWuQ,GACXnL,OAAK,EACLoN,QAAS7O,EACTzG,KAAK,OACLsD,MAAM,oBACNyS,UAAWggB,GACXvyB,QAAS6W,GACTlS,UAAW7F,EAAK,WAEhBK,EAAAA,GAAA7K,cAAA,KACEgL,WAAW+I,EAAAA,GAAAA,GACT,OACAkI,GAAW2hB,GAAU,2BAA6B,sBAEpD,oBAIN/yB,EAAAA,GAAA7K,cAACoR,GAAAA,EAAY,CACXpG,UAAWuQ,GACXlK,QAASpB,GACTqB,UAAU,QACV2nC,OAAQlD,GACRzsC,QAAS0sC,IAER9B,IAAerpC,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,OAAOpF,QAASosC,IAAsBttC,EAAK,aACzEspC,IACCjpC,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,aAAapF,QAASqsC,IAClCvtC,EAAKmpC,GAAc,YAAc,gBAGrCI,IACClpC,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASpF,QAASssC,IAC9BxtC,EAAKmpC,GAAc,eAAiB,oBAGxCxV,IACCtzB,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWmN,UAAWqgB,GAAmB5yB,QAASgtC,IAC9DluC,EAAK,wBAGR2iC,IAASwG,IACT9oC,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,qBAAqBpF,QAAS6sC,IAC1C/tC,EAAK,iBAGR2iC,IAAStiC,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,OAAOpF,QAASusC,IAAyBztC,EAAK,qBACvE2iC,IAAStiC,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASK,aAAW,EAACzF,QAAS40B,IAAyB91B,EAAK,YAEvFK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GAAewH,GAAeA,IACzCnL,OAAK,EACLlI,KAAK,OACLsD,MAAM,oBACN6E,UAAW7F,EAAK,SAChBkB,QAASpC,GAETuB,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,mBAAoB,uBAqBvDlJ,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GACXnY,MAAQ,UAAS2F,EAAW/B,oBAAoB+B,EAAW1B,YAE3DwD,EAAAA,GAAA7K,cAAA,UAAQiS,IAAK0iC,GAAU3pC,UAAWuQ,KACjCvV,IACC6E,EAAAA,GAAA7K,cAAA,OACE0R,IAAM,WAAU6uB,IAChB//B,IAAKwF,GACL3F,WAAW,EACXmlB,IAAI,GACJxa,WAAW+I,EAAAA,GAAAA,GAAewH,GAAcA,GAAqBs5B,MAGhEL,IACC3pC,EAAAA,GAAA7K,cAACk5C,GAAAA,EAAQ,CAACluC,WAAW+I,EAAAA,GAAAA,GAAe0gC,GAA8Bl5B,OAElEzW,IAAWg5B,IACXjzB,EAAAA,GAAA7K,cAAA,OACEQ,IAAKs9B,GACLtY,IAAI,GACJxa,WAAW+I,EAAAA,GAAAA,GAAewH,GAAcm5B,IACxCr0C,WAAW,IAGdyE,IAAWg5B,IACVjzB,EAAAA,GAAA7K,cAACm5C,GAAAA,EAAc,CACblnC,IAAK2M,GACLlN,IAAM,SAAQ6uB,IACdv1B,WAAW+I,EAAAA,GAAAA,GAAewH,GAAcm5B,IACxC0E,QAAS7G,GACT/vB,MAAOvG,EACPjV,MlBnyBoB,IkBoyBpBK,OlBnyBqB,KkBoyBrBhH,WAAW,EACXsjB,aAAW,EACX5D,yBAAuB,EACvBs5B,YAAU,EACVr1B,QAAS4uB,GACT/uB,UAAW+uB,GACX0G,uBAAqB,EACrBr1B,aAAcyzB,IAEd7sC,EAAAA,GAAA7K,cAAA,UAAQQ,IAAKs9B,GAAe7/B,KAAMu3C,GAAAA,EAAoBxuC,MAAM,QAC3Dg3B,IAAgBnzB,EAAAA,GAAA7K,cAAA,UAAQQ,IAAKw9B,GAAc//B,KAAMs7C,GAAAA,EAAsBvyC,MAAM,UAIhFqsC,KAAwBjB,GACxBvnC,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,UACE/B,KAAK,SACL+M,WAAW+I,EAAAA,GAAAA,GAAewH,GAAiBA,IAC3C7P,QAAS8rC,GACT,aAAYhtC,EAAK,cAEnBK,EAAAA,GAAA7K,cAAA,UACE/B,KAAK,SACL+M,WAAW+I,EAAAA,GAAAA,GAAewH,GAAiBA,IAC3C7P,QAAS+rC,GACT,aAAYjtC,EAAK,WAItB2yB,IAAiBW,IAChBjzB,EAAAA,GAAA7K,cAACw5C,GAAAA,EAAgB,CACf9nC,IAAM,gBAAe6uB,KAAWl3B,IAChC2zB,MAAOA,EACPzlB,UAAQ,EACRm7B,eAAgBxV,MAGlBvuB,GACA9D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACLC,KAAMA,EACN0oB,WAAS,EACTC,gBAAgB,aAElB7uC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KAAcyV,EAAAA,GAAAA,IAAWH,EAAAA,EAAAA,KAAermB,EAAMumB,IAAS,QAM9EwjB,IACC1pC,EAAAA,GAAA7K,cAAC25C,GAAW,CAAC3c,MAAOA,EAAOhyB,UAAWmqC,KAEvCF,IACCpqC,EAAAA,GAAA7K,cAAA,OACEqmC,SAAU,EACVC,KAAK,SACLt7B,WAAW+I,EAAAA,GAAAA,GAAewH,GAAwB25B,IAClDxpC,QAASA,IAAMwnC,KACf,aAAY1oC,EAAK,WAGpB6yB,IAAWxyB,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAwB85B,MAClED,IACCvqC,EAAAA,GAAA7K,cAAC45C,GAAY,CACXloC,IAAM,WAAU6uB,KAAWl3B,IAC3B2zB,MAAOA,EACP4N,WAAYoI,GACZnI,SAAUoI,GACVnI,OAAQoI,GACRloC,UAAWqqC,KAGdN,IACClqC,EAAAA,GAAA7K,cAAC65C,GAAAA,EAAQ,CACP57C,KAAK,QACLgM,OAAQZ,EACR6D,SAAU4sC,EAAAA,GACVvZ,QAASA,EACTnpB,SAAU+1B,GACVn/B,gBAAgB,SAChBW,UAAUorC,EAAAA,EAAAA,MACVC,yBAA0BC,EAAAA,IAC1BC,gBAAiBC,EAAAA,IACjBC,QAAQ,mBACRpvC,WAAW+I,EAAAA,GAAAA,GAAewH,GAAiBy5B,IAC3CqF,iBAAkB7vC,EAAKopC,GAAc,oBAAsB,kBAC3DtlC,UAAW8lC,GAAWjG,QAAqB5uC,EAC3C+6C,QAASjI,GACTkI,OAAQjI,KAKlB,KC1yBA,IAAenpC,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAqB,CAACC,EAAM2D,KAA2B,IAAzB,KAAE6gB,GAAM7gB,EACxD,MACEquB,aAAa,oBACXic,EAAmB,OACnB16C,EAAM,UACN8vC,KAEAhjC,EAAAA,EAAAA,KAAeL,GAEnB,MAAO,CACLkuC,aAAc1pB,GAAMtvB,GAAK+4C,IAAsBzpB,EAAKtvB,SAAMlC,EAC1DO,SACA46C,kBAAmB3pB,GAAMtvB,GAAKmuC,GAAWmB,iBAAiBhgB,EAAKtvB,SAAMlC,EACtE,GAbiB+M,EAhEpB,SAAqB7H,GAEK,IAFJ,KACpBssB,EAAI,YAAE4pB,EAAW,aAAEF,EAAY,kBAAEC,EAAiB,OAAE56C,GAC9B2E,EACtB,MAAM,gBAAEglC,EAAe,uBAAEqI,IAA2BroC,EAAAA,EAAAA,MAC9Ce,GAAOC,EAAAA,EAAAA,KAEPuyB,GAAQ13B,EAAAA,EAAAA,KAAkC,KAC9C,IAAKq1C,EACH,OAGF,MAAM,WACJ7J,EAAU,WAAE8J,EAAU,KAAEhX,GACtB+W,EACEE,EAAmB/J,EAAWA,EAAWzyC,OAAS,KAAOu8C,EACzDE,EAAiBL,GAAgBC,GAAmBh5C,SAAS+4C,GAC/DA,IAAiBI,EAAoBD,IAAe,GAAM,IACzD,EAGL,OAAOhX,EAFUA,EAAKkX,IAAiBr5C,IAAMi5C,IAAoB,IAAM5J,EAAW,GAE7D,GACpB,CAAC2J,EAAcE,EAAaD,IAEzBK,EAAW/d,GAAS,YAAaA,GAEvCj1B,EAAAA,EAAAA,KAAU,KACJi1B,IAAU+d,GACZjJ,EAAuB,CAAEzoC,OAAQ2zB,EAAM3zB,QACzC,GACC,CAAC2zB,EAAO+d,IAEX,MAAMn8C,EAAQm8C,EAAW/d,EAAMpsB,QAAQhS,WAAQW,EACzCy7C,EAAYD,GAAWpd,EAAAA,EAAAA,KAAkBX,QAASz9B,EAElD07C,GADar1C,EAAAA,EAAAA,GAASo1C,IACGp8C,GAAO6+B,WAAW/2B,QAEjD,GAAKqqB,GAASiM,KAAS,cAAeA,GAItC,OACEnyB,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GACX7P,QAASA,KAAQ+9B,EAAgB,CAAEpgC,OAAQ2zB,EAAM3zB,OAAQk3B,QAASvD,EAAMv7B,GAAI3B,UAAS,GAEpFm7C,GACCpwC,EAAAA,GAAA7K,cAAA,OAAKQ,IAAKy6C,EAAUz1B,IAAI,GAAGxa,UAAWuQ,GAAclb,WAAW,IAEhE06C,GAAYlwC,EAAAA,GAAA7K,cAACw5C,GAAAA,EAAgB,CAACxc,MAAOA,IAEtCnyB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACLC,KAAMA,EACN0oB,WAAS,EACTC,gBAAgB,aAElB7uC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KAAcyV,EAAAA,GAAAA,IAAWH,EAAAA,EAAAA,KAAermB,EAAMumB,IAAS,OAKjF,KC5BkC,IAE7BhL,GAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,2BAAdA,EAAAA,EAAc,uBAAdA,CAAc,EAAdA,IAAc,IAsZnB,UAAe5c,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACxC,MACEgyB,aACEl1B,OAAQ6xC,EAAe3a,QAAS4a,EAAc,aAAEC,EAAY,cAAEpR,EAAa,UAAEqR,EAAS,UAAEC,EAAS,UAAE1L,KAEnGhjC,EAAAA,EAAAA,KAAeL,IACb,SAAEgvC,EAAUC,gBAAgB,OAAEC,IAAalvC,EAAOmyB,QAExD,MAAO,CACL6c,WACAG,QAAS9L,GAAW8L,SAAWD,EAC/BP,gBACAC,iBACAC,eACApR,gBACAqR,YACAC,YACD,IACC/uC,IAAWovC,EAAAA,EAAAA,KAAwBpvC,IAlBnBD,EAjZpB,SAAoB7H,GAeM,IAfL,QACnBi3C,EAAO,cACPR,EAAa,eACbC,EAAc,OACd/xC,EAAM,aACNgyC,EAAY,cACZpR,EAAa,UACbqR,EAAS,UACTC,EAAS,SACTC,EAAQ,kBACRlM,EAAiB,kBACjB9gC,EAAiB,SACjBmjC,EAAQ,QACRpoC,EAAO,SACP6E,GACsB1J,EACtB,MAAM,mBAAEm3C,IAAuBnyC,EAAAA,EAAAA,MAEzB4c,GAAezf,EAAAA,EAAAA,IAAuB,OACrCi1C,EAAiBC,IAAsBlyC,EAAAA,EAAAA,IAASsxC,IAChDa,EAAkBC,IAAuBpyC,EAAAA,EAAAA,IAASuxC,GACnDc,GAAa5oB,EAAAA,EAAAA,GAAsB6nB,GACnCgB,GAAqB/Q,EAAAA,GAAAA,GAAiBmQ,GAAW,GACjDa,GAAqBhR,EAAAA,GAAAA,GAAiBkQ,GAAW,GACjDe,GAAwBjR,EAAAA,GAAAA,GAAiBiQ,GAAc,GACvDiB,GAAyBlR,EAAAA,GAAAA,GAAiBnB,GAAe,GACzDsS,EAAatgB,MACX30B,OAAQugB,EAAc5gB,MAAO6gB,IAAgBE,EAAAA,GAAAA,KAC/ClB,GAAoBjgB,EAAAA,EAAAA,SAAmCrH,GACvDwnB,GAAgBngB,EAAAA,EAAAA,KAAO,IACvB,SAAE+H,IAAaC,EAAAA,EAAAA,MAEf2tC,GAAa31C,EAAAA,EAAAA,IAA2D,CAAC,IACxE6qC,EAAgB+K,IAAkBtkC,EAAAA,EAAAA,KAAU,GAQnD,SAASukC,EAAOxqC,EAA4B5I,GACrC4I,IAGAsqC,EAAWx1C,QAAQsC,GAGtBkzC,EAAWx1C,QAAQsC,GAAQtC,QAAUkL,EAFrCsqC,EAAWx1C,QAAQsC,GAAU,CAAEtC,QAASkL,GAI5C,EAfA+V,EAAAA,GAAAA,GAAe,CACbzQ,SAAUnO,EACV6e,OAAQ3e,EACR4e,kBAAkB,IAcpB,MAAMw0B,GAAmBp3C,EAAAA,EAAAA,KAAQ,KAC/B,GAAIu2C,IAAoBO,GAAyBC,GAC/C,MAAO,CAACR,GAGV,MAAM95C,EAAQ85C,EAAkBH,EAAQ3iB,QAAQ8iB,IAAoB,EACpE,IAAKA,IAA8B,IAAX95C,EACtB,MAAO,GAGT,MAAMyZ,EAAQxK,KAAKqZ,IAAItoB,EAAQ,EAAG,GAC5B0Z,EAAMzK,KAAK8Z,IAAI/oB,EAAQ,EAAG25C,EAAQr9C,QAExC,OAAOq9C,EAAQiB,MAAMnhC,EAAOC,EAAI,GAC/B,CAAC4gC,EAAwBD,EAAuBP,EAAiBH,IAE9DkB,GAAwBt3C,EAAAA,EAAAA,KAAQ,IAC/Bo3C,EAAiBr+C,QAAWw9C,EAI1Ba,EAAiB3jB,QAAQ8iB,IAHtB,GAIT,CAACA,EAAiBa,IAEfG,GAAsBv3C,EAAAA,EAAAA,KAAQ,IAC7Bo3C,EAAiBr+C,QAAW68C,EAG1BwB,EAAiB3jB,QAAQmiB,IAFtB,GAGT,CAACA,EAAewB,KAEnB30C,EAAAA,EAAAA,KAAU,KACH4G,GAGLmtC,EAAmBZ,EAAc,GAChC,CAACA,EAAevsC,KAGnB5G,EAAAA,EAAAA,KAAU,KACJ8zC,IAAoBX,GAAiBC,IAAmBY,GAC1DC,EAAoBb,EACtB,GACC,CAACD,EAAeC,EAAgBU,EAAiBE,KAEpDh0C,EAAAA,EAAAA,KAAU,KACR,IAAI4G,EAKJ,OAJIstC,GAAcA,IAAef,GAC/BsB,GAAe,GAGV,KACLA,GAAe,EAAM,CACtB,GACA,CAACP,EAAYf,EAAesB,EAAgB7tC,KAE/C5G,EAAAA,EAAAA,KAAU,IACD,KACAozC,GAAmBD,GACxBU,EAAmB,CACjB/N,aAAaC,EAAAA,EAAAA,KAAYoN,EAAeC,IACxC,GAEH,CAACA,EAAgBD,IAEpB,MAAM1f,EAAcqhB,EAAsBD,EACpCjhB,EAAaihB,EAAwBC,EAErCC,GAAsB9yC,EAAAA,EAAAA,IAAgB,IACnC0xC,EAAQqB,QAA+B,CAACC,EAAY3zC,EAAQtH,KACjE,GAAIsH,IAAWwyC,EACbmB,EAAW3zC,GAAUkyB,GAAiB,CACpC3U,MAAO01B,EAAW11B,MAClB4U,cACAG,aACAF,kBAAmBE,QAEhB,CACL,IAAID,GAA2B,GAC1BC,GAAc55B,EAAQ,GAAK25C,EAAQ35C,EAAQ,KAAO85C,IACrDngB,GAA2B,GAEzBC,GAAc55B,EAAQ25C,EAAQr9C,OAAS,GAAKq9C,EAAQ35C,EAAQ,KAAO85C,IACrEngB,GAA2B,GAG7BshB,EAAW3zC,GAAUkyB,GAAiB,CACpC3U,MAAO01B,EAAW11B,MAClB4U,cACAG,aACAF,kBAAmByf,IAAkB7xC,IAAWsyB,EAChDD,4BAEJ,CAEA,OAAOshB,CAAU,GAChB,CAAC,MAGNj1C,EAAAA,EAAAA,KAAU,KACR,IAAKse,EAAatf,UAAYqC,EAC5B,OAGF,IAAImkB,EAAU,EAEd,MAAM0vB,EAAqBA,IAClBpB,EAAkBU,EAAWx1C,QAAQ80C,IAAkB90C,aAAUxH,EAGpE2b,EAAa4Q,IAGjB,GAAI/E,EAAchgB,QAEhB,YADAggB,EAAchgB,SAAU,GAG1B,MAAMA,EAAUk2C,IAChB,GAAKl2C,EAEL,GAAIwmB,GApLgB,GAoLpB,CACE,MAAM2vB,EAAWx+C,SAASw4B,eAAeijB,EAAAA,KACrC+C,IACF9mC,EAAAA,EAAAA,KAAgB,MACd+mC,EAAAA,GAAAA,GAAqBD,EAAS,GAIpC,MAEI3vB,EA9LgB,IA+LlBjkB,IACmB,UAAfwiB,EAAM7tB,OACRgrC,KACA3gC,WAAWghC,GAjMQ,SAoMrBlzB,EAAAA,EAAAA,KAAgB,KACdrP,EAAQ3D,MAAM6oC,YAAY,sBAAuB,MAAM,GAE3D,EAGF,OAAOlxB,EAAAA,GAAAA,IAAcsL,EAAatf,QAAS,CACzCukB,cAAc,EACdC,gBAAgB,EAChBK,eAAe,EACfJ,wBAAyB,YACzBrQ,OAAQA,CAAC2Q,EAAOC,EAAY7b,KAEtB,IAFwB,YAC5B+b,EAAW,YAAEC,GACdhc,EACC,GAAI6W,EAAchgB,QAAS,OAE3B,GAAI4N,EAAAA,IAAgC,eAAtBoX,EAAa9tB,KAAuB,CAChD,MAAM,MAAEoc,GAAW0R,EAAgCxR,QAAQ,GAC3D,GAAIF,GAAS8R,GAAAA,IAA6B9R,GAASwN,EAAcsE,GAAAA,GAC/D,MAEJ,CACA,GAAmB,cAAfL,EAAM7tB,KAAsB,OAChC,MAAMmuB,EAAapb,KAAK2Z,IAAIsB,GACtBI,EAAarb,KAAK2Z,IAAIuB,GACtBnlB,EAAUk2C,IAChB,GAAKl2C,IAED8f,EAAkB9f,UAAYgf,GAAeuG,UAC5Ctb,KAAK2Z,IAAI0B,GAAcG,GAAAA,IAA6BH,EAAaD,EAAaK,GAAAA,IAA2B,CAC5G5F,EAAkB9f,QAAUgf,GAAeuG,SAC3C,MAAMI,EAAQ9E,EACd2F,GAAU9S,EAAAA,GAAAA,IAAMyR,GAAcQ,EAAOA,GACjCa,EAAU,IACZnX,EAAAA,EAAAA,KAAgB,KACdrP,EAAQ3D,MAAM6oC,YAAY,sBAA0B1e,GAAW5e,EAAW,GAAK,GAA7B,KAAoC,IAGvE,UAAfmd,EAAM7tB,MAAoB+S,KAAK2Z,IAAI4C,GAAWX,MAChD1R,EAAU4Q,GACV/E,EAAchgB,SAAU,EAE5B,GAEFmU,aACA,GACD,CAAC9R,EAAQE,EAASue,EAAaD,EAAcjZ,EAAUktC,KAE1DjiC,EAAAA,EAAAA,KAAgB,KACd,GAAIjL,EAAU,OACd,MAAMquC,EAAaF,IAEnBM,OAAOC,QAAQd,EAAWx1C,SAASwO,SAAQ/D,IAA2B,IAAzBnI,GAAQ,QAAEtC,IAAUyK,EAC/D,IAAKzK,EAAS,OAEd,IAAK0qC,IAOH,OANA1qC,EAAQ9G,UAAUid,OAAO3B,GAAuBA,GAA+BA,IAC/ExU,EAAQ3D,MAAM6oC,YAAY,sBAAuB,OACjDllC,EAAQ3D,MAAM6oC,YAAY,sBAAuB,OACjDllC,EAAQ3D,MAAM6oC,YAAY,0BAA2B,UACrDllC,EAAQ3D,MAAM6oC,YAAY,wBAAyBqR,OAAOhB,EAAW1f,gBAevE,IAAIrP,EAAU,EACVlkB,IAAWwyC,IACbtuB,GAnRqC,KAmRa+uB,EAAWzf,gBAC7D91B,EAAQ9G,UAAUC,IAAIqb,KAEpBlS,IAAW6xC,IACb3tB,EAvRqC,KAwRrCxmB,EAAQ9G,UAAUC,IAAIqb,KAGxBxU,EAAQ9G,UAAUC,IAAIqb,IACtBxU,EAAQ3D,MAAM6oC,YAAY,sBAAwB,GAAE+Q,EAAW3zC,IAAW,OAC1EtC,EAAQ3D,MAAM6oC,YAAY,sBAAwB,GAAE1e,QACpDxmB,EAAQ3D,MAAM6oC,YAAY,0BAtBpBiP,IAAkB7xC,EACbi0C,OAAOhB,EAAW1f,eAEvBvzB,IAAWwyC,EACNyB,OAAOhB,EAAWzf,iBAEpB,IAgBuD,GAChE,GACD,CAACqe,EAAezJ,EAAgBoK,EAAiBS,EAAY3tC,IAEhE,MAAM4uC,GAAsBvzC,EAAAA,EAAAA,IAAiB8hB,IAE3C,MAAMvhB,EAASuhB,EAAMvhB,OAEhBA,GAAWA,EAAOtK,UAAU62B,SAASvb,MAEtCsgC,IAAoBX,GACtBY,EAAmBZ,GACnBc,EAAoBb,IACXA,IAAmBY,GAC5BC,EAAoBb,GAEtBqB,GAAe,GAAM,IAGvB,OAAI7tC,EAEA9D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAgBtJ,IAAKoU,GACnCxb,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GACXtJ,IAAMA,GAAQwqC,EAAOxqC,EAAK4pC,IAE1BhxC,EAAAA,GAAA7K,cAACw9C,GAAK,CACJn0C,OAAQwyC,EACRtb,QAASwb,EACTrK,SAAUA,EACV3oC,WAAYuzC,EAAW5f,YACvB8U,iBAAkB2K,EAClB5K,kBAAmB2K,EACnB7M,kBAAmBA,EACnB9gC,kBAAmBA,EACnBy7B,cAAeA,EACfyH,eAAgBA,EAChBnoC,QAASA,EACT6E,SAAUA,MAiElBtD,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GACXtJ,IAAKoU,EACLjjB,MAAQ,yBAAwBk5C,EAAW11B,QAC3C62B,gBAAiBF,GAEjB1yC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAiB7P,QAASpC,IACzCozC,EAAiBr+C,OAAS,GACzBwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAA+BnY,MAAQ,WAAUk5C,EAAW3f,MAAMt1B,aAEnFq1C,EAAiBnrC,KAAI,CAAClI,EAAQtH,IACzBsH,IAAWwyC,EA3CrB,SAAqBxyC,GACnB,MAAMjG,EAAQuL,OAAWpP,GAAYm+C,EAAAA,GAAAA,GAClC,UAASpB,EAAW5f,YAAY11B,UAChC,yBAAwBs1C,EAAW5f,YAAYr1B,YAGlD,OACEwD,EAAAA,GAAA7K,cAAA,OACE0R,IAAKrI,EACL4I,IAAMA,GAAQwqC,EAAOxqC,EAAK5I,GAC1B2B,WAAW+I,EAAAA,GAAAA,GAAewH,GAAcA,IACxCnY,MAAOA,GAEPyH,EAAAA,GAAA7K,cAACw9C,GAAK,CACJn0C,OAAQA,EACRk3B,QAASwb,EACTrK,SAAUA,EACV3oC,WAAYuzC,EAAW5f,YACvB8U,iBAAkB2K,EAClB5K,kBAAmB2K,EACnB7M,kBAAmBA,EACnB9gC,kBAAmBA,EACnBy7B,cAAeA,EACfyH,eAAgBA,EAChBnoC,QAASA,EACT6E,SAAUA,IAIlB,CAeewvC,CAAY9B,GAtE3B,SAA4BxyC,EAAgBtH,EAAeqb,GACzD,MAAMha,GAAQs6C,EAAAA,GAAAA,GACX,UAASpB,EAAW3f,MAAM31B,UAC1B,WAAUs1C,EAAW3f,MAAMt1B,YAExB2D,GAAY+I,EAAAA,GAAAA,GAChBwH,GACAA,GACC,SAAQ6B,KAGX,OACEvS,EAAAA,GAAA7K,cAAA,OACE0R,IAAKrI,EACL4I,IAAMA,GAAQwqC,EAAOxqC,EAAK5I,GAC1B2B,UAAWA,EACX5H,MAAOA,GAEPyH,EAAAA,GAAA7K,cAAC49C,GAAY,CACX7sB,MAAMS,EAAAA,EAAAA,MAAWwc,EAAAA,EAAAA,MAAa3kC,GAC9BsxC,YAAaY,IAAWlyC,KAIhC,CAiDaw0C,CAAmBx0C,EAAQtH,EAAOA,EAAQ66C,KAIzD,KCjde,SAASkB,KAAwC,IAAvBC,EAASt2C,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAFhC,EAGhB,MAAOu2C,EAAeC,IAAoBr0C,EAAAA,EAAAA,KAAS,IAC5Cs0C,EAASC,IAAcv0C,EAAAA,EAAAA,KAAS,GASvC,MAAO,CAAEo0C,gBAAeE,UAASE,cAPZp0C,EAAAA,EAAAA,IAAiBM,IACpC,MAAM,aAAEo+B,EAAY,UAAE9mC,EAAS,aAAE2R,GAAiBjJ,EAAEC,OAEpD0zC,EAAiBr8C,EAAYm8C,GAC7BI,EAAWzV,EAAe9mC,EAAY2R,EAAewqC,EAAU,IAInE,C,0ECjBA,UAAgB,aAAa,WAAW,UAAY,WAAW,qBAAqB,WAAW,iBAAmB,WAAW,KAAO,WAAW,aAAe,WAAW,gBAAgB,WAAW,aAAe,WAAW,OAAS,WAAW,QAAU,WAAW,aAAa,WAAW,UAAY,WAAW,iBAAiB,WAAW,cAAgB,WAAW,SAAW,WAAW,KAAO,WAAW,cAAc,WAAW,WAAa,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,OAAS,WAAW,cAAc,WAAW,WAAa,WAAW,SAAW,WAAW,OAAS,WAAW,YAAc,WAAW,kBAAkB,WAAW,cAAgB,WAAW,OAAS,WAAW,QAAU,WAAW,MAAQ,WAAW,WAAa,WAAW,sBAAsB,WAAW,kBAAoB,YCiCn2BM,GAAwB,IAAM7qC,EAAAA,EAoKpC,IAAerK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAqB,CAACC,EAAM2D,KAAoB,IAAlB,UAAEouC,GAAWpuC,EAG7D,MAAO,CACL6gB,MAHWS,EAAAA,EAAAA,KAAWjlB,EAAQ+xC,EAAUj1C,QAIxCk1C,mBAAoBhyC,EAAOiyC,UAAUD,mBACtC,GANiBjyC,EAjKF7H,IAIW,IAJV,UACjB65C,EAAS,KACTvtB,EAAI,mBACJwtB,GACsB95C,EACtB,MAAM,SACJklC,EAAQ,iBACR8U,EAAgB,YAChBC,EAAW,UACXC,EAAS,cACTC,EAAa,gBACbC,EAAe,aACfvvB,EAAY,gBACZma,EAAe,oBACfqV,IACEr1C,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,KAEPqX,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC,MAAM,KAAE/L,GAASqgD,EAEjB,GAAa,WAATrgD,EAMF,OALA6gD,SACArV,EAAgB,CACdpgC,OAAQi1C,EAAUj1C,OAClBk3B,QAAS+d,EAAU/d,UAKvBke,IAEAn2C,YAAW,KACI,SAATrK,EACF0rC,EAAS,CAAEloC,GAAI68C,EAAUj1C,SACP,YAATpL,GACTqxB,EAAa,CAAErlB,OAAQq0C,EAAUj1C,OAAQoN,UAAW6nC,EAAU7nC,WAChE,GA1C2B,IA2CD,IAGxBsoC,GAAiBz5C,EAAAA,EAAAA,KAAQ,KAC7B,KAAK+G,EAAAA,EAAAA,KAASiyC,EAAUj1C,QAAS,OACjC,MAAM,OAAEA,EAAM,kBAAE21C,EAAiB,cAAEC,GAAkBX,EAC/C/O,EAAOxe,GACP,UAAEmuB,GAAc3P,GAAQ,CAAC,EACzB4P,GAAWxY,EAAAA,EAAAA,KAAgB4I,GAE3BjM,EAAmC,GAkDzC,OAhDK2b,IACED,EAUH1b,EAAQzyB,KAAK,CACXuuC,QAASA,KACPV,EAAY,CAAEhkB,OAAQrxB,EAAQg2C,eAAe,IAC7CR,EAAgB,CAAEnkB,OAAQrxB,EAAQ21C,mBAAmB,GAAQ,EAE/Dp0C,MAAOJ,EAAK,kBAAmB20C,GAC/BruC,KAAM,eAfRwyB,EAAQzyB,KAAK,CACXuuC,QAASA,KACPT,EAAU,CAAEjkB,OAAQrxB,EAAQg2C,eAAe,IAC3CR,EAAgB,CAAEnkB,OAAQrxB,EAAQ21C,mBAAmB,GAAO,EAE9Dp0C,MAAOJ,EAAK,gBAAiB20C,GAC7BruC,KAAM,eAcRouC,EACF5b,EAAQzyB,KAAK,CACXuuC,QAASA,KACPR,EAAc,CAAElkB,OAAQrxB,GAAS,EAEnCuB,MAAOJ,EAAK,iBACZsG,KAAM,cACNK,aAAa,IAGfmyB,EAAQzyB,KAAK,CACXuuC,QAASA,KACHH,GACFP,EAAY,CAAEhkB,OAAQrxB,IACtBw1C,EAAgB,CAAEnkB,OAAQrxB,EAAQ41C,eAAe,MAEjDN,EAAU,CAAEjkB,OAAQrxB,IACpBw1C,EAAgB,CAAEnkB,OAAQrxB,EAAQ41C,eAAe,IACnD,EAEFr0C,MAAOJ,EAAKy0C,EAAgB,UAAY,aACxCnuC,KAAMmuC,EAAgB,OAAS,cAC/B9tC,aAAc8tC,IAIX3b,CAAO,GACb,CAAC94B,EAAM8zC,EAAWvtB,IAEfuuB,EAA0C,SAAnBhB,EAAUrgD,KAAkB,eAClC,YAAnBqgD,EAAUrgD,KAAqB,UAAY,OACzCshD,EAAuC,YAAnBjB,EAAUrgD,MAAyC,WAAnBqgD,EAAUrgD,KAE9DuhD,GAASl6C,EAAAA,EAAAA,KAAQ,KACrB,MAAMm6C,EAAgC,WAAnBnB,EAAUrgD,MAAqBqgD,EAAUthB,MAAMQ,aAAaiiB,WACzEnvB,EAAQ,EAACovB,EAAAA,GAAAA,GAAiBl1C,EAAuB,IAAjB8zC,EAAUtuB,OAKhD,OAJIyvB,GACFnvB,EAAMzf,KAAKrG,EAAK,eAGX8lB,EAAMpM,KAAM,MAAa,GAC/B,CAAC1Z,EAAM8zC,IAEV,OACEzzC,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAK4sC,EAAUj1C,OACf2B,WAAW+I,EAAAA,GAAAA,GACT,iCACAwH,GAAOokC,eACNrB,EAAUW,eAAiBX,EAAUU,oBAAsBzjC,GAAOqkC,SAErEl0C,QAASoW,EACT+9B,aAAiC,SAAnBvB,EAAUrgD,MAAmBqgD,EAAUjQ,SACnDxjC,EAAAA,GAAA7K,cAAC8/C,GAAAA,EAAmB,CAClBzR,SAAUiQ,EAAUjQ,SACpBrjC,UAAWuQ,GAAOwkC,aAClB73C,KAAMm2C,GACNE,mBAAoBA,EACpByB,eAAa,SAEbzgD,EACJw/C,eAAgBA,EAChBkB,mBAAiB,EACjBC,oBAAqB3kC,GAAO4kC,aAE3B9zC,EAAAA,EAAAA,KAASiyC,EAAUj1C,QAClBwB,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACdp1C,WAAW+I,EAAAA,GAAAA,GAAewrC,GAAqBhkC,GAAO8kC,mBACtD3lB,OAAQ4jB,EAAUj1C,OAClBi3C,kBAAgB,EAChBd,OAAQA,EACRF,WAAYA,EACZ7F,WAAS,EACTzX,eAAa,IAGfn3B,EAAAA,GAAA7K,cAACugD,GAAAA,EAAa,CACZv1C,WAAW+I,EAAAA,GAAAA,GAAewrC,GAAqBhkC,GAAO8kC,mBACtDp2C,OAAQq0C,EAAUj1C,OAClBm2C,OAAQA,EACRF,WAAYA,EACZ7F,WAAS,IAGJ,KCgFf,IAAetwC,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAYC,IAC9B,MAAM,UAAE+iC,GAAc/iC,GACdgyB,aAAa,UAAEmR,KAAgB9iC,EAAAA,EAAAA,KAAeL,IAChD,QACJg0B,EAAO,MAAE2M,EAAK,WAAEsT,EAAU,UAAE7uB,GAC1B+d,GAAa,CAAC,EACZ1S,EAAQuD,GAAUiD,EAAAA,EAAAA,KAAgBj3B,EAAQA,EAAO8kB,cAAgBkP,QAAWhhC,EAElF,MAAO,CACLghC,UACA2M,QACA+D,oBAAqB3B,EAAW4B,kBAAoB5B,EAAW6B,yBAC/DnU,MAAOA,GAAS,YAAaA,EAAQA,OAAQz9B,EAC7CihD,aACA7uB,YACA4sB,mBAAoBhyC,EAAOiyC,UAAUD,mBACrCthB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GAClD,GAjBiBD,EA/NpB,SAAuB7H,GAOR,IAPS,MACtBu4B,EAAK,oBACLiU,EAAmB,MACnB/D,EAAK,WACLsT,EAAU,UACV7uB,EAAS,qBACTsL,GACWx4B,EACX,MAAM,kBACJg8C,EAAiB,oBAAE3B,EAAmB,gBAAE4B,IACtCj3C,EAAAA,EAAAA,OAEGk3C,EAAiBC,EAAkBC,IAAsBnyC,EAAAA,EAAAA,IAAQ,IACjEoyC,EAAmBC,EAAoBC,IAAwBtyC,EAAAA,EAAAA,IAAQ,IACvEuyC,EAAOC,IAAYt3C,EAAAA,EAAAA,IAAS,IAE7BY,GAAOC,EAAAA,EAAAA,KAEPrB,EAASZ,QAAQw0B,GACjBmkB,EAAY34C,QAAQw0B,GAAOhN,OAAUgN,EAAOhN,KAAOihB,GAAuB9R,EAAAA,GAAAA,OAC1E,WAAEkO,EAAa,EAAC,eAAEE,EAAiB,GAAMvQ,GAAOkQ,OAAS,CAAC,EAE1DkU,EAAyBpkB,GAAO4Q,UAAYP,EAAagU,EAAAA,IACzDC,EAA4B/T,EAAiBgU,EAAAA,IAC7CC,EAAmBnU,EAAaoU,EAAAA,IAChCC,EAAYN,GAA0BE,GAA6BE,GAEzEz5C,EAAAA,EAAAA,KAAU,KACHqB,IACH83C,EAAS,IACTL,IACAE,IACF,GACC,CAAC33C,IAEJ,MAAMu4C,GAAev5B,EAAAA,GAAAA,IAAqB,KACxCs4B,EAAgB,CAAE/uB,WAAW,GAAO,GACnC,GAvCoB,KAuCE,IAEzB5pB,EAAAA,EAAAA,KAAU,KACR45C,GAAc,GACb,CAAChB,EAAiBG,EAAmBG,EAAOU,IAE/C,MAAMC,GAAct8C,EAAAA,EAAAA,KAAQ,IACnB4nC,GAAO2U,KAkKlB,SAA2Bf,GACzB,MAAO,CAACgB,EAAqBC,KAC3B,GAAIjB,EAAmB,CACrB,MAAMkB,EAAuB,SAAXF,EAAE7jD,MAAmB6jD,EAAEzT,SACnC4T,EAAuB,SAAXF,EAAE9jD,MAAmB8jD,EAAE1T,SACzC,GAAI2T,IAAcC,EAChB,OAAQ,EAEV,IAAKD,GAAaC,EAChB,OAAO,CAEX,CAEA,OAAOF,EAAE/xB,KAAO8xB,EAAE9xB,IAAI,CAE1B,CAjLuBkyB,CAAkBpB,KACpC,CAACA,EAAmB5T,IAEjBiV,EAAoBP,GAAavjD,OAAmC,EAA1B2S,KAAK8Z,IAAIuiB,EAAY,GAE/D+U,EAAkB55C,QAAQo5C,GAAavjD,SAAWujD,EAAavjD,OAASgvC,GAAc8T,EAEtFkB,GAAiBr4C,EAAAA,EAAAA,IAAgB,KAChCgzB,GAAOv7B,SAAqBlC,IAAfihD,GAClBC,EAAkB,CAChBp3C,OAAQ2zB,EAAM3zB,OACdk3B,QAASvD,EAAMv7B,GACf0Y,OAAQqmC,EACRM,kBAAmBA,QAAqBvhD,EACxCohD,gBAAiBA,QAAmBphD,EACpC0hD,SACA,KAGE,aAAE7C,EAAY,cAAEJ,GAAkBF,KAElClmB,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClC80C,GAAqB,IAGjBwD,GAAkEh9C,EAAAA,EAAAA,KAAQ,IACvE4K,IAAA,IAAC,UAAEC,EAAW/G,OAAQm5C,GAAYryC,EAAA,OACvCrF,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLi3C,OAAK,EACLt6C,KAAK,OACLsD,MAAM,cACNR,WAAW+I,EAAAA,GAAAA,IAAgBwuC,GAAc,SAAUhnC,GAAOknC,WAAYlnC,GAAOmnC,WAC7EC,MAAOJ,EACP72C,QAASyE,EACTE,UAAW7F,EAAK,WAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GACZ,OACA+sC,EAAoB,qBAAuB,cAC3CvlC,GAAOqnC,YAGT/3C,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,iBAAkBwH,GAAOsnC,YAC/C,GAEV,CAAC/B,EAAmBt2C,IAEvB,OACEK,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASsuB,EACT5sB,UAAU,uBACVw0B,iBAAkBjkB,GAAOunC,UACzBrjB,QAAM,GAELiiB,GACC72C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO6rB,QACpBga,GACCv2C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOwnC,eACrBl4C,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,IAAgB4sC,GAAmBplC,GAAOlQ,SAAUkQ,GAAOmnC,WACtEx6C,KAAK,OACLsD,MAAM,oBACNg3C,OAAK,EACL92C,QAASm1C,GAERr2C,EAAK,eAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GAAe4sC,GAAmBplC,GAAOlQ,SAAUkQ,GAAOmnC,WACrEx6C,KAAK,OACLsD,MAAM,oBACNg3C,OAAK,EACL92C,QAASk1C,GAERp2C,EAAK,cAIX82C,GACCz2C,EAAAA,GAAA7K,cAACoR,GAAAA,EAAY,CACXpG,UAAWuQ,GAAOsmC,KAClBxwC,QAASixC,EACThxC,UAAU,SAEVzG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,gBAAgBpF,QAASq1C,GACrCv2C,EAAK,mBACLs2C,GACCj2C,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,kBAAmBwH,GAAOynC,OAAQ,oBAGnEn4C,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASpF,QAASs1C,GAC9Bx2C,EAAK,eACJs2C,GACAj2C,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,kBAAmBwH,GAAOynC,OAAQ,qBAKtExB,GACC32C,EAAAA,GAAA7K,cAACijD,GAAAA,EAAW,CAACj4C,UAAWuQ,GAAO2nC,OAAQ94C,MAAO62C,EAAO71C,SAAU81C,KAIrEr2C,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAO3K,SAAUotC,GAAiBziC,GAAO4nC,YAAa,iBAChFC,SAAUhF,GAET+C,IAAcxvB,IAAcsvB,GAASz4C,SAASo5C,GAAavjD,SAC1DwM,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOsY,KAAMtY,GAAO8nC,gBAChDryB,EAAAA,GAAAA,GACCxmB,EAAKyyB,EAAuB,qBAAuB,oBACnD,CAAC,kBAAmB,YAIxBtL,GAAanpB,QAAQy4C,EAAM5iD,UAAYujD,GAAavjD,QACpDwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOsY,MACpBrpB,EAAK,mCAGVK,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbC,MAAO3B,EACP4B,WAAYnB,GAEXT,GAAarwC,KAAKkyC,IACjB,MAAMC,EAAgC,YAAdD,EAAKxlD,KAAqBwlD,EAAKhtC,UACrC,WAAdgtC,EAAKxlD,KAAoBwlD,EAAKljB,QAAU,OAC5C,OACE11B,EAAAA,GAAA7K,cAAC2jD,GAAS,CAACjyC,IAAM,GAAE+xC,EAAKp6C,UAAUo6C,EAAKzzB,QAAQ0zB,IAAmBpF,UAAWmF,GAAQ,IAGxF9xB,GAAaiyB,MAAMnqC,KAAK,CAAEpb,OAAQ8jD,IAAoB5wC,KAAI,CAACsyC,EAAGC,IAC7Dj5C,EAAAA,GAAA7K,cAAC0/B,GAAAA,EACC,CACAhuB,IAAM,eAAcoyC,IACpB94C,UAAU,+DACViT,UAAQ,GAERpT,EAAAA,GAAA7K,cAAC+jD,GAAAA,EAAmB,SAGvB3B,GACCv3C,EAAAA,GAAA7K,cAAA,OAAK0R,IAAI,oBAAoB1G,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOsY,KAAMtY,GAAOyoC,aACxEx5C,EAAK,sCAKdK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOsrB,OAAQ,mBAC5Ch8B,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GAAe,wBAAyBwH,GAAOpF,OAC1D1K,QAAM,EACNC,QAASksB,GAERptB,EAAK,WAKhB,KCrEA,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAYC,IAC9B,MAAM,4BACJ0kB,EAA6BsN,aAAa,QACxCgC,EAAO,OAAEl3B,EAAM,mBAAEsmC,EAAkB,OAAE7vC,GACtC,YAAEmkD,IACDr3C,EAAAA,EAAAA,KAAeL,GACbywB,EAAQ3zB,GAAUk3B,GAAUiD,EAAAA,EAAAA,KAAgBj3B,EAAQlD,EAAQk3B,QAAWhhC,EACvE+kB,GAAgB8M,EAAAA,EAAAA,KAA+B7kB,EAAQ,yBAEvD8iC,EAAoB7mC,QAAQy7C,GAElC,MAAO,CACL76C,QAAQuyC,EAAAA,EAAAA,KAAwBpvC,GAChC0kB,8BACAoe,oBACAhmC,OAAQA,EACRk3B,UACAvD,QACAl9B,SACAwkB,gBACAqrB,qBACD,GArBiBrjC,EArIpB,SAAoB7H,GAUL,IAVM,OACnB2E,EAAM,OACNC,EAAM,QACNk3B,EAAO,MACPvD,EAAK,OACLl9B,EAAM,4BACNmxB,EAA2B,cAC3B3M,EAAa,mBACbqrB,EAAkB,kBAClBN,GACW5qC,EACX,MAAM,iBAAEg6C,EAAgB,wBAAEyF,EAAuB,YAAEC,IAAgB16C,EAAAA,EAAAA,MAE7De,GAAOC,EAAAA,EAAAA,MACN25C,EAAeC,IAAoBz6C,EAAAA,EAAAA,SAAmCrK,IACtEgP,EAAmBC,EAAiBC,IAAoBC,EAAAA,EAAAA,IAAQ,IAEjE,cAAElI,EAAa,UAAEi3B,GAAcV,GAAcC,GAC7Csf,EAAatgB,KACbsoB,GAAajxB,EAAAA,EAAAA,GAAsBjqB,GACnC0rB,GAAoBzB,EAAAA,EAAAA,GAAsB7sB,GAC1Cy1C,GAAa5oB,EAAAA,EAAAA,GAAsBhqB,GACnCwrB,GAAaxB,EAAAA,EAAAA,GAAsBvzB,GACnCyzB,EAAmB/qB,QAAQ8b,IAAkB2M,IAEnDlpB,EAAAA,EAAAA,KAAU,KACHqB,IACHi7C,OAAiB9kD,GACjBkP,IACF,GACC,CAACrF,KAEJrB,EAAAA,EAAAA,KAAU,KACR,IAAKqB,EACH,QAGF6qB,EAAAA,EAAAA,MACA,MAAMC,GAAuBC,EAAAA,EAAAA,MAE7B,MAAO,MACLC,EAAAA,EAAAA,MACAF,GAAsB,CACvB,GACA,CAAC9qB,IAEJ,MAAMwuB,GAAcxrB,EAAAA,EAAAA,KAAY,KAC9BqyC,GAAkB,GACjB,CAACA,IAEE8F,GAAwBv6C,EAAAA,EAAAA,IAAiBw6C,IAC7CH,EAAiBG,GACjBh2C,GAAiB,IAGbi2C,GAAyBz6C,EAAAA,EAAAA,IAAgB,KAC7CyE,IACA41C,OAAiB9kD,EAAU,IAGvBmlD,GAAoB16C,EAAAA,EAAAA,IAAgB,KACnCu2B,GACL4jB,EAAY,CAAE5jB,UAASl3B,UAAS,IA8BlC,OA3BAtB,EAAAA,EAAAA,KAAU,IAAOqB,GAAS+uB,EAAAA,EAAAA,IAAsB,KAC9CP,GAAa,SACVr4B,GAAY,CAACq4B,EAAaxuB,KAE/BrB,EAAAA,EAAAA,KAAU,KACJwrB,IAAqB+wB,GAAcl7C,GAAUC,GAAUo0B,QAAwBl+B,IAAXO,KACtEk1B,EAAAA,EAAAA,IArFqB,IAqFoBC,EAAAA,K1BvGxC,SACLyF,EACA56B,EACA6kD,EACAn+C,EACAuC,GAEA,MAAQ9F,QAASiyB,GAAcpzB,GAAShC,EAAQ46B,GAChD,IAAKxF,EACH,OAEF,MAAQluB,MAAO6gB,EAAaxgB,OAAQugB,GAAiBuN,EAAAA,EAAWztB,MAChE,IAAMV,MAAOuuB,EAASluB,OAAQmuB,GAAazsB,EAE3C,MAAM4F,EAAWkZ,GAhBE,IAkBnB,GAAIlZ,EAAU,CACZ4mB,EAAU1N,EAAc,EAAIqS,GAC5B1E,EAAW5N,EAAeqS,GAAgB,EAAIC,GAE9C,MAAM0qB,EAAiBC,iBAAiBnmD,SAASomD,iBAAiBC,iBAAiB,sBAC/EH,IACFpvB,GAAYwvB,WAAWJ,GAE3B,CAEA,MAAMlvB,EAAS/mB,EAAWurB,IAAiBrS,EAAc0N,GAAW,EAC9DI,EAAQhnB,EAAWurB,IAAiBtS,GAAgB4N,EAAWyE,KAAkB,GAGrFlZ,IAAK+U,EAASjc,KAAMkc,EAAU/uB,MAAOgvB,EAAW3uB,OAAQ4uB,GACtDf,EAAUhb,wBAERsc,EAAkBT,EAAWC,EAAY,GAAMN,EAASH,EAAU,GAClEkB,EAAkBX,EAAUG,EAAa,GAAMN,EAAQH,EAAW,GAClEkB,EAAaV,EAAYT,EACzBoB,EAAaV,EAAaT,GAEhCpf,EAAAA,EAAAA,KAAgB,KACd,MAAMrW,EAAQH,GAAY4G,GAAiBm+C,GAAQn+C,IACnDowB,EAAAA,EAAAA,IAAY72B,EAAO,CACjBghB,IAAM,GAAE4U,MACR9b,KAAO,GAAE6b,MACT1uB,MAAQ,GAAEuuB,MACVluB,OAAS,GAAEmuB,MACX3M,UAAY,eAAc2N,QAAqBC,iBAA8BC,MAAeC,OAG9F,MAAMx1B,EAAYzC,SAASw4B,eAAe,eAC1C/1B,EAAUR,YAAYZ,GACtBrB,SAASue,KAAKhd,UAAUC,IAAI,oBAE5BkW,EAAAA,EAAAA,KAAgB,MACdwgB,EAAAA,EAAAA,IAAY72B,EAAO,CACjB8oB,UAAW,KAGbvgB,YAAW,MACT8N,EAAAA,EAAAA,KAAgB,KACVjV,EAAU21B,SAAS/2B,IACrBoB,EAAU41B,YAAYh3B,GAExBrB,SAASue,KAAKhd,UAAUid,OAAO,kBAAkB,GACjD,GApEiB,IAqEG+X,EAAAA,IAAoB,GAC5C,GAEN,C0BqCM+B,CAAe3tB,EAAQvJ,EAAQ29B,EAAWj3B,EAAe81C,EAAW5f,cAElEnJ,GAAoB+wB,IAAel7C,GAAU6yC,GAAcnnB,QAAoCv1B,IAAfs1B,KAClFG,EAAAA,EAAAA,IAzFqB,IAyFoBC,EAAAA,K1BtCxC,SACLyF,EACA56B,EACA0G,GAEA,MAAQvD,QAASg0B,GAAYn1B,GAAShC,EAAQ46B,GAExCxF,EAAYx2B,SAASw4B,eAAe,eAAgBl2B,cACvD,IAAGua,OAAuBA,QAAkBA,OAAuBA,MAEtE,IAAK2Z,IAAc+B,EACjB,OAEF,MACElW,IAAK+U,EAASjc,KAAMkc,EAAU/uB,MAAOgvB,EAAW3uB,OAAQ4uB,GACtDf,EAAUhb,yBAEZ6G,IAAK4U,EAAO9b,KAAM6b,EAAQ1uB,MAAOuuB,EAASluB,OAAQmuB,GAChDyB,EAAQ/c,wBAEN+qC,EAAgBvvB,EAASH,EAAU,GAAMQ,EAAWC,EAAY,GAChEkvB,EAAgBvvB,EAAQH,EAAW,GAAMM,EAAUG,EAAa,GAChEkvB,EAAW5vB,EAAUS,EACrBovB,EAAW5vB,EAAWS,GAE5B7f,EAAAA,EAAAA,KAAgB,KACd,MAAMrW,EAAQH,GAAY4G,IAC1BowB,EAAAA,EAAAA,IAAY72B,EAAO,CACjBghB,IAAM,GAAE+U,MACRjc,KAAO,GAAEkc,MACT/uB,MAAQ,GAAEgvB,MACV3uB,OAAS,GAAE4uB,QAGb,MAAMovB,EAASzlD,GAAYq3B,EAAQz2B,SAAKjB,GAAW,GAC7C+lD,EAAaxvB,EAAUG,EAAa,EAAKD,EAAY,GAC3DY,EAAAA,EAAAA,IAAYyuB,EAAQ,CAClBtkC,IAAM,GAAEukC,MACRzrC,KAAO,GAAEkc,MACT/uB,MAAQ,GAAEgvB,MACV3uB,OAAS,GAAE2uB,QAGb,MAAM70B,EAAYzC,SAASw4B,eAAe,eAC1C/1B,EAAUR,YAAYZ,GACtBrB,SAASue,KAAKtc,YAAY0kD,GAC1B3mD,SAASue,KAAKhd,UAAUC,IAAI,oBAE5BkW,EAAAA,EAAAA,KAAgB,MACdwgB,EAAAA,EAAAA,IAAY72B,EAAO,CACjB8oB,UAAY,eAAco8B,QAAmBC,iBAA4BC,MAAaC,QAGxFxuB,EAAAA,EAAAA,IAAYyuB,EAAQ,CAClBx8B,UAAY,eAAco8B,QAAmBC,iBAA4BC,KACzEztB,QAAS,MAGXpvB,YAAW,MACT8N,EAAAA,EAAAA,KAAgB,KACVjV,EAAU21B,SAAS/2B,IACrBoB,EAAU41B,YAAYh3B,GAGpBrB,SAASue,KAAK6Z,SAASuuB,IACzB3mD,SAASue,KAAK8Z,YAAYsuB,GAG5B3mD,SAASue,KAAKhd,UAAUid,OAAO,kBAAkB,GACjD,GA/IiB,IAgJG+X,EAAAA,IAAoB,GAC5C,GAEN,C0BlCM0C,CAAeskB,EAAYpnB,EAAYC,GACzC,GACC,CACDvB,EACA/sB,EACAsuB,EACA1rB,EACAk7C,EACAhI,EAAW5f,YACXe,EACAp0B,EACA4yC,EACAn8C,EACA+0B,IAIAhqB,EAAAA,GAAA7K,cAACsb,EAAAA,EAAc,CACb7Z,GAAG,cACHuJ,UAAWuQ,GACXnS,OAAQA,EACRowB,0BAAwB,EACxBC,kBAAmBxI,GAEnBpmB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAiB7P,QAASksB,IAC1C/sB,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAWuQ,GACXnL,OAAK,EACLlI,KAAK,UACLsD,MAAM,oBACN6E,UAAW7F,EAAK,SAChBkB,QAASksB,GAET/sB,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,mBAAoB,oBAGnDlJ,EAAAA,GAAA7K,cAACulD,GAAW,CACVn8C,OAAQA,EACRimC,kBAAmBA,EACnB9gC,kBAAmBA,EACnBJ,SAAUu2C,EACVp7C,QAASsuB,EACT8Z,SAAU6S,IAGZ15C,EAAAA,GAAA7K,cAACwlD,GAAuB,CACtBp8C,OAAQmF,EACRyuB,MAAOonB,EACP96C,QAASm7C,IAEX55C,EAAAA,GAAA7K,cAACylD,GAAc,MACf56C,EAAAA,GAAA7K,cAAC0lD,GAAgB,MACjB76C,EAAAA,GAAA7K,cAAC2lD,GAAa,CAACv8C,OAAQumC,EAAoBrmC,QAAS46C,IAG1D,K,4HClIA,MAEM0B,GAAkB,KAAOpyC,EAAAA,EACzBqyC,GAAkB,wBAqRxB,IAAe18C,EAAAA,EAAAA,KAlRwB1E,IAYjC,IAZkC,OACtC2E,EAAM,cACNioB,EAAa,cACby0B,EAAa,OACb5C,EAAM,kBACN6C,EAAiB,UACjB/6C,EAAS,SACTg7C,EAAQ,eACRC,EAAc,mBACdC,EAAkB,QAClB58C,EAAO,oBACPC,GACD9E,EACC,MAAM,WAAE0hD,IAAe18C,EAAAA,EAAAA,MAEjBe,GAAOC,EAAAA,EAAAA,KAEP4b,GAAezf,EAAAA,EAAAA,IAAuB,MAEtCw/C,GAAoBx/C,EAAAA,EAAAA,IAAuB,MAE3Cy/C,GAAYz/C,EAAAA,EAAAA,IAAyB,MAErC0/C,GAAiB1/C,EAAAA,EAAAA,IAAyB,OACzC2/C,EAAaC,IAAWC,EAAAA,GAAAA,GAAkBT,EAAUF,EAAet9C,QAAQ06C,KAC3EwD,EAASC,IAAc/8C,EAAAA,EAAAA,SAA6BrK,IACpDqnD,EAAaC,IAAkBj9C,EAAAA,EAAAA,IAAiB,IACjD+vB,EAAY+sB,EAhCK,EADD,EAkChBI,EAAiBhB,EAAe/sB,QAAQwtB,EAAa,IAErDQ,GAAc/8C,EAAAA,EAAAA,IAAgB,KAClCi8C,EAAe,GAAG,KAEpBe,EAAAA,GAAAA,GAAoBX,EAAWj9C,GAvCT,IAuCmBuwB,EAA+BotB,IACxEC,EAAAA,GAAAA,GAAoBV,EAAgBl9C,GAvCb,IAuCuBuwB,GAE9C,MAAMstB,GAAmBj9C,EAAAA,EAAAA,IAAiBuC,IACxC,GAAKm6C,EAIL,OAAOQ,EAAAA,EAAAA,KAAa36C,EAAQm6C,EAAQ,IAGhCS,GAAkBC,EAAAA,GAAAA,GAAYH,IAE7BI,EAAUC,IAAUhiD,EAAAA,EAAAA,KAAQ,KACjC,MAAMiH,GAASyhC,EAAAA,EAAAA,MACTuZ,EAAYh7C,EAAOi7C,MAAM5jB,KACzB6jB,EAAmBl7C,EAAOi7C,MAAME,aAEhCn3B,EAAOg3B,EAAUb,GAEvB,IAAKn2B,IAAS42B,EACZ,MAAO,MAAC5nD,OAAWA,GAGrB,MAAMooD,EAAcf,EAAY9d,cAE1BnyB,EAASwwC,EACX/J,OAAOwK,OAAOT,GAAiBpK,QAAO,CAAC8K,EAAKC,OAE1CC,EAAAA,EAAAA,KAAiBx3B,EAAMu3B,OAAOvoD,EAAWkoD,EAAiBf,KACrDiB,IAAeG,EAAMl9C,MAAMk+B,cAAcpnC,SAASimD,KAEvDE,EAAIC,EAAMrmD,IAAMqmD,GAGXD,IACN,CAAC,GACFV,EAEJ,MAAO,CAAC/J,OAAO4K,KAAKrxC,GAAQpF,IAAIsR,QAASlM,EAAO,GAC/C,CAAC+vC,EAASE,EAAaO,IAEpBc,GAAwBj+C,EAAAA,EAAAA,IAAgB,KAC5C28C,OAAWpnD,GACXsnD,EAAe,GAAG,IAGdqB,GAAqBl+C,EAAAA,EAAAA,IAAiBM,IAC1C27C,EAAe37C,EAAE2X,cAAc7X,MAAM,IAGjC+9C,GAA0Bn+C,EAAAA,EAAAA,IAAiBM,IAC/Cu8C,EAAev8C,EAAE2X,cAAc7X,MAAM,IAGjC2Y,GAAgBqlC,EAAAA,GAAAA,GAA0B/hC,EAAcjd,GAASrH,IACrE,GAAIwkD,GAAeA,EAAYloD,OAAS,EAAG,CACzC,MAAMkpD,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAE9B35B,EAASs8C,GAAuB,IAAXxkD,EAAe,EAAIA,GACxCwuB,EAAOg3B,EAAUt9C,GACnBsmB,GAAM83B,SACHlB,GAAiBhB,EAAW,CAAEl8C,WACnC08C,EAAW18C,IAEXi8C,EAAmBj8C,EAEvB,IACE,IAAG47C,MAAmB,GAEpByC,GAAqBF,EAAAA,GAAAA,GAA0BhC,EAAmBh9C,GAASrH,IAC3EslD,GAAUhpD,QACZ6nD,EAAmBQ,EAAUW,GAAoB,IAAXtlD,EAAe,EAAIA,GAC3D,GACE,IAAG8jD,MAAmB,GAEpB/jC,GAAc9X,EAAAA,EAAAA,IAAiBC,IACnC,MAAMs9C,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAC9BrT,EAAOg3B,IAAYt9C,GACrBsmB,GAAM83B,SACHlB,GAAiBhB,EAAW,CAAEl8C,WACnC08C,EAAW18C,GACX88C,KAEAb,EAAmBj8C,EACrB,IAGIs+C,GAAiBn8C,EAAAA,EAAAA,KAAY,CAAC3K,EAAYM,KAC9C,MAAMwK,GAASyhC,EAAAA,EAAAA,MACTjd,GAAOS,EAAAA,EAAAA,KAAWjlB,EAAQ9K,GAChC,IAAKsvB,EACH,OAGF,MAAMy3B,EAASz3B,KAAS03B,EAAAA,GAAAA,IAAc13B,GAAQA,EAAKy3B,YAASjpD,GAgBrDowB,EAAU+4B,GAdjB,WACE,IAAK33B,EAAM,OACX,GAAIA,EAAKtvB,KAAO4vB,EAAe,MAAO,CAAC7mB,EAAK,sBAC5C,IAAIi+C,EAAAA,GAAAA,IAAc13B,GAChB,MAAO,EAAC43B,EAAAA,EAAAA,KAAen+C,EAAMumB,IAG/B,MAAM63B,GAAaC,EAAAA,EAAAA,KAAiBt8C,EAAQwkB,EAAKtvB,IACjD,MAAO,EACLqnD,EAAAA,EAAAA,KAAct+C,EAAMumB,EAAM63B,IAC1B70C,EAAAA,GAAAA,IAAeg1C,EAAAA,EAAAA,KAAah4B,EAAM63B,GAAY,IAAS,UAE3D,CAEsCI,IAAiB,GAEvD,OACEn+C,EAAAA,GAAA7K,cAACipD,GAAAA,EAAU,CACTv3C,IAAKjQ,EACLuJ,UAAW66C,GACXj7C,MAAOC,EAAAA,GAAA7K,cAACkpD,GAAAA,EAAa,CAACn4B,KAAMA,EAAMo4B,gBAAiBX,IACnDY,cACEv+C,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACLC,KAAMA,EACNo4B,gBAAiBX,EACjBtgD,KAAK,WAGTynB,SAAUA,EACV+4B,kBAAmBA,EACnBlrC,QAAM,EACNpa,MAAQ,SAAQ0jD,EAAiB/kD,GAASsnD,EAAAA,SAE1C39C,QAASA,IAAMoW,EAAYrgB,IAC3B,GAEH,CAAC4vB,EAAe7mB,EAAMs8C,IA4FzB,OACEj8C,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACR4B,WAAW+I,EAAAA,GAAAA,GAAe,mBAAoB/I,GAC9C1B,QAASA,EACTC,oBAAqBA,GAErBsB,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CAACC,UAAWA,EAAWzuB,KAAK,YAAYs8B,eAAe,2BAC/D,IA/QgB,IAgRR7N,EAjGX9uB,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAeiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACtDsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAAC6E,OAAK,EAAC5E,MAAM,cAActD,KAAK,UAAUmI,UAAW7F,EAAK,QAASkB,QAASu8C,GACjFp9C,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BAEfH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR2G,IAAKq0C,EACLl8C,MAAOw8C,EACPx7C,SAAU+8C,EACVmB,UAAWhB,EACXiB,YAAaxD,KAGjBl7C,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbrxC,IAAKm0C,EACLp7C,UAAU,4BACVu4C,MAAO8D,EACPmC,yBAAuB,EACvBC,UA9LmB,IA8LPpC,GAAUhpD,QAAU,GAChCirD,UAAWhB,IAETjB,GAAYx8C,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MACrBrC,GAAU91C,KAAI,CAACo4C,EAAS7F,IACvBj5C,EAAAA,GAAA7K,cAACipD,GAAAA,EAAU,CACTv3C,IAAM,GAAEg1C,KAAWiD,IACnB3+C,UAAW66C,GAEXn6C,QAASA,IAAMw6C,EAAmBQ,EAAUiD,GAC5CvmD,MAAQ,QAxMO,IAwMC0jD,EAAiBhD,QACjCsF,cACEv+C,EAAAA,GAAA7K,cAAC4pD,GAAAA,EAAS,CACR1hD,KAAM09C,GACNkC,MAAOR,EAAOqC,GACd3+C,UAAU,aACV6+C,gBAAgB,sBAGpBj/C,OAAOomB,EAAAA,GAAAA,GAAWs2B,EAAOqC,GAAS/+C,aAU1CC,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAeiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACtDsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACLmI,UAAW7F,EAAK,SAChBkB,QAASpC,GAETuB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEfH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR2G,IAAKo0C,EACLj8C,MAAO84C,EACP93C,SAAU88C,EACVoB,UAAWvmC,EACXwmC,YAAaxD,KAGhBQ,GAAaloD,OACZwM,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbrxC,IAAKoU,EACLrb,UAAU,4BACVu4C,MAAOgD,EACPuD,aAAe,IAAGjE,KAClBrC,WAAYgD,EACZgD,yBAAuB,EACvBC,UAAW3D,EAAeznD,OAASgrD,EAAAA,IACnCC,UAAWvmC,GAEVwjC,EAAYh1C,IAAIg3C,IAEjBhC,IAAgBA,EAAYloD,OAC9BwM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,cAAcR,EAAK,+BAEhCK,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,SAkBN,ICrNZ,IAAevgD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MACEi7C,OAAO,QACLuC,EAAO,iBACPC,GACD,cACD34B,GACE9kB,EAEJ,MAAO,CACL09C,cAAeF,EAAQtO,OACvByO,gBAAiBH,EAAQI,SACzBC,UAAWJ,EAAiBvO,OAC5Bra,WAAY70B,EAAOm3B,aAAaT,QAChC5R,gBACD,GAhBe/kB,EA3E+B7H,IAc7C,IAd8C,OAClD2E,EAAM,cACNioB,EAAa,cACb44B,EAAa,gBACbC,EAAe,UACfE,EAAS,WACThpB,EAAU,OACV5G,EAAS6vB,EAAAA,IAAc,UACvBr/C,EAAS,kBACT+6C,EAAiB,SACjBC,EAAQ,kBACRsE,EAAiB,QACjBhhD,EAAO,oBACPC,GACD9E,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,MACNy4C,EAAQqH,IAAa3gD,EAAAA,EAAAA,IAAS,IAC/B4gD,GAAMllD,EAAAA,EAAAA,KAAQ,KAClB,IAAK8D,EAAQ,OAEb,IAAIqhD,EAAcL,GAAa,GAC3B/4B,IACFo5B,GAAcppB,EAAAA,GAAAA,IAAO,CAAChQ,KAAkBo5B,KAI1C,MAAMl+C,GAASyhC,EAAAA,EAAAA,MACTnN,EAAYt0B,EAAOo3B,MAAMC,KACzB2jB,EAAYh7C,EAAOi7C,MAAM5jB,KACzB6jB,EAAmBl7C,EAAOi7C,MAAME,aAEhCgD,EAAU,IACVT,GAAiB,MAChB/G,GAAUgH,GAAoB,IACnC1vB,QAAQ/4B,IACR,MAAM8uB,EAAOg3B,EAAU9lD,GACjB8tC,EAAO1O,EAAUp/B,GACvB,QAAI8tC,KAAQob,EAAAA,EAAAA,KAAcpb,KAEnBhf,IAAQw3B,EAAAA,EAAAA,KAAiBx3B,OAAMhxB,OAAWA,EAAWkoD,EAAiBhmD,GAAI,IAG7EmpD,GAASC,EAAAA,GAAAA,IACbxpB,EAAAA,GAAAA,IAAO,IACDhQ,EAAgB,CAACA,GAAiB,OACnCy5B,EAAAA,EAAAA,KAAkBtgD,EAAMkgD,EAASnD,EAAWrE,EAAQ7xB,MACnD+P,GAAc5G,EAAO94B,SAAS,UAAW4/B,EAAAA,EAAAA,KAAkBF,EAAYP,EAAWqiB,GAAU,UAElG3jD,EACAkrD,EACAp5B,GAGF,OAAO05B,EAAAA,EAAAA,KAAoBx+C,EAAQq+C,EAAQpwB,EAAO,GACjD,CAAC4vB,EAAW/4B,EAAe44B,EAAe/G,EAAQgH,EAAiB1/C,EAAM42B,EAAY5G,EAAQpxB,IAE1F4hD,GAAe7f,EAAAA,GAAAA,GAAiBqf,GAAK,GAE3C,OACE3/C,EAAAA,GAAA7K,cAACirD,GAAgB,CACf7hD,OAAQA,EACR4B,UAAWA,EACX86C,cAAekF,EACf35B,cAAeA,EACf00B,kBAAmBA,EACnB7C,OAAQA,EACR+C,eAAgBsE,EAChBvE,SAAUA,EACVE,mBAAoBoE,EACpBhhD,QAASA,EACTC,oBAAqBA,GACrB,KCUN,IAAeJ,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACxC,MAAM,WAAE2rB,EAAU,QAAEqI,IAAY3zB,EAAAA,EAAAA,KAAeL,GAAQsjC,gBACjDqb,EAAgBhzB,GAAcA,EAAW75B,OAAS,EACxD,MAAO,CACLgzB,cAAe9kB,EAAO8kB,cACtB85B,gBAAiBjzB,GAAY75B,QAAU,GAAK,EAC5C+sD,QAAS5iD,QAAQ+3B,GACjB2qB,eACD,GARiB5+C,EA3FsC7H,IAMpD,IANqD,OACzD2E,EAAM,cACNioB,EAAa,eACb85B,EAAc,QACdC,EAAO,aACPF,GACDzmD,EACC,MAAM,gCACJ4mD,EAA+B,sBAC/BC,EAAqB,gBACrBC,EAAe,uBACfC,EAAsB,aACtBC,EAAY,iBACZ3sB,IACEr1B,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,KAEPihD,GAAmBr4B,EAAAA,EAAAA,GAAsB+3B,GAAS,IACjDhoB,EAASuoB,EAAaC,IAAiBl9C,EAAAA,EAAAA,MAC9C3G,EAAAA,EAAAA,KAAU,KACJqB,GACFuiD,GACF,GACC,CAACviD,EAAQuiD,IAEZ,MAAME,GAAwBz/C,EAAAA,EAAAA,KAAY,CAAC0/C,EAAqB5+C,KAC9D,MAAMs7C,EAASsD,IAAgBz6B,EAC/B,GAAI+5B,EAAJ,CACEK,EAAa,CAAEM,SAAUD,IACzB,MAAMv/C,GAASyhC,EAAAA,EAAAA,MACf,IAAI3hC,EAAAA,EAAAA,KAASy/C,GACXhtB,EAAiB,CACf9/B,QAASwpD,EACLh+C,EAAK,sDACLA,EACA,iBACAwhD,EAAAA,EAAAA,MAAuBxc,EAAAA,EAAAA,KAAWjjC,EAAQu/C,WAG3C,CACL,MAAMv7B,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQu/C,GAChC,IAAKv7B,EAAM,OAEXuO,EAAiB,CACf9/B,QAASwL,EAAK,iBAAiByhD,EAAAA,EAAAA,KAAazhD,EAAM+lB,KAEtD,CAEF,MAEA,GAAIi4B,EAAQ,CACV,MAAMxpD,EAAUwL,EACd2gD,EACI,iDACA,iDAGNK,IACA1sB,EAAiB,CAAE9/B,WACrB,KAAO,CACL,MAAMiL,EAAS6hD,EACTnC,EAAUz8C,EAAW2V,OAAO3V,QAAY3N,EAC1C2rD,EACFI,EAAsB,CAAErhD,SAAQ0/C,YAEhC0B,EAAgC,CAAEphD,SAAQ0/C,WAE9C,IACC,CAACt4B,EAAe85B,EAAgBC,EAAS5gD,EAAM0gD,IAE5CtzB,GAAcxrB,EAAAA,EAAAA,KAAY,KAC9Bm/C,GAAiB,GAChB,CAACA,IAEJ,GAAKniD,GAAWg6B,EAIhB,OACEv4B,EAAAA,GAAA7K,cAACksD,GAAe,CACd9iD,OAAQA,EACR4B,UAAW0gD,EAAmB,4BAAyBnsD,EACvDwmD,kBAAmBv7C,EAAK0gD,EAAe,YAAc,iBACrDZ,kBAAmBuB,EACnBviD,QAASsuB,EACTruB,oBAAqBqiD,GACrB,KCtDN,IAAeziD,EAAAA,EAAAA,KA/C4B1E,IAErC,IAFsC,eAC1C0nD,GACD1nD,EACC,MAAM2E,EAASZ,QAAQ2jD,IAAmBA,EAAeliD,SACnD,kBACJmiD,EAAiB,uBACjBC,IACE5iD,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MAEN24B,EAASuoB,EAAaC,IAAiBl9C,EAAAA,EAAAA,MAC9C3G,EAAAA,EAAAA,KAAU,KACJqB,GACFuiD,GACF,GACC,CAACviD,EAAQuiD,IAEZ,MAAME,GAAwBz/C,EAAAA,EAAAA,KAAY,CAAC0/C,EAAqB5+C,KAC9Dk/C,EAAkB,CAChBniD,OAAQ6hD,EACR5+C,WACAwF,KAAMy5C,EAAgBz5C,KACtB45C,MAAOH,EAAgBG,OACvB,GACD,CAACF,EAAmBD,IAEjBv0B,GAAcxrB,EAAAA,EAAAA,KAAY,KAC9BigD,GAAwB,GACvB,CAACA,IAEJ,GAAKjjD,GAAWg6B,EAIhB,OACEv4B,EAAAA,GAAA7K,cAACksD,GAAe,CACd9iD,OAAQA,EACR28C,kBAAmBv7C,EAAK,aACxBgwB,OAAQ2xB,GAAgB3xB,OACxB8vB,kBAAmBuB,EACnBviD,QAASsuB,EACTruB,oBAAqBqiD,GACrB,ICTN,IAAeziD,EAAAA,EAAAA,KArCgC1E,IAEzC,IAF0C,yBAC9C8nD,GACD9nD,EACC,MAAM,sBAAE+nD,EAAqB,cAAEC,IAAkBhjD,EAAAA,EAAAA,MAC3Ce,GAAOC,EAAAA,EAAAA,KAEPrB,EAASZ,QAAQ+jD,IAChBnpB,EAASuoB,EAAaC,IAAiBl9C,EAAAA,EAAAA,MAC9C3G,EAAAA,EAAAA,KAAU,KACJqB,GACFuiD,GACF,GACC,CAACviD,EAAQuiD,IAEZ,MAAM,IAAEe,EAAG,OAAElyB,EAAM,WAAEmyB,GAAeJ,GAA4B,CAAC,EAE3DK,GAAsBxgD,EAAAA,EAAAA,KAAa0/C,IACvCW,EAAc,CAAEC,IAAKA,EAAMziD,OAAQ6hD,EAAaa,eAChDH,GAAuB,GACtB,CAACE,EAAKD,EAAeD,EAAuBG,IAE/C,GAAKvjD,GAAWg6B,EAIhB,OACEv4B,EAAAA,GAAA7K,cAACksD,GAAe,CACd9iD,OAAQA,EACR28C,kBAAmBv7C,EAAK,UACxBgwB,OAAQA,EACR8vB,kBAAmBsC,EACnBtjD,QAASkjD,EACTjjD,oBAAqBqiD,GACrB,I,gBC8DN,SAASiB,GAAeC,GACtB,OAAIA,EAAMC,WACD,mBAGJD,EAAME,YAIJ,uBAHE,UAIX,CAEA,UAAe7jD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CACL0gD,SAASrgD,EAAAA,EAAAA,KAAeL,GAAQ0gD,QAChCjgD,oBAAoBC,EAAAA,EAAAA,KAAyBV,MAJ/BD,EAjGY7H,IAAqC,IAApC,QAAEwoD,EAAO,mBAAEjgD,GAAoBvI,EAC9D,MAAM,cACJyoD,EAAa,YACbC,IACE1jD,EAAAA,EAAAA,OACG2jD,EAAappB,EAAWC,IAAcv1B,EAAAA,EAAAA,KAEvClE,GAAOC,EAAAA,EAAAA,KAmES4iD,MAvDQC,EAqCTR,EAzCrB,IANA/kD,EAAAA,EAAAA,KAAU,KACJklD,EAAQ5uD,OAAS,GACnB2lC,GACF,GACC,CAACipB,EAASjpB,IAERipB,EAAQ5uD,OAmEb,OAAOmK,QAAQykD,EAAQ5uD,UAPjB,gBADgBgvD,EAQyBJ,EAAQA,EAAQ5uD,OAAS,KA/D1CivD,EAyDED,EA3C5BxiD,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQgkD,EACR9jD,QAAS26B,EACTj5B,UAAU,UACVJ,MAAOJ,EAAK,4BACZjB,oBAAqB2jD,GAEpB1iD,EAAK,mCACNK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wBACVS,QAAM,EAENC,QA1Bc6hD,KACfvgD,IAILmgD,EAAY,CACVK,SAASC,EAAAA,GAAAA,IAAKH,EAAgB,CAAC,YAAa,WAAY,gBACxDI,YAAa1gD,IAEfi3B,IAAY,GAmBLz5B,EAAK,OAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASu4B,GAAaz5B,EAAK,eAM/DsiD,EAuBAO,EArBjBxiD,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQgkD,EACR9jD,QAAS26B,EACT16B,oBAAqB2jD,EACrBliD,UAAU,QACVJ,MAAOiiD,GAAeC,IAErBA,EAAME,aAAcW,EAAAA,GAAAA,IAAqBb,IACtC97B,EAAAA,GAAAA,GAAW87B,EAAM9tD,QAAU,CAAC,kBAAmB,QAAS,OAC5D6L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACC,QAASu4B,GAAaz5B,EAAK,UAcyB,K,gBC5F7E,MAcA,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IAAuBkhD,EAAAA,GAAAA,KAAK7gD,EAAAA,EAAAA,KAAeL,GAAS,CAAC,mBADpCD,EAdkB7H,IAAuB,IAAtB,cAAEmpD,GAAenpD,EACtD,GAAKmpD,EAAcvvD,OAInB,OACEwM,EAAAA,GAAA7K,cAAA,OAAKyB,GAAG,iBACLmsD,EAAcr8C,KAAKs8C,GAClBhjD,EAAAA,GAAA7K,cAAC8tD,GAAAA,EAAY,CAACD,aAAcA,MAE1B,K,gBCTV,MA4BA,IAAe1kD,EAAAA,EAAAA,KA5BqB1E,IAAa,IAAZ,IAAE2Q,GAAK3Q,EAC1C,MAAM,oBAAEspD,IAAwBtkD,EAAAA,EAAAA,MAE1Be,GAAOC,EAAAA,EAAAA,KAEPujD,GAAa5hD,EAAAA,EAAAA,KAAY,KAC7B/D,OAAO4lD,MAAKC,EAAAA,GAAAA,GAAe94C,GAAM,SAAU,YAC3C24C,EAAoB,CAAE34C,SAAK7V,GAAY,GACtC,CAACwuD,EAAqB34C,IAEnB+4C,GAAgB/hD,EAAAA,EAAAA,KAAY,KAChC2hD,EAAoB,CAAE34C,SAAK7V,GAAY,GACtC,CAACwuD,IAEEK,GAAejjB,EAAAA,GAAAA,GAAiB/1B,GAEtC,OACEvK,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQZ,QAAQ4M,GAChB9L,QAAS6kD,EACTvjD,MAAOJ,EAAK,gBACZsa,WAAWkM,EAAAA,GAAAA,GAAWxmB,EAAK,gBAAiB4jD,GAAe,CAAC,UAC5D3tB,aAAcj2B,EAAK,gBACnBk2B,eAAgBstB,GAChB,I,gBCvCN,MCmGA,IAAe7kD,EAAAA,EAAAA,KAhFM1E,IAAyB,IAAxB,MAAEyiC,GAAiBziC,EACvC,MAAM,cAAE4pD,IAAkB5kD,EAAAA,EAAAA,OAElB6kD,MAAOC,EAAQ,KAAEzhC,GAASoa,GAAS,CAAC,EAEtC18B,GAAOC,EAAAA,EAAAA,KAEPrB,EAASZ,QAAQ+lD,GAEjB32B,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClCqkD,GAAe,KAGVG,EAAWC,EAASC,EAAUC,IAAUrpD,EAAAA,EAAAA,KAAQ,KACrD,IAAKipD,EACH,MAAO,GAGT,MAAMK,GAASC,EAAAA,GAAAA,IAAc,SAAUN,EAAUzhC,GAC3CgiC,GAAOD,EAAAA,GAAAA,IAAc,OAAQN,EAAUzhC,GACvCiiC,GAAMF,EAAAA,GAAAA,IAAc,MAAON,EAAUzhC,GAG3C,MAAO,CAAC8hC,EAAQE,GAFFD,EAAAA,GAAAA,IAAc,QAASN,EAAUzhC,GAElBiiC,EAAI,GAChC,CAACR,EAAUzhC,IAERmG,GAAUjpB,EAAAA,EAAAA,IAAiBoL,IAC/Bi5C,IACAhmD,OAAO4lD,KAAK74C,EAAK,SAAU,WAAW,IAGlC45C,GAAoBhlD,EAAAA,EAAAA,IAAgB,KACxCipB,EAAQu7B,EAAW,IAGfS,GAAkBjlD,EAAAA,EAAAA,IAAgB,KACtCipB,EAAQw7B,EAAS,IAGbS,GAAmBllD,EAAAA,EAAAA,IAAgB,KACvCipB,EAAQy7B,EAAU,IAGdS,GAAiBnlD,EAAAA,EAAAA,IAAgB,KACrCipB,EAAQ07B,EAAQ,IAGlB,OACE9jD,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ00B,iBDpEiB,WCqEjB50B,MAAOJ,EAAK,eACZpB,OAAQA,EACRE,QAASsuB,EACT6H,QAAM,GAEN50B,EAAAA,GAAA7K,cAAA,OAAKgL,UD1EiC,aC2ElC2J,EAAAA,IAAUy6C,EAAAA,KACVvkD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACi3C,OAAK,EAACt6C,KAAK,UAAUwD,QAASwjD,GAAkB,cAI1DrkD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACi3C,OAAK,EAACt6C,KAAK,UAAUwD,QAASsjD,GAAmB,eAGzDnkD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACi3C,OAAK,EAACt6C,KAAK,UAAUwD,QAASujD,GAAiB,aAGvDpkD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACi3C,OAAK,EAACt6C,KAAK,UAAUwD,QAASyjD,GAAgB,kBAIxDtkD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASksB,GACvDptB,EAAK,YAGJ,I,gBC/FZ,SAA2B,WCmH3B,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IAEQ,CACL8iD,aAFkB7f,EAAAA,EAAAA,KAAWjjC,EAAQA,EAAO8kB,kBAF9B/kB,EAtF4B7H,IAE1C,IAF2C,MAC/CyiC,EAAK,YAAEmoB,GACR5qD,EACC,MAAM,kBAAE6qD,EAAiB,iBAAEC,EAAgB,kBAAEC,IAAsB/lD,EAAAA,EAAAA,OAC5DgmD,EAAgBC,IAAmB9lD,EAAAA,EAAAA,KAAS,IAC5C+lD,EAAsBC,IAAyBhmD,EAAAA,EAAAA,KAAS,GACzDimD,GAAc1kB,EAAAA,GAAAA,GAAiBjE,GAAO,IACtC,OAAE4oB,EAAM,MAAEC,EAAK,yBAAEC,GAA6BH,GAAap6C,SAAW,CAAC,EACvEi3C,EAAMqD,GAAQ/hB,EAAAA,EAAAA,MAAYrK,MAAMC,KAAKmsB,QAASxwD,EAE9CiL,GAAOC,EAAAA,EAAAA,KAEPujD,GAAa5hD,EAAAA,EAAAA,KAAY,KACzB86B,GAAO9xB,KAAOq6C,GACKvoB,EAAM6E,OAASwjB,EAAmBC,GAC1C,CACXS,eAAgBN,IAGlBtnD,OAAO4lD,MAAKC,EAAAA,GAAAA,GAAe2B,GAAaz6C,KAAM,SAAU,YAE1Dk6C,GAAmB,GAClB,CACDpoB,EAAOuoB,EAAgBH,EAAmBC,EAAkBC,EAAmBG,EAAsBE,IAGjG1B,GAAgB/hD,EAAAA,EAAAA,KAAY,KAChCkjD,GAAmB,GAClB,CAACA,IAEEY,GAAqB9jD,EAAAA,EAAAA,KAAahC,IACtCslD,EAAgBtlD,GAChBwlD,EAAsBxlD,EAAM,GAC3B,CAACslD,IAUJ,OAPA3nD,EAAAA,EAAAA,KAAU,KACJ+nD,IACFJ,GAAgB,GAChBE,EAAsBpnD,QAAQwnD,IAChC,GACC,CAACA,EAA0BF,IAG5BjlD,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQZ,QAAQ0+B,GAAO9xB,KACvB9L,QAAS6kD,EACTvjD,MAAOJ,EAAK,gBACZi2B,aAAcj2B,EAAK,gBACnBk2B,eAAgBstB,IAEfh9B,EAAAA,GAAAA,GAAWxmB,EAAK,gBAAiBqlD,GAAaz6C,KAAM,CAAC,UACrD06C,GACCjlD,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPrqB,QAAS2pB,EACT9kD,MACEE,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,MACGlS,EAAAA,GAAAA,GACCxmB,EAAK,gCAAiC,CAACslD,GAAQnpB,EAAAA,EAAAA,KAAgB0oB,KAC/D,CAAC,qBAIPe,QAASF,EACTllD,UAAWuQ,KAGdy0C,GACCnlD,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPrqB,QAAS6pB,EACThlD,MACEE,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,MACGlS,EAAAA,GAAAA,GACCxmB,EAAK,yCAAyCm8B,EAAAA,EAAAA,KAAgB+lB,IAC9D,CAAC,qBAIP0D,QAASR,EACT3xC,UAAWwxC,EACXzkD,UAAWuQ,KAGD,KC7Fd80C,GAA6B,IAAbC,EAAAA,IAkBhBC,GAAkB,CACtB,eACA,eACA,eACA,eACA,eACA,eACA,gBAgVF,SAASC,GAAcC,EAAcC,EAAeC,EAAaC,EAAgBC,GAC/E,MAAMC,EAAc,IAAI1nC,KAAKqnC,EAAMC,EAAOC,GACpCI,EAAeH,IAAWI,EAAAA,GAAAA,IAAYJ,GACtCK,EAAeJ,IAAWG,EAAAA,GAAAA,IAAYH,GAE5C,SAAII,GAAgBH,EAAcG,OAEvBF,GAAgBD,EAAcC,EAK3C,CAEA,SAASG,GAAgB9mD,GACvB,OAAOkzC,OAAOlzC,GAAO+mD,SAAS,EAAG,IACnC,CAEA,SAASC,GAAUX,EAAcC,EAAeC,GAC9C,MAAQ,GAAEF,KAAQC,EAAQ,KAAKC,GACjC,CAaA,UAAexnD,EAAAA,EAAAA,KA9WqB1E,IAa9B,IAb+B,WACnC4sD,EAAU,MACVC,EAAK,MACLC,EAAK,aACLC,EAAY,WACZC,EAAU,OACVroD,EAAM,eACNsoD,EAAc,kBACdC,EAAiB,kBACjBC,EAAiB,QACjBtoD,EAAO,SACPuoD,EAAQ,oBACRC,GACDrtD,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KACP4e,EAAM,IAAID,KAEVwnC,GAAUtrD,EAAAA,EAAAA,KAAQ,IAClBksD,IAAiBF,EAAc,IAAIloC,KAChC,IAAIA,KAAKpY,KAAKqZ,IAAIinC,GA9CP,OA+CjB,CAACE,EAAcF,IACZT,GAAUvrD,EAAAA,EAAAA,KAAQ,IAClBmsD,IAAeF,EAAc,IAAInoC,KAC9B,IAAIA,KAAKpY,KAAK8Z,IAAIymC,GAASlB,GAAeA,MAChD,CAACoB,EAAYF,IAEVQ,GAAqBzsD,EAAAA,EAAAA,KAAQ,IAAO+rD,EAAa,IAAIjoC,KAAKioC,GAAc,IAAIjoC,MAAS,CAACioC,IACtFW,GAAa3+B,EAAAA,EAAAA,GAAsBjqB,IAClC6oD,EAAoBC,IAA0BxjD,EAAAA,EAAAA,IAAQ,IAEtDyjD,EAAcC,IAAmBxoD,EAAAA,EAAAA,IAAemoD,IAChDM,EAAqBC,IAA0B1oD,EAAAA,EAAAA,IACpD,IAAIwf,KAAK+oC,EAAaI,cAAeJ,EAAaK,WAAY,KAEzDC,EAAeC,IAAoB9oD,EAAAA,EAAAA,IACxCsnD,GAAgBa,EAAmBY,cAE9BC,EAAiBC,IAAsBjpD,EAAAA,EAAAA,IAC5CsnD,GAAgBa,EAAmBe,eAG/BhC,EAAcM,GAAUe,EAAaI,cAAeJ,EAAaK,WAAYL,EAAaY,WAC1FC,EAAcX,EAAoBE,cAClCU,EAAeZ,EAAoBG,WAEnChrD,EAAcgqD,GAAgBW,EAAae,UAAYtC,EAAQsC,WAC/DzB,GAAcU,EAAae,UAAYrC,EAAQqC,WAErDnrD,EAAAA,EAAAA,KAAU,MACHiqD,GAAc5oD,IACjBgpD,EAAgBL,GAChBO,EAAuB,IAAIlpC,KAAK2oC,EAAmBQ,cAAeR,EAAmBS,WAAY,IAC7Fd,IACFgB,EAAiBxB,GAAgBa,EAAmBY,aACpDE,EAAmB3B,GAAgBa,EAAmBe,gBAE1D,GACC,CAACf,EAAoB3oD,EAAQ4oD,EAAYN,KAE5C3pD,EAAAA,EAAAA,KAAU,KACJypD,IAAiBS,GAAsBE,EAAae,UAAYtC,EAAQsC,YAC1Ed,EAAgBxB,GAChB8B,EAAiBxB,GAAgBN,EAAQ+B,aACzCE,EAAmB3B,GAAgBN,EAAQkC,eAC7C,GACC,CAACtB,EAAcS,EAAoBrB,EAASuB,KAE/CpqD,EAAAA,EAAAA,KAAU,KACJ0pD,IAAeQ,GAAsBE,EAAae,UAAYrC,EAAQqC,YACxEd,EAAgBvB,GAChB6B,EAAiBxB,GAAgBL,EAAQ8B,aACzCE,EAAmB3B,GAAgBL,EAAQiC,eAC7C,GACC,CAACtB,EAAcC,EAAYQ,EAAoBpB,EAASD,EAASuB,KAEpEpqD,EAAAA,EAAAA,KAAU,KACR,GAAIspD,EAAY,CACd,MAAM8B,EAAkB,IAAI/pC,KAAKioC,GACjCe,EAAgBe,GAChBT,EAAiBxB,GAAgBiC,EAAgBR,aACjDE,EAAmB3B,GAAgBiC,EAAgBL,cACrD,IACC,CAACzB,IAEJ,MAAM+B,EAA0B3B,GAAcuB,GAAe3pC,EAAIkpC,eAAiBU,GAAgB5pC,EAAImpC,YAChG3B,GAAWmC,GAAenC,EAAQ0B,eAAiBU,GAAgBpC,EAAQ2B,WAC3Ea,EAAyB7B,GAAgBwB,GAAe3pC,EAAIkpC,eAAiBU,GAAgB5pC,EAAImpC,YAEjG,cAAEc,EAAa,iBAAEC,EAAgB,cAAEC,IAAkBluD,EAAAA,EAAAA,KAAQ,IAqNrE,SAA2BmrD,EAAcC,GACvC,MAAM4C,EAA0B,GAC1BC,EAA6B,GAC7BC,EAA0B,GAE1BxjC,EAAO,IAAI5G,KACjB4G,EAAKyjC,QAAQ,GACbzjC,EAAK0jC,SAAShD,GACd1gC,EAAK2jC,YAAYlD,GACjB,MAAMmD,EAAW5jC,EAAK6jC,UAAY,EAC5BC,EAAuB,IAAI1qC,KAAKqnC,EAAMC,EAAO,GAAGqC,UAEtD,IAAK,IAAIjP,EAAI,EAAGA,EAAI8P,EAAU9P,IAC5BwP,EAAcziD,KAAKijD,EAAuBF,EAAW9P,EAAI,GAG3D,KAAO9zB,EAAKwiC,aAAe9B,GAAO,CAChC,MAAMqD,EAAW/jC,EAAK+iC,UACtBQ,EAAiB1iD,KAAKkjD,GACtB/jC,EAAKyjC,QAAQM,EAAW,EAC1B,CAEA,MAAMC,GAAoBT,EAAiBl1D,OAASi1D,EAAcj1D,QAAU,EAC5E,GAAI21D,EAAmB,EACrB,IAAK,IAAIlQ,EAAI,EAAGA,GAAK,EAAIkQ,EAAkBlQ,IACzC0P,EAAc3iD,KAAKizC,GAIvB,MAAO,CAAEwP,gBAAeC,mBAAkBC,gBAC5C,CAlPIS,CAAkBjB,EAAaC,IAC9B,CAACA,EAAcD,IAEZkB,GAAc5uD,EAAAA,EAAAA,KAAQ,IACnBqsD,GAsQX,SAA2BnnD,EAAiBwlB,GAC1C,MAAM2gC,GAAMwD,EAAAA,GAAAA,GAAmBnkC,EAAMxlB,EAAK4pD,MAG1C,OAAIzD,KAFUwD,EAAAA,GAAAA,GAAmB,IAAI/qC,KAAQ5e,EAAK4pD,MAGzC5pD,EAAK,0CAA0C6pD,EAAAA,GAAAA,IAAW7pD,EAAMwlB,IAGlExlB,EAAK,sCAAuC,CAACmmD,GAAK0D,EAAAA,GAAAA,IAAW7pD,EAAMwlB,IAC5E,CA/QgCskC,CAAkB9pD,EAAM2nD,IACnD,CAAC3nD,EAAM2nD,EAAcR,IA+BlB3uB,GAAe52B,EAAAA,EAAAA,KAAY,KAE7BylD,EADEL,GAAgBW,EAAevB,EACxBA,EACAa,GAAcU,EAAetB,EAC7BA,EAEAsB,EACX,GACC,CAACX,EAAcC,EAAYb,EAASC,EAASgB,EAAUM,IAEpDoC,GAAoBnoD,EAAAA,EAAAA,KAAa9B,IACrC,MAAMF,EAAQE,EAAEC,OAAOH,MAAMoqD,QAAQ,UAAW,IAChD,IAAKpqD,EAAM/L,OAGT,OAFAq0D,EAAiB,SACjBpoD,EAAEC,OAAOH,MAAQ,IAInB,MAAMm7B,EAAQv0B,KAAKqZ,IAAI,EAAGrZ,KAAK8Z,IAAIjI,OAAOzY,GAAQ,KAE5C4lB,EAAO,IAAI5G,KAAK+oC,EAAae,WACnCljC,EAAKykC,SAASlvB,GACd6sB,EAAgBpiC,GAEhB,MAAM0kC,EAAWxD,GAAgB3rB,GACjCmtB,EAAiBgC,GACjBpqD,EAAEC,OAAOH,MAAQsqD,CAAQ,GACxB,CAACvC,IAEEwC,GAAsBvoD,EAAAA,EAAAA,KAAa9B,IACvC,MAAMF,EAAQE,EAAEC,OAAOH,MAAMoqD,QAAQ,UAAW,IAChD,IAAKpqD,EAAM/L,OAGT,OAFAw0D,EAAmB,SACnBvoD,EAAEC,OAAOH,MAAQ,IAInB,MAAMwqD,EAAU5jD,KAAKqZ,IAAI,EAAGrZ,KAAK8Z,IAAIjI,OAAOzY,GAAQ,KAE9C4lB,EAAO,IAAI5G,KAAK+oC,EAAae,WACnCljC,EAAK6kC,WAAWD,GAChBxC,EAAgBpiC,GAEhB,MAAM8kC,EAAa5D,GAAgB0D,GACnC/B,EAAmBiC,GACnBxqD,EAAEC,OAAOH,MAAQ0qD,CAAU,GAC1B,CAAC3C,IA0BJ,OACEtnD,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASA,EACT0B,UAAU,gBACVD,QAASi4B,GAETn4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,aACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACNE,QAASpC,GAETuB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGfH,EAAAA,GAAA7K,cAAA,UACGwK,EAAM,YAAWyoD,EAAe,KAChC,IACAD,GAGHnoD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACNyS,SAAUo1C,EACV3nD,QAAU2nD,OAA2C9zD,EAlI/D,WACE+yD,GAAwByC,IACtB,MAAMC,EAAW,IAAI5rC,KAAK2rC,GAG1B,OAFAC,EAAStB,SAASsB,EAASxC,WAAa,GAEjCwC,CAAQ,GAEnB,GA6HUnqD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,wBAGfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACNyS,SAAUm1C,EACV1nD,QAAU0nD,OAA2C7zD,EAnI/D,WACE+yD,GAAwByC,IACtB,MAAMC,EAAW,IAAI5rC,KAAK2rC,GAG1B,OAFAC,EAAStB,SAASsB,EAASxC,WAAa,GAEjCwC,CAAQ,GAEnB,GA8HUnqD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,sBAKnBH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACZulD,GAAgBh/C,KAAKo/C,GACpB9lD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4BACbH,EAAAA,GAAA7K,cAAA,YAAOwK,EAAKmmD,OAGf2C,EAAc/hD,KAAKwiD,GAClBlpD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBAAsBH,EAAAA,GAAA7K,cAAA,YAAO+zD,MAE7CR,EAAiBhiD,KAAKwiD,GACrBlpD,EAAAA,GAAA7K,cAAA,OACEsmC,KAAK,SACLD,SAAU,EACV36B,QAASA,KAAMupD,OA/IDjlC,EA+IkB+jC,OA9I1C3B,GAAiB2C,IACf,MAAMC,EAAW,IAAI5rC,KAAK2rC,GAK1B,OAJAC,EAASvB,QAAQzjC,GACjBglC,EAAStB,SAAST,GAClB+B,EAASrB,YAAYX,GAEdgC,CAAQ,IAPnB,IAA0BhlC,CA+I4B,EAC1ChlB,WAAW+I,EAAAA,GAAAA,GACT,aACA,aACAy8C,GACEwC,EAAaC,EAAcc,EAAUnD,EAASC,GAE5C,WACGkD,EAAW,YAAc,GAChCjD,IAAgBM,GAAU4B,EAAaC,EAAcc,IAAa,aAGnEvrD,QAAQurD,IACPlpD,EAAAA,GAAA7K,cAAA,YAAO+zD,MAIZP,EAAcjiD,KAAKwiD,GAClBlpD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBAAsBH,EAAAA,GAAA7K,cAAA,YAAO+zD,QAKjDrC,GAzGD7mD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,SACE/B,KAAK,OACL+M,UAAU,eACVkqD,UAAU,UACV9qD,MAAOqoD,EACPrnD,SAAUmpD,EACVja,QAAS4X,IACT,IAEFrnD,EAAAA,GAAA7K,cAAA,SACE/B,KAAK,OACL+M,UAAU,eACVkqD,UAAU,UACV9qD,MAAOwoD,EACPxnD,SAAUupD,EACVra,QAAS4X,KA2FbrnD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLG,QAASs3B,EACT/kB,SAAUzW,GAET0sD,GAEFtC,GACC/mD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACG,QAASomD,EAAqBrmD,QAAM,GACzCmmD,KAKH,IC/SZ,IAAezoD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CAAE8kD,YAAYzkD,EAAAA,EAAAA,KAAeL,GAAQ4oD,6BAF5B7oD,EAxB+B7H,IAE7C,IAF8C,OAClD2E,EAAM,WAAEioD,GACT5sD,EACC,MAAM,qBAAE2wD,EAAoB,qBAAEC,IAAyB5rD,EAAAA,EAAAA,MAEjD6rD,GAAmBlpD,EAAAA,EAAAA,KAAa4jB,IACpColC,EAAqB,CAAEG,UAAWvlC,EAAKkjC,UAAY,MACnDmC,GAAsB,GACrB,CAACA,EAAsBD,IAEpB5qD,GAAOC,EAAAA,EAAAA,KAEb,OACEI,EAAAA,GAAA7K,cAACw1D,GAAa,CACZpsD,OAAQA,EACRioD,WAAYA,EACZI,YAAU,EACVE,kBAAmBnnD,EAAK,cACxBlB,QAAS+rD,EACTxD,SAAUyD,GACV,K,gBCZN,MA8MA,IAAensD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEwqB,GAAQxqB,EAEjB,MAAO,CACLq/B,KAFW7U,GAAS8U,EAAAA,EAAAA,KAAWjjC,EAAQmuB,QAAUn7B,EAGjDqpD,WAAYluB,GAASmuB,EAAAA,EAAAA,KAAiBt8C,EAAQmuB,QAAUn7B,EACxDk2D,cAAelpD,EAAOmpD,YAAYC,WACnC,GAPerpD,EAhM+B7H,IAO7C,IAP8C,OAClD2E,EAAM,OACNsxB,EAAM,gBACNk7B,EAAe,KACfrmB,EAAI,WACJqZ,EAAU,cACV6M,GACDhxD,EACC,MAAM,cAAEoxD,EAAa,cAAEC,EAAa,sBAAEC,IAA0BtsD,EAAAA,EAAAA,MAE1De,GAAOC,EAAAA,EAAAA,KACPurD,GAAgB7qB,EAAAA,GAAAA,GAAiBoE,GACjC0mB,GAA2B9qB,EAAAA,GAAAA,GAAiByqB,GAE5CM,GAAWtvD,EAAAA,EAAAA,IAAyB,OAEnCw8B,EAASuoB,EAAaC,IAAiBl9C,EAAAA,EAAAA,MACvCynD,EAAWC,IAAgBxsD,EAAAA,EAAAA,IAAiBosD,GAAeG,WAAa,KACxEE,EAAUC,IAAe1sD,EAAAA,EAAAA,IAAiBosD,GAAeK,UAAY,KACrEE,EAAOC,IAAY5sD,EAAAA,EAAAA,IAAiBosD,GAAeS,aAAe,KAClEC,EAAwBC,IAA6B/sD,EAAAA,EAAAA,KAAkB,GACxEgtD,EAAiBpuD,QAAQ2tD,KAAeP,GAAmBW,KAEjExuD,EAAAA,EAAAA,KAAU,KACJqB,IACFuiD,IACAyK,EAAaJ,GAAeG,WAAa,IACzCG,EAAYN,GAAeK,UAAY,IACvCG,EAASR,GAAeS,aAAe,IACvCE,GAA0B,GAC5B,GACC,CAACvtD,EAAQuiD,EAAaqK,GAAeG,UAAWH,GAAeK,SAAUL,GAAeS,eAE3F1uD,EAAAA,EAAAA,KAAU,MACHqL,EAAAA,IAAgBgwB,GACnB96B,YAAW,KAAQ4tD,EAASnvD,SAAS8vD,OAAO,GAjDvB,IAkDvB,GACC,CAACzzB,IAEJ,MAAM0zB,GAAwB1qD,EAAAA,EAAAA,KAAa9B,IACzC8rD,EAAa9rD,EAAEC,OAAOH,MAAM,GAC3B,IAEG2sD,GAAoB3qD,EAAAA,EAAAA,KAAa9B,IACrCksD,GAASQ,EAAAA,GAAAA,IAA0BvB,EAAenrD,EAAEC,OAAOH,OAAO,GACjE,CAACqrD,IAEEwB,GAAuB7qD,EAAAA,EAAAA,KAAa9B,IACxCgsD,EAAYhsD,EAAEC,OAAOH,MAAM,GAC1B,IAEGwtB,GAAcxrB,EAAAA,EAAAA,KAAY,KAC9B2pD,IACAK,EAAa,IACbE,EAAY,IACZE,EAAS,GAAG,GACX,CAACT,IAEE/yB,GAAe52B,EAAAA,EAAAA,KAAY,KAC3BwpD,IAAoBl7B,EACtBo7B,EAAc,CACZK,YACAE,WACAI,YAAaF,IAGfV,EAAc,CACZn7B,SACAy7B,YACAE,WACAK,0BAEJ,GACC,CAACP,EAAWL,EAAeF,EAAiBS,EAAUE,EAAOG,EAAwBb,EAAen7B,IAEvG,GAAKtxB,GAAWg6B,EAsFhB,OACEv4B,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UAAU,kBACVJ,MAAOJ,EAAK,cACZpB,OAAQA,EACRE,QAASsuB,EACTruB,oBAAqBqiD,GAEpBoK,GAxFDnrD,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BAA2BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAClEsL,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL5oB,KAAK,QACL6oB,KAAMilC,EACNtjD,KAAO,GAAEyjD,KAAaE,MAExBxrD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iCACbH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCACVgrD,GAAeS,aACZO,EAAAA,GAAAA,IAA0BvB,EAAeO,EAAcS,aACvDjsD,EAAK,iBAEXK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,+BAA+BiJ,IAAI,SAChD60C,EAAAA,EAAAA,KAAct+C,EAAMwrD,EAAgBpN,MAI3C/9C,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR2G,IAAKikD,EACL9rD,MAAO+rD,EACPxrD,MAAOH,EAAK,aACZ67B,SAAU,EACVj7B,SAAU0rD,IAEZjsD,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAOisD,EACP1rD,MAAOH,EAAK,YACZ67B,SAAU,EACVj7B,SAAU6rD,IAEZpsD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,+BACVgmB,EAAAA,GAAAA,GACCxmB,EAAK,+BAAgCwrD,GAAeG,WAAa,IACjE,CAAC,QAAS,qBAGdtrD,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPrqB,QAAS4wB,EACTrwB,SAAU,EACV+pB,QAASuG,EACThsD,MAAOH,EAAK,2BAEdK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,+BACVgmB,EAAAA,GAAAA,GAAWxmB,EAAK,wCAAyCwrD,GAAeG,cA6C5EF,GArCDprD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,+BAA+BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACtEsL,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAAC5oB,KAAK,QAAQwK,KAAO,GAAEyjD,KAAaE,MAC3CxrD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yCACbH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR2G,IAAKikD,EACL9rD,MAAOmsD,EACPrB,UAAU,MACVvqD,MAAOH,EAAK,qBACZ67B,SAAU,EACVj7B,SAAU2rD,IAEZlsD,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAO+rD,EACPxrD,MAAOH,EAAK,aACZ67B,SAAU,EACVj7B,SAAU0rD,IAEZjsD,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAOisD,EACP1rD,MAAOH,EAAK,YACZ67B,SAAU,EACVj7B,SAAU6rD,MAiBhBpsD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLE,QAAM,EACNT,UAAU,wBACViT,UAAW24C,EACXlrD,QAASs3B,GAERx4B,EAAK,SAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLE,QAAM,EACNT,UAAU,wBACVU,QAASksB,GAERptB,EAAK,YAGJ,K,gECpNL,IAAK0sD,GAAgB,SAAhBA,GAAgB,OAAhBA,EAAAA,EAAgB,aAAhBA,EAAAA,EAAgB,mBAAhBA,EAAAA,EAAgB,eAAhBA,EAAAA,EAAgB,iBAAhBA,EAAAA,EAAgB,qBAAhBA,EAAAA,EAAgB,uBAAhBA,EAAAA,EAAgB,2BAAhBA,EAAAA,EAAgB,6BAAhBA,CAAgB,MAc5B,MAAMC,GAA+E,CACnFp2C,IAAKm2C,GAAiBE,IACtBp2C,OAAQk2C,GAAiBG,OACzBx9C,KAAMq9C,GAAiBnvB,KACvBlnB,MAAOq2C,GAAiBjvB,MACxBqvB,QAASJ,GAAiBK,QAC1BC,SAAUN,GAAiBO,SAC3BC,WAAYR,GAAiBS,WAC7BC,YAAaV,GAAiBW,aAG1BC,GAAwB1a,OAAO4K,KAAKmP,IAO1C,IAAIY,GACJ,MAAMC,GAAsB,CAAEtxC,EAAG,EAAGC,EAAG,G,4BChDvC,MC0HA,IAAexd,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MACM0rD,GADWrrD,EAAAA,EAAAA,KAAeL,GACP0rD,SAEnB,MAAElI,IAAUmI,EAAAA,EAAAA,KAAmB3rD,IAAW,CAAC,GAC3C,WAAE4rD,EAAU,cAAEC,GAAkBH,GAAW,CAAC,EAC5CI,EAAkC,cAAfF,EAGzB,MAAO,CACLG,aAHmBvI,GAAQvgB,EAAAA,EAAAA,KAAWjjC,EAAQwjD,QAASxwD,EAIvD84D,mBACAD,gBACD,GAde9rD,EA9FS7H,IAEX,IAFY,aAC5B6zD,EAAY,iBAAED,EAAgB,cAAED,GACrB3zD,EACX,MAAM,uBACJ8zD,EAAsB,iBACtBC,IACE/uD,EAAAA,EAAAA,MAEEgvD,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,KAEPzmD,GAAMrL,EAAAA,EAAAA,IAAuB,MAE7B+xD,GAAsBrzD,EAAAA,EAAAA,KAAQ,IAC3B8yD,GAAiBhb,OAAOwK,OAAOwQ,IACrC,CAACA,IAEEQ,EAAkBD,GAAqBt6D,OAEvCkwC,GAAQjpC,EAAAA,EAAAA,KAAQ,KACpB,IAAKszD,EAAiB,MAAO,GAE7B,MAAMrsD,GAASyhC,EAAAA,EAAAA,MACT6qB,EAAiBP,GAAc72D,GAGrC,OAFmB4/B,EAAAA,GAAAA,IAAO,CAACw3B,KAAmBF,EAAoBpnD,KAAKunD,GAAQA,EAAI/I,UAC3Dx+C,KAAK9P,GAAOA,IAAM+tC,EAAAA,EAAAA,KAAWjjC,EAAQ9K,KAAK+4B,OAAOhyB,SAASm0C,MAAM,EAAG,EAChF,GACV,CAACic,EAAiBN,EAAcK,IAE7BI,GAAmB/uD,EAAAA,EAAAA,IAAgB,KACvCwuD,GAAkB,IAGdQ,GAAoBhvD,EAAAA,EAAAA,IAAgB,KACxCuuD,EAAuB,CAAEU,MAAO,aAAc,IAGhD,GAAKZ,EAsBL,OACExtD,EAAAA,GAAA7K,cAAA,OACEiS,IAAKA,EACLjH,WAAW+I,EAAAA,GAAAA,GD1FM,aC8FjBlJ,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UD/FmG,WCgGnGoF,OAAK,EACL5E,MAAM,cACNtD,KAAK,OACLmI,UAAWooD,EAAQ,SACnB/sD,QAASqtD,GAETluD,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UDtGmL,WCsG3JE,KAAK,WAErCL,EAAAA,GAAA7K,cAACsuC,GAAAA,EAAU,CAACtjC,UDxG8G,WCwGnF9C,KAAK,OAAOqmC,MAAOA,IArC9D,WACE,MAAM2qB,EAAgB3qB,EAAMlwC,OAAS,GAAKkwC,EAAM,IAAI4nB,UAC9CvrD,EAAQguD,GAAmBM,GAAiBN,EAAkB,EAC/D,GAAEpuD,EAAK,mBACR,CACE2uD,QAASD,EACT/oC,MAAOyoC,EAAkB,GAE3B,CACEQ,YAAaR,EAAkB,MAEjCM,EAEJ,OACEruD,EAAAA,GAAA7K,cAAA,OAAKgL,UDjFyM,YCkF3MJ,EAGP,CAoBKyuD,GACDxuD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GD3GoE,WC6G7E,WAEF3D,OAAK,EACL5E,MAAM,cACNtD,KAAK,OACLwD,QAASstD,GAETnuD,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UDpHiK,WCoHpIE,KAAK,kBAEtC,K,4BCtHV,UAAgB,UAAY,WAAW,mBAAmB,WAAW,eAAiB,WAAW,kBAAkB,WAAW,cAAgB,WAAW,KAAO,YC6EhK,IAAe/B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EAGjB,MAAO,CACLq/B,MAHWC,EAAAA,EAAAA,KAAWjjC,EAAQtC,GAI/B,GANeqC,EAhDpB,SAAuB7H,GAAgD,IAA/C,KAAE8qC,EAAI,aAAE+pB,GAAqC70D,EACnE,MAAM,mBACJ80D,IACE9vD,EAAAA,EAAAA,MAEEqY,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC,IAAKulC,EACH,OAEF,MAAMwgB,EAAQxgB,GAAM9tC,GACpB,IAAKsuD,EACH,OAEF,MAAMyJ,GAAQC,EAAAA,GAAAA,KACdF,EAAmB,CACjBxJ,QACA1mD,OAAQ0mD,EACRyJ,SACA,IAGJ,IAAKjqB,EAAM,OAIX,MAAM3kC,EAAQ2kC,GAAM4mB,UACduD,EAAkBnqB,GAAMoqB,eACxBC,EAAYF,GAAmBJ,GAAeO,EAAAA,GAAAA,IAAqBH,QAAmBn6D,EAE5F,OACEsL,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GAAOpa,UAClBuK,QAASoW,GAETjX,EAAAA,GAAA7K,cAAC85D,GAAAA,EAAS,CACR9uD,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOw+C,gBAAiBT,GAAgB,sBAClEU,cAAez+C,GAAOrQ,KACtB+uD,eAAgB1+C,GAAO2+C,eACvBC,mBAAoB5+C,GAAO6+C,cAC3BrpC,KAAMwe,EACN78B,KAAM9H,EACNgvD,UAAWA,EACXS,UAAU,gBAIlB,KC3EA,IAAgB,KAAO,WAAW,OAAS,WAAW,gBAAgB,WAAW,aAAe,WAAW,kBAAkB,WAAW,eAAiB,WAAW,aAAe,YCoC7KC,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAK,GAgGjD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACxC,MAAMiuD,GAAe5tD,EAAAA,EAAAA,KAAeL,GAAQiuD,aACtCjoC,EAAWioC,EAAaC,gBAAgB/e,QAE9C,MAAO,CACL/pB,WAAYY,GAAYioC,EAAaE,gBAAgBC,QACrDpoC,WACAqoC,aAAcruD,EAAOsuD,WAAW53B,QACjC,GARiB32B,EA9FkC7H,IAGhD,IAHiD,SACrD8tB,EAAQ,aACRqoC,GACDn2D,EACC,MAAMg0D,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,MACNoC,EAAoBC,IAAyBnxD,EAAAA,EAAAA,KAAkB,IAChE,qBACJoxD,IACEvxD,EAAAA,EAAAA,MAEEwxD,GAA2BjxD,EAAAA,EAAAA,IAAgB,KAC/C+wD,GAAuBG,IAAUA,GAAK,KAGjCj6B,EAAaC,IAAkBt3B,EAAAA,EAAAA,IAAS,IAEzCuxD,GAAmB71D,EAAAA,EAAAA,KAAQ,KAC/B,IAAKitB,EAAU,MAAO,GAEtB,MAAMsO,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KACpC,OAAOtC,EAAAA,EAAAA,KAAkB/O,EAAUsO,EAAWI,EAAY,GACzD,CAAC1O,EAAU0O,IAERohB,GAAiBj2C,EAAAA,EAAAA,KAAY8D,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EAC7EuZ,IAAc2xC,EAAAA,GAAkBC,WAClCf,IAAa,KACXU,GAAsB,GAE1B,GACC,IAEGM,GAAyBlvD,EAAAA,EAAAA,KAAY,KACzC80B,EAAe,GAAG,GACjB,IAEH,OACEr2B,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOwf,KAAM,iBACvCwoB,MAAO4X,EACP3X,WAAYnB,EACZyH,aAAa,sBACbyR,YAAU,EACVC,iBAxDqB,IA0DrB3wD,EAAAA,GAAA7K,cAACijD,GAAAA,EAAW,CACVj4C,UAAWuQ,GAAO2nC,OAClB94C,MAAO62B,EACP71B,SAAU81B,EACVu6B,QAASH,EACT/R,YAAa/+C,EAAK,gBAEnBowD,IAAiB35B,GAChBp2B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOoqB,SACrB96B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOmgD,cACrB7wD,EAAAA,GAAA7K,cAAA,YAAOy4D,EAAQ,mBACf5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,GAAOogD,aAAcjwD,QAASuvD,GAC5CxC,EAAQqC,EAAqB,2BAA6B,8BAG/DjwD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOqgD,gBACpBhB,EAAarpD,KAAI,CAAC9P,EAAIM,KACrB,GAAK+4D,KAAsB/4D,GAjEV,GAqEjB,OACE8I,EAAAA,GAAA7K,cAAC67D,GAAc,CACb5xD,OAAQxI,GACR,MAMZoJ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOoqB,SACrB96B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOmgD,cACNlxD,EAAdy2B,EAAmB,OAAe,gBAErCp2B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOqgD,gBACpBT,GAAoBA,EAAiB5pD,KAAK9P,GAEvCoJ,EAAAA,GAAA7K,cAAC67D,GAAc,CACb5xD,OAAQxI,EACR63D,cAAer4B,QAMV,KC9Ff66B,GAAmB,MAAQtoD,EAAAA,EClCjC,IAAgB,KAAO,WAAW,YAAY,WAAW,SAAW,WAAW,mBAAqB,WAAW,gBAAkB,WAAW,kBAAoB,WAAW,uBAAyB,WAAW,kBAAoB,WAAW,KAAO,WAAW,MAAQ,WAAW,cAAc,WAAW,WAAa,WAAW,OAAS,WAAW,mBAAmB,WAAW,gBAAkB,WAAW,cAAc,WAAW,WAAa,WAAW,QAAU,WAAW,oBAAoB,WAAW,iBAAmB,WAAW,UAAU,WAAW,OAAS,WAAW,WAAW,WAAW,QAAU,WAAW,gBAAgB,WAAW,YAAc,WAAW,gBAAgB,WAAW,YAAc,WAAW,gBAAgB,WAAW,YAAc,WAAW,gBAAgB,WAAW,YAAc,WAAW,kBAAkB,WAAW,eAAiB,WAAW,2BAA2B,WAAW,uBAAyB,WAAW,sBAAsB,WAAW,kBAAoB,WAAW,gBAAgB,WAAW,YAAc,WAAW,gBAAgB,WAAW,aAAe,WAAW,UAAY,WAAW,aAAa,WAAW,UAAY,WAAW,kBAAoB,WAAW,SAAW,WAAW,YAAc,WAAW,KAAO,WAAW,kBAAoB,WAAW,aAAe,WAAW,KAAO,WAAW,MAAQ,WAAW,uBAAyB,WAAW,kBAAoB,YCkF55CuoD,GAA6B,IAM7BC,GAAqB,CACzB,gBACA,oBACA,eACA,cACA,eACA,2CACA93C,KAAK,KAED+3C,GAA8C,CAClDC,GAAI,KACJC,OAAQ,SACRhmD,MAAO,SA69BT,IAAehN,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA4B,IAA1B,MAAE06B,GAAO16B,EAChB,MAAM4vD,EAAel1B,GAAOm1B,iBAAkBC,EAAAA,EAAAA,KAAa/vD,EAAQ26B,EAAMm1B,sBAAmB98D,GACpFwwD,MAAOwM,GAAgBH,GAAgB,CAAC,EAC1CjE,EAAajxB,GAAOixB,WAEpBqE,EAAYD,EAAchwD,EAAOkwD,WAAWC,KAAKH,QAAeh9D,EAChEmtD,EAAM6P,GAAc/sB,EAAAA,EAAAA,KAAWjjC,EAAQgwD,QAAeh9D,EACtDo9D,EAAeJ,GAAcK,EAAAA,EAAAA,KAAmBrwD,EAAQgwD,QAAeh9D,EACvEs9D,EAAiBF,GAAcG,SAASC,YACxCxsC,GAAOysC,EAAAA,EAAAA,KAAkBzwD,GACzBitD,GAAQyD,EAAAA,EAAAA,KAAY1wD,IACpB,mBAAE2wD,EAAoB1d,OAAQ2d,IAAyBvwD,EAAAA,EAAAA,KAAeL,GAAQ6wD,SAC5E5d,OAAQ6d,EAAoBC,aAAcC,IAAsB3wD,EAAAA,EAAAA,KAAeL,GAAQixD,aAEzFC,EAAgBJ,GAAsBF,EAE5C,MAAO,CACLX,YACA9P,MACAn8B,OACAipC,QACA0D,mBAAoBA,GAAsB10D,QAAQ+0D,GAClDE,gBACAtF,aACA0E,iBACD,GA1BevwD,EA19BqC7H,IAenD,IAfoD,MACxDyiC,EAAK,OACLw2B,EAAM,IACNhR,EAAG,MACH8M,EAAK,mBACL0D,EAAkB,cAClBO,EAAa,0BACbE,EAAyB,4BACzBC,EAA2B,eAC3BC,EAAc,WACd1F,EAAU,oBACV2F,EAAmB,yBACnBC,EAAwB,eACxBlB,EAAc,YACdmB,GACDv5D,EACC,MAAM,kBACJw5D,EAAiB,gBACjBC,EAAe,gBACfC,EAAe,iBACfC,EAAgB,qBAChBC,EAAoB,gBACpBC,EAAe,kBACfC,EAAiB,aACjBC,EAAY,mBACZC,EAAkB,uBAClBlG,EAAsB,iBACtBC,IACE/uD,EAAAA,EAAAA,OACGi1D,EAAYC,IAAiB/0D,EAAAA,EAAAA,OAC7Bg1D,EAAiBC,IAAsBj1D,EAAAA,EAAAA,OAEvCmxC,EAAU+jB,EAAYC,IAAgBrwD,EAAAA,EAAAA,IAAQ,IAE9CswD,EAAiBC,IAAsBr1D,EAAAA,EAAAA,OACvCs1D,EAAmBC,IAAwBv1D,EAAAA,EAAAA,KAAS,IACpDw1D,EAAyBC,IAA8Bz1D,EAAAA,EAAAA,KAAS,IAChE01D,EAAuBC,IAA4B31D,EAAAA,EAAAA,OACnD41D,EAAgBC,IAAqB71D,EAAAA,EAAAA,OACtC,eACJ81D,GAAc,kBAAEC,GAAiB,kBAAEC,IC5IxB,SAAuBC,EAAyBC,GAC7D,MAAOJ,EAAgBK,IAAqBn2D,EAAAA,EAAAA,IAAS,GAC/Co2D,GAAkBp5D,EAAAA,EAAAA,IAAO,GACzBq5D,GAAiBr5D,EAAAA,EAAAA,IAAO,GAExB+4D,GAAoB31D,EAAAA,EAAAA,IAAgB,KACxC,MAAMqf,EAAMD,KAAKC,MAEbA,EAAM42C,EAAel5D,QD2EH,MC1EpBi5D,EAAgBj5D,QAAU,GAG5Bi5D,EAAgBj5D,SAAW,EAEvBi5D,EAAgBj5D,SDoEO,GCnEzBg5D,EAAkB12C,EDoEE,ICnEtB,IAGIu2C,GAAoB51D,EAAAA,EAAAA,IAAgB,KACpC01D,EAAiBt2C,KAAKC,QACxB42C,EAAel5D,QAAUqiB,KAAKC,MAChC,IAGF,MAAO,CACLq2C,iBACAC,oBACAC,oBAEJ,CD+GMM,GAGE75C,IAAezf,EAAAA,EAAAA,IAAuB,MAGtCu5D,IAAkBv5D,EAAAA,EAAAA,IAAuB,MAGzCw5D,IAAyBx5D,EAAAA,EAAAA,IAAuB,MAEhDkV,GAA8B,eAAfq8C,EACfE,GAAkC,cAAfF,EAEnBkI,IAAyBr2D,EAAAA,EAAAA,IAAgB,KAC7C1B,YAAW,KAAQiwD,EAAuB,CAAEU,MAAO,aAAc,GA3E7C,IA2EkE,IAIlFqH,IAAuB15D,EAAAA,EAAAA,IAA2B,OAExDmB,EAAAA,EAAAA,KAAU,KACRu4D,GAAqBv5D,QAAUrI,SAASsC,cAAc,WAA0B,GAC/E,IAEH,MAAO,CAAE8d,GAAeC,KAAkBC,EAAAA,GAAAA,IAAcshD,GAAsBD,IAExEjE,GAAel1B,GAAOm1B,gBAAkBn1B,EAAMkxB,cAAclxB,EAAMm1B,sBAAmB98D,EACrFghE,GAAmBnE,IAAcoE,SACjC,IACJprD,GAAG,WAAEzC,GAAU,oBAAE8tD,IACf/C,GAAU,CAAC,GAET,gBACJgD,IACE7D,GAAkB,CAAC,EAEjB8D,GAAmBn4D,QAAQk1D,GAAQiD,kBACnCC,GAAoBp4D,QAAQk1D,GAAQkD,mBAEpCC,GAAYnD,IAAUoD,EAAAA,GAAAA,IAAapD,GACnCrB,GAAkBD,KAAgB0E,EAAAA,GAAAA,IAAa1E,IAE/C7kD,GAAY6kD,IAAgBsB,GAAWrB,KAAoBwE,GAE3DE,IAAsB/2D,EAAAA,EAAAA,IAAiBg3D,IACtCH,IACLrC,EAAa,CAAE9sD,IAAKmvD,GAAWI,OAAQD,GAAuB,IAG1DE,IAAc57D,EAAAA,EAAAA,KAAQ,KACnBm0D,EAAAA,GAAAA,MAEN,CAACD,KAEJzxD,EAAAA,EAAAA,KAAU,KACR03D,EAAkByB,GAAYC,mBAAmB,GAChD,CAACD,KAEJ,MAAME,GAAuBF,GAAYG,UAClCC,GAA0BC,KAA+B33D,EAAAA,EAAAA,MAC1D43D,GAAwC,UAAVhI,EAAoBqD,GAAgB4E,gBACpE5E,GAAgB6E,qBAEpB35D,EAAAA,EAAAA,KAAU,KAGRg5D,GAAoB,CAAEU,gBAFRH,IAA4BE,IAA+BJ,IAE1B,GAC9C,CAACA,GAAsBE,GAA0BE,KAEpD,MAAMG,GAAmBT,GAAYG,UAC9BO,GAAsBC,KAA2Bj4D,EAAAA,EAAAA,MAClDk4D,GAAoC,UAAVtI,EAAoBqD,GAAgBkF,YAChElF,GAAgBmF,iBAEpBj6D,EAAAA,EAAAA,KAAU,KAGRg5D,GAAoB,CAAEgB,YAFRH,IAAwBE,IAA2BH,IAEtB,GAC1C,CAACA,GAAkBC,GAAsBE,KAG5C,MAAMG,IAAWr7D,EAAAA,EAAAA,IAA0B,MAErC6xD,IAAUhuD,EAAAA,EAAAA,KACVD,IAAOkuD,EAAAA,GAAAA,KACPtvD,GAAS89B,GAAOkmB,cAAe,EAC/B8U,GAAW15D,QAAQmK,KAEnB,YACJwvD,GAAW,UAAEC,GAAS,sBAAEC,GAAqB,aAAEC,GAAY,aAAEC,GAAY,UAAEC,IFtMxDC,EACrBxwD,EACA7I,EACA0S,EACA4mD,EACAC,EACAjF,EACAkF,KAEA,MAAM,iBACJ9jC,EAAgB,qBAChBu/B,EAAoB,YACpBwE,EAAW,YACXC,EAAW,yBACXC,EAAwB,aACxBvE,IACE/0D,EAAAA,EAAAA,MAEEu5D,GAAoBp8D,EAAAA,EAAAA,KAAgB,GACpCq8D,GAAgBr8D,EAAAA,EAAAA,MAChBs8D,GAAkBt8D,EAAAA,EAAAA,KAAgB,GAClCu8D,GAAmBv8D,EAAAA,EAAAA,MACnBuuB,GAAapN,EAAAA,GAAAA,MAEnBhgB,EAAAA,EAAAA,KAAU,KACR,IAAKkK,EAAIlL,UAAYqC,EAAQ,OAE7B,MAAMg6D,EAAaA,KACjBR,KAAU,EAGN9sD,EAAQ7D,EAAIlL,QAElB,OADA+O,EAAMnC,iBAAiB,OAAQyvD,GACxB,KACLttD,EAAMlC,oBAAoB,OAAQwvD,EAAW,CAC9C,GACA,CAACR,EAAQ3wD,EAAK7I,IAEjB,MAAMg5D,GAAYh2D,EAAAA,EAAAA,KAAa0f,IACxB7Z,EAAIlL,SAASs8D,eAClBpxD,EAAIlL,QAAQs8D,cAAcrsD,YAAYssD,KAAKC,UAAUz3C,GAAQ,IAAI,GAChE,CAAC7Z,IAEEowD,GAAwBj2D,EAAAA,EAAAA,KAAahC,IACzCg4D,EAAU,CACRoB,UAAW,qBACXC,UAAW,CACTC,cAAet5D,IAEjB,GACD,CAACg4D,IAEEuB,GAAmB35D,EAAAA,EAAAA,IAAiBoL,IACxC,IAAKnD,EAAIlL,QAAS,OAClB,MAAM+O,EAAQ7D,EAAIlL,QAClB+O,EAAMtV,IAAM,cACZsV,EAAMnC,iBAAiB,QAAQ,KAC7BmC,EAAMtV,IAAM4U,CAAG,GACd,CAAEwuD,MAAM,GAAO,IAGdzB,GAAc/1D,EAAAA,EAAAA,KAAagJ,IAC/B,GAAI4tD,EAAkBj8D,QAOpB,OANAq7D,EAAU,CACRoB,UAAW,uBAEbP,EAAcl8D,QAAUuB,YAAW,KACjCq7D,EAAiBvuD,EAAI,GAtEN,MA2EnBuuD,EAAiBvuD,EAAI,GACpB,CAACgtD,IAEEE,GAAel2D,EAAAA,EAAAA,KAAay3D,IAChC,IAAK5xD,EAAIlL,QACP,OAEF,MAAM,MAAEC,EAAK,OAAEK,GAAW4K,EAAIlL,QAAQmT,wBACtCkoD,EAAU,CACRoB,UAAW,mBACXC,UAAW,CACTz8D,QACAK,SACAy8D,aAAa,EACbC,iBAAkBF,IAEpB,GACD,CAACzB,EAAWnwD,IAETswD,GAAen2D,EAAAA,EAAAA,KAAY,KAC/B,IAAK6F,EAAIlL,QACP,OAEF,MAAM,OAAEM,GAAW4K,EAAIlL,QAAQmT,wBACzB8pD,EAAiBloD,EAAeggD,GAAmB,EACzDsG,EAAU,CACRoB,UAAW,oBACXC,UAAW,CACT5pD,KAAM,EACNgH,MAAO,EACPE,IAAK,EACLC,OAAQ3Z,EAAS28D,KAIrB5B,EAAU,CACRoB,UAAW,4BACXC,UAAW,CACT5pD,KAAM,EACNgH,MAAO,EACPE,IAAKijD,EACLhjD,OAAQ,IAEV,GACD,CAACohD,EAAWtmD,EAAc7J,IAEvBuwD,GAAYp2D,EAAAA,EAAAA,KAAY,KAC5Bg2D,EAAU,CACRoB,UAAW,gBACXC,UAAW,CACTQ,cAAcxK,EAAAA,GAAAA,OAEhB,GACD,CAAC2I,IAEE8B,GAAkB93D,EAAAA,EAAAA,KAAahJ,IACnCg/D,EAAU,CACRoB,UAAW,mBACXC,UAAWrgE,GACX,GACD,CAACg/D,IAEE+B,GAAgB/3D,EAAAA,EAAAA,KAAa0f,IACjC,GAAIo3C,EAAgBn8D,QAClB,OAEF,MAAMs8D,EAAgBpxD,EAAIlL,SAASs8D,cAGnC,GAAIA,IAFiBv3C,EAAMjsB,OAM3B,IACE,MAAM6W,EAAO4sD,KAAKc,MAAMt4C,EAAMpV,OACxB,UAAE8sD,EAAS,UAAEC,GAAc/sD,EAMjC,GAJkB,kBAAd8sD,GACFZ,MAGgB,kBAAdY,GACE9F,EAAQ,CACV,MAAMhsD,GAAMovD,EAAAA,EAAAA,KAAapD,GACzBoF,EAAY,CAAEpxD,MAAK2yD,yBAAyB,GAC9C,CAmBF,GAhBkB,6BAAdb,GACFlB,EAAantC,EAAWrN,YAGR,8BAAd07C,GACFjB,IAGgB,sCAAdiB,GACFjB,IAGgB,0BAAdiB,GACFhB,IAGgB,iBAAdgB,EAA8B,CAChC,MAAMc,EAAiBzf,iBAAiBnmD,SAASue,MAAM8nC,iBAAiB,qBACxEmf,EAzMiB,4VAyMe1P,QAAQ,qBAAsB8P,IAC9DtB,EAAkBj8D,QAAUyB,QAAQi7D,EAAUc,iBAChD,CAMA,GAJkB,uBAAdf,GACF17D,aAAam7D,EAAcl8D,SAGX,sBAAdy8D,EAAmC,CACrC,IAAKd,EAAc,OACnBQ,EAAgBn8D,SAAU,CAC5B,CA8BA,GA3BkB,qCAAdy8D,GACFpB,EAAU,CACRoB,UAAW,0BACXC,UAAW,CACTe,OAAQf,EAAUe,OAElB9tD,KAAM,QAKM,+BAAd8sD,GACF1kC,EAAiB,CACf9/B,QAAS,yDAIK,yBAAdwkE,IACFnF,EAAqB,CACnBoG,KAAMhB,EAAUgB,OAElB5B,EAAY,CACV5kE,KAAM,OACNwmE,KAAMhB,EAAUgB,QAIF,sBAAdjB,EAAmC,CACrC,MAAMkB,EAAUjB,EAAUruD,IAC1B/M,OAAO4lD,KAAKyW,EAAS,SAAU,aACjC,CAWA,GATkB,8BAAdlB,GACFpB,EAAU,CACRoB,UAAW,yBACXC,UAAW,CACTkB,WAAW,KAKC,6BAAdnB,EAA0C,CAC5C,MAAM,gBAAEoB,EAAe,SAAE1tD,GAAausD,EAEtC,IAAKmB,GAA8C,iBAApBA,EAO7B,YANAxC,EAAU,CACRoB,UAAW,sBACXC,UAAW,CACT3W,MAAO,6BAMb,GAAI51C,EACF,IACE2tD,OAAO3tD,EACT,CAAE,MAAO5M,GAOP,YANA83D,EAAU,CACRoB,UAAW,sBACXC,UAAW,CACT3W,MAAO,qBAIb,CAGF,IAAK4Q,EAOH,YANA0E,EAAU,CACRoB,UAAW,sBACXC,UAAW,CACT3W,MAAO,mBAMbiW,EAAyB,CACvBlC,WAAWC,EAAAA,EAAAA,KAAapD,GACxBoH,cAAeF,EACf1tD,SAAU2L,OAAO3L,GACjB64C,MAAO2N,EAAO3N,OAElB,CAEA4S,EAAQjsD,EACV,CAAE,MAAO1S,GACP,IAED,CACD0+D,EAAcN,EAAWO,EAASuB,EAAiBxG,EACnD8E,EAAWF,EAAcC,EAAcK,EAAQztC,EAAWrN,WAC1D7V,IA0CF,OAvCAlK,EAAAA,EAAAA,KAAU,KACR,MAAM,MAAEf,EAAK,OAAEK,EAAM,WAAEygB,GAAeqN,EAClCguC,EAAiBp8D,SAAWo8D,EAAiBp8D,QAAQC,QAAUA,GAC9Dm8D,EAAiBp8D,QAAQM,SAAWA,IAAW87D,EAAiBp8D,QAAQ+gB,aAC7Eq7C,EAAiBp8D,QAAU,CAAEC,QAAOK,SAAQygB,cAC5Cw6C,EAAax6C,GACby6C,IAAc,GACb,CAACD,EAAcC,EAAcptC,KAEhCptB,EAAAA,EAAAA,KAAU,KACH21D,GAAQqH,eAAe1mE,SACbq/D,EAAOqH,cACfxvD,SAASuW,IACds2C,EAAUt2C,EAAM,IAGlB0yC,EAAa,CACX9sD,KAAKovD,EAAAA,EAAAA,KAAapD,GAClBuD,OAAQ,CACN8D,cAAe,MAEjB,GACD,CAAC3C,EAAW1E,KAEf31D,EAAAA,EAAAA,KAAU,KACRM,OAAOsL,iBAAiB,UAAWwwD,GAC5B,IAAM97D,OAAOuL,oBAAoB,UAAWuwD,KAClD,CAACA,EAAelyD,KAEnBlK,EAAAA,EAAAA,KAAU,KACJqB,GAAU6I,EAAIlL,SAASs8D,eACzBf,IACAC,IACAW,EAAgBn8D,SAAU,GAE1Bo8D,EAAiBp8D,aAAUxH,CAC7B,GACC,CAAC6J,EAAQ0S,EAAcwmD,EAAcC,EAActwD,IAE/C,CACLmwD,YAAWC,wBAAuBF,cAAaG,eAAcC,eAAcC,YAC5E,EElIGC,CAAeR,GAAU74D,GAAQ0S,GAAcomD,IAmSnD,SAAqBp2C,GACnB,MAAM,UAAE03C,EAAS,UAAEC,GAAc33C,EAmBjC,GAjBkB,+BAAd03C,KACEwB,EAAAA,EAAAA,MACFzM,EAAuB,CAAEU,MAAO,eAEhCmJ,GAAU,CACRoB,UAAW,oBACXC,UAAW,CACT3W,MAAO,kBAMG,4BAAd0W,GACFyB,KAGgB,yBAAdzB,EAAsC,CACxC,MAAMkB,EAAUQ,EAAAA,IAAkBzB,EAAU0B,UAC5C/G,EAAiB,CAAEhpD,IAAKsvD,EAASU,kBAAmB3B,EAAU4B,gBAC9DpH,GACF,CAcA,GAZkB,8BAAduF,GACFzC,GAAoB,CAAEN,oBAAqBgD,EAAU6B,aAGrC,kCAAd9B,GACFzC,GAAoB,CAAEwE,wBAAyB9B,EAAU6B,aAGzC,iCAAd9B,GACFjC,IAA4BiE,EAAAA,GAAAA,IAAiB/B,EAAUj4D,OAASi4D,EAAUj4D,WAAQjM,GAGlE,6BAAdikE,EAA0C,CAC5C,MAAM9xD,EAAM+xD,EAAUgC,UACtB5D,GAAwB4B,EAAUj4D,QAAUkG,EAAMwvD,GAAYxvD,QAAOnS,GACvE,CAeA,GAbkB,iCAAdikE,GACF/D,EAAkBgE,EAAUj4D,OAGZ,sBAAdg4D,IACFvF,IACAC,EAAgB,CACdxR,IAAKA,EACL/5C,WAAYA,GACZ+D,KAAM+sD,EAAU/sD,QAIF,8BAAd8sD,EAA2C,CAC7C,MAAMh4D,EAAQi4D,EAAUj4D,MAClBk6D,EAAYjC,EAAUkC,WAC5BhH,EAAc,CACZ5hD,UAAW0mD,EAAU6B,YAAc98D,QAAQi7D,EAAU/wD,MAAMkzD,OAAOvnE,QAClEkZ,SAAUksD,EAAUoC,UACpBnzD,KAAM+wD,EAAU/wD,KAChBlH,QACAk6D,YACAI,kBAAmBrC,EAAUsC,qBAEjC,CAEA,GAAkB,mCAAdvC,EAAgD,CAClD,MAAMh4D,EAAQi4D,EAAUj4D,MAClBk6D,EAAYjC,EAAUkC,WAC5B9G,EAAmB,CACjB9hD,UAAW0mD,EAAU6B,YAAc98D,QAAQi7D,EAAU/wD,MAAMkzD,OAAOvnE,QAClEkZ,SAAUksD,EAAUoC,UACpBnzD,KAAM+wD,EAAU/wD,KAChBlH,QACAk6D,YACAI,kBAAmBrC,EAAUsC,oBAC7B3oD,SAAUqmD,EAAUrmD,UAExB,CAMA,GAJkB,mCAAdomD,GACFzC,GAAoB,CAAEiF,sBAAsB,IAG5B,uBAAdxC,EAAoC,CACtC,GAAIxE,IAAoByE,EAAUzkE,QAAQ4mE,OAAOvnE,SAAWolE,EAAUwC,SAAS5nE,QAC5EolE,EAAUwC,QAAQ5nE,OAAS,GAAK6gE,GAAqBE,GACrDM,GAAiBt2C,KAAKC,MAEvB,YADA68C,QAAoB3mE,GAItB0/D,EAAmBwE,GACnB9D,IACF,CAEA,GAAkB,gCAAd6D,EAA6C,CAC/C,MAAMhpC,EAASipC,EAAU0C,YAAY50D,IAAI60D,EAAAA,KAAsB5rC,OAAOhyB,SAChE69D,GAAc7rC,GAAQn8B,OAE5BigE,EAAgB,CACdvO,MAAOrD,EAAKjrD,GACZw/C,MAAOwiB,EAAUxiB,MACjBzmB,SACA6rC,eAGFpI,GACF,CAEA,GAAkB,0BAAduF,EAAuC,CACzC,GAAIxE,GAAmBI,GAA2BM,GAAiBt2C,KAAKC,MAEtE,YADAi9C,KAIFnH,GAAqB,GACrBQ,IACF,CAEA,GAAkB,iCAAd6D,EAA8C,CAChD,GAAIxE,GAAmBE,GAAqBQ,GAAiBt2C,KAAKC,MAEhE,YADAk9C,MAnNN/vD,iBACE,MAAMk/B,QAAiB9+B,EAAAA,GAAAA,IAAQ,yBAA0B,CACvD81C,IAAKA,IAGHhX,GACF0sB,GAAU,CACRoB,UAAW,yBACXC,UAAW,CACTjkB,OAAQ,aAKd6f,GAA4B3pB,EAC9B,CAwMI8wB,GACA7G,IACF,CAEA,GAAkB,iCAAd6D,EAA8C,CAChD,MAAM,OAAEiD,EAAM,OAAEzoE,EAAQwmE,OAAQkC,GAAcjD,GAxKlDjtD,eAAwCkwD,EAAmBD,EAAgBE,GACzE,MAAMhwD,QAAeC,EAAAA,GAAAA,IAAQ,4BAA6B,CACxD81C,IAAKA,EACLka,aAAcH,EACdE,eAGFvE,GAAU,CACRoB,UAAW,wBACXC,UAAW,CACTe,OAAQkC,KACL/vD,IAGT,CA2JIkwD,CAAyBH,EAAWD,EAAQnD,KAAKC,UAAUvlE,GAC7D,CAEA,GAAkB,kCAAdwlE,EAA+C,CACjD,GAAIlE,GAAyBI,GAAiBt2C,KAAKC,MAEjD,YADAy9C,MAjNNtwD,eAAuCuwD,EAAiB33D,SAC5BwH,EAAAA,GAAAA,IAAQ,6BAA8B,CAC9D81C,IAAKA,EACLt3C,IAAK2xD,EACL33D,cAaFmwD,EAAyB,CAAEnqD,IAAK2xD,EAAS33D,aACzCuwD,MAVEyC,GAAU,CACRoB,UAAW,0BACXC,UAAW,CACTjkB,OAAQ,cAQhB,CAiMIwnB,CAAwBvD,EAAUruD,IAAKquD,EAAUwD,UACnD,CACF,GApb0EvJ,EAAQoB,IAElF/2D,EAAAA,EAAAA,KAAU,KACJwP,IAAUomD,EAA0ByE,GAAU,GACjD,CAACA,GAAWzE,EAA2BpmD,MAE1CxP,EAAAA,EAAAA,KAAU,KACJwP,IAAUqmD,EAA4BuE,GAAY,GACrD,CAACA,GAAavE,EAA6BrmD,KAE9C,MAAM2vD,GAAsBnsB,GAAY2jB,GAAY3hD,WAAa2hD,EAAWhsD,KAAKkzD,OAAOvnE,OAAS,EAC3F8oE,GAA2BpsB,GAAY6jB,GAAiB7hD,WAAa6hD,EAAgBlsD,KAAKkzD,OAAOvnE,OAAS,EAE1G+oE,IAAuBp9D,EAAAA,EAAAA,IAAgB,KAC3C+2D,GAAoB,CAAEJ,kBAAkB,GAAQ,IAE5C0G,IAA0Br9D,EAAAA,EAAAA,IAAgB,KAC9C+2D,GAAoB,CAAEiF,sBAAsB,EAAOrF,kBAAkB,IACrEr4D,YAAW,KACT21D,GAAmB,GA3KF,IA4KD,IAGdqJ,IAAwBt9D,EAAAA,EAAAA,IAAgB,KAC5C+2D,GAAoB,CAAEH,mBAAmB,GAAQ,IAG7C2G,IAAwBv9D,EAAAA,EAAAA,IAAgB,KAC5Co4D,GAAU,CACRoB,UAAW,uBACX,IAGEgE,IAA6Bx9D,EAAAA,EAAAA,IAAgB,KACjDo4D,GAAU,CACRoB,UAAW,4BACX,IAGE0C,IAAsBl8D,EAAAA,EAAAA,IAAiBy9D,IAC3CxI,OAAmB1/D,GACnBqgE,KACAwC,GAAU,CACRoB,UAAW,eACXC,UAAW,CACTiE,UAAWD,IAEb,IAGEE,IAA2B39D,EAAAA,EAAAA,IAAgB,KAC/Ck8D,IAAqB,IAGjB0B,IAAoB59D,EAAAA,EAAAA,IAAgB,KACxCw4D,IAAW,KAIb17D,EAAAA,EAAAA,IAAc,KACZwB,YAAW,KACTs/D,IAAmB,GArNF,IAsND,GACjB,CAACpO,IAEJ,MAAMqO,IAAwB79D,EAAAA,EAAAA,IAAgB,OACvC89D,EAAAA,GAAAA,OAAuBvwD,IAC1BuH,MACF,IAGImmD,IAA2Bj7D,EAAAA,EAAAA,IAAgB,MAC3C89D,EAAAA,GAAAA,OAAuBvwD,IACzBwH,MACF,IAGIgpD,IAAgC/9D,EAAAA,EAAAA,IACnCI,IAAyBmN,IAAU8qD,GAAsBj4D,EAAM,KAGlErC,EAAAA,EAAAA,KAAU,KACJ+T,IACF+rD,KACAE,IAA8B,KAE9B9C,KACA8C,IAA8B,GAChC,GACC,CAACjsD,KAEJ,MAAMksD,IAA4Bh+D,EAAAA,EAAAA,IAAiBy5B,IACjD2+B,GAAU,CACRoB,UAAW,qBACXC,UAAW,CACT6B,WAAY7hC,IAEd,KAGJ17B,EAAAA,EAAAA,KAAU,KACJgzC,GACFitB,GAA0Bx/D,QAAQ+O,IACpC,GACC,CAACA,GAAUwjC,KAEdlY,EAAAA,GAAAA,IAAsB3yB,IAAsB,IAApB+3D,GAAe/3D,EAClB,cAAfioD,GACF6P,IAA0B,GAExB7P,GAAiC,cAAnB8P,GAChBD,IAA0B,EAC5B,GACC,CAAC7P,KAEJrxD,EAAAA,EAAAA,IAAc0K,IAA8B,IAA5B02D,GAAuB12D,EACjC0rD,IAAuBgL,GACvBxK,GAAQ+G,OAASvH,GAAsBO,IACzC2E,GAAU,CACRoB,UAAW,iBACXC,UAAW,CACTgB,KAAM/G,EAAO+G,KACbjlB,OAAQie,KAGZY,EAAqB,CACnBoG,UAAMllE,IAERk/D,IACF,GACC,CAACvB,EAAoBO,EAAe2E,GAAW1E,GAAQ+G,OAE1D,MAAM0D,IAAwBn+D,EAAAA,EAAAA,IAAgB,KAC5Cm0D,EAAgB,CACdpO,MAAOrD,EAAKjrD,GACZ2mE,WAAW,IAEbnK,GAAmB,IAGfqI,IAAoBt8D,EAAAA,EAAAA,IAAgB,KACxCm1D,GAAqB,GACrBS,KACAwC,GAAU,CACRoB,UAAW,kBACXC,UAAW,CACTjkB,OAAQ,cAEV,IAGE6oB,IAAoBr+D,EAAAA,EAAAA,IAAgB,KACxCu0D,EAAkB,CAAExO,MAAOrD,EAAKjrD,KAChC09D,GAAqB,GACrBS,KACAwC,GAAU,CACRoB,UAAW,kBACXC,UAAW,CACTjkB,OAAQ,SAEV,IAGEsnB,IAA2B98D,EAAAA,EAAAA,IAAiBs+D,IAC5CA,IACF/I,OAAyBhgE,GACzBqgE,MAGFwC,GAAU,CACRoB,UAAW,0BACXC,UAAW,CACTjkB,OAAQ,cAEV,IAGE+mB,IAA0Bv8D,EAAAA,EAAAA,IAAgB,KAC9Co4D,GAAU,CACRoB,UAAW,yBACXC,UAAW,CACTjkB,OAAQ,eAGZ6f,GAA2B,GAC3BO,IAAmB,IAGf2I,IAA0Bv+D,EAAAA,EAAAA,IAAgBwM,gBACzBI,EAAAA,GAAAA,IAAQ,uBAAwB,CAAE81C,IAAKA,KAM5D0V,GAAU,CACRoB,UAAW,yBACXC,UAAW,CACTjkB,OAAQ,aAGZ6f,GAA2B,GAC3BO,MAXE2G,IAWiB,IAyCfiC,IAAqBx+D,EAAAA,EAAAA,IAAgB,KACpCs1D,IACLC,OAAyBhgE,GACzBqgE,MAEA1uD,EAAAA,GAAAA,GAASouD,EAAsBlqD,IAAKkqD,EAAsBlwD,UAC1DgzD,GAAU,CACRoB,UAAW,0BACXC,UAAW,CACTjkB,OAAQ,iBAEV,KAmBJz3C,EAAAA,EAAAA,KAAU,KACHqB,KACH61D,OAAmB1/D,GACnB4/D,GAAqB,GACrBE,GAA2B,GAC3BV,OAAcp/D,GACds/D,OAAmBt/D,GACnBwhE,GAAoB,CAClBwE,yBAAyB,EACzBS,sBAAsB,EACtBvF,qBAAqB,EACrBE,kBAAkB,EAClBC,mBAAmB,IAErB7B,IACF,GACC,CAAC31D,KAqJJ,MAAMq/D,IAAyBt9B,EAAAA,GAAAA,GAAiBuzB,GAAYlzD,OAAO,GAC7Dk9D,IAA6Bv9B,EAAAA,GAAAA,GAAiBuzB,GAAYgH,WAAW,GACrEiD,IAA4Bx9B,EAAAA,GAAAA,GAAiBuzB,GAAcl2D,QAAQk2D,EAAWnnD,WAAW,GACzFqxD,IAAwBz9B,EAAAA,GAAAA,GAAiBuzB,GAAYhsD,MAAM,GAE3Dm2D,IAAiC19B,EAAAA,GAAAA,GAAiByzB,GAAiBxhD,UAAU,GAC7E0rD,IAA8B39B,EAAAA,GAAAA,GAAiByzB,GAAiBpzD,OAAO,GACvEu9D,IAAkC59B,EAAAA,GAAAA,GAAiByzB,GAAiB8G,WAAW,GAC/EsD,IAAiC79B,EAAAA,GAAAA,GAAiByzB,GAAmBp2D,QAAQo2D,EAAgBrnD,WAAW,GACxG0xD,IAA6B99B,EAAAA,GAAAA,GAAiByzB,GAAiBlsD,MAAM,IAEpEw2D,GAA4BC,KAAiCv/D,EAAAA,EAAAA,KAAS,IACtEw/D,GAAsBC,KAA2Bz/D,EAAAA,EAAAA,KAAS,IAC1D0/D,GAA2BC,KAAgC3/D,EAAAA,EAAAA,KAAS,IACpE4/D,GAAsBC,KAA2B7/D,EAAAA,EAAAA,KAAS,IAC1D8/D,GAA2BC,KAAgC//D,EAAAA,EAAAA,KAAS,IAEpEggE,GAA+BC,KAAoCjgE,EAAAA,EAAAA,KAAS,IAE5EkgE,GAAqBC,KAA0BngE,EAAAA,EAAAA,IAAS,IAG/D9C,EAAAA,EAAAA,IAAc,KACZwB,YAAW,KACTg6D,KACAC,IAAc,GACb1E,EAAiB,EAxmBD,IAwmBoB,GACtC,CAAC6L,GAA2BJ,GAC7BE,GAAsBA,GACtB5K,GAAiBxhD,SAAUklD,GAAczE,EAAgBG,EACzDuE,KAEF,MAAMyH,GAAsD,QAAnCnB,IAA+E,WAAnCA,GAG/DoB,GAAaD,IAAoBR,IAAwBE,GAA6B,EACxFF,IAAwBE,GAA4B,EAAI,EAEtDQ,GALsBF,IAMrBZ,IAAyBE,GAA6C,WAAf,aAExDa,IAA0BvjE,EAAAA,EAAAA,MAC1BwjE,IAAwBxjE,EAAAA,EAAAA,MACxByjE,IAA+BzjE,EAAAA,EAAAA,MAC/B0jE,IAA6B1jE,EAAAA,EAAAA,MAC7B2jE,IAAwB3jE,EAAAA,EAAAA,OAE9BmB,EAAAA,EAAAA,KAAU,KACJ+T,IAAgB1S,IAAUZ,QAAQ+3D,KACpCsJ,IAAiC,GAE7BU,GAAsBxjE,SACxBe,aAAayiE,GAAsBxjE,SAGrCwjE,GAAsBxjE,QAAUuB,YAAW,KACzCuhE,IAAiC,GACjCU,GAAsBxjE,aAAUxH,CAAS,GAnoBf,QAsoB5BsqE,IAAiC,GAE7BU,GAAsBxjE,UACxBe,aAAayiE,GAAsBxjE,SACnCwjE,GAAsBxjE,aAAUxH,IAI7B,KACDgrE,GAAsBxjE,SACxBe,aAAayiE,GAAsBxjE,QACrC,IAED,CAAC+U,GAAc1S,GAAQm3D,MAE1Bx4D,EAAAA,EAAAA,KAAU,KACJoiE,GAAwBpjE,SAASe,aAAaqiE,GAAwBpjE,SACtEqjE,GAAsBrjE,SAASe,aAAasiE,GAAsBrjE,SAElEmgE,KACFkD,GAAsBrjE,QAAUuB,YAAW,KACzCmhE,IAAwB,EAAK,GAC5B,IACHJ,IAAwB,GACxBc,GAAwBpjE,QAAUuB,YAAW,KAC3C6gE,IAA8B,EAAK,GAClCpN,KAGAmL,KACHuC,IAAwB,GACxBU,GAAwBpjE,QAAUuB,YAAW,KAC3C+gE,IAAwB,EAAK,GAC5BtN,IACL,GACC,CAACmL,MAEJn/D,EAAAA,EAAAA,KAAU,KACJsiE,GAA6BtjE,SAASe,aAAauiE,GAA6BtjE,SAChFujE,GAA2BvjE,SAASe,aAAawiE,GAA2BvjE,SAE5EogE,KACFmD,GAA2BvjE,QAAUuB,YAAW,KAC9CqhE,IAA6B,EAAK,GACjC,IACHJ,IAA6B,GAC7Bc,GAA6BtjE,QAAUuB,YAAW,KAChD6gE,IAA8B,EAAK,GAClCpN,KAGAoL,KACHwC,IAA6B,GAC7BU,GAA6BtjE,QAAUuB,YAAW,KAChDihE,IAA6B,EAAK,GACjCxN,IACL,GACC,CAACoL,MAEJp/D,EAAAA,EAAAA,KAAU,KACH2hE,IAA8BF,IACjCL,IAA8B,EAChC,GACC,CAACA,GAA+BO,GAA2BF,KAE9D,MAAMgB,GAAa3M,EAAiB,wBAA0B,GAExD4M,IAAkBzgE,EAAAA,EAAAA,IAAgB,KAClCy2D,GACF2B,GAAU,CACRoB,UAAW,yBAGbyB,KACA5C,IAAsB,GACtB9J,EAAuB,CAAEU,MAAO,cAChCT,IACF,IAGIkS,IAAsB1gE,EAAAA,EAAAA,IAAgB,KAC1Ci7D,IAA0B,IAGtB0F,IAAwB3gE,EAAAA,EAAAA,IAAiBM,IAC7CyzD,EAAyBzzD,EAAE,IAGvBsgE,IAAgB72D,EAAAA,GAAAA,GACpBwH,GAAOsvD,UACPpK,IAAuBllD,GAAOuvD,WAE1BC,GAAoBnB,GAAgCrJ,GACtD9H,GAAQgI,GAAsB,OAAS,SAErCuK,GAAmB5K,IAAwBr5D,QA0GjD,OAxGAgB,EAAAA,EAAAA,KAAU,KAERgiE,GADc3J,IAAwBr5D,SAAS4T,aAAe,EACjC,GAC5B,CAACowD,GAAmBC,KAsGrBngE,EAAAA,GAAA7K,cAAA,OACEiS,IAAKoU,GACLrb,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOwf,MACNxjB,IAAYgE,GAAO0vD,OACpBnN,GAAuBviD,GAAO2vD,WAG/BpvD,KAAgBkpD,EAAAA,EAAAA,OA9EjBn6D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO4vD,aACrBtgE,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKkuD,GAAiBn1D,UAAWuQ,GAAO6vD,aAAc1/D,QAAS++D,IAClE5/D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO8vD,mBACrBxgE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW4/D,MA1BtB//D,EAAAA,GAAA7K,cAAA,QACEgL,UAAWuQ,GAAO+vD,uBAClBloE,MACG,UAAS0mE,SAGZj/D,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTC,UAbFiwC,GAAsC,EACnCnJ,GAAsB,EAAI,EAa3Bv1D,KAAK,aAELL,EAAAA,GAAA7K,cAAA,OACEiS,IAAKmuD,GACLp1D,UAAWuQ,GAAOwvD,mBAEjBA,OAgBLlgE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOgwD,mBACrB1gE,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACTwH,GAAO6vD,aACP7vD,GAAO1B,OAGThP,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CACHx/B,KAAK,OACLF,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOzK,KACPyK,GAAOiwD,cAET9/D,QAASg/D,MAGb7/D,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACTwH,GAAO6vD,aACP7vD,GAAOsF,QAGThW,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CACHx/B,KAAK,OACLF,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOzK,KACPyK,GAAOkwD,UAET//D,QAASi/D,SA4CftS,KAvBCqI,GAIH71D,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOmwD,mBAAoB3wB,GAAYx/B,GAAOowD,MACxEC,QAAQ,eAER/gE,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,GAAOmlD,gBAAiB3L,EAAG2L,MArBlD,WACE,MAAM11D,GAAY+I,EAAAA,GAAAA,GAAewH,GAAOmwD,mBAAoBnwD,GAAOswD,uBAAwB9wB,GAAYx/B,GAAOowD,MAC9G,OACE9gE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWA,GACdH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOuwD,oBACvBjhE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOuwD,oBACvBjhE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOuwD,oBACvBjhE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOuwD,oBAG7B,CAIWC,IAuBPlhE,EAAAA,GAAA7K,cAAA,UACEgL,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOzF,MACPozD,IAA8B3tD,GAAOywD,YACpCjxB,GAAYx/B,GAAOowD,MAEtBvoE,MAAOonE,GACPhqE,IAAK4U,GACLxK,MAAQ,GAAE8hD,GAAKyJ,oBACf8V,QAASjQ,GACTkQ,MAAM,mCACNC,iBAAe,EACfl6D,IAAKgwD,MAEL5J,IACAxtD,EAAAA,GAAA7K,cAAA,OACEoD,MAAQ,qBAAoBo8D,KAC5Bx0D,WAAW+I,EAAAA,GAAAA,GACTwH,GAAO6wD,iBAC4B,SAAnCvD,IAA6CttD,GAAO8wD,YACjB,UAAnCxD,IAA8CttD,GAAO+wD,YAClB,QAAnCzD,IAA4CttD,GAAOgxD,YAChB,WAAnC1D,IAA+CttD,GAAOixD,YACpC,eAAlBtC,IAAkC3uD,GAAOkxD,eAC3B,IAAdxC,IAAmB1uD,GAAOmxD,OACZ,IAAdzC,IAAmB1uD,GAAOoxD,UAG5B9hE,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOqjD,gBACP8K,KAA8BJ,IAA6B/tD,GAAOqxD,QAClEtD,IAA6B/tD,GAAO0vD,QAEtCzoB,OAAK,EACLp/C,MAAQ,qBAAoB0lE,cAAuCC,KACnE9qD,UAAW+qD,KAAmCpK,GAAiBkH,kBAC/Dt3B,eAAgBowB,GAAiBkH,kBACjCp6D,QAAS87D,GACTt/D,KAAK,YAEH02D,GAAiBkH,mBAAqBmD,GACvCrK,GAAiBkH,mBACfj7D,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAACta,UAAWuQ,GAAOsxD,kBAAmBrhE,MAAM,UAEzDX,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOmjD,WACP8K,KAAyBJ,IAAwB7tD,GAAOqxD,QACxDxD,IAAwB7tD,GAAO0vD,QAEjCzoB,OAAK,EACLp/C,MAAQ,qBAAoBqlE,cAAkCC,KAC9DzqD,UAAW0qD,KAA8BjK,GAAYoH,kBACrDt3B,eAAgBkwB,GAAYoH,kBAC5Bp6D,QAAS67D,GACTr/D,KAAK,YAEHw2D,GAAYoH,mBAAqB8C,GAClClK,GAAYoH,mBAAqBj7D,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAACta,UAAWuQ,GAAOsxD,kBAAmBrhE,MAAM,YAI3FwzD,GACCn0D,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQZ,QAAQw2D,GAChBp0D,MAAOo0D,EAAgBp0D,OAn6BpB,IAo6BHtB,QAASq+D,GACTmF,gBAAc,EACd9hE,WACE+I,EAAAA,GAAAA,GAAewH,GAAOwxD,aAAc/N,EAAgBp0D,OAAOg7D,OAAOvnE,QAAUkd,GAAOyxD,eAGpFhO,EAAgBhgE,QACjB6L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACZg0D,EAAgBiH,QAAQ10D,KAAKw6B,GAC5BlhC,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLmG,IAAKq6B,EAAOtqC,IAAMsqC,EAAO9tC,KACzB+M,UAAU,wBACVQ,MAAuB,gBAAhBugC,EAAO9tC,KAAyB,SAAW,UAClDwN,QAAM,EACNvD,KAAK,UAELwD,QAASA,IAAMw6D,GAAoBn6B,EAAOtqC,KAEzCsqC,EAAOr5B,MAAQ+lD,GAAQwD,GAAoBlwB,EAAO9tC,YAO7D4M,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ81D,EACR51D,QAASg9D,GACT17D,MAAO6tD,GAAQ,4BACf/lD,KAAM+lD,GAAQ,mCACd/3B,eAAgB2nC,GAChB5nC,aAAcg4B,GAAQ,kBAExB5tD,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQg2D,EACR91D,QAASi9D,GACT37D,MAAO6tD,GAAQ,6BACf/lD,KAAM+lD,GAAQ,uBACd/3B,eAAgB6nC,GAChB9nC,aAAcg4B,GAAQ,iCAExB5tD,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQZ,QAAQ82D,GAChB10D,MAAOJ,GAAK,wBACZsa,UAAWta,GAAK,6BAA8B,CAC5CkiD,IAAKA,GAAKyJ,UACV8W,SAAU3N,GAAuBlwD,UAChC,CACD89D,WAAW,EACXC,cAAc,IAEhB1sC,aAAcj2B,GAAK,yBACnBlB,QAASw9D,GACTpmC,eAAgB8nC,KAGlB39D,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQu3D,GACRr3D,QAAS89D,GACTx8D,MAAO6tD,GAAQ,+BACf/lD,KAAM+lD,GAAQ,yBACd/3B,eAAgB2mC,GAChB1mC,sBAAoB,EACpBF,aAAcg4B,GAAQ,gCAExB5tD,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQw3D,GACRt3D,QAASg+D,GACT18D,MAAO6tD,GAAQ,0BACf3zC,WAAWkM,EAAAA,GAAAA,GAAWynC,GAAQ,oBAAqB/L,GAAKyJ,WAAY,CAAC,oBACrEz1B,eAAgBynC,GAChBxnC,sBAAoB,IAElB,KE7jCV,GAAkP,WAAlP,GAAiS,WAAjS,GAAuV,WAAvV,GAAiZ,WAAjZ,GAAuhB,WAAvhB,GAA4lB,WAA5lB,GAAsxB,WAAtxB,GAAy/B,WAAz/B,GAAkoC,WAAloC,GAAirC,WAAjrC,GAAmsC,WCmE7rCysC,GAAuB,CAAEpmE,MAAO,IAAKK,OAAQ,IAE7CgmE,GAA+B,CAAErmE,MAAO,IAAKK,OAAQ,KAonB3D,IAAe8B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA4B,IAA1B,MAAE01B,GAAO11B,EAChB,MAAM4qD,EAAel1B,GAAOm1B,iBAAkBC,EAAAA,EAAAA,KAAa/vD,EAAQ26B,EAAMm1B,sBAAmB98D,GACpFwwD,MAAOwM,GAAgBH,GAAgB,CAAC,EAOhD,MAAO,CACLI,UANgBD,EAAchwD,EAAOkwD,WAAWC,KAAKH,QAAeh9D,EAOpEmtD,IANU6P,GAAc/sB,EAAAA,EAAAA,KAAWjjC,EAAQgwD,QAAeh9D,EAO1DgxB,MANWysC,EAAAA,EAAAA,KAAkBzwD,GAO7BitD,OANYyD,EAAAA,EAAAA,KAAY1wD,GAOzB,GAfeD,EAlnB2B7H,IAMzC,IAN0C,MAC9CyiC,EAAK,KACL3W,EAAI,IACJm8B,EAAG,UACH8P,EAAS,MACThD,GACD/0D,EACC,MAAM,kBACJw5D,EAAiB,iBACjBzF,EAAgB,eAChB8U,EAAc,gBACdnP,EAAe,SACfx0B,EAAQ,uBACR4uB,EAAsB,cACtBgV,EAAa,aACb/O,EAAY,gBACZgP,EAAe,iBACfC,IACEhkE,EAAAA,EAAAA,OAEGikE,EAAuBC,IAAyBz1D,EAAAA,EAAAA,IACrD,CAAElR,MAxBwC,IAwBGK,OAxBU,MA2BzD,SAASumE,IACP,MAA0B,eAAtB1mC,GAAOixB,WAAoChjC,EAAAA,EAAWztB,MAChC,cAAtBw/B,GAAOixB,WAAmCuV,IACvCN,EACT,CAMA,MAAM,cACJhV,EAAa,gBAAEiE,EAAe,kBAAEwR,EAAiB,YAAEC,EAAW,oBAAEC,GAC9D7mC,GAAS,CAAC,EACRk1B,EAAeC,EAAkBjE,IAAgBiE,QAAmB98D,GACpE,oBACJkhE,EAAmB,YAAEsB,EAAW,gBAAEN,EAAe,wBAAE8D,GACjDnJ,GAAgB,CAAC,EAEf4R,GAAO1oE,EAAAA,EAAAA,KAAQ,IACZuoE,GAAmBt8D,KAAKG,IAC7B,MAAMgsD,EAAStF,EAAe1mD,GAC9B,MAAO,CACLg7C,KAAK1e,EAAAA,EAAAA,MAAYrK,MAAMC,KAAK85B,EAAO3N,OACnC2N,SACAt0D,OAAQZ,QAAQ4zD,GAAiB1qD,KAAQovD,EAAAA,GAAAA,IAAa1E,IACvD,KAEF,CAACyR,EAAmBzV,EAAegE,KAEhC,SAAEztD,IAAaC,EAAAA,EAAAA,MACfxF,EAAS89B,GAAOkmB,cAAe,EAC/B6gB,EAAyC,cAAtB/mC,GAAOixB,WAC1BE,EAAyC,cAAtBnxB,GAAOixB,WAC1B+V,EAAqC,eAAtBhnC,GAAOixB,WAEtBgW,GAAuBx/D,EAEvBsD,GAAMrL,EAAAA,EAAAA,IAAuB,MAE7B0tB,GAAY1tB,EAAAA,EAAAA,IAAuB,MAEnCwnE,GAAUxnE,EAAAA,EAAAA,IAAuB,MAEjCynE,GAAoBrkE,EAAAA,EAAAA,IAAgB,IAAMiI,EAAIlL,UAE9CunE,GAAiBtkE,EAAAA,EAAAA,IACrB,IAAMiI,EAAIlL,UAGNwnE,GAAiBvkE,EAAAA,EAAAA,IACrB,IAAMokE,EAAQrnE,WAGV,kBACJynE,EAAiB,kBACjBC,EAAiB,kBACjBC,GAAiB,uBACjBC,GAAsB,sBACtBC,KACEC,EAAAA,GAAAA,GAAuB58D,IAEpB68D,GAAmBC,KAAwBnlE,EAAAA,EAAAA,KAAS,GAErDolE,GAAgB16C,EAAUvtB,QAC1BkoE,GAAmBh9D,EAAIlL,SAE7BgB,EAAAA,EAAAA,KAAU,KACRgnE,GAAqBvmE,QAAQ2lE,GAAuBa,IAAiBC,KAAqBf,GAAc,GACvG,CAACC,EAAqBa,GAAeC,GAAkBf,KAE1DnmE,EAAAA,EAAAA,KAAU,KACRwwD,EAAuB,CAAEU,MAAO,aAAc,GAC7C,CAACkV,IAEJ,MAAM,WACJe,GAAU,WACVpnD,GACA1kB,MAAO+rE,GAAc,KACrBjnE,IZ3HW,SACb+J,EACAm9D,GAKA,IAJAC,IAAsB5nE,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,KAAAA,UAAA,GACtB6nE,EAAkB7nE,UAAApJ,OAAA,EAAAoJ,UAAA,QAAAlI,EAClBuc,EAAqBrU,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GACrB8nE,EAAiB9nE,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAAG,CAAET,MAAO,EAAGK,OAAQ,GAExC,MAAOmoE,EAAwBC,IAA6B7lE,EAAAA,EAAAA,SAA4BrK,IACjFmwE,EAAoBC,IAAyB/lE,EAAAA,EAAAA,SAA2BrK,IAExEqwE,EAAoCC,IAAsC33D,EAAAA,EAAAA,IAAU,CAAEwO,EAAG,EAAGC,EAAG,KAC/FmpD,EAAgCC,IAAkC73D,EAAAA,EAAAA,IAAU,CAAElR,MAAO,EAAGK,OAAQ,KAChG2oE,EAAwBC,IAA0B/3D,EAAAA,EAAAA,IAAU,CAAEwO,EAAG,EAAGC,EAAG,IAExEupD,EAAkCN,IAClCO,EAAsBH,IAEtBjhD,EAAU9c,EAAIlL,QACdqpE,EAAoBhB,EAAqBroE,SAExCspE,EAAaC,IAAkB5hE,EAAAA,EAAAA,IAAQ,IACvC6hE,EAAiBC,IAAsB9hE,EAAAA,EAAAA,IAAQ,IAC/CwgE,EAAYuB,EAAeC,IAAgBhiE,EAAAA,EAAAA,IAAQ,IACnDoZ,EAAY6oD,EAAeC,IAAgBliE,EAAAA,EAAAA,IAAQ,IACnDmiE,EAAmBC,EAAqBC,IAAsBriE,EAAAA,EAAAA,IAAQ,IAEtEsiE,EAAiBC,IAAsBrnE,EAAAA,EAAAA,SAAuCrK,GAErF,SAAS2xE,IACP,MAAO,CACLlqE,MAAOqB,OAAO8oE,WACd9pE,OAAQgB,OAAO+oE,YAEnB,CAEA,MAAMC,GAAwBrnE,EAAAA,EAAAA,IAAiBoT,IACxCtB,GAAc2zD,EAA0B,CAAE/oD,EAAGtJ,EAASsJ,EAAGC,EAAGvJ,EAASuJ,GAAI,IAG1E2qD,GAAoBtnE,EAAAA,EAAAA,IAAgB,IACjC8R,EAAek8C,GAAsBwX,IAGxC+B,GAAsBvnE,EAAAA,EAAAA,IAAgB,KAC1C,IAAK0lE,EAAoB,OACzB,MAAM,MAAE1oE,EAAK,OAAEK,GAAWqoE,EAEpB8B,EAAcN,IAOpB,MAAO,CAAExqD,GANa8qD,EAAYxqE,MAGCA,GAAS,EAGrB2f,GALA6qD,EAAYnqE,OAGCA,GAAU,EAET,KAGvCU,EAAAA,EAAAA,KAAU,KACJgnB,GAASyhD,GAAoB,GAChC,CAACzhD,KAEJhnB,EAAAA,EAAAA,KAAU,KACR,IAAKsoE,GAAeX,EAAoB,CACtC,MAAM+B,EAAmBF,IACzB,IAAKE,EAAkB,OAEvBJ,EAAsBI,GACtBnB,GACF,IACC,CAACZ,EAAoBW,EAAathD,IAErC,MAAM2iD,GAAkB1nE,EAAAA,EAAAA,IAAiB8hB,IACvC,GAAIA,aAAiBxR,YAA+B,IAAjBwR,EAAMigB,OACvC,OAIF,GADsBjgB,EAAMvhB,OACV/I,QAAQ,cAAgButB,EACxC,OAEF,MAAM,MAAE1U,EAAK,MAAEsO,GAAW,YAAamD,EAASA,EAAMvR,QAAQ,GAAKuR,GAE7D,KAAEjS,EAAI,IAAEkH,GAAQgO,EAAQ7U,wBAC9B21D,EAAmC,CAAEnpD,EAAG7M,EAAM8M,EAAG5F,IACjDkvD,EAAuB,CAAEvpD,EAAGrM,EAAOsM,EAAGgC,IAEtC8nD,GAAe,IAaXkB,GAAoB3nE,EAAAA,EAAAA,IAAiB8hB,IACzC,GAAIA,aAAiBxR,YAA+B,IAAjBwR,EAAMigB,OACvC,OAGF,MAAM6lC,EAAgB9lD,EAAMvhB,OAC5B,IAAKwkB,IAAY6iD,EACf,OAEF,MAAMC,EAnBR,SAAmCD,GACjC,MAAMpwE,EAAWwtB,GAAqB4iD,EAAcpwE,QAAQwtB,GAE5D,GAAKxtB,EAAQswE,EAAAA,KACb,IAAK,MAAM9iD,KAAY8oC,GACrB,GAAIt2D,EAAS,IAAGwtB,KAAe,OAAOmoC,GAAyBnoC,EAGnE,CAWuB+iD,CAA0BH,GAE/C,QAAqBryE,IAAjBsyE,EAA4B,OAChCZ,EAAmBY,GAEnB,MAAM,MAAEx3D,EAAK,MAAEsO,GAAW,YAAamD,EAASA,EAAMvR,QAAQ,GAAKuR,GAE7D,KACJjS,EAAI,MAAEgH,EAAK,IAAEE,EAAG,OAAEC,GAChB+N,EAAQ7U,wBACZ21D,EAAmC,CAAEnpD,EAAG7M,EAAM8M,EAAG5F,IACjDgvD,EAA+B,CAAE/oE,MAAO6Z,EAAQhH,EAAMxS,OAAQ2Z,EAASD,IACvEkvD,EAAuB,CAAEvpD,EAAGrM,EAAOsM,EAAGgC,IAEtCgoD,GAAe,IAGXqB,GAAoBhoE,EAAAA,EAAAA,IAAgB,KACxC0mE,GAAc,IAGVuB,GAAsBjoE,EAAAA,EAAAA,IAAgB,KAC1C4mE,GAAc,KAGhB7oE,EAAAA,EAAAA,KAAU,KACHsnE,GACHqB,GACF,GACC,CAACrB,IAEJ,MAAM6C,EAA8BA,CAACxrD,EAAWC,KAC9C,MAAM6qD,EAAcN,IAEdiB,EAAmBX,EAAYxqE,MAC/BorE,EAAoBZ,EAAYnqE,OAEhCgrE,EAAiB3C,EAAoB1oE,MACrCsrE,EAAkB5C,EAAoBroE,OAE5C,IAAIkrE,EAAO7rD,EACP8rD,EAAO7rD,EAOX,OALI4rD,EAAO,IAAGA,EAAO,GACjBC,EAAO,IAAGA,EAAO,GACjBD,EAAOF,EAAiBF,IAAkBI,EAAOJ,EAAmBE,GACpEG,EAAOF,EAAkBF,IAAmBI,EAAOJ,EAAoBE,GAEpE,CAAE5rD,EAAG6rD,EAAM5rD,EAAG6rD,EAAM,EAGvBC,GAA6BzoE,EAAAA,EAAAA,IAAgB,KACjD,GAAI8R,EAAc,OAClB,MAAMsB,EAAYmzD,EAA0Cf,EAAxB+B,IACpC,IAAK7B,IAAuBtyD,EAAU,OACtC,MAAMs1D,EAAcR,EAA4B90D,EAASsJ,EAAGtJ,EAASuJ,GACrE0qD,EAAsBqB,EAAY,IAG9BC,GAA0B3oE,EAAAA,EAAAA,IAAiB4oE,IAC/C,MAAMC,EAAUD,EAEVpB,EAAcN,IAEd4B,EAAgBxD,EAAatoE,MAC7B+rE,EAAiBzD,EAAajoE,OAIpC,OAHAwrE,EAAQ7rE,MAAQgK,KAAK8Z,IAAI0mD,EAAYxqE,MAAOgK,KAAKqZ,IAAIyoD,EAAeD,EAAQ7rE,QAC5E6rE,EAAQxrE,OAAS2J,KAAK8Z,IAAI0mD,EAAYnqE,OAAQ2J,KAAKqZ,IAAI0oD,EAAgBF,EAAQxrE,SAExEwrE,CAAO,KAGhB9qE,EAAAA,EAAAA,KAAU,KACR,GAAI+f,EAAY,OAChB,MAAM+qD,EAAUF,EAAwB,CAAE3rE,MAAOsoE,EAAatoE,MAAOK,OAAQioE,EAAajoE,SACtFwrE,GAASlD,EAAsBkD,EAAQ,GAC1C,CAACvD,EAAcxnD,IAElB,MAAMkrD,GAAyBhpE,EAAAA,EAAAA,IAAgB,KAC7C,IAAK0lE,GAAsB5nD,EAAY,OACvC,MAAM+qD,EAAUF,EAAwBjD,GACpCmD,GAASlD,EAAsBkD,EAAQ,KAG7C9qE,EAAAA,EAAAA,KAAU,KACJ+f,GACJ2qD,GAA4B,GAC3B,CAAC/C,EAAoB5nD,KAExB/f,EAAAA,EAAAA,KAAU,KACR,MAAMkrE,EAAqBA,KACzBnC,IACAkC,IACAP,IACI1a,KACFjwD,aAAaiwD,IACbA,QAAgBx4D,GAElBw4D,GAAgB1vD,OAAOC,YAAW,KAChCyvD,QAAgBx4D,EAChBwxE,GAAoB,GACnB,IAAI,EAKT,OAFA1oE,OAAOsL,iBAAiB,SAAUs/D,GAE3B,KACLnrE,aAAaiwD,IACbA,QAAgBx4D,EAChB8I,OAAOuL,oBAAoB,SAAUq/D,EAAmB,CACzD,GACA,CAACR,IAEJ,MAAMS,GAAalpE,EAAAA,EAAAA,IAAiB8hB,IAClC,IAAKojD,IAAengD,EAAS,OAC7B,MAAM,MAAE1U,EAAK,MAAEsO,GAAW,YAAamD,EAASA,EAAMvR,QAAQ,GAAKuR,EAE7DwB,EAAUjT,EAAQ81D,EAAoBzpD,EACtC6G,EAAU5E,EAAQwnD,EAAoBxpD,EAEtC4rD,EAAOrC,EAAgCxpD,EAAI4G,EAC3CklD,EAAOtC,EAAgCvpD,EAAI4G,EAE7CmiD,GAAoBD,EAA0ByC,EAA4BK,EAAMC,GAAM,IAGtF/+D,GAAezJ,EAAAA,EAAAA,IAAiB8hB,IACpC,IAAKhE,IAAeiH,QAA+BxvB,IAApByxE,EAA+B,OAC9D,MAAM,MAAE32D,EAAK,MAAEsO,GAAW,YAAamD,EAASA,EAAMvR,QAAQ,GAAKuR,EAC7DqnD,EAAuBrD,IAEvBsD,EAAepiE,KAAK8Z,IAAI9Z,KAAKqZ,IAAI,EAAGhQ,GAAQ62D,IAAiBlqE,OAC7DqsE,EAAeriE,KAAK8Z,IAAI9Z,KAAKqZ,IAAI,EAAG1B,GAAQuoD,IAAiB7pE,QAE7DimB,EAAU8lD,EAAejD,EAAoBzpD,EAC7C6G,EAAU8lD,EAAelD,EAAoBxpD,EAE7C2sD,EAAOpD,EAAgCxpD,EAAIysD,EAAqBnsE,MAAQuoE,EAAYvoE,MACpFusE,EAAOrD,EAAgCvpD,EAAIwsD,EAAqB9rE,OAASkoE,EAAYloE,OASrFmsE,EAAY,CANhB9sD,EAAGwpD,EAAgCxpD,EACnCC,EAAGupD,EAAgCvpD,EACnC3f,MAAOmsE,EAAqBnsE,MAC5BK,OAAQ8rE,EAAqB9rE,QAK3B2pE,IAAoB9Z,GAAiBnvB,MACtCipC,IAAoB9Z,GAAiBK,SACrCyZ,IAAoB9Z,GAAiBS,aAEtC6b,EAAUxsE,MAAQgK,KAAKqZ,IAAI8oD,EAAqBnsE,MAAQsmB,EAASiiD,EAAYvoE,OAC7EwsE,EAAU9sD,EAAI1V,KAAK8Z,IAAI0oD,EAAU9sD,EAAI4G,EAASgmD,IAG5CtC,IAAoB9Z,GAAiBjvB,OACtC+oC,IAAoB9Z,GAAiBO,UACrCuZ,IAAoB9Z,GAAiBW,cAEtC2b,EAAUxsE,MAAQgK,KAAKqZ,IAAI8oD,EAAqBnsE,MAAQsmB,EAASiiD,EAAYvoE,QAG3EgqE,IAAoB9Z,GAAiBE,KACtC4Z,IAAoB9Z,GAAiBK,SACrCyZ,IAAoB9Z,GAAiBO,WAEtC+b,EAAUnsE,OAAS2J,KAAKqZ,IAAI8oD,EAAqB9rE,OAASkmB,EAASgiD,EAAYloE,QAC/EmsE,EAAU7sD,EAAI3V,KAAK8Z,IAAI0oD,EAAU7sD,EAAI4G,EAASgmD,IAG5CvC,IAAoB9Z,GAAiBG,QACtC2Z,IAAoB9Z,GAAiBS,YACrCqZ,IAAoB9Z,GAAiBW,cAEtC2b,EAAUnsE,OAAS2J,KAAKqZ,IAAI8oD,EAAqB9rE,OAASkmB,EAASgiD,EAAYloE,SAGjFsoE,EAAsB,CAAE3oE,MAAOwsE,EAAUxsE,MAAOK,OAAQmsE,EAAUnsE,SAClEooE,EAA0B,CAAE/oD,EAAG8sD,EAAU9sD,EAAGC,EAAG6sD,EAAU7sD,GAAI,KAG/D5e,EAAAA,EAAAA,KAAU,KACR,IAAI+S,EAUJ,OATIs1D,GAAqBf,IACvBv0D,GAAUC,EAAAA,GAAAA,IAAcq1D,EAAmB,CACzCp1D,UAAW02D,EACXv2D,OAAQ+3D,EACRh4D,UAAW82D,EACXtmE,QAASsmE,EACTzuD,cAAeyuD,KAGZl3D,CAAO,GACb,CAACu0D,EAAee,KAEnBroE,EAAAA,EAAAA,KAAU,KACR,MAAM0rE,EAAiC,GACvC,GAAI1kD,GAAWsgD,EACb,IAAK,MAAMrgD,KAAY8oC,GAAuB,CAC5C,MAAM4b,EAAgB3kD,EAAQ/tB,cAAe,iBAAgBguB,KAE7D,GAAI0kD,EAAe,CACjB,MAAM54D,GAAUC,EAAAA,GAAAA,IAAc24D,EAAe,CAC3C14D,UAAW22D,EACXx2D,OAAQ1H,EACRyH,UAAW+2D,EACXvmE,QAASumE,EACT1uD,cAAe0uD,IAGbn3D,GACF24D,EAAS5iE,KAAKiK,EAElB,CACF,CAGF,MAAO,KACL24D,EAASl+D,SAASuF,GAAYA,KAAU,CACzC,GACA,CAACu0D,EAAetgD,IAEnB,MAAM4kD,EAAczE,EAAa,gCAAkC,GAE7D0E,GAAiBtC,IAEvB,IAAKjB,IAAgBX,IAAuBkE,GAC1C,MAAO,CACL1E,YAAY,EACZ9rE,MAAOuwE,GAIX,MAAMvwE,IAAQs6C,EAAAA,GAAAA,GACX,SAAQk2B,GAAeltD,OACvB,QAAOktD,GAAejtD,QACtB7K,GAAiB,cAAa4zD,EAAmB1oE,YACjD8U,GAAiB,eAAc4zD,EAAmBroE,YACnD,oBACC6nE,GAAcpnD,GAAc+oD,IAAsB,+BACnD8C,GAGF,MAAO,CACLv2D,SAAUoyD,EACVtnE,KAAMwnE,EACNR,aACApnD,aACA1kB,SAEJ,CY7OMywE,CACF5hE,EACAqiB,EACAw6C,GACAlB,IACAM,EA/EF,WACE,GAA0B,cAAtBhnC,GAAOixB,WAA4B,OAAOkV,EAEhD,CA6EEyG,IAGIC,GAAc7rE,IAAQ0lE,IAEtBoG,GAAeD,GAAY/sE,MAC3BitE,GAAgBF,GAAY1sE,QAElCU,EAAAA,EAAAA,KAAU,KACJ+f,IACF6lD,EAAsB,CAAE3mE,MAAOgtE,GAAc3sE,OAAQ4sE,IACvD,GACC,CAACA,GAAeD,GAAclsD,GAAY6lD,IAE7C,MAAMlV,IAAUhuD,EAAAA,EAAAA,KACVD,IAAOkuD,EAAAA,GAAAA,MACP,QACJwb,IACE9X,GAAgB,CAAC,EAEf+X,GAAgB/b,EAAgBhb,OAAOwK,OAAOwQ,GAAe/5D,OAAS,GAE5E+1E,EAAAA,GAAAA,IAAY,KACLhc,GACLhb,OAAO4K,KAAKoQ,GAAe7iD,SAAS7D,IAClC,MAAMgsD,EAAStF,EAAc1mD,GACzBgsD,EAAOwW,SACT5G,EAAe,CACbvd,MAAO2N,EAAO3N,MACdmkB,QAASxW,EAAOwW,QAChB7qE,OAAQq0D,EAAOr0D,QAAUknB,EAAM9uB,GAC/B4yE,UAAW3W,EAAO2W,WAEtB,GACA,GACDH,GAvJoB,UAuJS30E,GAAW,GAG3C,MAAM+0E,IAAoB1tE,EAAAA,EAAAA,IAAsD,MAE1E2tE,IAAsB3tE,EAAAA,EAAAA,IAAuC,MAE7D+2D,IAA4B3zD,EAAAA,EAAAA,IAAiBwqE,IACjDF,GAAkBvtE,QAAUytE,CAAQ,IAGhCpS,IAAYp4D,EAAAA,EAAAA,IAAiB8hB,IAC7BwoD,GAAkBvtE,SACpButE,GAAkBvtE,QAAQ+kB,EAC5B,IAGI8xC,IAA8B5zD,EAAAA,EAAAA,IAAiBwqE,IACnDD,GAAoBxtE,QAAUytE,CAAQ,IAGlCrS,IAAcn4D,EAAAA,EAAAA,IAAiBoL,IAC/Bm/D,GAAoBxtE,SACtBwtE,GAAoBxtE,QAAQqO,EAC9B,IAGIq/D,IAA4BzqE,EAAAA,EAAAA,IAAgB,KAChDo4D,GAAU,CACRoB,UAAW,2BACX,IAGEkR,IAAqB1qE,EAAAA,EAAAA,IAAgB,KACzCm4D,GAAY/F,EAAchnD,IAAI,IAG1Bu/D,IAAmB3qE,EAAAA,EAAAA,IAAgB,KACvCwuD,GAAkB,IAGdoc,IAAyB5qE,EAAAA,EAAAA,IAAgB,KAC7CyjE,GAAkB,IAGdoH,IAAiB7qE,EAAAA,EAAAA,IAAgB,KACjCmqE,GAAgB,EAClBlW,IAEAzF,GACF,IAGIsc,IAAoB9qE,EAAAA,EAAAA,IAAgB,KACxC,GAAIwyD,EAAJ,CACE,MAAM9qD,GAAMovD,EAAAA,GAAAA,IAAa1E,GACzBoC,EAAa,CACX9sD,MACAuvD,OAAQ,CACNL,mBAAmB,IAIzB,MAEAzC,EAAgB,CACdpO,MAAOrD,EAAKjrD,GACZ2mE,WAAW,GACX,IAGEqC,IAAkBzgE,EAAAA,EAAAA,IAAgB,KAClCy2D,EACF2B,GAAU,CACRoB,UAAW,wBAGbmR,IACF,IAGIjK,IAAsB1gE,EAAAA,EAAAA,IAAgB,KAC1CuuD,EAAuB,CAAEU,MAAO,aAAc,IAG1C8b,IAAwB/qE,EAAAA,EAAAA,IAAgB,KAC5CuuD,EAAuB,CAAEU,MAAO,cAAe,IAG3C+b,IAA6BhrE,EAAAA,EAAAA,IAAgB,KACjDwjE,GAAiB,IAGbyH,IAAiBjrE,EAAAA,EAAAA,IAAiBkrE,IACtC3H,EAAc,CAAE7P,OAAQwX,EAAIxX,QAAS,IAGjCyX,IAAcnrE,EAAAA,EAAAA,IAAgB,KAClC2/B,EAAS,CACPloC,GAAIirD,EAAKjrD,IACT,IAGE6gD,IAC6Fh9C,EAAAA,EAAAA,KAAQ,IAClG4K,IAAA,IAAC,UAAEC,EAAW/G,OAAQm5C,GAAYryC,EAAA,OACvCrF,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WACE+I,EAAAA,GAAAA,GACEo6D,EDpUm3B,WAAxD,WCqU3zB5rB,GAAc,UAGlBnyC,OAAK,EACLoN,QAAS7O,EACTzG,KAAMimE,EAAsB,OAAS,UACrC3iE,MAAM,cACNE,QAASyE,EACTE,UAAU,gBAEVxF,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,SACJ,GAEV,CAACyD,EAAUw/D,IAEd,SAASiH,KACP,OACEvqE,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG3S,GAAQm8B,GAAOn8B,EAAK9uB,KAAOirD,EAAIjrD,IAC9BoJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,OAAOpF,QAASypE,IAAc1c,GAAQ,sBAEvD5tD,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASpF,QAASgpE,IAAqBjc,GAAQ,sBAC7D8M,GACC16D,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAAS+oE,IAChChc,GAAQ,aAGZ/L,GAAK2oB,aACJxqE,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAM0rD,EAAY,OAAS,UAC3B9wD,QAASopE,GACT3jE,YAAa3I,QAAQg0D,IAEpB/D,GAAQ+D,EAAY,mBAAqB,8BAKpD,CAEA,SAAS8Y,KACP,OACEzqE,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACHzU,OAAQolE,EACR+G,OAAQ9G,EACRx8D,IAAKm8D,EACLpjE,WAAW+I,EAAAA,GAAAA,GACTo6D,EAAsB5yD,GAA2B,oBACjD,yBAEF8yD,kBAAmBA,EACnBE,eAAgBA,EAChBD,eAAgBA,EAChBvwD,WAAS,EACTzU,QAASqlE,GACTplE,oBAAqBqlE,IAEpBwG,KAGP,CAiBA,MAAMI,IAAsBzhE,EAAAA,GAAAA,GDlZqF,WCoZ/G0sD,GDpZ6xC,YCuZzxCgV,IAAgBnwE,EAAAA,EAAAA,KAAQ,KAC5B,GAAIyoE,EAAqB,MAAO,aAChC,IAAKhM,EAAa,OAClB,MAAM,EAAE2T,EAAC,EAAEC,EAAC,EAAE5zB,IAAM6zB,EAAAA,GAAAA,IAAS7T,GACvB8T,GAAOC,EAAAA,GAAAA,IAAa,CAACJ,EAAGC,EAAG5zB,IAEjC,OAD8B,SAAVyX,EAAmB,IAAMqc,EAAOA,GA3VjC,IA4VmB,aAAe,kBAAkB,GACtE,CAAC9T,EAAavI,EAAOuU,IAExB,SAASgI,GAAqB/qE,GAC5B,OACEH,EAAAA,GAAA7K,cAAA,OACEgL,UAAWA,EACXhE,MAAM,KACNK,OAAO,KACPukE,QAAQ,YACRoK,KAAK,QAELnrE,EAAAA,GAAA7K,cAAA,QACEgL,UD1a0c,WC2a1c,YAAU,UACV,YAAU,UACV+pD,EAAE,kCAIV,CAyFA,MAAM1uC,IAAezf,EAAAA,EAAAA,IAAuB,MAsH5C,SAASqvE,GAAuBC,GAC9B,OAAOniE,EAAAA,GAAAA,GAAeoiE,EAAAA,IAA0BD,EAClD,CAiBA,OAxIAE,EAAAA,GAAAA,GAAoB/vD,IAAejd,GAAUivD,IAAsBhyC,GAAatf,SAyI9E8D,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJurE,UAAWpkE,EACXjH,WAAW+I,EAAAA,GAAAA,GDtpBM,WCwpBfo6D,GDxpB4D,WCypB5D9V,GDzpBkI,WC0pBlI6V,GD1pB0J,YC4pB5JoI,YAAanI,EAAsBgB,QAAiB5vE,EACpDg3E,cAAezH,GAvBfjkE,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWirE,GAAuB,SACvCprE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWirE,GAAuB,YACvCprE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWirE,GAAuB,UACvCprE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWirE,GAAuB,WACvCprE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWirE,GAAuB,aACvCprE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWirE,GAAuB,cACvCprE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWirE,GAAuB,gBACvCprE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWirE,GAAuB,uBAekB12E,EAC3D6J,OAAQA,EACRotE,oBAAkB,EAClBltE,QAASqrE,GACTvtC,OAzHAv8B,EAAAA,GAAA7K,cAAA,OACEiS,IAAKqiB,GAEH65C,EAEGF,EAOPpjE,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACT,eACA,YAEF3Q,OAAOs6C,EAAAA,GAAAA,GACL+3B,IAAkB,8BAA6BA,QAGjD5qE,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UD9jBoiC,WC+jBpiCoF,OAAK,EACL5E,MAAM,cACNtD,KAAK,OACLmI,UAAWooD,GAAQgI,EAAsB,OAAS,SAClD/0D,QAAS++D,IAET5/D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWwqE,MAtDpB3qE,EAAAA,GAAA7K,cAAA,OACEgL,UDhhB4K,WCihB5KiH,IAAKoU,IAEJ2nD,GAAMz8D,KAAK2jE,GACVA,EAAI9rE,OAjGZ,WACE,MAAMhG,GAAQs6C,EAAAA,GAAAA,GACZ+3B,IAAkB,8BAA6BA,MAC/C1T,GAAgB,4BAA2BA,KAE7C,OACEl3D,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GACXnY,MAAOA,GAEN2yE,GAAqBx6D,IACtB1Q,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,IAEX1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UDjcqsB,YCkcxsBH,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL5oB,KAAK,OACL6oB,KAAM27B,IAER7hD,EAAAA,GAAA7K,cAACsiD,GAAc,CAACnyC,UAAWu+D,GAAmBtlE,OAAQolE,KAEvDhS,GAAWia,WAAa/pB,GAAKyJ,UAC9BtrD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KAChB1Q,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAWuQ,GACXnL,OAAK,EACL5E,MAAM,cACNtD,KAAK,OACLmI,UAAWooD,GAAQ,SACnB/sD,QAASmpE,IAEThqE,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UAAWuQ,GAAqBrQ,KAAK,YAG9C6qE,GAAqBx6D,IAG5B,CA6DUm7D,GAEA7rE,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL9lB,UDxhBouC,WCyhBpuC9C,KAAK,OACL6oB,KAAMmkD,EAAIxoB,IAEVhhD,QAASA,IAAMupE,GAAeC,OAInCnH,GApEHljE,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,IAEVw6D,GAAqBx6D,IACtB1Q,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,IAEX1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UDne0oB,YCoe7oBH,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UAAWuQ,GAAarQ,KAAK,SAEpCV,GAAK,WACNK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KAChB1Q,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAWuQ,GACXnL,OAAK,EACL5E,MAAM,cACNtD,KAAK,OACLmI,UAAWooD,GAAQ,SACnB/sD,QAASkpE,IAET/pE,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UAAWuQ,GAAqBrQ,KAAK,YAG9C6qE,GAAqBx6D,MA8CpBwyD,GAvCJljE,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GD3fs6B,WC6f/6B,WAEF3D,OAAK,EACL5E,MAAM,cACNtD,KAAK,OACLwD,QAASspE,IAETnqE,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UAAWuQ,GAAarQ,KAAK,UAoElCoqE,KAEDzqE,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GACTwH,GD5kBgkC,WC8kBhkC,WAEFnL,OAAK,EACL5E,MAAM,cACNtD,KAAK,OACLwD,QAASqpE,IAETlqE,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UAAWuQ,GAAkBrQ,KAAK,kBAG1CL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GACTwH,GACA,WAEFnL,OAAK,EACL5E,MAAM,cACNtD,KAAK,OACLwD,QAASg/D,IAET7/D,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UAAWuQ,GAAkBrQ,KAAK,qBArDOL,EAAAA,GAAA7K,cAAC22E,GAAoB,MA6DxE9rE,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,eACV5H,OAAOs6C,EAAAA,GAAAA,GACLqkB,GAAgB,qBAAoBA,IACpC0T,IAAkB,8BAA6BA,QAGjD5qE,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACLmI,UAAWooD,GAAQgI,EAAsB,OAAS,SAClD/0D,QAAS++D,IAET5/D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWwqE,MAElB3qE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAewxD,GAAWia,WAAa/pB,GAAKyJ,YACzD4X,GAtPJljE,EAAAA,GAAA7K,cAACoR,GAAAA,EAAY,CACXpG,WAAW+I,EAAAA,GAAAA,GACTo6D,EAAsB5yD,GAA2B,oBACjD,yBAEFlK,QAASixC,GACThxC,UAAW68D,EAAsB,OAAS,SAEzCiH,QAqRHhyE,MAAQ,qBAAoBq+D,GAAmB,4BAC/Ct6B,YAAU,EACVyvC,iBAAe,GAEd1I,GAAgBoH,KAChBld,GAAiB0V,GAAav8D,KAAKG,GAClC7G,EAAAA,GAAA7K,cAAC62E,GAAqB,CACpBnlE,IAAKA,EACLw1B,MAAOA,EACPy2B,0BAA2BA,GAC3BC,4BAA6BA,GAC7BF,OAAQtF,EAAc1mD,GACtBmsD,eAAgBqR,IAAcpnD,GAC9Bi2C,yBAA0B2Q,GAC1B5Q,oBAAqBqQ,EACrBnQ,YAAaiW,OAGflG,GAAwBljE,EAAAA,GAAA7K,cAAC82E,GAAkB,MACvC,KC7mBZ,IAAe3tE,EAAAA,EAAAA,KAnDqB1E,IAA6C,IAA5C,IAAEioD,EAAG,KAAEzuD,EAAI,yBAAE+xD,GAA0BvrD,EAC1E,MAAM,sBAAEsyE,EAAqB,eAAEC,IAAmBvtE,EAAAA,EAAAA,OAE3CwmD,EAAgBgnB,IAAqBrtE,EAAAA,EAAAA,IAASomD,IAA4B,GAE3ExlD,GAAOC,EAAAA,EAAAA,KAEPysE,GAAuB9qE,EAAAA,EAAAA,KAAY,KACvC4qE,EAAe,CAAEjnB,MAAOrD,EAAKjrD,GAAIwuD,kBAAiB,GACjD,CAAC+mB,EAAgB/mB,EAAgBvD,IAE9ByqB,GAAwB/qE,EAAAA,EAAAA,KAAY,KACxC2qE,GAAuB,GACtB,IAEGnsE,EAA0BJ,EAAT,SAATvM,EAAuB,UAAkB,oBACjDyU,GAAOpN,EAAAA,EAAAA,KAAQ,KACnB,OAAQrH,GACN,IAAK,OACH,OAAOuM,EAAK,0BAA0Bm8B,EAAAA,EAAAA,KAAgB+lB,IACxD,IAAK,SACH,OAAOliD,EAAK,sBAAsBm8B,EAAAA,EAAAA,KAAgB+lB,IAEpD,QACE,OAAOliD,EAAK,6BAChB,GACC,CAACkiD,EAAKzuD,EAAMuM,IAEf,OACEK,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQZ,QAAQkkD,GAChBpjD,QAAS6tE,EACTvsE,MAAOA,EACP81B,eAAgBw2C,IAEflmD,EAAAA,GAAAA,GAAWte,EAAM,CAAC,oBAClBs9C,GACCnlD,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPnlD,UAAU,kBACV86B,QAASmqB,EACTtlD,OAAOqmB,EAAAA,GAAAA,GACLxmB,EAAK,sCAAuCkiD,GAAKyJ,WACjD,CAAC,oBAEH/F,QAAS6mB,IAGC,ICKpB,IAAe9tE,EAAAA,EAAAA,KAtD6B1E,IAEtC,IAFuC,MAC3CyiC,GACDziC,EACC,MAAM,wBAAE2yE,EAAuB,uBAAEC,IAA2B5tE,EAAAA,EAAAA,MACtDijD,EAAMxlB,GAAOwlB,KAEZ4qB,EAAeC,IAAoB3tE,EAAAA,EAAAA,KAAS,GAE7CY,GAAOC,EAAAA,EAAAA,KAEP8iD,GAAgBnhD,EAAAA,EAAAA,KAAY,KAChCgrE,EAAwB,CACtBnnB,eAAgBznD,QAAQkkD,GAAKsD,2BAC7B,GACD,CAAConB,EAAyB1qB,KAG7B3kD,EAAAA,EAAAA,KAAU,KACJ2kD,GACF6qB,GAAiB,EACnB,GACC,CAAC7qB,IAEJ,MAAM8qB,GAAWlyE,EAAAA,EAAAA,KAAQ,KACvB,MACMmyE,EADOjtE,EAAK,mCACCitE,MAAM,UACnBC,EAAWltE,EAAK,iCACtB,MAAO,CACLitE,EAAM,GACN5sE,EAAAA,GAAA7K,cAAA,KAAGiR,KAAM0mE,EAAAA,IAAkBptE,OAAO,SAASqtE,IAAI,uBAAuBF,GACtED,EAAM,GACP,GACA,CAACjtE,IAEJ,OACEK,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQZ,QAAQkkD,GAChBpjD,QAAS+tE,EACTzsE,MAAOJ,EAAK,kCACZk2B,eAAgB6sB,EAChBsqB,mBAAoBP,IAEnBtmD,EAAAA,GAAAA,GAAWxmB,EAAK,gCAAiCkiD,GAAK+pB,WAAY,CAAC,oBACpE5rE,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPnlD,UAAU,kBACV86B,QAASwxC,EACT3sE,MAAO6sE,EACPpnB,QAASmnB,KAEVvmD,EAAAA,GAAAA,GAAWxmB,EAAK,iCAAkCkiD,GAAK+pB,WAAY,CAAC,oBACvD,ICvBpB,IAAettE,EAAAA,EAAAA,KAhC0B1E,IAEnC,IAFoC,OACxCqzE,GACDrzE,EACC,MAAM,2BAAEszE,EAA0B,iBAAEC,EAAgB,0BAAEC,IAA8BxuE,EAAAA,EAAAA,MAC9Ee,GAAOC,EAAAA,EAAAA,KAEPrB,EAASZ,QAAQsvE,GAEjBI,GAAkB7kD,EAAAA,EAAAA,GAAsBykD,IAAWA,EACnDK,EAAeD,GAAiBE,aAEhCC,GAA4BjsE,EAAAA,EAAAA,KAAY,KAC5C2rE,IACII,EACFF,EAA0B,CAAEK,SAAUJ,EAAiBz2E,GAAI82E,wBAAwB,IAEnFP,EAAiB,CAAEv2E,GAAIy2E,EAAiBz2E,IAC1C,GACC,CAAC02E,EAAcD,IAElB,OACErtE,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQA,EACRE,QAASyuE,EACTrlE,KAAqBlI,EAAf2tE,EAAoB,yBAAiC,qBAC3D13C,aAAcj2B,EAAK,UACnBk2B,eAAgB23C,EAChB13C,sBAAoB,GACpB,I,wCC1CN,UAAgB,KAAO,WAAW,KAAO,WAAW,OAAS,WAAW,YAAc,WAAW,KAAO,WAAW,YAAY,WAAW,SAAW,YCsB/I63C,GAAS,CACb,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WACvDjnE,IAAIqkE,GAAAA,IAyCN,IAAezsE,EAAAA,EAAAA,KAtCY1E,IASR,IATa,KAC9BqM,EAAI,WACJ2nE,EAAU,MACV7tE,EAAK,KACL8H,EAAI,MACJ3Q,EAAK,MACLouB,EAAK,QACLwV,EAAO,QACPj6B,GACYjH,EACZ,MAAMi0E,EAAY32E,EAAQouB,EAASqoD,GAAOn6E,OACpCs6E,EAASH,GAAOxnE,KAAKoI,MAAMs/D,IAC3BE,EAASJ,GAAOxnE,KAAK6nE,KAAKH,KAAcC,GACxC,EAAEjD,EAAC,EAAEC,EAAC,EAAE5zB,IAAM+2B,EAAAA,GAAAA,IAAQH,EAAQC,EAAQ,IAEtC92D,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC0B,IAAUi6B,EAAQ,IAGpB,OACE96B,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAACq5C,gBAAiBx9D,GAAOwf,KAAMrvB,QAASoW,EAAa8d,UAAWl0B,GACtE+sE,EACC5tE,EAAAA,GAAA7K,cAAA,KACEgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOy9D,SAAW,aAAYloE,KACxD,iBACA1N,MAAQ,qBAAoBsyE,KAAKC,KAAK5zB,OAGxCl3C,EAAAA,GAAA7K,cAAA,OAAKQ,IAAKsQ,EAAM9F,UAAWuQ,GAAOzK,KAAM0U,IAAI,GAAGpiB,MAAQ,qBAAoBsyE,KAAKC,KAAK5zB,KAAM1hD,WAAW,IAExGwK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO7I,MACrB7H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO3Q,QAAQomB,EAAAA,GAAAA,GAAWpmB,EAAO,CAAC,QAClDC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO1R,aAAc6I,IAE9B,I,gBC9Df,SAA0C,WAA1C,GAAgH,WCyFhH,IAAevJ,EAAAA,EAAAA,KA1EkB1E,IAI3B,IAJ4B,OAChCpG,EAAM,OACNo9C,EAAM,cACNw9B,GACDx0E,EACC,MAAMy0E,EAAYloE,KAAKqZ,IAAI,EAAGrZ,KAAK8Z,IAAIzsB,EAAS,EAAGo9C,EAAS,IACtD09B,EAAiBD,IAAc76E,EAAS,EAAI,EAC5C+6E,EAAcF,IAAc76E,EAAS,EACrCg7E,EAA6B,IAAdH,EACfI,EAAgC,IAAdJ,EAClBK,EAAiBvoE,KAAK8Z,IAAIzsB,EAAQ,GAElCm7E,GAAkBptE,EAAAA,EAAAA,KAAY,KAClC6sE,EAAcx9B,EAAS,EAAE,GACxB,CAACA,EAAQw9B,IAENQ,GAAertE,EAAAA,EAAAA,KAAY,KAC/B6sE,EAAcx9B,EAAS,EAAE,GACxB,CAACA,EAAQw9B,IAEN9oD,EAAQnf,KAAK8Z,IAAI,EAAGzsB,GAE1B,OACEwM,EAAAA,GAAA7K,cAAA,YACIoT,EAAAA,IACAvI,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GAAewH,GAAyB,IAAXkgC,GAAgBlgC,IACxD/P,MAAM,cACNyS,SAAqB,IAAXw9B,EACVrrC,OAAK,EACL1E,QAAS+tE,GAET5uE,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,wBAGjBH,EAAAA,GAAA7K,cAAA,OAAKgL,UDlDY,WCkDY5H,MAAQ,iBAAgB81E,gBAAwB76E,eAAoB8xB,MAC9FyzB,MAAMvlD,GAAQ23E,UAAKz2E,GAAWgS,KAAI,CAACsyC,EAAGC,KACrC,MAAM/hD,EAAQ+hD,EACR41B,EAAU51B,IAAMo1B,EAAYK,EAAiB,IAAMH,IAAgBD,EACnEQ,EAAa71B,IAAMo1B,EAAYK,EAAiB,IAAMJ,IAAmBC,GACzEt1B,IAAMo1B,EAAYK,EAAiB,GAAKJ,EACxCS,EAAW91B,IAAMo1B,IAAeG,IAAiBC,EACjDO,EAAe/1B,IAAMo1B,EAAY,IAAOG,IAAiBC,GACzDx1B,IAAMo1B,GAAaI,EACnBQ,EAAch2B,EAAIo1B,GAAap1B,GAAKo1B,EAAYK,EACtD,OACE1uE,EAAAA,GAAA7K,cAAA,OACE0L,QAASA,IAAMutE,EAAcn1B,GAC7B94C,WAAW+I,EAAAA,GAAAA,GD/DwG,WCiEjHhS,IAAU05C,GDjEyL,YCkElMk+B,GAAaE,IDlEuH,YCmEpIH,GAAUE,GAAWE,IDnEkI,WCoExJA,GDpE+K,aCsEjL,MAIN1mE,EAAAA,IACAvI,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GAAewH,GAAckgC,IAAWp9C,EAAS,GAAKkd,GD5Ed,YC6EnD/P,MAAM,cACN4E,OAAK,EACL6N,SAAUw9B,IAAWp9C,EAAS,EAC9BqN,QAAS8tE,GAET3uE,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oBAGb,ICrFV,GAAsnB,WCoDtnB,IAAe7B,EAAAA,EAAAA,KAlC4B1E,IAMrC,IANsC,UAC1Cs1E,EAAS,WACTC,EAAU,UACVhvE,EAAS,kBACTivE,EAAiB,WACjBC,GACDz1E,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEb,OACEI,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GD5BG,WC4ByB/I,IACzCivE,GACCpvE,EAAAA,GAAA7K,cAAA,OAAKgL,UD9BiE,YC+BpEH,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GD/B8L,WC+BpJ,QAAOkmE,IAAqB,UACpFpvE,EAAAA,GAAA7K,cAAA,OAAKgL,UDhC2R,WCgCrPiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYw6E,GACjFlvE,EAAAA,GAAA7K,cAAA,OAAKgL,UDjCuI,YCkC1IH,EAAAA,GAAA7K,cAAA,OAAKgH,MAAM,KAAKK,OAAO,IAAIukE,QAAQ,WAAWoK,KAAK,QACjDnrE,EAAAA,GAAA7K,cAAA,QAAM+0D,EAAE,oLAAoLihB,KAAK,eAKzMnrE,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GDxCmmB,aCyChoB1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UDzC4V,6BCyChUiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,eAC1EyvE,GAAqBpvE,EAAAA,GAAA7K,cAAA,OAAKgL,UD1CujB,qBC0CzhB+uE,IAE5DlvE,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GD5CsnB,YC4C1lBnY,MAAO82E,GAChErvE,EAAAA,GAAA7K,cAAA,OAAKgL,UD7C+a,6BC6ClZiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,iBAC7EK,EAAAA,GAAA7K,cAAA,OAAKgL,UD9CogB,8BC8CregvE,IAElC,IChCJG,GAAc,CAAC,GAAI,IAAK,KACxBC,GAAY,CAAC,IAAK,IAAK,KA0B7B,IAAejxE,EAAAA,EAAAA,KAxB2B1E,IAMpC,IANqC,MACzCmG,EAAK,YACLf,EAAW,UACXkwE,EAAS,WACTC,EAAU,kBACVK,GACD51E,EACC,MAAM+G,GAAQlG,EAAAA,EAAAA,KAAQ,IACb60E,GAAY5oE,KAAI,CAACiK,EAAOsoC,KAAMw2B,EAAAA,GAAAA,IAAK9+D,EAAO4+D,GAAUt2B,GAAIu2B,MAC9D,CAACA,IAEJ,OACExvE,EAAAA,GAAA7K,cAAA,OAAKgL,UC/Bc,YDgCjBH,EAAAA,GAAA7K,cAAA,OAAKgL,UChC+B,YDgCLJ,GAC/BC,EAAAA,GAAA7K,cAAA,OAAKgL,UCjCwD,YDiCxBnB,GACrCgB,EAAAA,GAAA7K,cAACu6E,GAAoB,CACnBR,UAAWA,EACXC,WAAYA,EACZE,WAAa,mBAAkB1uE,EAAM0Y,KAAK,UAExC,I,4BEvCV,MC+BMs2D,GASD/1E,IAGC,IAHA,KACJyD,EAAI,UAAEuyE,EAAS,QAAErhC,EAAO,QACxBshC,EAAO,MAAE34E,EAAK,UAAE44E,EAAS,QAAEjvE,EAAO,QAAEqY,GACrCtf,EACC,MAAMwB,GAAYL,EAAAA,EAAAA,GAAU,UAAS80E,EAAQj5E,MACvCm5E,GAAkBh1E,EAAAA,EAAAA,GAAU,UAAS80E,EAAQj5E,aAE7Co5E,EAAwB,IAAV94E,GACb+4E,EAAYC,EAASC,IAAatsE,EAAAA,EAAAA,GAAQmsE,GAE3CI,EAAa/yE,EAxBS,GAwBFA,EACpBlB,EAAqB,EAAbi0E,EACR5zE,EAAsB,IAAb4zE,EAITC,EAFIn5E,EAAQ44E,GAEW,EAAV3pE,KAAKmqE,IAClBv0D,EAAQi0D,EAAc,EAAI,IAE1Bn0D,EAAI1V,KAAKoqE,IAAIF,GAASl0E,EAAqB,IAAbi0E,EAC9Bt0D,EAAI3V,KAAKqqE,IAAIH,GAAS7zE,EAEtBya,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC0B,EAAQ+uE,EAAU,IAGdt4D,GAAcnY,EAAAA,EAAAA,IAAgB,KAClCgxE,IACAj3D,EAAQ02D,EAAU,IASpB,OANA1yE,EAAAA,EAAAA,KAAU,KACJ8yE,GACFE,GACF,GACC,CAACF,EAAaE,IAGflwE,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG23C,GACChwE,EAAAA,GAAA7K,cAACs7E,GAAAA,EAAe,CACdtwE,UDjFkG,oBCkFlGuwE,OAAQX,EACRY,KAAMpiC,EACNqiC,eAAa,EACbC,QAAM,EACNxzE,KA3DqB,GA2DUA,EAC/B9E,MAAQ,aAAYsjB,oBAAoBC,SAG5C9b,EAAAA,GAAA7K,cAACs7E,GAAAA,EAAe,CACdtwE,UD3FoC,WC4FpCuwE,OAAQt1E,EACRu1E,KAAMpiC,GAAW0hC,EACjBY,QAAM,EACNxzE,KArEsB,GAqEQA,EAC9B9E,MAAQ,QAAOsjB,aAAaC,mBAAmBC,IAC/Clb,QAASoW,EACTiC,QAAS5B,IAEV,EA2DP,IAAehZ,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CACLovE,SAAUpvE,EAAOovE,SAASC,QAAQD,YAHpBrvE,EAvD6C4D,IAE3D,IAF4D,SAChEyrE,EAAQ,SAAEpkE,GACXrH,EAEC,MAAMmW,GAAezf,EAAAA,EAAAA,IAAuB,OACrCuT,EAAQ0hE,IAAajyE,EAAAA,EAAAA,IAAS,IAC9B1B,EAAM4zE,IAAWlyE,EAAAA,EAAAA,IAAS,GAE3BmyE,EAAmBJ,GAAUh/B,MAAM,EApFxB,IAsFX76B,GAAc9X,EAAAA,EAAAA,IAAiB85C,IACnC+3B,GAAW/3B,EAAE,IAGT3hC,GAAcnY,EAAAA,EAAAA,IAAiB85C,IAEd,KADAk4B,EAAAA,GAAAA,GAAcD,EAAiB19E,OAAQylD,EAAI3pC,IAGhE7R,YAAW,KACTuzE,GAAW90E,IACFi1E,EAAAA,GAAAA,GAAcD,EAAiB19E,OAAQ0I,EAAU,IACxD,GAhGY,IAiGD,IAUjB,OAPAgB,EAAAA,EAAAA,KAAU,KACR,MAAM5G,EAAYklB,EAAatf,QAC1B5F,GAEL26E,EAAQ36E,EAAUK,QAAQ,iBAAkBmZ,YAAY,GACvD,IAGD9P,EAAAA,GAAA7K,cAAA,OACEgL,UD1IiB,WC2IjBiH,IAAKoU,GAEJ7d,QAAQN,IAAS6zE,GAAkBxqE,KAAI,CAACmpE,EAAS52B,IAE9Cj5C,EAAAA,GAAA7K,cAACw6E,GAAqB,CACpBtyE,KAAMA,EACNwyE,QAASA,EACTD,UAAW32B,EACX/hD,OAAQ+hD,EAAI3pC,EAAS4hE,EAAiB19E,QAAU09E,EAAiB19E,OACjEs8E,UAAWoB,EAAiB19E,OAC5BqN,QAASoW,EACTiC,QAAS5B,EACTi3B,QAAS7hC,MAIX,K,4BC3JV,MCsBM0kE,GAAuB,CAC3BC,cAAe,yBACfC,gBAAiB,wBACjBC,cAAe,sBACfC,cAAe,0CACfC,aAAc,8BACdC,gBAAiB,uCACjBC,aAAc,sCAGVC,GAA6B,CACjCP,cAAe,oCACfC,gBAAiB,mCACjBC,cAAe,iCACfC,cAAe,sCACfC,aAAc,yCACdC,gBAAiB,mCACjBC,aAAc,uCAGVE,GAAsB,CAC1BR,cAAe,iBACfC,gBAAiB,qBACjBC,cAAe,cACfC,cAAe,QACfC,aAAc,oBACdC,gBAAiB,gBACjBC,aAAc,cAGVG,GAAsBv/B,OAAO4K,KAAKi0B,IAElCW,GAAc,KAAOppE,EAAAA,EAiE3B,IAAerK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CACL8iD,aAAa7f,EAAAA,EAAAA,KAAWjjC,EAAQA,EAAO8kB,kBAHzB/kB,EA7De7H,IAEjB,IAFkB,YAClC4qD,GACW5qD,EAEX,MAAMo4E,GAAYj2E,EAAAA,EAAAA,IAA0B,MAEtC4D,GAAOC,EAAAA,EAAAA,KAEPqyE,GAAMC,EAAAA,GAAAA,MAEZnjE,EAAAA,EAAAA,KAAgB,KACTijE,EAAU91E,UAIfi2E,EAAAA,GAAAA,GAAmB,CACjB/1E,OAAQ41E,EAAU91E,QAClBmB,KAAM00E,GAAcE,EACpBG,cArBkB,EAsBlBzxE,MAAO,SACP0xE,kBAtBuB,EAuBvBC,iBAAkB,cAClBL,OACA,GACD,CAACA,IAEJ,MAAM,aAAE1+B,EAAY,cAAEJ,GAAkBF,KAElCs/B,EAAUR,GAEhB,OACE/xE,EAAAA,GAAA7K,cAAA,OAAKgL,UDzFc,YC0FjBH,EAAAA,GAAA7K,cAAA,OAAKgL,UD1FgC,YC2FnCH,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAACusD,iBAAe,EAACtsD,KAAMs+B,EAAannD,KAAK,UAChD2C,EAAAA,GAAA7K,cAAA,UAAQgL,UD5F+C,WC4FrBiH,IAAK4qE,EAAWz5E,MAAQ,cAAag6E,oBAA0BA,SAEnGvyE,EAAAA,GAAA7K,cAAA,OAAKgL,UD9FuE,YC8F7CR,EAAK,oBACpCK,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GDhGqF,YCgGpDiqC,GDhG8F,WCgG5D,iBAC9EoF,SAAUhF,GAETu+B,GAAoBprE,KAAI,CAACo0B,EAAS5jC,IAE/B8I,EAAAA,GAAA7K,cAACs9E,GAAkB,CACjB5rE,IAAKi0B,EACL/6B,MAAOJ,EAAKyxE,GAAqBt2C,IACjCjzB,KAAMlI,EAAKiyE,GAA2B92C,IACtC70B,KAAM4rE,GAAoB/2C,GAC1B8yC,YAAU,EACV12E,MAAOA,EACPouB,MAAOwsD,GAAoBt+E,OAC3BsnC,QAASA,MAIf96B,EAAAA,GAAA7K,cAAA,OAAKgL,UDjH+G,YCiHpFR,EAAK,sCAEnC,KCnHV,IAAgB,KAAO,WAAW,QAAU,WAAW,KAAO,WAAW,MAAQ,WAAW,MAAQ,Y,8CC+DpG,IAAerB,EAAAA,EAAAA,KAtCkC1E,IAO3C,IAP4C,QAChD84E,EAAO,mBACPC,EAAkB,OAClBC,EAAM,eACNC,EAAc,MACd37E,EAAK,SACLwV,GACD9S,EACC,MAAMwB,GAAYL,EAAAA,EAAAA,GAAU,WAAU23E,KAChCI,GAAe/oC,EAAAA,GAAAA,GAAc8oC,EAAeh3E,SAC5C6a,GAAuBuzB,EAAAA,GAAAA,GAA6B7uC,GAE1D,OACE4E,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOwf,MACrBlwB,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOqiE,QACPJ,GAAsBjiE,GAAOsiE,QAC7BJ,GAAUliE,GAAOuiE,MAEnBr8E,GAAK,iCAAgCM,KAErC8I,EAAAA,GAAA7K,cAAA,OAAKQ,IAAKu9E,GAAav4D,IAAI,GAAGxa,UAAWuQ,GAAOzF,MAAOzV,WAAW,IAClEwK,EAAAA,GAAA7K,cAAA,UAAQiS,IAAK0rE,EAAc3yE,UAAWuQ,GAAO3c,QAC7CiM,EAAAA,GAAA7K,cAACm5C,GAAAA,EAAc,CACbC,QAAS7hC,EACTvM,WAAW+I,EAAAA,GAAAA,GAAewH,GAAO3c,MAAO2iB,GACxC/gB,IAAKyF,EACL8Z,yBAAuB,EACvB4D,aAAW,EACXnB,OAAK,EACLoB,MAAI,KAGJ,IC3DV,GAAuP,WAAvP,GAA0Q,WAA1Q,GAAge,WAAhe,GAAyf,WC6B5eo6D,GAA4D,CACvEC,cAAe,uBACfC,mBAAoB,2BACpBC,iBAAkB,yBAClBC,eAAgB,sBAChBC,OAAQ,sBACRC,cAAe,4BACfC,cAAe,6BACfC,gBAAiB,8BACjBC,YAAa,wBACbC,yBAA0B,uCAC1BC,kBAAmB,iCACnBC,aAAc,4BACdC,aAAc,6BACdngD,QAAS,wBACTogD,WAAY,sBACZC,UAAW,yBACXC,gBAAiB,+BACjBC,QAAS,0BAGEC,GAAkE,CAC7EjB,cAAe,kCACfC,mBAAoB,sCACpBC,iBAAkB,oCAClBE,OAAQ,iCACRD,eAAgB,iCAChBE,cAAe,uCACfC,cAAe,wCACfC,gBAAiB,yCACjBC,YAAa,mCACbC,yBAA0B,kDAC1BC,kBAAmB,4CACnBC,aAAc,uCACdC,aAAc,wCACdngD,QAAS,mCACTogD,WAAY,iCACZC,UAAW,oCACXC,gBAAiB,0CACjBC,QAAS,8BAGLE,GAAsD,CAC1DC,SAAU,8BACVC,mBAAoB,qBACpBC,eAAgB,wBAChBC,UAAW,sBACXC,cAAe,6BACfC,YAAa,gBACbC,cAAe,qBACfC,cAAe,oBACfC,mBAAoB,0BACpBC,oBAAqB,6BAGjBC,GAA4D,CAChEV,SAAU,iCACVC,mBAAoB,wBACpBC,eAAgB,2BAChBC,UAAW,yBACXC,cAAe,gCACfC,YAAa,mBACbC,cAAe,wBACfC,cAAe,uBACfC,mBAAoB,6BACpBC,oBAAqB,gCAwOvB,IAAe12E,EAAAA,EAAAA,KAxN2B1E,IASpC,IATqC,MACzCs7E,EAAK,eACLxgD,EAAc,UACdygD,EAAS,OACTC,EAAM,kBACNC,EAAiB,mBACjBC,EAAkB,OAClBl4D,EAAM,iBACNm4D,GACD37E,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEP41E,GAAqBz5E,EAAAA,EAAAA,IAAuB,OAC3C05E,EAAmBC,IAAwB32E,EAAAA,EAAAA,IAAS42E,EAAAA,IAAyBznD,QAAQwG,KACrFkhD,EAA4BC,IAAiC92E,EAAAA,EAAAA,IAAS,IACtE+2E,EAAaC,EAAgBC,IAAiBnyE,EAAAA,EAAAA,MAE9CoyE,EAAiBC,IAAsBn3E,EAAAA,EAAAA,KAAS,IAChDo3E,EAAoBC,IAAyBr3E,EAAAA,EAAAA,KAAS,GAEvDs3E,GAAqB7tD,EAAAA,EAAAA,GAAsBkM,GAE3C4hD,GAAmB77E,EAAAA,EAAAA,KAAQ,IAC1B46E,EACEA,EAAkB1lD,QAAQmL,GAAY66C,EAAAA,IAAyB9+E,SAASikC,KADhD66C,EAAAA,KAE9B,CAACN,IAEEkB,GAAyB97E,EAAAA,EAAAA,KAAQ,KACrC,IAAK66E,EAAoB,OAEzB,MAAM,OAAEkB,EAAM,OAAEC,EAAM,SAAEC,GAAapB,EAC/BqB,EAAgBxwE,KAAKoI,MAAMioE,EAASC,GAE1C,OAAOtB,EAAYx1E,EAAK,MAAQA,EAAK,sBAAsBi3E,EAAAA,GAAAA,GAAeD,EAAeD,EAAU/2E,EAAK4pD,MAAM,GAC7G,CAAC4rB,EAAWx1E,EAAM21E,IAEfr+D,GAAc9X,EAAAA,EAAAA,IAAgB,KAClCo2E,EAAiB7gD,EAAe,IAgClC,SAASmiD,EAAmBp3E,GAC1B,MAAM,UAAE1I,EAAS,aAAE2R,EAAY,aAAEm1B,GAAiBp+B,EAAE2X,cACpD8+D,EAAmBn/E,GApFE,IAqFrBq/E,EAAsBr/E,GAAa8mC,EAAen1B,EArF7B,GAsFvB,EAEAxL,EAAAA,EAAAA,KAAU,KACR,MAAM45E,EAAkBtB,EAAmBt5E,QAC3C,IAAK46E,GAAoBT,IAAuB3hD,EAAiB,OAEjE,MAAMx9B,EAAQo/E,EAAiBpoD,QAAQwG,GACvCghD,EAAqBx+E,GACrB6+E,KACAgB,EAAAA,GAAAA,GAAwBD,EAAiBA,EAAgBhnE,YAAc5Y,EAAO,GAC3E8/E,KAAKhB,EAAc,GACrB,CAACP,EAAmBa,EAAkB5hD,EAAgB2hD,IAEzD,MAAMY,GAAoB93E,EAAAA,EAAAA,IAAgBwM,UACxC,MAAMmrE,EAAkBtB,EAAmBt5E,QACtC46E,IAELpB,EAAqBx+E,GAErB6+E,UACMgB,EAAAA,GAAAA,GAAwBD,EAAiBA,EAAgBhnE,YAAc5Y,EAAO,KACpF8+E,IAAe,IAGjB,OACEh2E,EAAAA,GAAA7K,cAAA,OAAKgL,UDhNc,YCiNjBH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACL8C,WAAW+I,EAAAA,GAAAA,GDpNgI,WCoNxE,IAAtBusE,GDpN0J,YCqNvM90E,MAA6B,IAAtB80E,EAA0B,cAAgB,oBACjD50E,QAASuc,EACT5X,UAAW7F,EAAK,SAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BAGfH,EAAAA,GAAA7K,cAAA,OAAKgL,UD5Nkc,aC8NvcH,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GD9N8M,WC8N/K,gBAAiBqvC,SAxEpE,SAAsB94C,GACpB,MAAMC,EAASD,EAAE2X,eACX,YAAEtH,EAAaonE,WAAYC,GAAuBz3E,EAElDw3E,EAAa/wE,KAAKZ,MAAM4xE,GAGxBpwE,EADOmwE,EAAcpnE,EACFA,EAEnBsnE,EAAejxE,KAAK6nE,MAAMkJ,EAAa,GAAKpnE,GAElD+lE,EAA8BuB,GAE9B,MAAMC,EAAc33E,EAAOvJ,cAA+B,mCAAiCihF,EAAe,IACpGE,EAAiB53E,EAAOvJ,cAA+B,kCAAiCihF,KAU9F,IARA7rE,EAAAA,EAAAA,KAAgB,KACd7L,EAAOnH,MAAM6oC,YAAY,oBAAqBr6B,EAASwwE,YACvD73E,EAAOnH,MAAM6oC,YAAY,wBAAyBj7B,KAAK2Z,IAAI/Y,GAAUwwE,YAEjEF,IAAaG,EAAAA,GAAAA,IAAiBH,EAAa,WAAW,GACtDC,IAAgBE,EAAAA,GAAAA,IAAiBF,EAAgB,WAAW,EAAK,IAGnExB,EAAa,OACjB,MAAMhkD,EAAQ3rB,KAAKZ,MAAM2xE,EAAapnE,GACtC4lE,EAAqB5jD,EACvB,EA6C4F1qB,IAAKouE,GAE1Fc,EAAiB5vE,KAAI,CAACo0B,EAAS5jC,KAC9B,GAAgB,kBAAZ4jC,EACF,OACE96B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GDnOiP,aCoO9Q1Q,EAAAA,GAAA7K,cAAA,MAAIgL,WAAW+I,EAAAA,GAAAA,GDpO+V,WCoOjU+sE,GDpO2X,aCqOrat2E,EAAKwzE,GAAuBC,gBAE/BpzE,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GDvO0U,WCuOrS,iBAAkBqvC,SAAUs+B,GAC9EY,EAAAA,IAAqB/wE,KAAI,CAACmb,EAAOo3B,KAChC,MAAMy+B,EAAetC,IAASvzD,GAAO,GAAG01D,WAClCI,EAAevC,IAASvzD,GAAO,GAAG01D,WACxC,OACEv3E,EAAAA,GAAA7K,cAACyiF,GAAmB,CAClB73E,MAAOJ,EAAK20E,GAAczyD,IAC1B7iB,YAAaW,EAAKs1E,GAAoBpzD,GAAQ81D,GAC9CzI,UAAWwI,EACXvI,WAAYwI,EACZnI,kBAAmBv2B,GAAKw+B,EAAAA,IAAqBjkF,OAAS,IACtD,MAQd,GAAgB,qBAAZsnC,EACF,OACE96B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAC0iF,GAA6B,CAACnrE,SAAU+oE,IAAsBv+E,KAEjE8I,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAKwzE,GAAuBG,mBAE/BtzE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACbyV,EAAAA,GAAAA,GAAWxmB,EAAK00E,GAA6Bf,kBAAmB,CAAC,SAM1E,GAAgB,YAAZx4C,EACF,OACE96B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GD5QsQ,aC6QnS1Q,EAAAA,GAAA7K,cAAC2iF,GAA4B,OAKnC,MAAM7+B,EAAIi8B,EAAM6C,cAAc7pD,QAAQ4M,GACtC,OAAW,IAAPme,EAEFj5C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAC6iF,GAA0B,CACzBtrE,SAAU+oE,IAAsBv+E,EAChCw7E,QAASwC,EAAM+C,OAAOh/B,GAAGriD,GACzBi8E,eAAgBqC,EAAM+C,OAAOh/B,GAAGrmB,UAChCggD,OAAQsF,EAAAA,IAAsBrhF,SAASikC,GACvC5jC,MAAOA,EACPy7E,mBAAoBz7E,IAAU0+E,KAGlC51E,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAKwzE,GAAuB+B,EAAM6C,cAAc9+B,MAEnDj5C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACbyV,EAAAA,GAAAA,GAAWxmB,EAAK00E,GAA6Ba,EAAM6C,cAAc9+B,KAAO,CAAC,cAjBhF,CAmBQ,KAMZj5C,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GD7S0f,YC+SlgBitE,GAA4C,IAAtBV,ID/SsiB,aCkT/jBz1E,EAAAA,GAAA7K,cAACgjF,GAAU,CACT3kF,OAAQmiF,EAAAA,IAAyBniF,OACjCo9C,OAAQ6kC,EACRrH,cAAe6I,IAEhBV,GACCv2E,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GDzToB,YC0T/B+rB,SAAUkgD,EACVjgD,qBAAsBigD,EACtBt0E,QAASs0E,EAAY/3D,EAASnG,GAE7Bs/D,IAIH,IC5OV,IAAej4E,EAAAA,EAAAA,KAjEiC1E,IAG1C,IAH2C,OAC/CohC,EAAM,QAAEC,EAAO,kBAAEm9C,EAAiB,SAClC73E,EAAQ,UAAEJ,EAAS,WAAEk4E,GACtBz+E,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,MAEP,OACJ62E,EAAM,OAAED,EAAM,SAAEE,GACd17C,EACElC,EAAQ,UAAWkC,EAASA,EAAOlC,WAAQpkC,EAC3C4jF,EAAWnyE,KAAKoI,MAAMioE,EAASC,GAC/B8B,EAAoBz/C,EAAQA,EAAQ,OAAIpkC,EAExC8jF,GAAW/9E,EAAAA,EAAAA,KAAQ,IAChB29E,GAAqBA,EAAoBE,EAC5CnyE,KAAK6nE,KAAK,IAAMsK,GAAYF,EAAoB,WAChD1jF,GACH,CAAC0jF,EAAmBE,IAEjBG,GAAel3E,EAAAA,EAAAA,KAAa9B,IAC5BA,EAAEC,OAAOu7B,SACX16B,EAASk2E,EACX,GACC,CAACA,EAAQl2E,IAEZ,OACEP,EAAAA,GAAA7K,cAAA,SACEgL,WAAW+I,EAAAA,GAAAA,GACTmvE,ECjD+C,WAA7B,WDkDjBp9C,IAAYo9C,GClDsD,WDmDnEl4E,GAEFiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAE1BsL,EAAAA,GAAA7K,cAAA,SACEgL,UCxDsF,WDyDtF/M,KAAK,QACLiN,KAAK,sBACLd,MAAOk3E,EACPx7C,QAASA,EACT16B,SAAUk4E,IAEZz4E,EAAAA,GAAA7K,cAAA,OAAKgL,UC/DwG,YDgE3GH,EAAAA,GAAA7K,cAAA,OAAKgL,UChEyH,YDiE3HxC,QAAQ66E,IACPx4E,EAAAA,GAAA7K,cAAA,QACEgL,WAAW+I,EAAAA,GAAAA,GCnE2M,WAA9B,YDoExLnJ,MAAOJ,EAAK,iBACb,KAAS64E,EAAS,KAGpB74E,EAAK,SAAU82E,IAElBz2E,EAAAA,GAAA7K,cAAA,OAAKgL,UC1E+I,YD2EhJk4E,GAAcE,EAAsB,IAAE3B,EAAAA,GAAAA,GAAeJ,EAAQE,EAAU/2E,EAAK4pD,WAAWzwB,IACrFn5B,EAAK,iBAAiBi3E,EAAAA,GAAAA,GAAe0B,EAAU5B,EAAU/2E,EAAK4pD,QAEpEvpD,EAAAA,GAAA7K,cAAA,OAAKgL,UC9EmK,aD+ErKy2E,EAAAA,GAAAA,GAAeJ,EAAQE,EAAU/2E,EAAK4pD,QAGrC,IElFZ,GAAghB,W,o2BC4D1gBmvB,GAAoB,EAAI/vE,EAAAA,EAExBgwE,GAAiE,CACrE9kD,QAAS+kD,GACTxF,cAAeyF,GACfxF,mBAAoByF,GACpBxF,iBAAkByF,GAClBxF,eAAgByF,GAChBxF,OAAQyF,GACRxF,cAAeyF,GACfxF,cAAeyF,GACfxF,gBAAiByF,GACjBxF,YAAayF,GACbxF,yBAA0ByF,GAC1BxF,kBAAmByF,GACnBxF,aAAc6E,GACd5E,aAAcwF,GACdvF,WAAYwF,GACZvF,UAAWwF,GACXvF,gBAAiBwF,GACjBvF,QAASwF,IAgXX,IAAet7E,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACxC,MAAM,aACJwjC,IACEnjC,EAAAA,EAAAA,KAAeL,GAEbm4E,EAAW30C,GAAc40C,YAAan1C,EAAAA,EAAAA,KAAWjjC,EAAQwjC,EAAa40C,iBAAcplF,EACpFqlF,EAAsBF,GAAUG,YAAct4E,EAAOu4E,aAAalhD,KAAK8gD,EAASG,YAAYE,iBAC9FxlF,EACEylF,EAAoBJ,GAAsBK,EAAAA,EAAAA,KAAiB14E,EAAQq4E,EAAoBM,qBACzF3lF,EAEJ,MAAO,CACL8xB,cAAe9kB,EAAO8kB,cACtB0uD,MAAOhwC,GAAcgwC,MACrBoF,UAAWp1C,GAAco1C,UACzBC,OAAQr1C,GAAcq1C,OACtBC,aAAct1C,GAAcs1C,aAC5BX,WACAE,sBACAI,oBACAM,OAAQv1C,GAAcw1C,UAAW/1C,EAAAA,EAAAA,KAAWjjC,EAAQwjC,EAAaw1C,eAAYhmF,EAC7EggC,eAAgBwQ,GAAcxQ,eAC9BygD,WAAWrhD,EAAAA,EAAAA,KAA2BpyB,GACtCi5E,eAAeC,EAAAA,GAAAA,GAAmBl5E,EAAQ,YAC1Cm5E,cAAcD,EAAAA,GAAAA,GAAmBl5E,EAAQ,iBACzCo5E,WAAWF,EAAAA,GAAAA,GAAmBl5E,EAAQ,sBACtCq5E,YAAYH,EAAAA,GAAAA,GAAmBl5E,EAAQ,kBACvC0zE,OAAQ1zE,EAAO+iC,WAAW2wC,OAC1B4F,YAAat5E,EAAO+iC,WAAWw2C,mBAC/BC,mBAAoBx5E,EAAO+iC,WAAWy2C,mBACtC7F,kBAAmB3zE,EAAO+iC,WAAW4wC,kBACtC,GA/BiB5zE,EAnVgC7H,IAqB9C,IArB+C,OACnD2E,EAAM,cACNioB,EAAa,SACbqzD,EAAQ,oBACRE,EAAmB,kBACnBI,EAAiB,MACjBjF,EAAK,eACLxgD,EAAc,UACdygD,EAAS,cACTwF,EAAa,WACbI,EAAU,aACVF,EAAY,UACZC,EAAS,OACT1F,EAAM,YACN4F,EAAW,mBACXE,EAAkB,UAClBZ,EAAS,OACTC,EAAM,OACNE,EAAM,aACND,EAAY,kBACZnF,GACDz7E,EAEC,MAAM4xE,GAAYzvE,EAAAA,EAAAA,IAAuB,OACnC,kBACJo/E,EAAiB,YAAEnjB,EAAW,gBAAEojB,EAAe,iBAAE7nB,EAAgB,aAAE8nB,EAAY,eAAEC,IAC/E18E,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MACN27E,EAAgBC,IAAmBz8E,EAAAA,EAAAA,KAAS,IAC5C08E,EAAgBC,IAAqB38E,EAAAA,EAAAA,IAAwC21B,IAC7EinD,EAA4BC,IAAyB78E,EAAAA,EAAAA,OAE5D7B,EAAAA,EAAAA,KAAU,KACHqB,IACHi9E,GAAgB,GAChBE,OAAkBhnF,GACpB,GACC,CAAC6J,IAEJ,MAAMs9E,GAAoB18E,EAAAA,EAAAA,IAAiB27B,IACzC4gD,EAAkB5gD,EAAQ,IAGtBghD,GAAqB38E,EAAAA,EAAAA,IAAgB,KACzCu8E,OAAkBhnF,EAAU,IASxBqnF,GAA4B58E,EAAAA,EAAAA,IAAiB2iD,IAClC0pB,EAAUtvE,UAGrB8+E,EACFhjB,EAAY,CACV5kE,KAAM,OACNwmE,KAAMohB,IAECE,IACT3nB,EAAiB,CACfhpD,IAAM,GAAE8vD,EAAAA,MAAkB6gB,WAA4Bp5B,GAAc,YAEtEq5B,KACF,IAGIlkE,GAAc9X,EAAAA,EAAAA,IAAgB,KAC9Bw8E,EACFI,EAA0BtpC,OAAOkpC,EAA2BlF,SAE5DsF,GACF,IAGIC,GAAiC78E,EAAAA,EAAAA,IAAiBs3E,IACtD,MAAMwF,EAAc/G,GAAO50E,QAAQolC,MAAM1K,GAAWA,EAAOy7C,SAAWA,IACtEmF,EAAsBK,EAAY,IAG9BC,GAAe/8E,EAAAA,EAAAA,IAAgB,KACnC,MAAMqjD,EAASgpB,EAAUtvE,QACzB,GAAKsmD,GACDjkD,EAAQ,CACV,MAAM,IACJ2X,EAAG,KAAElH,EAAI,MAAE7S,EAAK,OAAEK,GAChBgmD,EAAOrsD,cAAc,kBAAmBkZ,wBAC5C+rE,EAAgB,CACdllE,MACAlH,OACA7S,QACAK,SACA2/E,WAAW,GAEf,MAGFj/E,EAAAA,EAAAA,KAAU,KACJo9E,GACF4B,GACF,GACC,CAAC5B,EAAW4B,KAEfjgF,EAAAA,EAAAA,IAAcoJ,IAAqB,IAAnB+2E,GAAc/2E,EACxB+2E,IAAkBjH,GAEtB+G,GAAc,GACb,CAAC/G,EAAW+G,IAEf,MAAM5F,GAAmB77E,EAAAA,EAAAA,KAAQ,IAC1B46E,EACEA,EAAkB1lD,QAAQmL,GAAY66C,EAAAA,IAAyB9+E,SAASikC,KADhD66C,EAAAA,KAE9B,CAACN,KAEJn4E,EAAAA,EAAAA,KAAU,KACH68E,IAAuBI,GAC5BkB,EAAa,CACXhB,eAAgBN,EAAoBM,gBACpC,GACD,CAACgB,EAActB,EAAqBI,KAEvCj9E,EAAAA,EAAAA,KAAU,KACR,MAAOm/E,GAAiBnH,GAAO50E,SAAW,GAC1Cs7E,EAAsBS,EAAc,GACnC,CAACnH,IAEJ,MAAMoH,GAAsBn9E,EAAAA,EAAAA,IAAgB,KACrCg7E,GAELmB,EAAe,CACbjB,eAAgBF,GAChB,IAGEoC,GAAkB9hF,EAAAA,EAAAA,KAAQ,KAC9B,IAAK0/E,IAAsBN,EAAU,OAErC,MAAM2C,EAAW78E,EAAK,kCAAkCgqD,QAAQ,UAAU7tB,EAAAA,EAAAA,KAAgB+9C,KACnF4C,EAAOC,GAAUF,EAAS5P,MAAM,UAEjC+P,EAAQxC,EAAkByC,mBAC9B58E,EAAAA,GAAA7K,cAAC0nF,GAAAA,EAAW,CAAC18E,UD9PyqB,WC8PnoB+5E,WAAYC,EAAkByC,0BAC/EloF,EACEooF,EACJ98E,EAAAA,GAAA7K,cAAA,QAAMgL,UDjQgpB,WCiQ9mBU,QAASy7E,GAC9CK,GAAOx2D,EAAAA,GAAAA,GAAWg0D,EAAkBp6E,QAGzC,MAAO,EAAComB,EAAAA,GAAAA,GAAWs2D,GAAQK,GAAM32D,EAAAA,GAAAA,GAAWu2D,GAAQ,GACnD,CAAC7C,EAAUM,EAAmBx6E,IAE3By4E,GAAoB39E,EAAAA,EAAAA,KAAQ,KAChC,MAAMsiF,EAAc7H,GAAO50E,QAAQolC,MAAM1K,GAA6B,IAAlBA,EAAOy7C,SAC3D,GAAKsG,EAGL,OAAO/kE,OAAO+kE,EAAYvG,OAAO,GAChC,CAACtB,IAEE8H,IAAsBviF,EAAAA,EAAAA,KAAQ,KAClC,IAAKkhF,EACH,OAEF,MAAM,OAAEnF,EAAM,OAAEC,EAAM,SAAEC,GAAaiF,EAC/BhF,EAAgBxwE,KAAKoI,MAAMioE,EAASC,GAC1C,OAAOG,EAAAA,GAAAA,GACLD,EACAD,EACA/2E,EAAK4pD,KACN,GACA,CAACoyB,EAA4Bh8E,EAAK4pD,OAErC,GAAK2rB,KAAU6E,GAAwBI,GA+DvC,OACEn6E,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UD9ViB,WC+VjB1B,QAAS08E,EACT58E,OAAQA,EACRitE,UAAWA,GAEXxrE,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CAACxuB,KAAK,QAAQyuB,UAAW2sD,EAAiB,EAAI,EAAGt7E,UDnWnB,YCoWrCs7E,EA4EAz7E,EAAAA,GAAA7K,cAAC8nF,GAAmB,CAClBvoD,eAAgB+mD,EAChBr+D,OAAQ0+D,EACR5G,MAAOA,EACPK,iBAAkBwG,EAClB5G,UAAWA,EACXC,OAAQA,EACRC,kBAAmBA,EACnBC,mBAAoBqG,IAnFtB37E,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GDrW2D,WCqW/B,iBAAkBqvC,SAxMtE,SAAsB94C,GACpB,MAAM,UAAE1I,GAAc0I,EAAE2X,cAExBokE,EAAgBzkF,GAAa,IAC/B,GAqMUiJ,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACL8C,UDzWiZ,WC0WjZQ,MAAM,cAENE,QAASA,IAAMs6E,IACf31E,UAAW7F,EAAK,UAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEd45E,EACC/5E,EAAAA,GAAA7K,cAAC0nF,GAAAA,EAAW,CACV18E,UDnX0I,WCoX1IU,QAASy7E,EACTpC,WAAYH,EAAoBnjF,GAChCsmF,OAAK,EACL7/E,KAAMq7E,KAGR14E,EAAAA,GAAA7K,cAAA,OAAKgL,UD1XoF,WC0X5DxK,IAAKwnF,GAAaxiE,IAAI,GAAGnlB,WAAW,IAEnEwK,EAAAA,GAAA7K,cAAA,MAAIgL,WAAW+I,EAAAA,GAAAA,GD5XgL,WC4X9IixE,GD5XmkB,aC6XjnBA,EAAoBoC,GAAkBp2D,EAAAA,GAAAA,GA7F7Co0D,EACKV,GAAUjjF,KAAO4vB,EACpB7mB,EAAK,sDAAuD,EAACm8B,EAAAA,EAAAA,KAAgB2+C,GAASD,IACtF76E,EAAK,8CAA+C,EAACm8B,EAAAA,EAAAA,KAAgB+9C,GAAWW,IAG/EX,EACHl6E,EAAK,kCAAkCm8B,EAAAA,EAAAA,KAAgB+9C,IACvDl6E,EAAKw1E,EAAY,iCAAmC,mBAqFqB,CAAC,kBAAmB,WAEzFn1E,EAAAA,GAAA7K,cAAA,OAAKgL,UD/XmN,aCgYrNgmB,EAAAA,GAAAA,GApFPo0D,EACKV,GAAUjjF,KAAO4vB,EACpB7mB,EAAK,0DAA0Dm8B,EAAAA,EAAAA,KAAgB2+C,IAC/E96E,EAAK,kDAIFA,EADLw6E,EACU,0CAGPN,EACE,oCACA1E,EAAY,oCAAsC,2BAwEb,CAAC,kBAAmB,YAExDA,IAAcoF,GAtDtBv6E,EAAAA,GAAA7K,cAAA,OAAKgL,UD5UktB,YC6UptB+0E,GAAO50E,QACLoG,KAAKs0B,GACJh7B,EAAAA,GAAA7K,cAACioF,GAAyB,CACxBj9E,UDhV+uB,WCiV/uB0G,IAAKm0B,EAAOw7C,OACZx7C,OAAQA,EACRz6B,SAAUy7E,EACV5D,kBAAmBA,EACnBn9C,QAAS0gD,GAA4BlF,SAAWz7C,EAAOy7C,YA8CzDz2E,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GDnY2R,WCmY7PqyE,GDnYkT,aCoY9Vv7E,EAAAA,GAAA7K,cAAA,MAAIgL,UDpY6c,YCqY9cR,EAAK,qBAGVK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GDxY0N,WCwY9LisE,GDxY2O,aCyYpRmB,EAAiB5vE,KAAI,CAACo0B,EAAS5jC,IAE5B8I,EAAAA,GAAA7K,cAACs9E,GAAkB,CACjB5rE,IAAKi0B,EACL/6B,MAAOJ,EAAKwzE,GAAuBr4C,IACnCjzB,KAAkB,kBAAZizB,EACFn7B,EAAK00E,GAA6Bv5C,GAClC,CAAC6/C,EAAeE,EAAcC,EAAWC,EArV1C,IAsVCp7E,EAAK00E,GAA6Bv5C,IACtC70B,KAAM0yE,GAA4B79C,GAClC5jC,MAAOA,EACPouB,MAAOgxD,EAAiB9iF,OACxBsnC,QAASA,EACTj6B,QAASg7E,MAIf77E,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAewH,GD3ZsiB,YC4ZhkBtH,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAE1BsL,EAAAA,GAAA7K,cAAA,UACGgxB,EAAAA,GAAAA,GAAWxmB,EAAK,2BAA4B,CAAC,qBAEhDK,EAAAA,GAAA7K,cAAA,UACGgxB,EAAAA,GAAAA,GAAWxmB,EAAK,4BAA6B,CAAC,sBAvG/D,WACE,GAAKu1E,KAAUqF,GAAUV,GAAUjjF,KAAO4vB,GAI1C,OACExmB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAmBtH,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,IAC1DirC,EAAAA,GAAAA,GAAuB,CACtB93B,KAAMqtE,EAAMmI,WACZC,SAAUpI,EAAMqI,iBAIxB,CA6FaC,KAEDrI,GAAawG,GACb37E,EAAAA,GAAA7K,cAAA,OAAKgL,UDxailB,YCyaplBH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UDza2C,WCyajB80B,SAAO,EAACC,qBAAmB,EAACr0B,QAASoW,GACpEtX,EAAK,qBAAsBq9E,QAkBlC,K,4BCtXZ,MAEMhiC,GAAkB,iBAiLxB,IAAe18C,EAAAA,EAAAA,KA/KI1E,IAmBH,IAnBI,UAClBuG,EAAS,aACT82B,EAAY,cACZD,EAAa,MACb0hB,EAAK,YACL5hB,EAAW,aACX2mD,EAAY,UACZ32D,EAAS,gBACT42D,EAAe,kBACf3mD,EAAiB,WACjB4mD,EAAU,cACVnmD,EAAa,cACbomD,EAAa,mBACb1mD,EAAkB,oBAClB2mD,EAAmB,eACnBxmD,EAAc,gBACdymD,EAAe,WACfnlC,KACGolC,GACMnkF,EACT,MAAM+F,GAAOC,EAAAA,EAAAA,KAEPyrD,GAAWtvD,EAAAA,EAAAA,IAAyB,MAEpCu7B,EAAgBymD,EAAczmD,cAC9B0mD,EAAuB1mD,EAAgBymD,EAAcC,0BAAuBtpF,EAC5EupF,EAAyB3mD,EAAgBymD,EAAcE,4BAAyBvpF,GAEtFwI,EAAAA,EAAAA,KAAU,KACR,IAAK+5B,EAAc,OACnB,MAAMinD,EAAY1gF,OAAOC,YAAW,MAClCwjC,EAAAA,EAAAA,KAAe,KACboqB,EAASnvD,SAAS8vD,OAAO,GACzB,GArCe,KAwCnB,MAAO,KACLxuD,OAAOP,aAAaihF,EAAU,CAC/B,GACA,CAACjnD,IAEJ,MAAMknD,GAAiB1jF,EAAAA,EAAAA,KAAQ,IACzB68B,EACKymD,EAAcI,eAGhBJ,EAAcK,cAAgB,CAACL,EAAcK,eAAiBxnD,GAAAA,GACpE,CAACU,EAAeymD,EAAcK,cAAeL,EAAcI,iBAExDE,GAA0B5jF,EAAAA,EAAAA,KAAQ,IAAM,IAAI6jF,IAAIN,IAAuB,CAACA,IACxEO,GAA4B9jF,EAAAA,EAAAA,KAAQ,IAAM,IAAI6jF,IAAIL,IAAyB,CAACA,IAE5EO,GAAuB/jF,EAAAA,EAAAA,KAAQ,KACnC,GAAIq8B,EACF,OAAO4hB,EAAMhyC,KAAK9E,GAASA,EAAKrC,QAGlC,MAAMk/E,EAA2C,GAC3CC,EAAqC,GACrCC,EAA+C,GAYrD,OAVAjmC,EAAMhuC,SAAS9I,IACTy8E,EAAwBO,IAAIh9E,EAAKrC,OACnCk/E,EAAqBz4E,KAAKpE,GACjB28E,EAA0BK,IAAIh9E,EAAKrC,OAC5Co/E,EAAyB34E,KAAKpE,GAE9B88E,EAAe14E,KAAKpE,EACtB,IAGK68E,EAAqBI,OAAOH,EAAgBC,GAA0Bj4E,KAAK9E,GAASA,EAAKrC,OAAM,GACrG,CAACu3B,EAAa4hB,EAAO2lC,EAAyBE,IAE3CO,GAAkB3/E,EAAAA,EAAAA,IAAiBI,IACvC,GAAI+3B,EAAe,CACjB,MAAMynD,EAAoBZ,EAAersC,QACnC56C,EAAQ6nF,EAAkB7wD,QAAQ3uB,GAQxC,OAPIrI,GAAS,EACX6nF,EAAkBC,OAAO9nF,EAAO,GAEhC6nF,EAAkB/4E,KAAKzG,QAGzBw+E,EAAckB,yBAAyBF,EAEzC,CAEAhB,EAAcmB,wBAAwB3/E,EAAM,KAGvC4/E,EAAoBxjC,IAAWC,EAAAA,GAAAA,GACpCjD,EAAY6lC,EAAsB7gF,QAAQkgF,GAAuB/mD,IAG7DsoD,GAAqBjgF,EAAAA,EAAAA,IAAiBM,IAC1C,MAAM,MAAEF,GAAUE,EAAE2X,cACpBigB,IAAiB93B,EAAM,IAGnB8/E,GAAa99E,EAAAA,EAAAA,KAAahC,IAC9B,MAAMqC,EAAO82C,EAAMhT,MAAM45C,GAAeA,EAAW//E,QAAUA,IAC7D,IAAKqC,EAAM,OAEX,MAAM,MAAE9B,EAAK,SAAEy/E,EAAUz4D,UAAW04D,GAAkB59E,EAChD69E,EAAqBlB,EAA0BK,IAAIr/E,GACnDmgF,EAAmBrB,EAAwBO,IAAIr/E,GAC/CogF,EAAWF,GAAsBC,EACjCE,EAAYzB,EAAetnF,SAAS0I,GAa1C,OACES,EAAAA,GAAA7K,cAACipD,GAAAA,EAAU,CACTv3C,IAAKtH,EACLY,WAAW+I,EAAAA,GAAAA,GAAe8xC,GAAiB4iC,GAC3C79E,MAAOD,EACPglB,SAAUy6D,EACVnsE,SAAUusE,EACV5qD,SAAU4oD,EACVhrE,QAAM,EACNktE,aAnBEF,EAAiB3/E,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,eACV,UAAlBm3B,EACKx3B,EAAAA,GAAA7K,cAAC2qF,GAAAA,EAAK,CAAC7kD,QAAS2kD,EAAWxsE,SAAUusE,EAAU74D,UAAW04D,EAAeO,WAAS,IAErE,aAAlBvoD,EACKx3B,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CAACrqB,QAAS2kD,EAAWxsE,SAAUusE,EAAU74D,UAAW04D,EAAeO,WAAS,SAD9F,EAiBEl/E,QAASA,IAAMi+E,EAAgBv/E,GAE/Bu+E,gBAAiBA,GAAmB,KAAOA,EAAgBv+E,EAAOmgF,KAClE,GAEH,CACDhnC,EAAO6lC,EAA2BF,EAAyBF,EAAgBR,EAAYG,EACvFtmD,EAAeomD,IAGjB,OACE59E,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAAA,EAAOpa,UAAW6J,IAC9C82B,GACCj3B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAAA,EAAO6rB,OAAQ,iBAAkBnzB,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACxFsL,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR7J,GAAIogC,EACJ5vB,IAAKikD,EACL9rD,MAAOu3B,EACPv2B,SAAU6+E,EACV1gC,YAAa3nB,GAAqBp3B,EAAK,aAK5Cw/E,GAAoB3rF,OACnBwM,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,WAAW+I,EAAAA,GAAAA,GAAewH,GAAAA,EAAOsvE,WAAY9oD,GAAsBxmB,GAAAA,EAAOuvE,OAAQ,iBAClFvnC,MAAOymC,EACPlgC,aAAe,IAAGjE,KAClBrC,WAAYgD,EACZ+hC,gBAAiBA,GAEhByB,EAAmBz4E,KAAKnH,GAAU8/E,EAAW9/E,MAE7CunB,IAAaq4D,GAAuBA,EAAmB3rF,OAG1DwM,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAFR7+C,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,GAAAA,EAAOwvE,WAAYzC,GAAgB99E,EAAK,yBAIpD,ICrPV,IAAgB,KAAO,WAAW,eAAiB,WAAW,YAAc,WAAW,OAAS,WAAW,OAAS,YCwHpH,IAAerB,EAAAA,EAAAA,KA5F0B1E,IAMnC,IANoC,OACxC2E,EAAM,QACNE,EAAO,SACPuoD,EAAQ,YACR6D,EAAW,eACXs1B,GACDvmF,EACC,MAAM,iBAAEq6B,IAAqBr1B,EAAAA,EAAAA,MAEvBe,GAAOC,EAAAA,EAAAA,MAENwgF,EAAoBC,IAAyBthF,EAAAA,EAAAA,IAAmB,IAEjEuhF,GADyB93D,EAAAA,EAAAA,GAAsB43D,KACIA,EAEnD9pD,GAAe77B,EAAAA,EAAAA,KAAQ,IACtBowD,EAIEA,EAAYl7B,QAAQ4wD,IAAaA,EAAQl4E,UAA6B,OAAjBk4E,EAAQC,OACjE95E,KAAIrB,IAAA,IAAC,KACJm7E,EAAI,YAAEC,GACPp7E,EAAA,MAAM,CACL9F,MAAOihF,EACP1gF,MAAO2gF,EACR,IATM,IAUR,CAAC51B,IAEE61B,GAA0BvhF,EAAAA,EAAAA,IAAiBwhF,IAC3CR,GAAkBQ,EAAentF,OAAS2sF,EAC5ClsD,EAAiB,CACf9/B,QAASwL,EAAK,qCAAsCwgF,KAIxDE,EAAsBM,EAAe,IAGjCxoD,GAAeh5B,EAAAA,EAAAA,IAAgB,KACnC6nD,EAASo5B,GACT3hF,GAAS,IAGX,OACEuB,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UAAWuQ,GAAOwf,KAClB3xB,OAAQA,EACRE,QAASA,EACTyB,QAASi4B,GAETn4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOpa,WACrB0J,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOkwE,gBACrB5gF,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACNE,QAASpC,GAETuB,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WAGbL,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAOmwE,aACnBlhF,EAAK,4BAKZK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOowE,KAAM,kBAC1C9gF,EAAAA,GAAA7K,cAAC4rF,GAAU,CACT5gF,UAAWuQ,GAAOswE,OAClBtoC,MAAOpiB,EACP6nD,eAAgBiC,EAChBnB,uBAAwByB,EACxBhD,gBAAiB4C,EACjBhpD,eAAa,EACbE,cAAc,cAIlBx3B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOsrB,QACrBh8B,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLrD,KAAK,UACLwD,QAASs3B,GAERx4B,EAAK,wBAGJ,I,mDCzFZ,MAmHA,IAAerB,EAAAA,EAAAA,KAnHoB1E,IAOnB,IAPoB,OAClC2E,EAAM,eACN0iF,EAAc,eACdd,EAAc,mBACde,EAAkB,uBAClBC,EAAsB,QACtB1iF,GACS7E,EACT,MAAM,iBAAEq6B,IAAqBr1B,EAAAA,EAAAA,MACvBe,GAAOC,EAAAA,EAAAA,MAENwhF,EAAkBC,IAAuBtiF,EAAAA,EAAAA,SAA6BrK,IACtE0hC,EAAaC,IAAkBt3B,EAAAA,EAAAA,IAAiB,KAChDuiF,EAAoBC,EAAkBC,IAAqB39E,EAAAA,EAAAA,MAC3DoyB,EAAawrD,IAAkB1iF,EAAAA,EAAAA,IAAmBmiF,IAEzDhkF,EAAAA,EAAAA,KAAU,KACRukF,EAAeP,EAAmB,GACjC,CAACA,IAEJ,MAAMQ,GAAajnF,EAAAA,EAAAA,KAAQ,KACzB,MAAMiH,GAASyhC,EAAAA,EAAAA,MACTuZ,EAAYh7C,EAAOi7C,MAAM5jB,MACzB,OAAE6X,EAAM,SAAE0O,GAAa59C,EAAOi7C,MAAMuC,QACpCS,GAAO/O,GAAU,IAAIiuC,OAAOv/B,GAAY,IAE9C,OAAO9oB,EAAAA,GAAAA,IAAOmpB,GAAKj5C,KAAK9P,GAAO8lD,EAAU9lD,KACtC+4B,QAAQjK,GACPA,KACEE,EAAAA,EAAAA,KAAcF,KAASi8D,EAAAA,EAAAA,KAAiBj8D,KACrCA,EAAK9uB,KAAOqqF,IAChBv6E,KAAKgf,GAASA,EAAK9uB,IAAG,GAC1B,CAACqqF,IAEEW,GAAsBnnF,EAAAA,EAAAA,KAAQ,KAClC,MAAMiiD,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAC9B8oD,EAAkBH,GAAazhC,EAAAA,EAAAA,KAAkBtgD,EAAM+hF,EAAYhlC,EAAWtmB,GAAe,GAEnG,OAAO4pB,EAAAA,GAAAA,GAAY6hC,GACjB,EACA5rD,EAAY,GACb,CAACyrD,EAAY/hF,EAAMy2B,EAAaH,IAE7B6rD,GAAiC3iF,EAAAA,EAAAA,IAAiBwhF,IACtD,MAAMjkC,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAE9BgpD,EADgBpB,EAAehxD,QAAQ/4B,IAAQq/B,EAAYp/B,SAASD,KAC/B8uC,MAAM9uC,IAC/C,MAAM8uB,EAAOg3B,EAAU9lD,GACvB,OAAO8uB,KAASs8D,EAAAA,EAAAA,KAAat8D,EAAK,IAGhCuQ,GAAaziC,QAAU2sF,EACzBlsD,EAAiB,CACf9/B,QAASwL,EAAK,0CAA2CwgF,KAKzD4B,GACFV,EAAoBU,GACpBR,KAEAE,EAAed,EACjB,IAGIsB,GAAqC9iF,EAAAA,EAAAA,IAAgB,KACrDiiF,GACFK,GAAejrD,EAAAA,GAAAA,IAAO,IAAIP,EAAamrD,KAEzCI,GAAmB,IAGfU,GAAqB/iF,EAAAA,EAAAA,IAAgB,KACzCgiF,EAAuBlrD,GACvBx3B,GAAS,IAGX,OACEuB,EAAAA,GAAA7K,cAACgtF,GAAAA,EAAW,CACV5jF,OAAQA,EACRE,QAASA,EACTsB,MAAOJ,EAAK,kCACZsiE,gBAAc,EACdmgB,qBAAmB,EACnBC,iBAAe,EACfC,kBAAmB3iF,EAAK,QACxBwB,UAAW+gF,EACXhiF,QAASgiF,GAETliF,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTC,QAASirD,EACT3rD,YAAaA,EACba,YAAaV,EACbW,kBAAmBp3B,EAAK,UACxBy3B,oBAAqB0qD,EACrBzqD,eAAgBhB,EAChBY,cAAY,EACZC,oBAAkB,EAClBK,YAAU,EACVD,eAAa,EACbE,cAAc,aAEhBx3B,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZ51B,MAAOJ,EAAK,kCACZkI,KAAMlI,EAAK,yCACXi2B,aAAcj2B,EAAK,OACnBpB,OAAQ+iF,EACR7iF,QAAS+iF,EACT3rD,eAAgBosD,IAEN,ICnDlB,IAAe3jF,EAAAA,EAAAA,KA3D0B1E,IAKnC,IALoC,OACxCohC,EAAM,QAAEC,EAAO,KACf56B,EAAI,KAAEwH,EAAI,IAAEvS,EAAG,OACfitF,EAAM,SAAEhiF,EAAQ,cAAEiiF,EAAa,UAAEriF,EAAS,UAC1CsiF,EAAS,kBAAEC,GACZ9oF,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEb,IAAI+iF,EAAkChjF,EAAKkI,GACvC06E,GAAUG,GAAmBlvF,SAC/BmvF,EAAcD,EAAkBlvF,OAAS,EAAK,GAAEkvF,EAAkBlvF,SAAWivF,GAG/E,MAAMhK,GAAet5E,EAAAA,EAAAA,IAAiBM,IAChCA,EAAEC,OAAOu7B,SACX16B,EAASy6B,EACX,IAGI/jB,GAAc9X,EAAAA,EAAAA,IAAgB,KAClCqjF,KAAiB,IAGnB,OACExiF,EAAAA,GAAA7K,cAAA,SACEgL,WAAW+I,EAAAA,GAAAA,GCrDS,WDqDsB/I,GAC1CiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,EAC1B+mC,KAAK,SACLD,SAAU,GAEVx7B,EAAAA,GAAA7K,cAAA,SACEgL,UC3DqC,WD4DrC/M,KAAK,QACLiN,KAAK,kBACLd,MAAOy7B,EACPC,QAASA,EACT16B,SAAUk4E,EACV53E,QAAUpB,GAAMA,EAAE0J,oBAEpBnJ,EAAAA,GAAA7K,cAAA,OAAKgL,UCnEuD,YDoE1DH,EAAAA,GAAA7K,cAAA,OAAKgL,UCpE+J,WDoElIxK,IAAKL,EAAKqlB,IAAI,GAAGnlB,WAAW,IAC9DwK,EAAAA,GAAA7K,cAAA,OAAKgL,UCrEmG,YDsEtGH,EAAAA,GAAA7K,cAAA,MAAIgL,UCtEqH,YDuEtHR,EAAM,GAAEU,MAEVkiF,EACCviF,EAAAA,GAAA7K,cAAA,OAAKgL,UC1EoI,WD0E5GU,QAASoW,GACpCjX,EAAAA,GAAA7K,cAAA,YAAOwtF,GACP3iF,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,UAGbL,EAAAA,GAAA7K,cAAA,QAAMgL,UC/EmL,YD+EnJwiF,KAItC,IEgDZ,IAAerkF,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAqB,CAACC,EAAMiF,KAAqC,IAAnC,eAAEs6E,GAAgBt6E,EAClE,MAAMi8E,EAAe3B,GAAiB4B,EAAAA,EAAAA,KAAmBnhF,EAAQu/E,QAAkBvsF,EACnF,OAAKkuF,EAIE,CACLE,QAASF,EAAaE,QACtBC,iBAAkBH,EAAaG,kBALxB,CAAC,CAMT,GATiBthF,EA/FY7H,IAQH,IARI,OAC/B2E,EAAM,eACN4hF,EAAc,QACd2C,EAAO,iBACPC,EAAgB,mBAChB7B,EAAkB,uBAClBC,EAAsB,QACtB1iF,GACsB7E,EACtB,MAAM,iBAAEq6B,IAAqBr1B,EAAAA,EAAAA,MACvBe,GAAOC,EAAAA,EAAAA,MAENw2B,EAAaC,IAAkBt3B,EAAAA,EAAAA,IAAiB,KAChDk3B,EAAawrD,IAAkB1iF,EAAAA,EAAAA,IAAmBmiF,IAEzDhkF,EAAAA,EAAAA,KAAU,KACRukF,EAAeP,EAAmB,GACjC,CAACA,IAEJ,MAAM8B,GAAYvoF,EAAAA,EAAAA,KAAQ,KACxB,MAAMiH,GAASyhC,EAAAA,EAAAA,OACT,KAAEpK,EAAI,aAAEkqD,GAAiBvhF,EAAOo3B,MACtC,IAAKgqD,GAAStvF,OACZ,MAAO,GAGT,MAAM0vF,EAAcH,GAAoB,IAAIzE,IAAI/rC,OAAO4K,KAAK4lC,IAEtD3qD,GAAU+qD,EAAAA,EAAAA,KACdL,EAAQp8E,KAAIrB,IAAA,IAAC,OAAEwqB,GAAQxqB,EAAA,OAAKwqB,CAAM,IAClCkJ,EACAkqD,GAGF,OAAOC,EAAc9qD,EAAQzI,QAAQE,IAAYqzD,EAAYtE,IAAI/uD,KAAWuI,CAAO,GAClF,CAAC2qD,EAAkBD,IAEhBM,GAAqB3oF,EAAAA,EAAAA,KAAQ,KACjC,MAAMu7B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KAC9BsqD,EAAqBL,GAAYvsD,EAAAA,EAAAA,KAAkBusD,EAAWhtD,EAAWI,GAAe,GAE9F,OAAO4pB,EAAAA,GAAAA,IAAYxpB,EAAAA,GAAAA,IAAO6sD,GAAoB1zD,QAAQE,IACpD,MAAM6U,EAAO1O,EAAUnG,GACvB,OAAK6U,KAIG4+C,EAAAA,EAAAA,KAAU5+C,EAAK,IACtB,GACF,CAACs+C,EAAW5sD,IAETmtD,GAAgCpkF,EAAAA,EAAAA,IAAiBwhF,IACjDA,EAAentF,OAAS2sF,EAC1BlsD,EAAiB,CACf9/B,QAASwL,EAAK,iCAAkCwgF,KAIpDsB,EAAed,EAAe,IAG1BuB,GAAqB/iF,EAAAA,EAAAA,IAAgB,KACzCgiF,EAAuBlrD,GACvBx3B,GAAS,IAGX,OACEuB,EAAAA,GAAA7K,cAACgtF,GAAAA,EAAW,CACV5jF,OAAQA,EACRE,QAASA,EACTsB,MAAOJ,EAAK,8BACZsiE,gBAAc,EACdmgB,qBAAmB,EACnBC,iBAAe,EACfC,kBAAmB3iF,EAAK,QACxBwB,UAAW+gF,EACXhiF,QAASgiF,GAETliF,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTC,QAASysD,EACTntD,YAAaA,EACba,YAAaV,EACbW,kBAAmBp3B,EAAK,UACxBy3B,oBAAqBmsD,EACrBlsD,eAAgBhB,EAChBY,cAAY,EACZC,oBAAkB,EAClBK,YAAU,EACVD,eAAa,EACbE,cAAc,aAEJ,KC/HlB,GAA0a,WAA1a,GAAse,WAAte,GAAigB,WAAjgB,GAA2hB,WAA3hB,GAA+rB,WAA/rB,GAA0tB,WAA1tB,GAA0vB,WAA1vB,GAA+zB,WAA/zB,GAA+1B,WAA/1B,GAA+3B,WAA/3B,GAAu8B,WAAv8B,GAAo+B,WAAp+B,GAA+kC,W,oDCmG/kC,MAIMgsD,GAA+C,CACnD,EAAGC,GACH,EAAGC,GACH,GAAIC,IA2xBN,IAAerlF,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACxC,MAAM,cACJkiF,IACE7hF,EAAAA,EAAAA,KAAeL,GACbtC,EAASwkF,GAAexkF,OACxBsmB,EAAOtmB,GAASwlC,EAAAA,EAAAA,KAAWljC,EAAQtC,QAAU1K,EAC7CixB,EAAYD,IAAQE,EAAAA,EAAAA,KAAcF,GAExC,MAAO,CACLtmB,SACAykF,MAAOD,GAAeC,MACtBC,mBAAoBF,GAAelB,kBACnCqB,oBAAqBH,GAAeI,mBACpCC,6BAA8BviF,EAAO+iC,WAAWy/C,yBAChDC,mBAAoBziF,EAAO+iC,WAAW0/C,mBACtCC,mBAAoB1iF,EAAO+iC,WAAW4/C,oBACtCC,sBAAuB5iF,EAAO+iC,WAAW8/C,qBACzC15B,YAAanpD,EAAOmpD,YAAY25B,QAChCC,gBAAiBb,GAAea,gBAChC9+D,YACA++D,iBAAkBd,GAAee,YAClC,GArBiBljF,EAxxB6B7H,IAc3C,IAd4C,OAChDwF,EAAM,MACNykF,EAAK,OACLtlF,EAAM,UACNonB,EAAS,mBACTm+D,EAAkB,oBAClBC,EAAmB,6BACnBE,EAA+BW,EAAAA,IAA0B,YACzD/5B,EAAW,gBACX45B,EAAe,sBACfH,EAAwBO,EAAAA,IAAiC,mBACzDT,EAAqBU,EAAAA,IAA6B,mBAClDX,EAAkB,iBAClBO,GACD9qF,EAEC,MAAM4xE,GAAYzvE,EAAAA,EAAAA,IAAuB,OACnC,mBACJgpF,EAAkB,YAAE/sB,EAAW,iBAAE9jC,EAAgB,sBACjD8wD,EAAqB,2BAAEC,IACrBrmF,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MACNslF,EAAkBC,EAAcC,IAAiBvhF,EAAAA,EAAAA,MACjDwhF,EAA0BC,EAAwBC,IAA2B1hF,EAAAA,EAAAA,MAC7Ey9E,EAAoBC,EAAkBC,IAAqB39E,EAAAA,EAAAA,MAC3D2hF,EAAuBC,EAAqBC,IAAwB7hF,EAAAA,EAAAA,MACpE8hF,EAA0BC,EAAwBC,IAA2BhiF,EAAAA,EAAAA,KAE9EiiF,EAA6B,CAAC,CAClCzlF,KAAM,gBACNwH,KAAM,0BACNtI,MAAO,mBACPjK,IAAKouF,GACLjrD,QAAS,wBACT8pD,QAAQ,EACRC,cAAeA,KACbiD,GAAqB,IAIrBtB,GACF2B,EAAa9/E,KAAK,CAChB3F,KAAM,gBACNwH,KAAM,0BACNtI,MAAO,iBACPjK,IAAKywF,GACLttD,QAAS,sBACT8pD,QAAQ,IAIZ,MAAOyD,EAAkBC,IAAuBlnF,EAAAA,EAAAA,IAAiBwf,KAAKC,MA9DrC,SA+D1B+8D,EAAgBC,IAAmBz8E,EAAAA,EAAAA,KAAS,IAC5CmnF,EAAyBC,IAA8BpnF,EAAAA,EAAAA,IA9DpC,IA+DnBqnF,GAAwBC,KAAqBtnF,EAAAA,EAAAA,IAA0B+mF,EAAa,GAAGvmF,QACvF+mF,GAAoBC,KAAyBxnF,EAAAA,EAAAA,OAC7CynF,GAA0BC,KAA+B1nF,EAAAA,EAAAA,IAA0B,QACnF2nF,GAAqBC,KAA0B5nF,EAAAA,EAAAA,OAC/C6nF,GAAiBC,KAAsB9nF,EAAAA,EAAAA,IAAmB,KAC1DilF,GAAoB8C,KAAyB/nF,EAAAA,EAAAA,IAAmB,KAChEqhF,GAAoBC,KAAyBthF,EAAAA,EAAAA,IAA+B,KAC5EgoF,GAAmBC,KAAwBjoF,EAAAA,EAAAA,KAAkB,IAC7DkoF,GAAkBC,KAAuBnoF,EAAAA,EAAAA,KAAkB,IAC3DooF,GAAkBC,KAAuBroF,EAAAA,EAAAA,SAA6BrK,IACtE2yF,GAAqBC,KAA0BvoF,EAAAA,EAAAA,SAAyCrK,IAE7F6yF,GAA0BC,KACxBzoF,EAAAA,EAAAA,SAA8CrK,GAE5C+yF,GAA+C,qBAA3BrB,GACpBsB,GAA6C,mBAA3BtB,GAClBuB,GAAoBF,KACtBb,GAAgBpzF,OAAS0yF,EAA0BU,GAAgBpzF,OACjEo0F,GAAgBD,GAAoB1D,EACpC4D,GAAqBvB,IAAoBwB,aAEzCC,IAAqBttF,EAAAA,EAAAA,KAAQ,IAAM,CACvC,CACE8E,MAAO,MACPO,MAAOH,EAAKgmB,EAAY,yBAA2B,sBACnD45D,SAAUa,IAAsBA,GAAmB5sF,OAAS,EACxDmM,EAAK,kCAAmCygF,GAAmB5sF,QAC3DmM,EAAK,6BAEX,CACEJ,MAAO,MACPO,MAAOH,EAAKgmB,EAAY,yBAA2B,sBACnD45D,SAAUa,IAAsBA,GAAmB5sF,OAAS,EACxDmM,EAAK,kCAAmCygF,GAAmB5sF,QAC3DmM,EAAK,+BAEV,CAACgmB,EAAWhmB,EAAMygF,KAEf4H,GAAgBroF,EAAK,SAAU+mF,IAC/BuB,GAAmD,kBAA1BxD,GAAiBrxF,KAC1C80F,GAAqD,aAA1BzD,GAAiBrxF,KAE5C+0F,IAAe1tF,EAAAA,EAAAA,KAAQ,IACpBopF,GAAOn+C,MAAM0iD,GAASA,EAAK3R,SAAWiQ,IAAuB0B,EAAKtvD,QAAU6uD,MAClF,CAAC9D,EAAO6C,GAAqBiB,KAE1BU,IAAoB5tF,EAAAA,EAAAA,KAAQ,IACzBiqF,GAAkBh/C,MAAM0iD,GACtBH,IAA0BG,EAAKE,QAAWf,IAA0Be,SAE5E,CAACf,GAA0B7C,EAAkBuD,KAE1CM,IAAgB9tF,EAAAA,EAAAA,KAAQ,IACrBopF,GAAOl0D,QAAQy4D,GAASA,EAAKtvD,QAAU6uD,MAC7C,CAAC9D,EAAO8D,KAELvP,IAAoB39E,EAAAA,EAAAA,KAAQ,KAChC,MAAM+tF,EAAYD,IAAer2C,QAAO,CAAC8K,EAAKorC,IACrCA,EAAK5R,OAASx5B,EAAIw5B,OAAS4R,EAAOprC,GACxCurC,GAAc,IAEjB,OAAOC,GAAariF,KAAKoI,MAAMi6E,EAAUhS,OAASgS,EAAU/R,OAAO,GAClE,CAAC8R,KAEEE,IAAmBhuF,EAAAA,EAAAA,KAAQ,KACxB+7B,EAAAA,GAAAA,IAAQqtD,GAAOn9E,KAAKgiF,GAAWA,EAAO5vD,SAAU,IAAKke,MAAK,CAACC,EAAGC,IAAMD,EAAIC,KAC9E,CAAC2sC,IAEE8E,IAAqBluF,EAAAA,EAAAA,KAAQ,KAC1B+7B,EAAAA,GAAAA,IAAQ8vD,IAAoBsC,SAASliF,KAAKgiF,GAAWA,EAAO5vD,SAAU,IAAKke,MAAK,CAACC,EAAGC,IAAMD,EAAIC,KACpG,CAACovC,MAEJppF,EAAAA,EAAAA,KAAU,KACJqB,GAAUslF,GAAOrwF,SAAWy0F,IAC9BtB,GAAuB9C,IAAQ,GAAGpN,OACpC,GACC,CAACl4E,EAAQslF,EAAOoE,MAEnB/qF,EAAAA,EAAAA,KAAU,KACJqB,GAAUmmF,GAAkBlxF,SAAW00F,IACzC3B,GAAsB7B,IAAmB,GAC3C,GACC,CAACnmF,EAAQmmF,EAAkBwD,MAE9BhrF,EAAAA,EAAAA,KAAU,KACJqB,GAAU0pF,KACZ9B,EAA2B1B,EAAgBoE,UAC3CrB,GAA4B/C,GAC9B,GACC,CAAClmF,EAAQ0pF,GAAwBxD,KAEpCvnF,EAAAA,EAAAA,KAAU,KACJqB,GAAU2pF,KACZ/B,EAA2B1B,EAAgBoE,UAC3CvB,GAAuB7C,GACvBkC,GAAuBlC,EAAgBhO,QACzC,GACC,CAACl4E,EAAQ2pF,GAA0BzD,KAEtCvnF,EAAAA,EAAAA,KAAU,KACJ4mF,GACF+C,GAAmB/C,EACrB,GACC,CAACA,KAEJ5mF,EAAAA,EAAAA,KAAU,KACJ6mF,GACF+C,GAAsB/C,EACxB,GACC,CAACA,IAEJ,MAAM+E,IAAqB3pF,EAAAA,EAAAA,IAAgB,KACzC+0B,GAAkB,IAGdnH,IAAc5tB,EAAAA,EAAAA,IAAgB,KAClCqoF,QAA4B9yF,GAC5B4yF,QAAuB5yF,GACvB6xF,QAAsB7xF,GACtBiyF,QAAuBjyF,GACvByxF,EAxLwB,GAyLxBpB,GAAoB,IAGhB9tE,IAAc9X,EAAAA,EAAAA,IAAgB,KAG9B64D,EAFAyvB,GACEb,IAAiBpzF,OACP,CACVJ,KAAM,WACN21F,eAAgB3pF,EAChBg5B,QAASwuD,GACTlQ,SAAUyR,GAAczR,SACxBF,OAAQ2R,GAAc3R,OACtBx7C,OAAQmtD,IAGE,CACV/0F,KAAM,WACNgM,OAAQA,EACR4pF,qBAAsBhF,GACtBiF,wBAAsD,QAA7BzC,GACzB0C,UAAW9I,GACX+I,kBAAmBpC,GACnBI,oBACAiC,UAAWpD,EAAmB,IAC9BtP,SAAUyR,GAAczR,SACxBF,OAAQ2R,GAAc3R,OACtBx7C,OAAQmtD,IAIA,CACV/0F,KAAM,gBACNgM,OAAQA,EACR4pF,qBAAsBhF,GACtBiF,wBAAsD,QAA7BzC,GACzB0C,UAAW9I,GACX+I,kBAAmBpC,GACnBI,oBACAiC,UAAWpD,EAAmB,IAC9BtP,SAAU4P,GAAoB5P,SAC9BF,OAAQ8P,GAAoB9P,OAC5B8R,MAAOhC,GAAoBgC,MAC3BxvD,MAAOotD,IAIXn5D,IAAa,IAGTs8D,IAA+BlqF,EAAAA,EAAAA,IAAgB,KAC/C8oF,GACFhD,EAA2B,CACzB7lF,OAAQA,EACRkqF,WAAY/B,GAA0B3wF,GACtC2yF,eAAgB,CACdP,qBAAsBhF,GACtBkF,UAAW9I,GACX+G,oBACAgC,kBAAmBpC,GACnBqC,UAAWpD,EAAmB,IAC9BsC,MAAOf,GAA0Be,MACjC5R,SAAU2R,GAAmB3R,SAC7BF,OAAQ6R,GAAmB7R,OAC3B19C,MAAOyuD,GAA0BsB,YAIrC7D,EAAsB,CACpB5lF,OAAQA,EACRkqF,WAAYjC,GAAqBzwF,GACjC2yF,eAAgB,CACdP,qBAAsBhF,GACtBkF,UAAW9I,GACX+G,oBACAgC,kBAAmBpC,GACnBqC,UAAWpD,EAAmB,IAC9BtP,SAAUyR,GAAczR,SACxBF,OAAQ2R,GAAc3R,UAK5BgL,IACAz0D,IAAa,IAGTy8D,IAA8BrqF,EAAAA,EAAAA,IAAiBsqF,IACnDtD,EAA2BsD,EAAS,IAGhCC,IAA0BvqF,EAAAA,EAAAA,IAAiBsqF,IAC/CtD,EAA2BsD,EAAS,IAGhCE,IAA+BxqF,EAAAA,EAAAA,IAAiBM,IACpD2nF,GAAoB3nF,EAAEC,OAAOH,MAAM,IAG/BkjF,IAAYhoF,EAAAA,EAAAA,KAAQ,KACxB,MAAMu7B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KACpC,OAAO6tD,IAAiBlgF,KAAKmpB,IAAWiM,EAAAA,EAAAA,KAAgB9F,EAAUnG,MAAUxW,KAAK,KAAK,GACrF,CAACutE,KAQEgD,IAA+BzqF,EAAAA,EAAAA,IAAiBI,IACpDknF,GAA4BlnF,EAAM,IAG9BsqF,IAAyB1qF,EAAAA,EAAAA,IAAiBI,IAC9C8mF,GAAkB9mF,GAClBsnF,GAAmB,IACnBV,EA7SwB,EA6SuB,IAG3C2D,IAAyB3qF,EAAAA,EAAAA,IAAiBgmB,IAC9C8gE,EAAoB9gE,EAAKkjC,WACzB+8B,GAAe,IAGX2E,IAA+B5qF,EAAAA,EAAAA,IAAiBI,IACpD8gF,GAAsB9gF,EAAM,IAGxByqF,IAA8B7qF,EAAAA,EAAAA,IAAiBwhF,IACnDkG,GAAmBlG,GACdA,EAAentF,QAClB6yF,GAAkB,mBACpB,IAGIvE,IAAiC3iF,EAAAA,EAAAA,IAAiBwhF,IACtDmG,GAAsBnG,EAAe,IAGjCsJ,IAAgC9qF,EAAAA,EAAAA,IAAiBM,IACrDunF,GAAqBvnF,EAAEC,OAAOu7B,QAAQ,IAGlCivD,IAA+B/qF,EAAAA,EAAAA,IAAiBM,IACpDynF,GAAoBznF,EAAEC,OAAOu7B,QAAQ,IAGjCkvD,IAAuBhrF,EAAAA,EAAAA,IAAgB,KAC3CmmF,GAAwB,IAGpB8E,IAAkBjrF,EAAAA,EAAAA,IAAiB67B,IACvCurD,GAAsBvrD,EAAO,IA8F/B,SAASqvD,KACP,OACErqF,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,2CAGRK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPE,UAAQ,EACR50B,UAAU,yCAEVH,EAAAA,GAAA7K,cAACugD,GAAAA,EAAa,CACZt2C,OAAQA,EACRu1C,OAAQh1C,EAAKgmB,EAAY,kCACrB,gCAAiCiiE,IAAiBC,GAAoB,QAI7E7D,IAAoBt9E,KAAKk/B,GAEtB5lC,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPliB,QAAM,EACN9L,IAAK++B,EACLzlC,UAAU,wCAEVU,QAASA,IA3CvB,SAAmCjK,GACjC,MAAM0zF,EAAqBtG,GAAmBr0D,QAAQiW,GAAcA,IAAchvC,IAClFkwF,GAAsBwD,EACxB,CAwC6BC,CAA0B3kD,GACzCoP,aAAeh1C,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,QAAQF,UD/iBumC,cCijBzoCH,EAAAA,GAAA7K,cAACugD,GAAAA,EAAa,CACZt2C,OAAQwmC,EAAU2xC,gBAMzByM,GAAmBxwF,OApdE,GAqdpBwM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,MACL0M,QAAM,EACN9R,QAAS+kF,EACTzlF,UD7jBwlC,WC8jBxlCqqF,cD9jBgnC,YCgkB/mC7qF,EAAK,+BAKZK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,0BApHZK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,cACLC,QAASynF,GACTvnF,SAAUgmF,GACVjmF,SAAUqpF,GACVpH,cAAe2H,GACfM,kBD1d6iC,WC2d7iClI,QAAM,MAkHRviF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACbyV,EAAAA,GAAAA,GAAWxmB,EAAKgmB,EAAY,iCAAmC,oCAGlE3lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,qCAGRK,EAAAA,GAAA7K,cAAC4mC,GAAAA,EAAQ,CACPj8B,MAAOH,EAAK,oCACZs7B,QAASgsD,GACT1mF,SAAU2pF,MAIbjD,IACCjnF,EAAAA,GAAA7K,cAAA,OAAKgL,UD/lB8+B,YCgmBj/BH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZw1E,GAEHlmF,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRN,UDpmBwgC,WCqmBxgCZ,MAAO4nF,GACP5mF,SAAUopF,GACV7pF,MAAOH,EAAK,sCAMnBsnF,GACES,IAAoBO,QAcjBvzF,EAbFsL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACby2E,IAAkB3zF,QAAS2yB,EAAAA,GAAAA,GAAWxmB,EAAK,6CAC1C0nF,GACI,CAACA,GAAoBwB,SAAU1B,GAAkBa,IACjD,CAACL,GAAmBR,GAAkBa,SAC1CtzF,EACAgyF,IAAsB,CAAC,qBAAsBvgE,EAAAA,GAAAA,GAAWxmB,EAAK,yCAC7D0nF,GACI,CAACA,GAAoBwB,SAAUb,IAC/B,CAACL,GAAmBK,SACxBtzF,EACAgyF,IAAsB,CAAC,qBAI7B1mF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACbyV,EAAAA,GAAAA,GAAWxmB,EAAK,uCAIrBK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,gCAGRK,EAAAA,GAAA7K,cAAC4mC,GAAAA,EAAQ,CACPj8B,MAAOH,EAAK,oCACZs7B,QAAS8rD,GACTxmF,SAAU0pF,OAKhBjqF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACbyV,EAAAA,GAAAA,GAAWxmB,EAAK,qCAGnBK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,IAC5B22E,IAAuBE,IAA4BG,KAAoBh3E,KAExE1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,iCAGRK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL8E,UAAW7F,EAAK,sBAChBQ,WAAW+I,EAAAA,GAAAA,GD9pB65B,WC8pB33B,gBAC7CtI,QAAM,EACNC,QAASskF,GAETnlF,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,wBAEP+qF,EAAAA,GAAAA,IAAuB1E,EAAkBrmF,EAAK4pD,QAKzD,CAEA,OACEvpD,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UD9qBiB,WC+qBjB1B,QAASsuB,GACTxuB,OAAQA,EACRitE,UAAWA,EACXtrE,QAAUmnF,IAAuBE,GAA4BhG,EAAmBtqE,IAEhFjX,EAAAA,GAAA7K,cAAA,OAAKgL,UDprBkD,WCorB1Bo4C,SA/SjC,SAAsB94C,GACpB,MAAM,UAAE1I,GAAc0I,EAAE2X,cAExBokE,EAAgBzkF,GAAa,IAC/B,GA4SMiJ,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACL8C,UDxrB2Q,WCyrB3QQ,MAAM,cACNE,QAASksB,GACTvnB,UAAW7F,EAAK,UAEhBK,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WAEbL,EAAAA,GAAA7K,cAAA,OAAKgL,UD/rBkE,WC+rB1CxK,IAAKwnF,GAAaxiE,IAAI,GAAGnlB,WAAW,IACjEwK,EAAAA,GAAA7K,cAAA,MAAIgL,UDhsBoH,aCisBrHgmB,EAAAA,GAAAA,GAAWxmB,EAAK,4BAEnBK,EAAAA,GAAA7K,cAAA,OAAKgL,UDnsB4I,aCosB9IgmB,EAAAA,GAAAA,GAAWxmB,EAAKgmB,EAAY,uBAAyB,gCAExD3lB,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GDtsBqJ,WCssBvHqyE,GDtsB4K,aCusBxNv7E,EAAAA,GAAA7K,cAAA,MAAIgL,UDvsBuU,YCwsBxUR,EAAK,4BAGR0nF,IAAuBE,GACvBvnF,EAAAA,GAAA7K,cAAA,OAAKgL,UD5sB8lB,YC6sBjmBH,EAAAA,GAAA7K,cAAA,WACGoyF,GACCvnF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAmB/a,IAAKowF,GAAUprE,IAAI,KAEtD3a,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAmB/a,IAAK6tF,GAAkB6D,GAAqB5Q,QAAS97D,IAAI,MAGhG3a,EAAAA,GAAA7K,cAAA,OAAKgL,UDptB8mB,YCqtBjnBH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ62E,GAA2B5nF,EAAK,+BAAgC4nF,IAA0Be,OACvF3oF,EAAK,qCAAsC0nF,GAAqBwB,WAEtE7oF,EAAAA,GAAA7K,cAAA,KAAGgL,UDztBwpB,YC0tBxpBonF,GAA2B5nF,EAAK,8BAA+B4nF,IAA0BsB,UACtFlpF,EAAK,wBAAyB0nF,IAAqB5Q,UAG3Dz2E,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAsBA,KACnD1Q,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,QAAQF,UAAWuQ,KAC9B1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAA2BtH,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAClE6yF,GAA2BA,IAA0BoD,OAClDtD,GAAqBwB,UAAY5E,GAAgCW,EAAAA,SAM7E5kF,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GDzuBoZ,aC2bvb1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACbo1E,EAAap/E,KAAKs0B,GAEfh7B,EAAAA,GAAA7K,cAACy1F,GAAkB,CACjB/jF,IAAKm0B,EAAO36B,KACZA,KAAM26B,EAAO36B,KACbwH,KAAMmzB,EAAOnzB,KACbmzB,OAAQA,EAAOz7B,MACfjK,IAAK0lC,EAAO1lC,IACZiL,SAAUspF,GACV5uD,QAASmrD,KAA2BprD,EAAOz7B,MAC3CgjF,OAAQvnD,EAAOunD,OACfE,UAAWA,GACXC,kBAAmBkE,GACnBpE,cAAexnD,EAAOwnD,oBAqS3BiF,KAAsBb,IAAiBpzF,QACtCwM,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,MACIgvD,KAAwBE,IACxBvnF,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,2BAERK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAsBA,KACnD1Q,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,QAAQF,UAAWuQ,KAC9B1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAA2BtH,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAClEkzF,MAKP5nF,EAAAA,GAAA7K,cAAC01F,GAAAA,EAAoB,CACnBC,WAAYnD,GACZoD,MAAOtC,GACPloF,SAAUipF,MAIdxpF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACbyV,EAAAA,GAAAA,GAAWxmB,EAAK,4BAKtB0qF,MAIJ3C,IACC1nF,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,MACIkvD,KAA6BF,IAC7BrnF,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,yBAERK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAsBA,KACnD1Q,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,QAAQF,UAAWuQ,KAC9B1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAA2BtH,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAClEmzF,MAlRnB7nF,EAAAA,GAAA7K,cAAC61F,GAAAA,EAAmB,CAClB7qF,UD3gB0qC,WC4gB1qCG,QAASokF,EACTuG,kBAAmB/E,EACnBI,mBAAoBA,GACpBzlF,QAASupF,MAqRDpqF,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GDpyB0gB,cCqyBtiByV,EAAAA,GAAAA,GAAWxmB,EAAK,0BAGnBK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,gCAGRK,EAAAA,GAAA7K,cAAC01F,GAAAA,EAAoB,CACnBC,WAAY5E,EACZ6E,MAAOpC,GACPpoF,SAAUmpF,KAGZ1pF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACbyV,EAAAA,GAAAA,GAAWxmB,EAAK,uCAMxB0qF,OAIHhD,KAAwBE,IAA4BE,IACpDznF,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK,8BA/VhBK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACb63E,IAAe7hF,KAAK0hF,GACnBpoF,EAAAA,GAAA7K,cAACioF,GAAyB,CACxB/E,YAAU,EACVxxE,IAAKuhF,EAAK3R,OACVz7C,OAAQotD,EACRhQ,kBAAmBA,GACnBn9C,QAASmtD,EAAK3R,SAAWiQ,GACzBnmF,SAAUomF,SA6VV3mF,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAqBA,KAtV9D,WACE,MACM+U,EADO9lB,EAAK,mCACCurF,MAAM,0BAEzB,GAAKzlE,KAASA,EAAMjyB,OAAS,GAI7B,OACEwM,EAAAA,GAAA7K,cAAA,KAAGgL,UD3fm5B,YC4fn5BslB,EAAM,GACPzlB,EAAAA,GAAA7K,cAACg2F,GAAAA,EAAI,CAACC,WAAS,EAACvqF,QAASioF,IAAqBrjE,EAAM,IACnDA,EAAM,GAGb,CAwUa4lE,KAKNjF,IACCpmF,EAAAA,GAAA7K,cAAA,OAAKgL,UD/0Bkc,YCg1BrcH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UDj1B6B,WCk1B7BU,QAAUwmF,IAAuBE,GAA4BhG,EAAmBtqE,IAE/EtX,EAAK,4BAKdK,EAAAA,GAAA7K,cAACw1D,GAAa,CACZpsD,OAAQ2mF,EACRv+B,cAAY,EACZE,gBAAc,EACdpoD,QAAS2mF,EACTp+B,SAAU8iC,GACVtjC,WAAYw/B,EACZl/B,kBAAmBnnD,EAAK,UAE1BK,EAAAA,GAAA7K,cAACm2F,GAAkB,CACjB/sF,OAAQ8mF,EACR5mF,QAAS8mF,EACT16B,YAAaA,EACb7D,SAAU+iC,GACV5J,eAAgBmE,IAElBtkF,EAAAA,GAAA7K,cAACo2F,GAAuB,CACtBhtF,OAAQinF,EACR/mF,QAASinF,EACTvE,uBAAwB6I,GACxB9I,mBAAoB0F,GACpBzG,eAAgBiE,EAChBnD,eAAgB7hF,IAElBY,EAAAA,GAAA7K,cAACq2F,GAA0B,CACzBjtF,OAAQonF,EACRlnF,QAASonF,EACT3E,mBAAoB8C,GACpB7C,uBAAwBW,GACxB3B,eAAgBsL,EAAAA,IAChBxK,eAAgB7hF,IAElBY,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZ51B,MAAOJ,EAAK,qCACZkI,KAAMlI,EAAK,oCACXi2B,aAAcj2B,EAAK,SACnBpB,OAAQ+iF,EACR7iF,QAAS+iF,EACT3rD,eAAgBwzD,KAEZ,KC12BNqC,GAA2D,CAC/D3W,mBAAoB,4BACpB4W,mBAAoB,uBACpB7W,cAAe,sBACfN,mBAAoB,yBACpBC,eAAgB,0BAChBF,SAAU,0BACVqX,gBAAiB,0BACjBC,eAAgB,4BAChBC,mBAAoB,+BAGhBC,GAAmE,CACvEhX,mBAAoB,kCACpB4W,mBAAoB,6BACpB7W,cAAe,4BACfN,mBAAoB,+BACpBC,eAAgB,gCAChBF,SAAU,gCACVqX,gBAAiB,gCACjBC,eAAgB,kCAChBC,mBAAoB,qCAGhBE,GAAmE,CACvEjX,mBAAoB,mCACpB4W,mBAAoB,8BACpB7W,cAAe,6BACfN,mBAAoB,gCACpBC,eAAgB,iCAChBF,SAAU,iCACVqX,gBAAiB,iCACjBC,eAAgB,mCAChBC,mBAAoB,sCAGhBG,GAAsD,CAC1DlX,mBAAoB,aACpB4W,mBAAoB,aACpB7W,cAAe,eACfN,mBAAoB,YACpBC,eAAgB,aAChBF,SAAU,cACVqX,gBAAiB,aACjBC,eAAgB,eAChBC,mBAAoB,aAGhBI,GAA4F,CAChGP,mBAAoBA,CAAChsF,EAAiBJ,IAEtB,MAAVA,EAAuBI,EAAK,cAAe,KACjC,MAAVJ,EAAuBI,EAAK,cAAe,MACxCoT,EAAAA,GAAAA,IAAepT,EAAMJ,EAAQ4sF,EAAAA,MA6IxC,IAAe7tF,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA4B,IAA1B,MAAEkb,GAAOlb,EAChB,MAAM,OAAEyuE,GAAW1zE,EAAO+iC,WAAa,CAAC,EAClC0wC,GAAYrhD,EAAAA,EAAAA,KAA2BpyB,GAE7C,MAAO,CACL0qF,aAAcvqE,EAAQuzD,IAASvzD,GAAO,QAAKntB,EAC3C23F,aAAcxqE,EAAQuzD,IAASvzD,GAAO,QAAKntB,EAC3C43F,gBAAgBC,EAAAA,EAAAA,KAA+B7qF,GAC/CyzE,YACD,GAVe1zE,EA5FwC4D,IAMtD,IANuD,aAC3D+mF,EAAY,aACZC,EAAY,MACZxqE,EAAK,UACLszD,EAAS,cACTmX,GACDjnF,EACC,MAAM,uBAAEmnF,EAAsB,iBAAEt4D,IAAqBt1B,EAAAA,EAAAA,MAC/Ce,GAAOC,EAAAA,EAAAA,MAEN6sF,EAAWC,EAAcC,IAAe9oF,EAAAA,EAAAA,KAEzCoT,GAAc1V,EAAAA,EAAAA,KAAY,KAC9B2yB,IACAw4D,GAAc,GACb,CAACx4D,EAAkBw4D,KAEtBxvF,EAAAA,EAAAA,KAAU,MACH2kB,GAAS4qE,GAAWE,GAAa,GACrC,CAACF,EAAW5qE,EAAO8qE,IAEtB,MAAM5sF,EAAQJ,EAAK,gBACbitF,EAAiB/qE,GAASqqE,GAAsBrqE,GAChD7iB,EApER,SAA8BpF,GAgB3B,IAhB4B,KAC7B+F,EAAI,UACJktF,EAAS,UACT1X,EAAS,cACTmX,EAAa,aACbF,EAAY,aACZC,EAAY,eACZO,GASDhzF,EACC,IAAKizF,EACH,OAGF,MAAMC,EAAwBF,EAAiBA,EAAejtF,EAAMysF,GAAgBA,EAC9EW,EAAwBH,EAAiBA,EAAejtF,EAAM0sF,GAAgBA,EAEpF,OAAIlX,EACKx1E,EAAKqsF,GAA0Ba,GAAYE,GAG7CT,EACH3sF,EAAK+rF,GAAkBmB,GACT,mBAAdA,EAAiCE,EAAwB,CAACD,EAAuBC,IACjFptF,EAAKosF,GAA0Bc,GAAYC,EACjD,CAoCsBE,CAAsB,CACxCrtF,OACAktF,UAAWhrE,EACXszD,YACAmX,gBACAF,eACAC,eACAO,mBAEI3mF,EAAO4b,GAASoqE,GAAWpqE,GAC3BorE,EAAaX,IAAkBnX,EAErC,OACEn1E,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJxB,QAASiuF,EACThuF,oBAAqB8tF,EACrBjuF,OAAQZ,QAAQkkB,KAAW4qE,EAC3B1sF,MAAOA,EACPI,UCtKiB,aDwKf8sF,GACAjtF,EAAAA,GAAA7K,cAAA,OAAKgL,UCzKgH,YD0KnHH,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GC1KqM,WD0KpKjD,EAAM,UACrDjG,EAAAA,GAAA7K,cAAA,OAAKgL,UC3K+J,YD2KhIysF,IAClCjtF,EAAMw1E,EAAYkX,EAAeD,KAC7BjX,EAAYkX,EAAeD,KAKpCa,GACCjtF,EAAAA,GAAA7K,cAACu6E,GAAoB,CACnBvvE,UCpLkE,WDqLlE+uE,UAAW0d,IAAiBjtF,EAAMysF,IAAiBA,GAAc7U,WACjEpI,WAAYyd,IAAiBjtF,EAAM0sF,IAAiBA,GAAc9U,WAClEnI,kBAAmBnpE,IAIvBjG,EAAAA,GAAA7K,cAAA,YACGgxB,EAAAA,GAAAA,GAAWnnB,GAAe,GAAI,CAAC,kBAAmB,QAGrDgB,EAAAA,GAAA7K,cAAA,OAAKgL,UC/LyQ,YDgM5QH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wBACVS,QAAM,EACNC,QAAS6rF,EACT/rF,MAAM,WAELhB,EAAKstF,EAAa,SAAW,OAE/BA,GAEDjtF,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wBACVS,QAAM,EACNC,QAASoW,EACTtW,MAAM,WAELhB,EAAK,iBACNK,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,eAAeF,UCjNgQ,eDqNxR,K,uCE3MZ,MAEM+sF,GAA4B,IAAM9iE,EAAAA,IAGlC+iE,GAAe,GAAMxkF,EAAAA,EAEpB,SAASykF,GACd5xE,EACAiO,EACA4jE,EACAhlF,GAEA,MAAMilF,GAA6BvxF,EAAAA,EAAAA,IAAkB,KAE9CwxF,EAAgBC,IAAqBzuF,EAAAA,EAAAA,IAAiB,IAG3D0uF,QAASC,EACTC,OAAQC,EACRC,SAAUC,IACRC,EAAAA,GAAAA,IAAwB,CAC1BC,QAASxyE,IACPg3B,IACF,MAAMy7C,EAA0BX,EAA2BpxF,QAE3Ds2C,EAAQ9nC,SAASwjF,IACf,MAAMh3F,EAAQ8gB,OAAOk2E,EAAMxuF,OAAO9I,GAAG+yD,QAAS,GAAE0jC,KAAa,KAC7DY,EAAwB/2F,GAASg3F,EAAMC,cAAc,IAGvD,MAAMC,EAAuBH,EAAwB/7C,QAAO,CAACm8C,EAAaF,EAAgBj3F,IACjFi3F,GAAkBj3F,EAAQm3F,EAAcn3F,EAAQm3F,GACtDC,KAECF,IAAyBE,KAI7Bd,EAAkBY,EAAqB,KAIvCX,QAASc,EACTZ,OAAQa,EACRX,SAAUY,IACRV,EAAAA,GAAAA,IAAwB,CAC1BC,QAASxyE,EACTkzE,WAhDkC,IAiDlCC,OAhDgC,OAoDhClB,QAASmB,IACPb,EAAAA,GAAAA,IAAwB,CAC1BC,QAASxyE,EACTkzE,WAxDkC,IAyDlCC,OAxDgC,OA4DhClB,QAASoB,IACPd,EAAAA,GAAAA,IAAwB,CAC1BC,QAASvkE,IAgCX,OA7BAxtB,EAAAA,EAAAA,IAAc,KACRoM,GACFulF,IACAY,KAEA/wF,YAAW,KACTgxF,IACAX,GAAgB,GACfZ,GACL,GACC,CAACU,EAAcY,EAAuBnmF,EAAUylF,EAAgBW,IAmB5D,CACLlB,iBACAG,4BACAa,qCACAK,qCACAC,+BACAzU,kBAvBuBj7E,EAAAA,EAAAA,IAAiBjI,IACxCs2F,GAAmBjoE,IACjB,MAAMupE,EAAej7F,SAASw4B,eAAgB,GAAEghE,KAAYn2F,KACtD63F,EAA6C,IAAnC5oF,KAAK2Z,IAAIyF,EAAeruB,GAUxC,OARA83F,EAAAA,GAAAA,IACExzE,EAAatf,QACb4yF,EACA,QACA3B,GACA4B,EArF+B,IACF,IAuFxB73F,CAAK,GACZ,IAWN,C,oDCjHA,MCgIA,IAAeoH,EAAAA,EAAAA,KA5FuB1E,IAOhC,IAPiC,WACrCq1F,EAAU,KACV5xF,EAAO6xF,EAAAA,IAA0B,OACjC37E,EAAM,cACN4G,EAAa,oBACbg1E,EAAmB,gBACnBC,GACDx1F,EACC,MAAM,aAAEyhF,IAAiBz8E,EAAAA,EAAAA,MAEnB4c,GAAezf,EAAAA,EAAAA,IAAuB,OAEtC,aACJszF,EAAY,cAAEC,EAAa,iBAAEC,EAAgB,eAAEC,EAAc,mBAAE5S,GAC7DqS,GAEE,YAAEQ,IAAgBC,EAAAA,GAAAA,GAAe9S,GACjC+S,EAAiBF,GAAaG,mBAC9BC,GAAcC,EAAAA,GAAAA,GAAwBt0E,GAAem0E,GACrDI,GAAcC,EAAAA,GAAAA,GAAeH,GAE7B1B,GAAiB8B,EAAAA,GAAAA,IAAkBz0E,EAAc2zE,GACjDe,EAAa/B,IAAmB56E,EAIhC48E,EAFqBX,IAAmBF,IAAkBC,IAAqB3S,GAE/B0S,IAAkBc,EAAAA,KAAsBb,EACxFc,EAAaF,IAA0BG,EAAAA,EAAAA,KAAoBrB,EAAWne,SAAU,GAAI,WACpFyf,GAAkBx1F,EAAAA,EAAAA,GAASs1F,GAAalC,GAExCqC,GAAcnB,IAAiBc,GAA2BZ,IAAsB,aAAYN,EAAWr4F,KACvGwE,GAAYL,EAAAA,EAAAA,GAASy1F,GAAYrC,GACjC5hF,EAAUqwE,GAAsBxhF,GAAam1F,EAC7C75E,GAAuBuzB,EAAAA,GAAAA,GAA6B19B,GAEpDkkF,GAASC,EAAAA,GAAAA,GAAwBl1E,EAAc4zE,GAUrD,OARAlyF,EAAAA,EAAAA,KAAU,KACJixF,IAAmBc,EAAWne,UAAUt9E,QAC1C6nF,EAAa,CACXhB,eAAgB4U,GAEpB,GACC,CAACd,EAAgB9S,EAAc4T,IAGhCjvF,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,EAAcrb,WAAW+I,EAAAA,GAAAA,GDlFhB,WCkF4C,sBAC5DqD,EACCqwE,EACE58E,EAAAA,GAAA7K,cAAC0nF,GAAAA,EAAW,CACV3C,WAAY0C,EACZv/E,KAAMA,EACNszF,8BAA+BxB,EAC/B57E,OAAQA,IAERg8E,EACFvvF,EAAAA,GAAA7K,cAACs7E,GAAAA,EAAe,CACdtwE,UAAWuW,EACXg6D,OAAQt1E,EACRiC,KAAMA,EACNszE,KAAMuf,EACNtf,gBAAgBggB,EAAAA,EAAAA,MAAgCztD,EAAAA,EAAAA,MAAa8rD,GAC7D4B,aAAczB,GAAiBlzF,cAAWxH,EAC1Co8F,mBAAoBL,EACpBM,YAAa52E,IAEZm1E,IAAkBa,EACrBnwF,EAAAA,GAAA7K,cAACm5C,GAAAA,EAAc,CACbnuC,WAAW+I,EAAAA,GAAAA,GDxGmB,WCwGUwN,GACxC/gB,IAAKyF,EACLmzC,QAAS2hD,EACT33F,MAAOw3F,EACPvhD,WAAYr0B,EACZpB,MAAI,EACJ7D,yBAAuB,IAGzBlV,EAAAA,GAAA7K,cAAA,OACEQ,IAAKyF,GAAam1F,EAClBh4F,MAAOw3F,EACP5vF,WAAW+I,EAAAA,GAAAA,GDpHsC,WCoHTwN,GACxCiE,IAAI,GACJnlB,WAAW,KAIfw7F,EAAAA,GAAAA,IAAgB/B,EAAWlvF,MAAO,GAEhC,I,4BCnEV,MAAMkxF,GAA8B,CAClC,CAAElxF,MAAO,sBAAuBR,MAAO,EAAG2xF,IAAK,MAC/C,CAAEnxF,MAAO,sBAAuBR,MAAO,EAAG2xF,IAAK,MAC/C,CAAEnxF,MAAO,sBAAuBR,MAAO,EAAG2xF,IAAK,OAC/C,CAAEnxF,MAAO,qBAAsBR,MAAO,EAAG2xF,IAAK,OAC9C,CAAEnxF,MAAO,qBAAsBR,MAAO,EAAG2xF,IAAK,SAmShD,IAAe5yF,EAAAA,EAAAA,KAhSO1E,IA4BH,IA5BqF,QACtGi2E,EAAO,KACPxyE,EAAI,OACJkW,EAAM,MACNxT,EAAK,UACLI,EAAS,cACTgxF,EAAa,gBACb7yC,EAAe,eACf8yC,EAAc,WACdC,EAAU,oBACVlC,EAAmB,8BACnBmC,EAA6B,WAC7BC,EAAU,qBACVn/D,EAAoB,oBACpBo/D,EAAmB,cACnBC,EAAa,gBACbrC,EAAe,qBACfsC,EAAoB,cACpBv3E,EAAa,QACbtZ,EAAO,SACP8wF,EAAQ,YACRC,EAAW,cACXC,EAAa,oBACbC,EAAmB,kBACnBC,EAAiB,mBACjBC,EAAkB,mBAClBC,EAAkB,cAClBC,GACYt4F,EACZ,MAAM,eAAE0hF,EAAc,iBAAEpnD,EAAgB,eAAEi+D,IAAmBvzF,EAAAA,EAAAA,MAEvDwI,GAAMrL,EAAAA,EAAAA,IAAuB,MAE7BwnE,GAAUxnE,EAAAA,EAAAA,IAAuB,MACjC4D,GAAOC,EAAAA,EAAAA,KACP+vF,EAAiB9f,EAAQ+f,mBACzBC,GAAcC,EAAAA,GAAAA,GAAwB1oF,GAAMuoF,IAE5C,GACJ/4F,EAAE,eAAEyjF,GACFxK,EAEEsF,GAActF,EAAQuiB,QAAUF,GAAkBriB,EAAQwiB,UAC1DC,EAAgBziB,EAAQyiB,eAAiBJ,EACzCvS,GAAYvtD,GAAwB+iD,IAAcqc,EAElDrD,GAAiB8B,EAAAA,GAAAA,IAAkB7oF,EAAK+nF,GACxCoD,EAAapE,EACb+B,EAAa/B,IAAmB56E,EAEhCi/E,GAA0BvC,EAAAA,GAAAA,IAAkB7oF,EAAKkqF,IAEjD,kBACJ3tB,EAAiB,kBAAEC,EAAiB,wBACpC6uB,EAAuB,kBAAE5uB,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,GAAAA,GAAuB58D,GACrBsrF,GAA0B/0F,SAASwzF,GAAiBvtB,GAEpDJ,IAAoBrkE,EAAAA,EAAAA,IAAgB,IAAMiI,EAAIlL,UAC9CunE,IAAiBtkE,EAAAA,EAAAA,IAAgB,IAAMiI,EAAIlL,QAASvF,QAAQ,mCAC5D+sE,IAAiBvkE,EAAAA,EAAAA,IAAgB,IAC9BiyF,EAAiB7tB,EAAQrnE,QAAUkL,EAAIlL,QAAS/F,cAAc,mCAEjEw8F,IAAYxzF,EAAAA,EAAAA,IAAgB,KAAM,CAAGyzF,WAAYxB,EAAgByB,6BAA6B,OAEpG31F,EAAAA,EAAAA,KAAU,KACJymE,EACFouB,MAEAC,KACF,GACC,CAACruB,EAAmBquB,EAAoBD,KAE3C70F,EAAAA,EAAAA,KAAU,KACHixF,GAAgBrqB,IAAwB,GAC5C,CAACA,GAAwBqqB,IAE5B,MAkBM2E,IAAoB3zF,EAAAA,EAAAA,IAAiBM,IACzCA,EAAE0J,kBACF1J,EAAE0Y,iBAEF25E,EAAqBjiB,EAAQ,IAGzBkjB,IAA4B5zF,EAAAA,EAAAA,IAAgB,KAChD2yF,EAAqBjiB,EAAQ,IAGzBmjB,IAAsB7zF,EAAAA,EAAAA,IAAgB,KAC1C0yF,EAAehiB,EAAQ,IAGnBojB,IAAoB9zF,EAAAA,EAAAA,IAAgB,KACxCyyF,EAAa/hB,EAAQ,IAGjBqjB,IAAkB/zF,EAAAA,EAAAA,IAAgB,KACtC0B,IAAU8wF,GAAU,EAAK,IAGrBwB,IAAsBh0F,EAAAA,EAAAA,IAAgB,KAC1C0B,IAAU8wF,OAAUj9F,GAAW,EAAK,IAGhC0+F,IAAgBj0F,EAAAA,EAAAA,IAAgB,KACpCm8E,EAAe,CAAEjB,kBAAiB,IAG9BgZ,IAAgCl0F,EAAAA,EAAAA,IAAgB,SAACM,GAA0C,IAAjB4M,EAAQzP,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAAG,EACzF6C,EAAE0Y,iBACF1Y,EAAE0J,kBAEF26D,KACAmuB,MACAE,EAAe,CACbmB,cAAezjB,EAAQj5E,GACvB28F,SAASj/D,EAAAA,GAAAA,MAAkBjoB,GAE/B,IAEMmnF,IAAyBjrF,EAAAA,IAAgBupF,EAEzChwD,IAAgB54B,EAAAA,GAAAA,GACpB,gBACArI,GAAW,cACX0wF,GAAc,WACde,GAAiB,eACjBJ,GAAiB,eACjB/xF,GAGIszF,IAAmBh5F,EAAAA,EAAAA,KAAQ,KAC/B,IAAKi4F,IAA2BvB,GAAkBmB,IAAkBlB,EAAiB,MAAO,GAE5F,MAAM14C,EAAqB,GAE3B,OAAI45C,GACFrB,GAA4BvmF,SAAS9I,IACnC82C,EAAM1yC,KACJhG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAAC/F,QAASwyF,GAA+B1B,SAAU/vF,EAAKsvF,KAC9DvxF,EAAKiC,EAAK7B,MAAO6B,EAAKrC,MAAO,MAEjC,IAGIm5C,IAGLm5C,GACFn5C,EAAM1yC,KACJhG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAASmyF,IAChCrzF,EAAK,kCAKRiyF,GACFl5C,EAAM1yC,KACJhG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAASoyF,IAChCtzF,EAAK,8BAKPggF,GAAY9+E,IACVy9C,GACH5F,EAAM1yC,KAAKhG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAAC/F,QAASqyF,GAAiBjtF,KAAK,SAAStG,EAAK,sBAEpE+4C,EAAM1yC,KACJhG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAAC/F,QAASsyF,GAAqBltF,KAAK,YAC1CtG,EAAK2+C,EAAkB,cAAgB,sBAK1C+yC,GACF34C,EAAM1yC,KACJhG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAAC/F,QAASuyF,GAAentF,KAAK,YACpCtG,EAAK,qBAIRmyF,GACFp5C,EAAM1yC,KACJhG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASpF,QAASkyF,IAC9BpzF,EAAK,sBAIL+4C,EAAK,GACX,CACDg6C,GAAyBvB,EAAemB,EAAelB,EAAgBS,EAAeD,EAAajS,EACnG9+E,EAASwwF,EAAYS,EAAqBuB,GAA+B1zF,EAAMqzF,GAC/EC,GAAmB30C,EAAiB60C,GAAqBD,GAAiBE,GAAeL,KAG3F,OACE/yF,EAAAA,GAAA7K,cAAA,OACEiS,IAAKA,EACLjH,UAAW2hC,GACX/hC,MAAOA,GAAU8vE,GAAS8M,MAC1B,kBAAiB/lF,EACjB2oC,YAlIqB9/B,KACvBi0F,EAAAA,GAAAA,GAAoCj0F,GACpCgzF,EAAwBhzF,EAAE,EAiIxBoB,QAhJgBoW,KACd0sD,IACAgc,EAEAzrD,EADEg+D,EACe,CAAEx9D,eAAgB,WAElB,CAAEA,eAAgB,qBAIvC7zB,IAAU8wF,GAAS,EAuIjBl5E,cAAeorD,IAEd2uB,GACCxyF,EAAAA,GAAA7K,cAACw+F,GAAAA,EAAW,CACVn4E,aAAcpU,EACdyoE,QAASA,EACT+jB,SAAO,EACPv2F,KAAMA,EACNw2F,YAAU,EACVC,sBAAoB,EACpBC,QAASxB,EACTh/E,QAAS28E,EACT8D,iBAAe,EACfC,qBAAmB,EACnB7E,gBAAiBA,EACjBsC,qBAAsBA,EACtB7B,YAAaA,EACbkB,YAAa52E,KAGfs3E,GAAiB9R,GACjB3/E,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,kBAEVH,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,iBAGboxF,GAAiBtc,IAAcwK,GAC/B3/E,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBACbH,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,UAGdmzF,IACCxzF,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wBACVQ,MAAM,OACN4E,OAAK,EACL2uF,aAAW,EACXrzF,QAASiyF,IAET9yF,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WAGd1C,QAAQ81F,GAAiBjgG,SACxBwM,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACH5L,IAAKm8D,EACLhlE,OAAQolE,EACR+G,OAAQ9G,EACRJ,kBAAmBA,GACnBC,eAAgBA,GAChBC,eAAgBA,GAChBivB,UAAWA,GACXxyF,UAAU,uBACV+S,WAAS,EACT0/E,WAAYxB,EACZ3yF,QAASqlE,GACTplE,oBAAqBqlE,IAEpB0vB,IAGD,I,wCC7VV,MCoIA,IAAen1F,EAAAA,EAAAA,KA/FqB1E,IAW9B,IAX+B,SACnC4pC,EAAQ,mBACRkQ,EAAkB,WAClB69C,EAAU,YACV4C,EAAW,oBACXhF,EAAmB,gBACnBC,EAAe,kBACfgF,EAAiB,cACjBj6E,EAAa,QACbtZ,EAAO,cACP4X,GACD7e,EAEC,MAAMwN,GAAMrL,EAAAA,EAAAA,IAAuB,MAC7Bs4F,EAA6B,WAAlB7wD,EAASpwC,KACpBkhG,GAAoB75F,EAAAA,EAAAA,KAAQ,IAChCi5C,GAAoBhO,MAAMo0B,IAAcl3B,EAAAA,EAAAA,KAAek3B,EAAUt2B,SAAUA,MAC1E,CAACkQ,EAAoBlQ,IAClB5nC,EAAe04F,GAAmBC,YAAY3hE,WAAW/2B,QACzD24F,EAAcF,GAAmBG,iBAAiB79F,GAClD65F,GAASC,EAAAA,GAAAA,GAAwBtpF,EAAKgoF,GACtCh0F,GAAYL,EAAAA,EAAAA,GAChBu5F,GAAmBG,iBAAkBC,EAAAA,EAAAA,KAAqBJ,EAAkBG,gBAAiB,aAAU//F,GACtG8/F,IAGG,kBACJ7wB,EAAiB,wBACjB8uB,EAAuB,kBACvB5uB,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,GAAAA,GAAuB58D,EAAuB,SAAlBo8B,EAASpwC,UAAiBsB,OAAWA,OAAWA,GAAW,IAE3FwI,EAAAA,EAAAA,KAAU,KACJymE,IACFlrD,IAAgB+qB,GAEhBsgC,IACAC,IACF,GACC,CAACD,EAAwBrrD,EAAesrD,EAAuBJ,EAAmBngC,IAErF,MAAMktC,EAA2B,SAAlBltC,EAASpwC,KAAkBuhG,GAAAA,EAAeC,aAAex5F,EAClE6b,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC0B,EAAQ2iC,EAAS,IAGb9sB,GAAuBuzB,EAAAA,GAAAA,GAA6B7uC,GACpD0mC,GAAgB54B,EAAAA,GAAAA,GDtFD,WCwFnBqoF,GDxFyC,YCyFxC8C,GAAY,oBAGf,OACEr0F,EAAAA,GAAA7K,cAAA,OACEiS,IAAKA,EACLjH,UAAW2hC,EACXjhC,QAASoW,EACTlX,MAAOu0F,GAAmBv0F,MAC1B,kBAAiBs0F,EAAW7wD,EAAS02C,gBAAaxlF,EAClD6qC,YAAakzD,EACbh6E,cAAeorD,GAEdwwB,EACCr0F,EAAAA,GAAA7K,cAAC0nF,GAAAA,EAAW,CACVz1E,IAAKA,EACL8yE,WAAY12C,EAAS02C,WACrB78E,KAAMw3F,EAAAA,IACNthF,QAAS4gF,EACTxD,8BAA+BxB,EAC/BC,gBAAiBA,EACjBgF,kBAAmBA,EACnB1C,sBAAoB,EACpBX,YAAa52E,IAGfna,EAAAA,GAAA7K,cAAC2/F,GAAAA,EAAuB,CACtBpkB,OAAQA,EACR90E,aAAcA,EACd+0E,KAAMwjB,EACNtjB,QAAQ,EACRxzE,KAAMw3F,EAAAA,IACNjkB,eAAa,EACbzwE,UAAWuW,EACXm6E,aAAczB,EAAiBlzF,cAAWxH,EAC1Co8F,mBAAoBL,EACpBM,YAAa52E,IAGb,I,gBCpDV,MAiWA,IAAe7b,EAAAA,EAAAA,KA3VkB1E,IAiC3B,IAjC4B,WAChCq1F,EAAU,YACVkF,EAAW,MACXj9F,EAAK,SACLm2F,EAAQ,aACR0H,EAAY,iBACZC,EAAgB,mBAChBthD,EAAkB,gBAClB4K,EAAe,eACf8yC,EAAc,iBACd6D,EAAgB,qBAChB7iE,EAAoB,iBACpB8iE,EAAgB,qBAChBC,EAAoB,oBACpBC,EAAmB,sBACnBC,EAAqB,eACrBC,EAAc,iBACdC,EAAgB,cAChBC,EAAa,eACbC,EAAc,cACdt7E,EAAa,oBACbg1E,EAAmB,mCACnBP,EAAkC,mCAClCL,EAAkC,iBAClCmH,EAAgB,kBAChBC,EAAiB,gBACjBC,EAAe,gBACfC,EAAe,cACfC,EAAa,sBACbC,EAAqB,kBACrBhE,EAAiB,mBACjBC,EAAkB,mBAClBC,GACDr4F,EACC,MAAM,oBACJo8F,EAAmB,uBACnBC,EAAsB,qBACtBC,EAAoB,iBACpBhiE,EAAgB,iBAChBiiE,EAAgB,aAChB9a,IACEz8E,EAAAA,EAAAA,MAGEwI,GAAMrL,EAAAA,EAAAA,IAAuB,MAG7BqzF,GAAkBrzF,EAAAA,EAAAA,IAA0B,MAE5Cq4F,GAAoBr4F,EAAAA,EAAAA,IAA0B,MAE9C4D,GAAOC,EAAAA,EAAAA,MACLzD,MAAO6gB,IAAgBE,EAAAA,GAAAA,MACxBokE,GAAoBC,GAAkBC,KAAqB39E,EAAAA,EAAAA,MAC5D,SAAEC,KAAaC,EAAAA,EAAAA,OAEdqyF,GAAaC,KAAkBt3F,EAAAA,EAAAA,IAASu3F,GAAuBt5E,IAEhEmxE,IAAiB8B,EAAAA,GAAAA,IAAkB7oF,EAAK+nF,GAAuBZ,GAC/D73E,IAAuBuzB,EAAAA,GAAAA,GAA6BkkD,IAGpD33E,GAAeu+E,GAAgB5G,GAE/BoI,GAAkBzyF,GAAW,EAAI,EACjC0yF,GAAgB1yF,GAAW,EAAI,GAC/B2yF,GAAwB3yF,GAAW,EAAI,EACvC4yF,GAAWzH,EAAWr4F,KAAO+/F,EAAAA,IAC7BC,GAAa3H,EAAWr4F,KAAOigG,EAAAA,IAC/BC,GAAY7H,EAAWr4F,KAAOmgG,EAAAA,IAC9BC,GAAU/H,EAAW+H,QACrBC,IAAgBP,KAAYQ,EAAAA,EAAAA,KAAmBjI,GAE/CkI,IAAoBh4F,EAAAA,EAAAA,IAAgB,KACpC81F,EACFiB,IACSc,GACTf,IAEAD,IAEFxU,IAAmB,IAGf4V,IAAiBj4F,EAAAA,EAAAA,IAAgB,KACjC83F,KAAiB7kE,EACnB8B,EAAiB,CACfQ,eAAgB,mBAGlByhE,EAAiB,CACfkB,aAAcpI,EAAWr4F,IAE7B,IAGI0gG,IAA8Bn4F,EAAAA,EAAAA,IAAgB,KAClDy2F,IAAkB,CAChB57F,UAAW,UACXpD,GAAI2gG,EAAAA,IACJC,UAAU,EACVv9F,SAAS,EACTogF,eAAgB,CACdzO,UAAW,UAEQ,IAGnB6rB,IAA+Bt4F,EAAAA,EAAAA,IAAgB,KACnDy2F,IAAkB,CAChB57F,UAAW,UACXpD,GAAI8gG,EAAAA,IACJF,UAAU,EACVv9F,SAAS,EACTogF,eAAgB,CACdzO,UAAW,UAEQ,IAGnB+rB,GAAWX,GAAUnC,EAAAA,IAAoB+C,EAAAA,IACzCjJ,GAASqI,GAAUR,GAAgBD,GACnCsB,GAAiBb,GAAUP,GAAwBF,GAEnDuB,IAAuB34F,EAAAA,EAAAA,IAAiBhD,GACvCA,EAIEgK,KAAKoI,OAAOpS,EAAQwyF,KAAWgJ,GAAWhJ,KAHxC2H,GAAuBt5E,KAM5BpU,IAAezJ,EAAAA,EAAAA,IAAiB+uF,IACpCmI,GAAeyB,GAAqB5J,EAAM6J,YAAY57F,OAAO,KAG/D67F,EAAAA,GAAAA,GAAkB5wF,EAAKwB,KAEvB1L,EAAAA,EAAAA,KAAU,KACHkK,EAAIlL,SACTm6F,GAAeyB,GAAqB1wF,EAAIlL,QAAQ4T,aAAa,GAC5D,CAACgoF,MAEJ56F,EAAAA,EAAAA,KAAU,KACJsZ,KAAiBy4E,EAAWne,UAAUt9E,SAAWy7F,EAAWt7C,WAAWngD,QAAUy7F,EAAWgJ,YAC9F5c,EAAa,CACXhB,eAAgB,CACdzjF,GAAIq4F,EAAWr4F,GACfqhG,WAAYhJ,EAAWgJ,aAG7B,GACC,CAACzhF,GAAc6kE,EAAc4T,IAEhC,MAAMtP,IAAYrhC,IAAoBlsB,GAAwB6kE,KAAiB3B,EAEzE4C,GAAcjJ,EAAWkJ,gBAAkBlJ,EAAWmJ,WAEtDC,IAAUH,IAAejJ,EAAWr4F,KAAO+/F,EAAAA,KAC5C1H,EAAWr4F,KAAOmgG,EAAAA,KAAyB9H,EAAWr4F,KAAO0hG,EAAAA,KAC7DrJ,EAAWr4F,KAAO2hG,EAAAA,MAA2BjD,IAAmBC,GAE9DiD,GAAM,CAAGC,KAAU50F,EAAAA,EAAAA,GAAQw0F,IAC5BK,GAAkC,EAAdtC,GAAkB,EACtCuC,GAAmBxD,GAAwBE,EAAyBpG,EAAW3pE,MAAQ,EAAI2pE,EAAW3pE,MAEtGszE,GAAajB,GAAWE,GACxBgB,GAAgB1yF,KAAK6nE,KAAK7nE,KAAK8Z,IAAIy4E,GAAmBC,IAAmBvC,IAC3EwC,GAAaf,GACXr7F,GAASg8F,GAAQK,GAAgB1yF,KAAK6nE,KAAK2qB,GAAkBvC,IAAewC,GAAaf,GAEzFiB,IAAwBr+F,EAAAA,EAAAA,KAAQ,IACpCu6F,EAAmB,IAAI1W,IAAI0W,EAAiBtuF,KAAIrB,IAAA,IAAC,GAAEzO,GAAIyO,EAAA,OAAKzO,CAAE,UAAKlC,GAClE,CAACsgG,IACE+D,IAAoB7D,IAAqBwB,IAAYM,KAAYF,KAAcxB,KAC9E4C,KAAiB9lE,IAAyBksB,GAC3C06C,IAAmBv+F,EAAAA,EAAAA,KAAQ,IAELkF,EADtBggF,GACEuY,GAAyB,4BACjB,SAGF,QACX,CAACvY,GAAUhgF,EAAMu4F,KAEpB,OACEl4F,EAAAA,GAAA7K,cAAA,OACEiS,IAAKA,EACLP,IAAKooF,EAAWr4F,GAChBA,GAAK,GAAEy2F,KAAYn2F,IACnBiJ,WACE+I,EAAAA,GAAAA,GAAe,aAAcy2E,IAAY,uBAGzCuV,GACAl1F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qBACbH,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,mBAAoB6vF,IAAoB,8BAClEpZ,IAAY3/E,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,aAAaF,UAAU,2BAC/CH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,mBAAmB8uF,EAAWlvF,QAC5Cu1F,GAAkBC,IAClBv1F,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,mBAAmBR,EAAK21F,EAAiB,aAAe,kBAEzEyD,IAAoBp7F,QAAQsxF,EAAWne,WACtC9wE,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,qBACbR,EAAKq3F,GAAU,aAAe,WAAY/H,EAAWne,SAASt9E,OAAQ,OAI5EkjG,IACC12F,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UAAU,oBAAoBE,KAAK,QAAQQ,QAAS0gF,KAE3DwX,IACC/4F,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wBACV+0B,oBAAqB+hE,KAAiB7kE,EACtCvxB,QAASu2F,GACT6B,MAAI,EACJ57F,KAAK,OACLs6C,OAAK,GAEJqhD,KAKTh5F,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACT,+CACAwN,GACAu4E,EAAWr4F,KAAO0hG,EAAAA,KAAwB,iBAE5C//F,MAAQ,WAAUiE,SAElBwD,EAAAA,GAAA7K,cAAA,UACEiS,IAAKgoF,EACLjvF,UAAU,gBACV5H,MAAO8/F,GAAU,WAAUQ,aAAqBnkG,KAEhDgiG,IAAYE,IAAcyB,KAAWr4F,EAAAA,GAAA7K,cAAA,UAAQiS,IAAKgtF,EAAmBj0F,UAAU,kBAChFg1F,GACCn1F,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,6BACVQ,MAAM,cACNE,QAASy2F,GACTzwF,IAAI,sBAEJ7G,EAAAA,GAAA7K,cAAA,OAAKQ,IAAKujG,GAAMv+E,IAAI,QAAQxa,UAAU,gBAAgB3K,WAAW,KAGpE6/F,GACCr1F,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,4CACVQ,MAAM,cACNE,QAAS42F,GACT5wF,IAAI,uBAEJ7G,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,UAGdmW,IAAgBy4E,EAAWt7C,WAAWjtC,KAAK88B,IAC1C,MAAM21D,GAAat1D,EAAAA,EAAAA,KAAeL,GAC5B+tD,EAAa4H,EAAa/D,GAAqBv+F,SAASsiG,QAAczkG,EAE5E,OACEsL,EAAAA,GAAA7K,cAACikG,GAAa,CACZvyF,IAAM,GAAEooF,EAAWr4F,MAAMuiG,IACzB31D,SAAUA,EACV+tD,WAAYA,EACZ4C,YAAaA,EACbzgD,mBAAoBA,EACpBy7C,oBAAqBP,EACrB/tF,QAAS60F,EACTj9E,cAAek9E,EACfvG,gBAAiBA,EACjBgF,kBAAmBA,EACnBj6E,cAAeA,GACf,IAGL3D,IAAgBy4E,EAAWne,UAAUh/B,MAAM,EAAG0mD,GAAQE,GAAoBzJ,EAAWne,SAASt9E,QAC5FkT,KAAI,CAACmpE,EAAS52B,KACb,MAAMogD,GAAa3C,IAAYE,MAC1BhG,EAAAA,EAAAA,MAAgCztD,EAAAA,EAAAA,MAAa0sC,EAAQwK,gBACpDif,EAAajB,IAAUp/C,GAAKy/C,IAAsBW,EACpDjF,EACAhF,EACE+J,EAAatpB,EAAQyiB,cAAgBziB,EAAQj5E,GAAKi5E,EAAQ8M,MAC1D4U,EAAa4H,EAAa/D,GAAqBv+F,SAASsiG,QAAczkG,EAE5E,OACEsL,EAAAA,GAAA7K,cAACokG,GAAa,CACZ1yF,IAAKgpE,EAAQj5E,GACbi5E,QAASA,EACTxyE,KAAMs6F,GACNxI,oBAAqBP,EACrB0C,8BAA+B/C,EAC/Bh7E,QAAS4gF,EACT71C,gBAAiBA,EACjB8yC,eAAgBA,EAChBC,YAAU,EACVF,cAAesE,EACfrjE,qBAAsBA,EACtBo/D,oBAAqB8D,EACrBlG,gBAAiBkK,EACjB5H,qBAAsB8D,EACtB30F,QAAS+0F,EACTjE,SAAU9hB,EACV0hB,WAAYA,EACZM,cAAe+E,IAAckC,IAAuBla,IAAI/O,EAAQj5E,IAAMi/F,OAAkBnhG,EACxFk9F,YAAckH,IAAuBla,IAAI/O,EAAQj5E,SAAsBlC,EAAhBohG,EACvDhE,oBAAqB4E,GAAWX,OAAwBrhG,EACxDq9F,kBAAmBA,EACnBC,mBAAoBA,EACpBC,mBAAoBA,EACpB93E,cAAeA,EACf+3E,cAAejD,EAAWr4F,KAAO0hG,EAAAA,IACjC7G,cAAer/D,IACT68D,EAAWr4F,KAAO2hG,EAAAA,KAA0BtJ,EAAWr4F,KAAO0hG,EAAAA,MACpE,IAGPE,IAASG,GAAkBD,IAC1B14F,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wCACVoF,OAAK,EACL5E,MAAM,cACNE,QAAS43F,GACT5xF,IAAI,QACL,IACG8xF,GAAkBD,KAKzBhC,IACC12F,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZ9tB,KAAMlI,EAAKs1F,EAAmB,mCAAqC,mCACnE12F,OAAQ+iF,GACR7iF,QAAS+iF,GACT3rD,eAAgBshE,GAChBrhE,sBAAoB,IAGpB,IAMV,SAASwgE,GAAuBt5E,GAC9B,OAAOA,EAjWyB,IAHH,EAsWxBA,EAlWgC,IAFI,EADL,CAwWtC,CCrbA,SAAyC,WAAzC,GAAgE,WAAhE,GAA+I,WAA/I,GAA6K,WAA7K,GAAuM,WAAvM,GAA0P,WC4FpPw8E,GAAsB,IAAM7wF,EAAAA,EAE5B8wF,GAAoB,mBAIpBC,GAAuB,IAAIpb,IAAI,CAACqY,EAAAA,IAAsBE,EAAAA,IAAwBE,EAAAA,MAC9E4C,GAA6B,IAAIrb,IAAI,CACzCqY,EAAAA,IACAE,EAAAA,IACAE,EAAAA,MA0WF,IAAez4F,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA+D,IAA7D,OAAEvC,EAAM,eAAEgyF,EAAc,iBAAE6D,GAAkBtzF,EACnD,MACEmvE,UACE8oB,SAAUC,GAEZ5f,cACElhD,KAAM+gE,EACNC,YAAaC,EACbC,cACEC,OAAQC,IAGZC,mBAAoBC,EACpB1mD,WAAW,mBACTD,EAAkB,gBAClB4mD,EAAe,aACfC,EAAY,YACZC,IAEA94F,EAEE48C,EAAkB3gD,QAAQyB,IAAUsnB,EAAAA,EAAAA,KAAqBhlB,EAAQtC,IACjEwjF,EAAexjF,GAASyjF,EAAAA,EAAAA,KAAmBnhF,EAAQtC,QAAU1K,EAEnE,MAAO,CACLolG,iBAAmB1I,OAAoC18F,EAAnBolG,EACpCO,qBAAuBjJ,OAAwC18F,EAAvB2lG,EACxCF,mBAAoB/I,EAAiB+I,OAAqBzlG,EAC1DmlG,kBACAY,oBAAqB/4F,EAAOu4E,aAAaygB,MAAMC,OAC/CC,YAAYC,EAAAA,EAAAA,KAA4Bn5F,GACxC48C,kBACAlsB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GACjDs4F,yBACAc,oBAAqBp5F,EAAOo5F,oBAC5BC,qBAAsBr5F,EAAOq5F,qBAC7BR,aAActF,EAAmBsF,OAAe7lG,EAChD4lG,gBAAiBrF,EAAmBqF,OAAkB5lG,EACtDsmG,eAAgBpY,GAAcqY,UAAUrkG,GACxCskG,mBAAoBjG,GAAoBrS,GAAcuY,wBACtDznD,mBAAoBuhD,EAAmBvhD,OAAqBh/C,EAC5D0mG,oBAAqBnG,EAAmBuF,OAAc9lG,EACvD,GA3Ce+M,EAvWiC7H,IAkC/C,IAlCgD,UACpDuG,EAAS,oBACTk7F,EAAmB,SACnBhzF,EAAQ,YACR8rF,EAAW,oBACXsG,EAAmB,iBACnBX,EAAgB,qBAChBO,EAAoB,oBACpBjF,EAAmB,mBACnB+E,EAAkB,gBAClBN,EAAe,eACfmB,EAAc,aACdT,EAAY,gBACZD,EAAe,mBACf5mD,EAAkB,SAClB25C,EAAWoM,GAAiB,uBAC5BO,EAAsB,WACtBY,EAAU,iBACV3F,EAAgB,eAChB7D,EAAc,cACdoE,EAAa,gBACbl3C,EAAe,qBACflsB,EAAoB,sBACpBkpE,EAAqB,oBACrBR,EAAmB,qBACnBC,EAAoB,oBACpBK,EAAmB,mBACnBF,EAAkB,oBAClBK,EAAmB,iBACnB7F,EAAgB,kBAChBC,EAAiB,kBACjB5D,EAAiB,mBACjBC,EAAkB,mBAClBC,GACDr4F,EAEC,MAAM4hB,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC0tB,GAAY1tB,EAAAA,EAAAA,IAAuB,MAEnCqzF,GAAkBrzF,EAAAA,EAAAA,IAA0B,MAE5Cq4F,GAAoBr4F,EAAAA,EAAAA,IAA0B,OAE9C,SAAE+H,IAAaC,EAAAA,EAAAA,OAEnBwvC,aAAcioD,EACdroD,cAAesoD,GACbxoD,KAEEmnD,GAAqB3/F,EAAAA,EAAAA,KAAQ,IAC1B22F,EACH+I,EACA5nD,OAAOwK,QAAO2+C,EAAAA,GAAAA,IAAW5B,EAAmBO,KAC/C,CAACP,EAAkB1I,EAAgBiJ,EAAsBF,IAEtDwB,EAAU,GAAEtO,kBACZ,eACJE,EAAc,0BACdG,GAAyB,mCACzBkB,GAAkC,mCAClCL,GAAkC,6BAClCM,GAA4B,iBAC5BzU,IACEgT,GAA0B5xE,EAAciO,EAAWkyE,EAAQtzF,GAEzDuzF,IAAiBj7D,EAAAA,GAAAA,GAAuBwzD,QAAez/F,EAAWw4F,EAAAA,KAElEvtF,IAAOC,EAAAA,EAAAA,KAEPi8F,GAAiBl+F,QAAQ88F,GAEzBqB,IAAUrhG,EAAAA,EAAAA,KAAQ,KACtB,MAAMshG,EAAkD,GAexD,GAbI9G,GAAoB32C,GAClB88C,GAAqB5nG,QACvBuoG,EAAY/1F,KAAK,CACfpP,GAAIolG,EAAAA,IACJ/D,WAAY,GACZl4F,MAAOJ,GAAK,sBACZg0C,UAAWynD,EACX91E,MAAO81E,EAAoB5nG,OAC3BwjG,SAAS,IAKX/B,IAAqB32C,EAAiB,CACxC,MAAM29C,EAA2C1B,GAAczoD,MAAM,EAnG/C,KAmG0E,GAC5FopD,GACFe,EAAkBC,QAAQ,CAAE9oG,KAAM,SAEhC6oG,GAAmBzoG,QACrBuoG,EAAY/1F,KAAK,CACfpP,GAAIolG,EAAAA,IACJ/D,WAAY,GACZl4F,MAAOJ,GAAK,aACZg0C,UAAWsoD,EACX32E,MAAO22E,EAAkBzoG,OACzBwjG,SAAS,IAIb,MAAMmF,GAAwB7B,GAAmB,IAC9C3qE,QAAQ6T,IAAcy4D,EAAkBG,MAAMC,IAAgBz5D,EAAAA,EAAAA,KAAey5D,EAAa74D,OAC1FsO,MAAM,EAnHgB,IAoHnBwqD,GAA2B5oD,GAAsB,IACpD/jB,QAAOtqB,IAAA,IAAC,WAAEk3F,GAAYl3F,EAAA,OAAMk3F,CAAU,IACtC71F,KAAIC,IAAA,IAAC,SAAE68B,GAAU78B,EAAA,OAAK68B,CAAQ,IAC9B7T,QAAQ6T,IACCy4D,EAAkBG,MAAMC,IAAgBz5D,EAAAA,EAAAA,KAAey5D,EAAa74D,OACtE24D,EAAqBC,MAAMC,IAAgBz5D,EAAAA,EAAAA,KAAey5D,EAAa74D,OAEjF,GAAI84D,GAAyB9oG,QAAU2oG,GAAsB3oG,OAAQ,CACnE,MAAMsjG,GAAaqF,GAAsB3oG,OACnCgpG,EAAqBL,EAAqBtd,OAAOyd,GACvDP,EAAY/1F,KAAK,CACfpP,GAAIkgG,EAAYC,EAAAA,IAAwBJ,EAAAA,IACxCsB,WAAY,GACZl4F,MAAOJ,GAAKm3F,EAAY,mBAAqB,kBAC7CnjD,UAAW6oD,EACXl3E,MAAOk3E,EAAmBhpG,OAC1BwjG,SAAS,GAEb,CACF,MAAO,GAAI5F,EAAgB,CACzB,MAAMqL,EAAyB5C,EAAgBkB,GAC/C,GAAI0B,GAAwB3rB,UAAUt9E,OAAQ,CAC5C,MAAMs9E,EAAW2rB,EAAuB3rB,SACrCh/B,MAAM,EA1ImB,GA2IzB+sC,OAAOub,GAAsB,IAChC2B,EAAY/1F,KAAK,IACZy2F,EACH3rB,WACAxrD,MAAOwrD,EAASt9E,OAChBoD,GAAI+/F,EAAAA,IACJ52F,MAAOJ,GAAK,mBAEhB,CACF,MAAO,GAAI27F,EAAuB,CAChC,MAAMoB,EAAwB7C,EAAgBiB,GAC1C4B,EAAsB5rB,UAAUt9E,QAClCuoG,EAAY/1F,KAAK,IACZ02F,EACH9lG,GAAI+/F,EAAAA,IACJ52F,MAAOJ,GAAK,mBAGlB,MAAWy6F,GAAoB5mG,QAC7BuoG,EAAY/1F,KAAK,CACfpP,GAAI+/F,EAAAA,IACJsB,WAAY,IACZl4F,MAAOJ,GAAK,kBACZmxE,SAAUspB,EACV90E,MAAO80E,EAAmB5mG,OAC1BwjG,SAAS,IAIb,MAAM2F,EAAa,IAAKlC,GAAuB,IAC3CO,GACF2B,EAAWT,QAAQlB,GAGrB,MAAM4B,GAAkBpmE,EAAAA,GAAAA,IAAOmmE,EAAW9d,OAAOmb,GAA0B,KAErE6C,EAAgBtqD,OAAOwK,QAAO2+C,EAAAA,GAAAA,IAAW7B,EAAiB+C,IAEhE,MAAO,IACFb,KACAc,EACJ,GACA,CACDpC,EAAqBxF,EAAkB7D,EAAgBkK,EAAuBlB,EAC9EJ,EAAwBH,EAAiBU,EAAc7mD,EAAoB/zC,GAAM26F,EACjFS,EAAsBD,EAAqBx8C,EAAiB88C,EAAqBJ,EACjFE,IAGI4B,IAAkBriG,EAAAA,EAAAA,KAAQ,IAC9BohG,IAC4D,IAAzDC,GAAQnsE,QAAQpyB,GAAQA,EAAIuzE,UAAUt9E,SAAQA,QAChD,CAACsoG,GAASD,KAEPkB,IAAmBC,EAAAA,GAAAA,GAAkB,GAAI9P,EAAAA,KACzC+P,GAAsBpB,IAAkBkB,KAAqBD,IAEnEvxB,EAAAA,GAAAA,GAAoB9hD,EAAW3lB,IAAam5F,KAG5C//F,EAAAA,EAAAA,KAAU,KACR,IAAK2+F,GACH,OAGF,MAAMt/D,EAAS9S,EAAUvtB,QACzB,IAAKqgC,EACH,OAGF,MAAM2gE,EAAU3P,EAAiBiM,IAAuBj9D,EAAO4E,YAAc,EAAIq4D,GAAsB,IAEvGziB,EAAAA,GAAAA,GAAwBx6C,EAAQ2gE,EAAQ,GACvC,CAACrB,GAAgBtO,IAEpB,MAAM4P,IAAoBh+F,EAAAA,EAAAA,IAAiBw9E,IACzC4e,EAAoB5e,EAAM,IAkEtB76C,IAAgB54B,EAAAA,GAAAA,GAAe,gBC1XhB,WD0X8C/I,GAEnE,IAAK88F,GACH,OACEj9F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2hC,IACbg7D,GACC98F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWi9F,IAA8Bz9F,GAAK,eAEnDK,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,OAMhB,MAAMw+C,IAAkBn0F,EAAAA,GAAAA,GACtBk0F,GACA,gBACC3B,GAAuB2B,IAEpBE,IAAgBp0F,EAAAA,GAAAA,GACpBk0F,GD9Y0F,WCgZ1F70F,EAAAA,GAAe,eAAiB,gBAChC8yF,EACA+B,IAGF,OACEp9F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2hC,IACd9hC,EAAAA,GAAA7K,cAAA,OACEiS,IAAKqiB,EACLtpB,UAAWk9F,IAEXr9F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BACbH,EAAAA,GAAA7K,cAAA,UAAQiS,IAAKgoF,EAAiBjvF,UAAU,kBACxCH,EAAAA,GAAA7K,cAAA,UAAQiS,IAAKgtF,EAAmBj0F,UAAU,kBACzC27F,GAAQp1F,KAnGjB,SAAqBuoF,EAA8C/3F,GACjE,MAAMqmG,EAAetO,EAAWne,WAAW,GACrC5C,GAAkBhlE,EAAAA,GAAAA,GACtBk0F,GACAlmG,IAAUq2F,GC/T8B,YDkUpCiQ,EAAmBtmG,EAAQumG,EAAAA,IAC3BC,GAAO9M,EAAAA,EAAAA,MAAgCztD,EAAAA,EAAAA,MAAa8rD,GAE1D,GAAIA,EAAWr4F,KAAOolG,EAAAA,IAAtB,CAIA,GAAIrC,GAA2B/a,IAAIqQ,EAAWr4F,KAAOq4F,EAAWI,eAAiBkO,EAAc,CAC7F,MAAM7G,EAAWzH,EAAWr4F,KAAO+/F,EAAAA,KAAwB1H,EAAWr4F,KAAOmgG,EAAAA,IACvE4G,EAAUjE,GAAqB9a,IAAIqQ,EAAWr4F,IACpD,OACEoJ,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLmG,IAAKooF,EAAWr4F,GAChBuJ,UAAW+tE,EACX1oE,UAAWypF,EAAWlvF,MACtBwF,OAAK,EACLuyC,MAAO6lD,EACPh9F,MAAM,cAENE,QAASA,IAAMu5E,GAAiBsc,EAAW,EAAIx/F,IAE9Cw/F,EACC12F,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WAEXL,EAAAA,GAAA7K,cAACyoG,GAAe,CACd3O,WAAYA,EACZ17E,QAASqnF,IAAegB,GACxBzhF,eAAa,EACbg1E,oBAAqBN,GACrBO,gBAAiBoO,EAAoBE,EAAOtJ,EAAoBhF,OAAmB16F,IAK7F,CAEA,OACEsL,EAAAA,GAAA7K,cAACokG,GAAa,CACZ1yF,IAAKooF,EAAWr4F,GAChBi5E,QAAS0tB,EACTlgG,KAAM6xF,EAAAA,IACNnvF,MAAOkvF,EAAWlvF,MAClBI,UAAW+tE,EACX36D,QAASqnF,IAAegB,GACxBzM,oBAAqBN,GACrBsC,eAAa,EACb/+D,sBAAoB,EACpBg9D,gBAAiBoO,EAAoBE,EAAOtJ,EAAoBhF,OAAmB16F,EACnFg9F,qBAAsB8D,EACtB30F,QAASu5E,GACTuX,SAAUz6F,EACVijB,eAAa,GA9CjB,CAiDF,MAyCIna,EAAAA,GAAA7K,cAAA,OACEiS,IAAKoU,EACL+8B,SAAUijD,EACVr7F,UAAWm9F,IAEVxB,GAAQp1F,KAAI,CAACuoF,EAAYh2C,KACxB,MAAMi8C,EAAmBjG,EAAWr4F,KAAOolG,EAAAA,KACrC/M,EAAWr4F,KAAO+/F,EAAAA,MAAyB2E,GAAyBlK,GACpEkE,EAAiBrG,EAAWr4F,KAAOokG,EAEzC,OACEh7F,EAAAA,GAAA7K,cAAC0oG,GAAU,CACTh3F,IAAKooF,EAAWr4F,GAChBq4F,WAAYA,EACZkF,YAAax2F,QAAQi9F,GAAcgB,IACnC1kG,MAAO+hD,EACPo0C,SAAUsO,EACVxM,oBAAqBzB,GACrBkB,mCAAoCA,GACpCL,mCAAoCA,GACpCwG,aAAcxH,GAAkBt0C,EAAI,GAAKs0C,GAAkBt0C,EAAI,EAC/DqF,gBAAiBA,EACjB8yC,eAAgBA,EAChB6D,iBAAkBA,EAClBC,iBAAkBA,EAClBC,qBAAsBmG,GAAyBrM,EAAWr4F,KAAO+/F,EAAAA,IACjEtB,sBAAuBjE,GAAkBnC,EAAWr4F,KAAO+/F,EAAAA,IAC3DrB,eAAgBA,EAChBljE,qBAAsBA,EACtBgjE,oBAAqBA,EACrB1hD,mBAAoBA,EACpB8hD,cAAeA,EACfE,iBAAkBA,EAClBC,kBAAmBA,EACnBC,gBAAiBuH,GACjBpL,kBAAmBA,EACnBC,mBAAoBA,EACpBC,mBAAoBA,EACpB93E,eAAa,GACb,KAIJ,K,eE5cV,MCoFA,IAAe7b,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACjC,CACLo8F,0BAA2BngG,QAAQ+D,EAAOu4E,aAAa8f,aAAavmG,QACpEgiG,eAAeuI,EAAAA,EAAAA,KAA+Br8F,MAH9BD,EAtDgC7H,IAO9C,IAP+C,OACnD2E,EAAM,gBACNy/F,EAAe,0BACfF,EAAyB,cACzBtI,EAAa,oBACbyI,EAAmB,QACnBx/F,GACD7E,EACC,MAAM,0BAAEskG,IAA8Bt/F,EAAAA,EAAAA,MAEhCu/F,GAAmBpiG,EAAAA,EAAAA,OAClBqiG,EAAoBC,EAAsBC,IAA0Bz6F,EAAAA,EAAAA,MAC3E3G,EAAAA,EAAAA,KAAU,KACRihG,EAAiBjiG,QAAU8hG,EAAgB9hG,QAASmT,wBAAwB2G,KAAK,GAChF,CAACzX,EAAQy/F,KAEZ9gG,EAAAA,EAAAA,KAAU,KACJqB,IAAWu/F,GACbI,GACF,GACC,CAACJ,EAA2Bv/F,EAAQ2/F,IAEvC,MAAMf,GAAoB57F,EAAAA,EAAAA,KAAasuE,IACrCouB,EAAoBpuB,GACpBpxE,GAAS,GACR,CAACA,EAASw/F,IAEb,OACEj+F,EAAAA,GAAA7K,cAACopG,GAAAA,EAAM,KACLv+F,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACHzU,OAAQA,EACRigG,WAAS,EACT/3F,UAAU,QACVg4F,gBD/DsB,WCgEtBhgG,QAASA,EACT0/F,iBAAkBA,EAAiBjiG,QACnCwiG,kBAAmBN,GAEnBp+F,EAAAA,GAAA7K,cAACwpG,GAAiB,CAChBtR,SAAS,oBACT8G,YAAa51F,EACb8J,UAAW9J,EACX6yF,gBAAc,EACdoE,cAAeA,EACfzD,kBAAmBsM,EACnBrM,mBAAoBsM,EACpB/C,oBAAqB4B,EACrBlL,mBAAoBxzF,KAGjB,K,gBChFb,MC+BMmgG,GAAoB,EAAIj2F,EAAAA,EAsG9B,IAAerK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA4B,IAA1B,MAAEg3B,GAAOh3B,EAIhB,MAAO,CACLm/C,aAJkB7f,EAAAA,EAAAA,KAAWjjC,EAAQA,EAAO8kB,eAK5Cq7B,IAJUxlB,GAAO6oB,OAAQvgB,EAAAA,EAAAA,KAAWjjC,EAAQ26B,EAAM6oB,YAASxwD,EAK5D,GARe+M,EApGS7H,IAAwD,IAAvD,MAAEyiC,EAAK,YAAEmoB,EAAW,IAAE3C,GAA4BjoD,EAC9E,MAAM,eAAEu4F,EAAc,0BAAE0M,EAAyB,gBAAEC,IAAoBlgG,EAAAA,EAAAA,MAEjEe,GAAOkuD,EAAAA,GAAAA,KAEPtvD,EAASZ,QAAQ0+B,GACjB0iE,GAAiBz+D,EAAAA,GAAAA,GAAiBjE,GAElC2iE,GAAqBvkG,EAAAA,EAAAA,KAAQ,KACjC,GAAK+pD,GAAgBu6C,EACrB,MAAO,IACFv6C,EACHw1B,YAAa,CACXE,WAAY6kB,EAAe9kC,eAE9B,GACA,CAACzV,EAAau6C,IAEX//F,GAAcvE,EAAAA,EAAAA,KAAQ,KAC1B,IAAKskG,IAAmBl9C,EAAK,OAE7B,MAAMyM,GAAUxyB,EAAAA,EAAAA,KAAgB+lB,GAEhC,OAAIk9C,EAAe1yF,SACV1M,EAAK,wBAAyB,CACnCkiD,IAAKyM,EACLjiD,UAAU4yF,EAAAA,GAAAA,IAAoBt/F,EAAMo/F,EAAe1yF,WAClD,CACDg2D,WAAW,EACXC,cAAc,IAIX3iE,EAAK,qBAAsB,CAAEkiD,IAAKyM,GAAW,CAAE+T,WAAW,EAAMC,cAAc,GAAO,GAC3F,CAACzgB,EAAKliD,EAAMo/F,IAEThyE,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClC,MAAM62D,EAAY+oC,GAAgB/oC,UAE9BA,GACF8oC,EAAgB,CACd9oC,YACA/0C,MAAO,CACL03C,UAAW,sBACXC,UAAW,CACT3W,MAAO,oBAMf48C,GAA2B,IAGvBK,GAAkB//F,EAAAA,EAAAA,IAAgB,KACtC,IAAK4/F,EAAgB,OAErB,MAAMxL,EAAUwL,EAAe1yF,UAAWioB,EAAAA,GAAAA,MAAkByqE,EAAe1yF,cAAW3X,EAEtFy9F,EAAe,CACbgN,kBAAmBJ,EAAe/oC,UAClCs9B,cAAeyL,EAAe9kC,cAC9Bs5B,YAEFsL,GAA2B,IAG7B,OACE7+F,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRo2B,iBDvGoB,WCwGpByqE,wBAAsB,EACtBxqE,QAAM,EACNn2B,QAASsuB,GAERgyE,GACC/+F,EAAAA,GAAA7K,cAAC0nF,GAAAA,EAAW,CACV18E,UD9GsC,WC+GtC+5E,WAAY6kB,EAAe9kC,cAC3B58D,KAAMuhG,GACNS,UAAW,EACXtO,aAAW,IAGf/wF,EAAAA,GAAA7K,cAAA,WACE6K,EAAAA,GAAA7K,cAAA,MAAIgL,UDtHgF,YCsHtDR,EAAK,4BACnCK,EAAAA,GAAA7K,cAAA,KAAGgL,UDvH8D,YCuH9BnB,IAEpCggG,GACCh/F,EAAAA,GAAA7K,cAACmqG,GAAAA,EAAkB,CACjBC,SAAUP,IAGdh/F,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACrD,KAAK,UAAUwD,QAASq+F,GAC7Bv/F,EAAK,mBAEF,K,4BCjIZ,SAA2F,WCgV3F,SAAS6/F,GAAuBC,EAAwBrgG,GACtD,OAAOqgG,EAAS/5D,MAAMg6D,IAAWA,EAAMtgG,UAClCqgG,EAAS9vE,QAAQunB,GAAM93C,GAAU83C,EAAE93C,SAAWA,IAC9C43C,MAAK,CAACC,EAAGC,IAAMD,EAAE9xB,KAAO+xB,EAAE/xB,OAAM,EACvC,CAMA,UAAe7mB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA4B,IAA1B,MAAEg3B,GAAOh3B,EAChB,MAAMqgB,EAAO2W,IAASuI,EAAAA,EAAAA,KAAWljC,EAAQ26B,GAAOj9B,QAC1CwjF,EAAel9D,IAAQm9D,EAAAA,EAAAA,KAAmBnhF,EAAQgkB,EAAK9uB,IACvD+oG,EAAatjE,GAAOojE,UAAYD,GAAuBnjE,EAAMojE,SAAUpjE,EAAMj9B,QAGnF,MAAO,CACLsmB,OACAk9D,eACAgd,gBALkBD,GAAYvgG,QAASwlC,EAAAA,EAAAA,KAAWljC,EAAQi+F,GAAYvgG,aAAU1K,EAMhF09B,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GAClD,GAZeD,EAhSD7H,IAMU,IANT,MAClByiC,EAAK,KACL3W,EAAI,aACJk9D,EAAY,gBACZgd,EAAe,qBACfxtE,GACsBx4B,EACtB,MAAM,WACJimG,EAAU,gBACVC,EAAe,gBACf1kB,EAAe,iBACflnD,EAAgB,aAChB6rE,IACEnhG,EAAAA,EAAAA,OAEGohG,EAAoBC,EAAkBC,IAAqBr8F,EAAAA,EAAAA,MAC3Ds8F,EAAkBC,EAAgBC,IAAmBx8F,EAAAA,EAAAA,MACrDy8F,EAAqBC,EAAmBC,IAAsB38F,EAAAA,EAAAA,KAE/D8hB,EAAYD,IAAQE,EAAAA,EAAAA,KAAcF,GAElCnnB,EAASZ,QAAQ0+B,GAEjBuxB,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,MAEb3wD,EAAAA,EAAAA,KAAU,KACJwoB,IAASk9D,GACXmd,EAAa,CAAE3gG,OAAQsmB,EAAK9uB,IAC9B,GACC,CAAC8uB,EAAMk9D,IAEV,MAAM6d,GAAYhmG,EAAAA,EAAAA,KAAQ,KACxB,GAAKirB,EAIL,OAAO07B,EAAAA,EAAAA,KAAawM,EAASloC,EAAK,GACjC,CAACA,EAAMkoC,IAEJ8yC,GAAmBjmG,EAAAA,EAAAA,KAAQ,KAC/B,GAAKmlG,EAIL,OAAOx+C,EAAAA,EAAAA,KAAawM,EAASgyC,EAAgB,GAC5C,CAACA,EAAiBhyC,KAEf,eACJ+yC,EAAc,UACdC,EAAS,MACTlB,EAAK,MACL3/F,EAAK,SACL8gG,EAAQ,UACRC,EAAS,MACTvhG,EAAK,SACLwH,EAAQ,gBACRg6F,EAAe,aACfC,IACavmG,EAAAA,EAAAA,KAAQ,KACrB,IAAK4hC,GAAO4kE,cAAgBv7E,EAC1B,MAAO,CACLi7E,gBAAgB,EAChB5gG,MAAO6tD,EAAQ,YAInB,MAAM,WACJszC,GACE7kE,EAAM4kE,YAEJtB,EAAatjE,GAAOojE,UAAYD,GAAuBnjE,EAAMojE,SAAU/5E,EAAK9uB,IAC5EuqG,EAA+B9kE,GAAOojE,WAoNjBA,EApNoDpjE,EAAMojE,SAoNlCrgG,EApN4CsmB,EAAK9uB,IAqN/F6oG,EAAS2B,OAAO1B,GAAUA,EAAMtgG,SAAWA,KADpD,IAA+BqgG,EAAwBrgG,EAlNnD,MAAM,OACJurF,EAAM,aACN0W,EAAY,aACZC,EAAY,cACZC,EAAa,gBACbC,EAAe,WACfC,IACEC,EAAAA,GAAAA,GAAqBrlE,EAAM4kE,aAAa,GAEtCU,EAAWT,EAEXlyF,EAAO4+C,EAAQ,cAAeyzC,GAC9BrrF,EAAQsrF,EAAe1zC,EAAQ,cAAeyzC,EAAe,QAAK3sG,EAElEktG,EAAah0C,EAAQ,0BAA2B4zC,GAEhDK,EAAyBj0C,EAAZjoC,EAAoB,eAA0B,cAE3Dm8E,GAA0Blf,GAAcmf,oBAAsB,IAAMnf,GAAcof,eAAiB,GAEzG,IAAIhjG,EACJ,GAAIyiG,EACFziG,EAAc4uD,EAAQ,8BACjB,GAAIk0C,EAAyB,KAAMl7E,EAAAA,EAAAA,KAAYlB,GAAO,CAC3D,MAAMu8E,EAAar0C,EAAQ,qCAAsCk0C,GACjE9iG,EAAc4uD,EAAQ,+BAAgC,CAACq0C,EAAYxB,GACrE,MACEzhG,EAAc4uD,EAAQ,qCAAsC,CAAC6yC,EAAWmB,IAG1E,MAAO,CACLjB,gBAAgB,EAChB5gG,MAAO8hG,EACPhB,SAAU7xF,EACV8xF,UAAW9qF,EACXzW,MAAOorF,EAAOpT,WACdxwE,SAAUw6F,EACVC,kBACAT,gBAAiB/hG,EACjB0gG,MAAOC,EACPiB,UAAWe,EACXX,aAAcG,IAAiCM,EAChD,GACA,CAAC/7E,EAAM+6E,EAAWpkE,EAAOuxB,EAASg1B,EAAcj9D,IAE7Cu8E,GAAmB7lE,GAAOojE,UAAUjsG,QAAU4+B,EAC9C+vE,EAAmBzC,GAAOtgG,QAAUsgG,EAAMtgG,SAAWi9B,GAAOj9B,OAE5DgjG,GAAmBjjG,EAAAA,EAAAA,IAAgB,KACvC+gG,IACAL,EAAW,CAAEzgG,OAAQsmB,EAAM9uB,GAAIyrG,MAAO,CAAC3C,EAAO4C,QAC9ClnB,EAAgB,CAAC,EAAE,IAGfmnB,GAAuBpjG,EAAAA,EAAAA,IAAgB,KAC3C+0B,IACAssE,IACAV,GAAiB,IAGb0C,GAAoBrjG,EAAAA,EAAAA,IAAgB,KACxC,IAAKugG,EACH,OAAKttE,OAKL0tE,SAJES,IAQCS,EAKDtB,EAAMnrE,cACR6rE,IAIE+B,EACFlC,IAIFmC,IAdEtC,GAcgB,IAGd5xC,GAAmB/uD,EAAAA,EAAAA,IAAgB,KACvC2gG,GAAiB,IA0CnB,OACE9/F,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRwB,MAAOA,EACPI,UD5QuC,WC6QvCw0B,iBD7QoB,WC8QpBl2B,QAASqhG,GA5CNa,EAKH3gG,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACstG,GAAAA,EAAe,CACd5B,SAAUA,EACVC,UAAWA,EACX/5F,SAAUA,EACV27F,kBAAmBnjG,EACnB6vE,kBAAkB,UAEnBwxB,GACC5gG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GDhPoE,aCiPhGk9C,EAAQ,qCAAsC6yC,IAGnDzgG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACbyV,EAAAA,GAAAA,GAAW46E,EAAiB,CAAC,kBAAmB,WAEnD/gG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACT,UAAU,wBAAwBiT,SAAU8uF,EAAiBrhG,QAAS2hG,GAClFxB,EACChhG,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,UACVutD,EAAQjoC,EAAY,4BAA8B,0BAEnDioC,EAAQ,OAEd5tD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACT,UAAU,wBAAwBU,QAASqtD,GACvDN,EAAQ,aA9BR5tD,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,CAAC1+C,UDnO4C,aCiR3DgiG,GAAoBzB,GACnB1gG,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQyhG,EACR7/F,UDpR+I,WCqR/Iw0B,iBDrRgL,WCsRhLl2B,QAASyhG,GAETlgG,EAAAA,GAAA7K,cAAA,OAAKgL,UDxRwM,YCyR3MH,EAAAA,GAAA7K,cAAA,OAAKgL,UDzRqP,YC0RxPH,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAACC,KAAM05E,EAAiBviG,KAAK,UACpC2C,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,cAAcF,UD3RwP,cC6RnRH,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,OAAOF,UD7R4M,aC8R9NH,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAACC,KAAMR,EAAMroB,KAAK,WAE3B2C,EAAAA,GAAA7K,cAAA,YACGgxB,EAAAA,GAAAA,GACCynC,EAAQ,4BAA6B,CAAC8yC,EAAkBD,IAAa,CAAC,kBAAmB,WAG7FzgG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACT,UAAU,wBAAwBU,QAASuhG,GACvDx0C,EAAQ,YAEX5tD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACT,UAAU,wBAAwBU,QAASq/F,GACvDtyC,EAAQ,aAKhBjwD,QAAQ+hG,GAAOnrE,gBACdv0B,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ4hG,EACRwC,eAAa,EACb/sE,aAAcg4B,EAAQ,MACtB7tD,MAAO6tD,EAAQ,yCACfnvD,QAAS4hG,EACTxqE,eAAgBwqE,IAEfl6E,EAAAA,GAAAA,GACCynC,EACE,wCACAqxC,EAAAA,GAAAA,IAAoBt/F,EAAM+/F,EAAOnrE,eAAgBD,EAAAA,GAAAA,QAEnD,CAAC,kBAAmB,YAIxBlC,GACApyB,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ+hG,EACR1qE,aAAcg4B,EAAQ,cACtB7tD,MAAO6tD,EAAQ,iBACfnvD,QAAS+hG,EACT3qE,eAAgB0sE,IAEfp8E,EAAAA,GAAAA,GAAWynC,EAAQ,4BAA6B,CAAC,kBAAmB,WAGnE,K,4BC5UZ,SAAkD,WC0HlD,IAAetvD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA4B,IAA1B,MAAEg3B,GAAOh3B,EAChB,MAAM,QAAElR,GAAYkoC,GAAS,CAAC,EACxBumE,EAAczuG,IAAW8yB,EAAAA,EAAAA,KAAkBvlB,EAAQvN,EAAQiL,OAAQjL,EAAQyX,WAC3E8yB,EAASkkE,IAAet+E,EAAAA,EAAAA,KAAa5iB,EAAQkhG,GAEnD,MAAO,CACLp8E,cAAe9kB,EAAO8kB,cACtBnC,cAAeqa,EAChB,GATej9B,EA1FE7H,IAIO,IAJN,cACrB4sB,EAAa,MACb6V,EAAK,cACLhY,GACsBzqB,EACtB,MAAM,mBACJipG,EAAkB,cAAEC,EAAa,aAAEr+E,IACjC7lB,EAAAA,EAAAA,MACEe,GAAOC,EAAAA,EAAAA,KACPrB,EAASZ,QAAQ0+B,GAEjB0mE,IAAW1mE,GAAOrT,KAAKg6E,MAAQ3mE,GAAOrT,KAAKg6E,OAASx8E,GAAmB6V,GAAOrT,KAAKi6E,QAEnFC,GAAqB/jG,EAAAA,EAAAA,IAAgB,KACpCk9B,GAAUA,EAAMrT,KAAKm6E,oBAC1B1+E,EAAa,CACXrlB,OAAQi9B,EAAMrT,KAAKgd,OACnBp6B,UAAWywB,EAAMrT,KAAKm6E,oBAExBN,IAAoB,IAGhBL,GAAoBrjG,EAAAA,EAAAA,IAAgB,KACpC4jG,EACFD,EAAc,CAAElpC,KAAMv9B,EAAOu9B,OAG/BipC,GAAoB,IAGhBO,GAAY3oG,EAAAA,EAAAA,KAAQ,KACxB,IAAK4hC,EAAO,OACZ,MAAM,KAAEu9B,EAAI,KAAE5wC,GAASqT,EAEjB2J,EAAShd,EAAKgd,QAAU3hB,GAAeztB,GAiC7C,MAAO,CACL2lC,OA/BAv8B,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKQ,IAAKwnF,GAAaxiE,IAAI,GAAGxa,UDtE8B,aCuE5DH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,KAAkByV,EAAAA,GAAAA,GAAWxmB,EAAK,uBAAwB,CAAC,qBACzEK,EAAAA,GAAA7K,cAACkuG,GAAAA,EAAS,CAACtjG,MAAM,mBAAmB+8E,KAAO,GAAEziB,EAAAA,gBAAoCT,OA6BnF0pC,UAzBgB,CAChB,CAAC3jG,EAAK,gBAAiBqmC,EAAS,CAAE5mC,OAAQ4mC,GAAWrmC,EAAK,wBAC1D,CAACA,EAAK,cAAeqpB,EAAKg6E,KAAO,CAAE5jG,OAAQ4pB,EAAKg6E,MAASrjG,EAAK,wBAC9D,CAACA,EAAK,gBAAiBA,EAAK,6BAA8BA,EAAK,SAAUqpB,EAAKytD,OAAQ,OACtF,CAAC92E,EAAK,kBACJK,EAAAA,GAAA7K,cAAA,QAAMgL,WAAW+I,EAAAA,GAAAA,GAAe8f,EAAKm6E,mBDjFjB,YCiFyDtiG,QAASqiG,GACnFl6E,EAAKu6E,iBAAmBv6E,EAAKg6E,KAAOrjG,EAAK,8BACtCA,EAAKqpB,EAAKu6E,eAAiB,mBAAqB,6BAGxD,CAAC5jG,EAAK,iBAAiB+qF,EAAAA,GAAAA,IAAmC,IAAZ1hE,EAAK7D,KAAaxlB,EAAK4pD,MAAM,KAgB3EvtB,OAZAh8B,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,KACdyV,EAAAA,GAAAA,GACC6C,EAAKi6E,OAAStjG,EAAK,wBAAwB+qF,EAAAA,GAAAA,IAAqC,IAAd1hE,EAAKi6E,OAAetjG,EAAK4pD,MAAM,IAC7F5pD,EAAK,4BACT,CAAC,qBASN,GACA,CAACA,EAAM0kB,GAAeztB,GAAIylC,IAE7B,GAAK+mE,EAEL,OACEpjG,EAAAA,GAAA7K,cAACquG,GAAAA,EAAc,CACbjlG,OAAQA,EACRwB,MAAOJ,EAAK,uBACZ2jG,UAAWF,EAAUE,UACrB/mE,OAAQ6mE,EAAU7mE,OAClBP,OAAQonE,EAAUpnE,OAClBl0B,WAAqBnI,EAATojG,EAAc,kBAA0B,SACpD/5F,cAAew5F,EACf/jG,QAASokG,GACT,K,4BCtHN,UAAgB,YAAc,WAAW,iBAAiB,WAAW,cAAgB,WAAW,gBAAgB,WAAW,aAAe,WAAW,qBAAqB,WAAW,iBAAmB,WAAW,mBAAmB,WAAW,gBAAkB,WAAW,eAAiB,WAAW,QAAU,WAAW,OAAS,WAAW,cAAc,WAAW,WAAa,WAAW,eAAe,WAAW,YAAc,YCmH5a,IAAevkG,EAAAA,EAAAA,KA9FuB1E,IAAwB,IAAvB,OAAE6pG,EAAM,OAAEx2B,GAAQrzE,EACvD,MAAM,mBAAE8pG,EAAkB,mBAAEC,IAAuB/kG,EAAAA,EAAAA,MAE7Ce,GAAOC,EAAAA,EAAAA,MAENgkG,EAAiBC,IAAsB9kG,EAAAA,EAAAA,IAAmB0kG,EAAOK,gBAElEC,EAAgBpmG,QAAQ8lG,EAAOK,eAAetwG,QAC9CwwG,EAAgBD,EAAgBN,EAAOK,eAAetwG,OAAS,EAC/Du7D,EAAY60C,EAAgBpwG,OAASowG,EAAgBpwG,OAAO+jF,gBAAa7iF,EAEzEqsG,EAAkBgD,EACpBpkG,EAAK,0BAA2B,CAACqkG,EAAe/2B,EAAOltE,YAAQrL,EAAWsvG,GAC1ErkG,EAAK,4BAA6BstE,EAAOltE,OAEvCyiG,GAAoBjhG,EAAAA,EAAAA,KAAY,KACpCmiG,IAEKE,EAAgBpwG,QAErBmwG,EAAmB,CACjBF,SACA5yD,QAAS+yD,GACT,GACD,CAACH,EAAQG,IAENK,GAAwB1iG,EAAAA,EAAAA,KAAY,KACxC,MAAM2iG,EAAiBN,EAAgBpwG,SAAWiwG,EAAOK,eAAetwG,OACxEqwG,EAAmBK,EAAiB,GAAKT,EAAOK,eAAe,GAC9D,CAACL,EAAOK,eAAgBF,EAAgBpwG,SAE3C,OACEwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO3K,SACrB/F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO1R,cACpBmnB,EAAAA,GAAAA,GAAW46E,EAAiB,CAAC,kBAAmB,WAEnD/gG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOyzF,cAAe,kBAClDxmG,QAAQ8lG,EAAOK,eAAetwG,SAC7BwM,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO0zF,cACrBpkG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO2zF,kBACpB1kG,EAAK,4BAA6BikG,EAAgBpwG,OAAQ,MAE7DwM,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GAAO4zF,gBAClB7oE,KAAK,SACLD,SAAU,EACV36B,QAASojG,GAERL,EAAgBpwG,SAAWiwG,EAAOK,eAAetwG,OAASmM,EAAK,eAAiBA,EAAK,eAG1FK,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTC,QAAS8sE,EAAOK,eAChB1sE,oBAAqBysE,EACrB5tE,YAAa2tE,EACbtsE,eAAa,EACbC,YAAU,EACVC,cAAc,cAIpBx3B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO0zF,cACrBpkG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO2zF,kBACpB1kG,EAAK,6BAGVK,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTC,QAAS8sE,EAAOc,eAChB1tE,kBAAmB4sE,EAAOc,eAC1BtuE,YAAawtE,EAAOc,eACpBjtE,eAAa,EACbC,YAAU,EACVC,cAAc,cAGlBx3B,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLrD,KAAK,UACLwD,QAAS2hG,GAETxiG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO5I,aACnB87F,EAAgBpwG,QAAUmM,EAAK,MAChChC,QAAQimG,EAAgBpwG,SACvBwM,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG14B,EAAK,6BAA8BikG,EAAgBpwG,OAAQ,KAC5DwM,EAAAA,GAAA7K,cAACqvG,GAAAA,EAAK,CAACrkG,UAAWuQ,GAAO+zF,YAAa58F,KAAMknD,EAAW21C,kBAAgB,OAK3E,ICjBV,IAAepmG,EAAAA,EAAAA,KAxEsB1E,IAG/B,IAHgC,OACpCqzE,EAAM,iBACN03B,EAAmB/tE,GAAAA,GACpBh9B,EACC,MAAM,mBAAE8pG,EAAkB,cAAEkB,IAAkBhmG,EAAAA,EAAAA,MAExCe,GAAOC,EAAAA,EAAAA,MAENgkG,EAAiBC,IAAsB9kG,EAAAA,EAAAA,IAAmB4lG,GAE3D51C,EAAY60C,EAAgBpwG,OAASowG,EAAgBpwG,OAAO+jF,gBAAa7iF,EAEzEuvG,GAAwB1iG,EAAAA,EAAAA,KAAY,KACxC,MAAM2iG,EAAiBN,EAAgBpwG,SAAWmxG,EAAiBnxG,OACnEqwG,EAAmBK,EAAiB,GAAKS,EAAiB,GACzD,CAACA,EAAkBf,EAAgBpwG,SAEhCgvG,GAAoBjhG,EAAAA,EAAAA,KAAY,KACpCmiG,IACAkB,EAAc,CAAEn3B,SAAUR,EAAOr2E,GAAIi6C,QAAS+yD,GAAkB,GAC/D,CAAC32B,EAAOr2E,GAAIgtG,IAEf,OACE5jG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO3K,SACpBpI,QAAQgnG,GAAkBnxG,SACzBwM,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO1R,cACpBmnB,EAAAA,GAAAA,GAAWxmB,EAAK,4BAA6B,CAAC,kBAAmB,WAEpEK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOyzF,cAAe,kBACnDnkG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO0zF,cACrBpkG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO2zF,kBACpB1kG,EAAK,4BAA6BikG,EAAgBpwG,OAAQ,MAE7DwM,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GAAO4zF,gBAClB7oE,KAAK,SACLD,SAAU,EACV36B,QAASojG,GAERL,EAAgBpwG,SAAWmxG,EAAiBnxG,OAASmM,EAAK,eAAiBA,EAAK,eAGrFK,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTC,QAASguE,EACTvtE,oBAAqBysE,EACrB5tE,YAAa2tE,EACbtsE,eAAa,EACbC,YAAU,EACVC,cAAc,eAKtBx3B,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLrD,KAAK,UACLwD,QAAS2hG,GAETxiG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO5I,aACnB87F,EAAgBpwG,QAAUmM,EAAK,0BAChChC,QAAQimG,EAAgBpwG,SACvBwM,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG14B,EAAK,+BACNK,EAAAA,GAAA7K,cAACqvG,GAAAA,EAAK,CAACrkG,UAAWuQ,GAAO+zF,YAAa58F,KAAMknD,EAAW21C,kBAAgB,OAK3E,ICIV,IAAepmG,EAAAA,EAAAA,KAxEmB1E,IAAgB,IAAf,OAAE6pG,GAAQ7pG,EAC3C,MAAM,mBAAE8pG,EAAkB,mBAAEC,IAAuB/kG,EAAAA,EAAAA,MAE7Ce,GAAOC,EAAAA,EAAAA,MACNgkG,EAAiBC,IAAsB9kG,EAAAA,EAAAA,IAAmB0kG,EAAO5yD,SAElEg0D,GAAYpqG,EAAAA,EAAAA,KAAQ,KACxB,MAAMiiD,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KACpC,OAAO0qE,EAAO5yD,QAAQlhB,QAAQ/4B,IAAQ8lD,EAAU9lD,GAAIkuG,aAAY,GAC/D,CAACrB,EAAO5yD,UAELk0D,EAAgBnB,EAAgBpwG,OAASqxG,EAAUrxG,OAEnDu7D,EAAYg2C,EAAgBA,EAAcxtB,gBAAa7iF,EAEvD8tG,GAAoBjhG,EAAAA,EAAAA,KAAY,KACpCmiG,IAEAC,EAAmB,CACjBF,SACA5yD,QAAS+yD,GACT,GACD,CAACH,EAAQG,IAENK,GAAwB1iG,EAAAA,EAAAA,KAAY,KACxC,MAAM2iG,EAAiBN,EAAgBpwG,SAAWiwG,EAAO5yD,QAAQr9C,OACjEqwG,EAAmBK,EAAiBW,EAAYpB,EAAO5yD,QAAQ,GAC9D,CAAC4yD,EAAO5yD,QAASg0D,EAAWjB,EAAgBpwG,SAE/C,OACEwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO3K,SACrB/F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO1R,cACpBmnB,EAAAA,GAAAA,GAAWxmB,EAAK,qBAAsB8jG,EAAO1jG,OAAQ,CAAC,kBAAmB,WAE5EC,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOyzF,cAAe,kBACnDnkG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO0zF,cACrBpkG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO2zF,kBACpB1kG,EAAK,4BAA6BolG,EAAe,MAEpD/kG,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GAAO4zF,gBAClB7oE,KAAK,SACLD,SAAU,EACV36B,QAASojG,GAERL,EAAgBpwG,SAAWiwG,EAAO5yD,QAAQr9C,OAASmM,EAAK,eAAiBA,EAAK,eAGnFK,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTC,QAAS8sE,EAAO5yD,QAChBha,kBAAmBguE,EACnBztE,oBAAqBysE,EACrB5tE,YAAa2tE,EACbtsE,eAAa,EACbC,YAAU,EACVC,cAAc,cAGlBx3B,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLG,QAAS2hG,EACTnlG,KAAK,UACL+V,UAAWwwF,EAAgBpwG,QAE3BwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO5I,YACpBnI,EAAK,sBAAuB8jG,EAAO1jG,OACpCC,EAAAA,GAAA7K,cAACqvG,GAAAA,EAAK,CAACrkG,UAAWuQ,GAAO+zF,YAAa58F,KAAMknD,EAAW21C,kBAAgB,MAGvE,ICqBV,IAAepmG,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA4B,IAA1B,MAAEg3B,GAAOh3B,EAChB,MAAM,OAAEo+F,EAAM,QAAEuB,GAAY3oE,GAAS,CAAC,EAChCoxC,EAAWu3B,GAASv3B,WAAag2B,GAAU,aAAcA,EAASA,EAAOh2B,cAAW/4E,GAG1F,MAAO,CACLu4E,OAHaQ,GAAWw3B,EAAAA,EAAAA,KAAiBvjG,EAAQ+rE,QAAY/4E,EAI9D,GARe+M,EApFmC7H,IAGjD,IAHkD,MACtDyiC,EAAK,OACL4wC,GACDrzE,EACC,MAAM,mBAAE8pG,IAAuB9kG,EAAAA,EAAAA,MAEzBe,GAAOC,EAAAA,EAAAA,KAEPrB,EAASZ,QAAQ0+B,GACjB6oE,GAAgB18E,EAAAA,EAAAA,GAAsB6T,IAAUA,EAChDgxC,GAAkB7kD,EAAAA,EAAAA,GAAsBykD,IAAWA,EAEnDltE,GAAQtF,EAAAA,EAAAA,KAAQ,KACpB,GAAKyqG,EAAL,CACA,GAAIA,EAAczB,OAAQ,CACxB,MAAMA,EAASyB,EAAczB,OAC7B,MAAI,mBAAoBA,EACfA,EAAOK,eAAetwG,OAASmM,EAAK,2BAA6BA,EAAK,0BAExEA,EAAK,qBACd,CACA,OAAIulG,EAAcF,QACTrlG,EAAK,8BADd,CARoC,CAYpB,GACf,CAACA,EAAMulG,IAEJC,GAAuB1qG,EAAAA,EAAAA,KAAQ,IAC/B4yE,EAAwBA,EAAgBttE,MACxCmlG,GAAezB,QAAU,UAAWyB,EAAczB,OAAeyB,EAAczB,OAAO1jG,WAA1F,GAEC,CAACstE,EAAiB63B,IAEfE,GAAkB3qG,EAAAA,EAAAA,KAAQ,KAC9B,GAAKyqG,GAAezB,OACpB,MAAI,mBAAoByB,EAAczB,OAAeyB,EAAczB,OAAOK,eAAetwG,YAAzF,CACgB,GACf,CAAC0xG,IAcE3qE,GAAgBh5B,EAAAA,EAAAA,KAAY,KAChC,GAAK2jG,EAAL,CACA,GAAIA,EAAczB,OAAQ,CACxB,MAAMA,EAASyB,EAAczB,OAC7B,MAAI,mBAAoBA,EACfzjG,EAAAA,GAAA7K,cAACkwG,GAAe,CAAC5B,OAAQA,EAAQx2B,OAAQI,IAG3CrtE,EAAAA,GAAA7K,cAACmwG,GAAW,CAAC7B,OAAQA,GAC9B,CAEA,OAAIyB,EAAcF,QACThlG,EAAAA,GAAA7K,cAACowG,GAAc,CAACt4B,OAAQI,EAAkBs3B,iBAAkBO,EAAcF,QAAQL,wBAD3F,CAVoC,CAcpB,GACf,CAACt3B,EAAiB63B,IAErB,OACEllG,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRwB,MAAOA,EACPtB,QAASilG,EACT9uE,QAAM,EACNqtC,gBAAc,GAEbkjC,IAtCkBK,EAsCoBL,EApCvCnlG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO+0F,gBACrBzlG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOg1F,SACrB1lG,EAAAA,GAAA7K,cAACuoC,GAAAA,EAAG,CAACv9B,UAAWuQ,GAAOu8D,OAAQltE,MAAOJ,EAAK,2BAC3CK,EAAAA,GAAA7K,cAACuoC,GAAAA,EAAG,CAACv9B,UAAWuQ,GAAOu8D,OAAQvgE,UAAQ,EAACi5F,WAAYP,EAAiBQ,eAAa,EAAC7lG,MAAOylG,IAC1FxlG,EAAAA,GAAA7K,cAACuoC,GAAAA,EAAG,CAACv9B,UAAWuQ,GAAOu8D,OAAQltE,MAAOJ,EAAK,+BAiC9C46B,KAvCL,IAAuBirE,CAwCb,K,gBC3GZ,UAAgB,QAAU,WAAW,MAAQ,WAAW,iBAAmB,WAAW,aAAe,WAAW,YAAc,WAAW,QAAU,YC0GnJ,IAAelnG,EAAAA,EAAAA,KAjFS1E,IAAyB,IAAxB,MAAEyiC,GAAiBziC,EAC1C,MAAM,iBAAEisG,EAAgB,qBAAEC,EAAoB,iBAAE7xE,IAAqBr1B,EAAAA,EAAAA,MAE/DmnG,GAAkBhqG,EAAAA,EAAAA,IAAuB,MAEzC4D,GAAOC,EAAAA,EAAAA,KAEPomG,GAAYC,EAAAA,GAAAA,GAAY5pE,IACxB,KAAE6pE,EAAI,WAAEC,GAAe9pE,GAAS2pE,GAAa,CAAC,GAC9C,MACJI,EAAK,YAAEC,EAAW,eAAEC,EAAc,kBAAEC,EAAiB,MAAEzyG,EAAK,gBAAE0yG,GAC5DL,GAAc,CAAC,EAEbp5E,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClC2mG,GAAsB,IAGlBW,GAAetnG,EAAAA,EAAAA,IAAgB,KACnC0mG,EAAiB,CAAEK,KAAMA,IAEzBjyE,EAAiB,CACf9/B,QAAuBwL,EAAd0mG,EAAmB,sCAA8C,uCAG5Et5E,GAAa,IAGT25E,EAAgBL,EAAc,qBAAuB,YACrDM,EAAuBN,EAAc,sCACvC,oCAEEO,GAAansG,EAAAA,EAAAA,KAAQ,KACzB,GAAK0rG,EAEL,OAAOU,EAAAA,EAAAA,KAAwBV,EAAW,GACzC,CAACA,IAEEW,GAAersG,EAAAA,EAAAA,KAAQ,KAC3B,IAAK6rG,EACH,OAGF,MAAM5kG,GAASyhC,EAAAA,EAAAA,MACf,OAAOmjE,EAAe5/F,KAAK9P,IAAO+tC,EAAAA,EAAAA,KAAWjjC,EAAQ9K,KAAK+4B,OAAOhyB,QAAQ,GACxE,CAAC2oG,IAIJ,OAFA/6B,EAAAA,GAAAA,GAAoBw6B,GAAkB1pE,IAAUyqE,GAG9C9mG,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQZ,QAAQ0+B,GAChB1H,iBAAkBjkB,GAAO3K,QACzB6uB,QAAM,EACNn2B,QAASsuB,EACT7sB,QAASumG,GAERG,GAAc5mG,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAAC5oB,KAAK,QAAQvJ,MAAOA,EAAOoyB,KAAM0gF,EAAYG,WAAS,IAC5EH,GAAc5mG,EAAAA,GAAA7K,cAACkpD,GAAAA,EAAa,CAACl+C,UAAWuQ,GAAO3Q,MAAOmmB,KAAM0gF,IAC5DR,GAASpmG,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,GAAO01F,OAAQA,GACvCpmG,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,GAAOs2F,kBAClBrnG,EAAK0mG,EAAc,cAAgB,UAAWE,EAAmB,MAEnEO,GACC9mG,EAAAA,GAAA7K,cAAA,OAAKiS,IAAK2+F,EAAiB5lG,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOo2F,aAAc,iBACvEA,EAAapgG,KAAKugG,GACjBjnG,EAAAA,GAAA7K,cAAC85D,GAAAA,EAAS,CAAC9uD,UAAWuQ,GAAOu2F,YAAa/gF,KAAM+gF,EAAap/F,MAAMi0B,EAAAA,EAAAA,KAAgBmrE,QAIzFjnG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,iBAAkBwH,GAAO0qD,UACtDp7D,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACT,UAAU,wBAAwBU,QAAS4lG,GACvD9mG,EAAK6mG,EAAkBG,EAAuBD,IAEjD1mG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACT,UAAU,wBAAwBU,QAASksB,GACvDptB,EAAK,YAGJ,I,wCCtGZ,MCkEA,IAAerB,EAAAA,EAAAA,KA1CS1E,IASR,IATS,OACvB2E,EAAM,aACN2oG,EAAY,eACZC,EAAc,OACd5qE,EAAM,OACNP,EAAM,WACNl0B,EAAU,QACVrJ,EAAO,cACPuK,GACSpP,EACT,OACEoG,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACR4B,UDrCiB,WCsCjBw0B,iBDtC8H,WCuC9Hl2B,QAASA,GAETuB,EAAAA,GAAA7K,cAAA,OAAKgL,UDzCoG,YCyCzEH,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAM8mG,KAC3C5qE,EACDv8B,EAAAA,GAAA7K,cAAA,WACG+xG,GAAcxgG,KAAIrB,IAA6B,IAA3BY,EAAMlG,EAAO+kB,GAASzf,EACzC,OACErF,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPuyE,UAAQ,EACRtyE,WAAS,EACT7uB,KAAMA,GAENjG,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASJ,GACzBC,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAY2kB,GACnB,KAIjB9kB,EAAAA,GAAA7K,cAACkyG,GAAAA,EAAS,CAAClnG,UDzD0I,aC0DpJ67B,EACAl0B,GACC9H,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACrD,KAAK,UAAUwD,QAASmI,GAAiBvK,GAAUqJ,GAEvD,IC9DZ,GAA0C,WAA1C,GAAmE,WC6KnE,IAAexJ,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA4B,IAA1B,MAAEg3B,GAAOh3B,EAChB,MAAMlR,EAAUkoC,GAAOj9B,QAAS8nB,EAAAA,EAAAA,KAAuBxlB,EAAQ26B,EAAMj9B,aAAU1K,EACzE4yG,EAAwB5lG,EAAO+iC,WAAW8iE,2BAEhD,MAAO,CACLpzG,UACAmzG,wBACD,GARe7lG,EA3IE7H,IAA+D,IAA9D,QAAEzF,EAAO,sBAAEmzG,GAA8C1tG,EAC9E,MAAM,mBAAE4tG,IAAuB5oG,EAAAA,EAAAA,MAGzB6oG,GAAc1rG,EAAAA,EAAAA,IAA0B,MAExCwC,EAASZ,QAAQxJ,GACjBuzG,EAAwBvzG,GAASwzG,UAEjCC,GAAuBtnE,EAAAA,GAAAA,GAAiBonE,GAExC95C,GAAUhuD,EAAAA,EAAAA,KAEVioG,GAAmBptG,EAAAA,EAAAA,KAAQ,IAE7BuF,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,qCACb5tD,EAAAA,GAAA7K,cAAA,UAAIgxB,EAAAA,GAAAA,GAAWynC,EAAQ,oCAAqC,CAAC,QAC7D5tD,EAAAA,GAAA7K,cAAA,UAAIgxB,EAAAA,GAAAA,GAAWynC,EAAQ,oCAAqC,CAAC,QAC7D5tD,EAAAA,GAAA7K,cAAA,UAAIgxB,EAAAA,GAAAA,GAAWynC,EAAQ,oCAAqC,CAAC,QAC7D5tD,EAAAA,GAAA7K,cAAA,SACE6K,EAAAA,GAAA7K,cAAC2yG,GAAAA,EAAQ,CACPv9F,IAAKqjD,EAAQ,qCACb/lD,KAAM+lD,EAAQ,wCAGlB5tD,EAAAA,GAAA7K,cAAA,UAAIgxB,EAAAA,GAAAA,GAAWynC,EAAQ,oCAAqC,CAAC,UAGhE,CAACA,KAEE,kBACJ+V,EAAiB,kBAAEC,EAAiB,kBACpCC,EAAiB,uBAAEC,EAAsB,sBAAEC,IACzCC,EAAAA,GAAAA,GAAuByjC,GAAcG,GAEnC76E,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClCqoG,IACA1jC,IACAC,GAAuB,IAGnBq/B,GAAY3oG,EAAAA,EAAAA,KAAQ,KACxB,GAAK8D,EA2CL,MAAO,CACLg+B,OAzCAv8B,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IAAek9C,EAAQ,2BACtC5tD,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAewH,GDlF6E,aCmFvGk9C,EAAQ,mCAEX5tD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL0G,IAAKqgG,EACLliG,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACNR,UD1FiF,WC2FjFU,QAASgjE,GAET7jE,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WA6Bf6mG,aAxBmB,CACnB,CAAC,OAAQt5C,EAAQ,gCACfznC,EAAAA,GAAAA,GAAWynC,EAAQ,kCAAmC,CAAC,qBACzD,CAAC,gBAAiBA,EAAQ,gCACxBznC,EAAAA,GAAAA,GAAWynC,EAAQ,kCAAmC,CAAC,qBACzD,CAAC,YAAaA,EAAQ,gCACpBznC,EAAAA,GAAAA,GAAWynC,EAAQ,iCAAkC05C,GAAwB,CAAC,sBAmBhFtrE,OAfAh8B,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,KAAeyV,EAAAA,GAAAA,GAAWynC,EAAQ,+BAAgC,CAAC,qBAClF5tD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,KACXyV,EAAAA,GAAAA,GAAWynC,EAAQ,kCAAmC,IAAK,CAAC,oBAC7D5tD,EAAAA,GAAA7K,cAAC2yG,GAAAA,EAAQ,CACPv9F,IAAKqjD,EAAQ,cACb/lD,KAAM+lD,EAAQ,sBAUrB,GACA,CAACrvD,EAAQqvD,EAASiW,EAAmByjC,IAExC,OAAIM,EAEA5nG,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAC4yG,GAAe,CACdxpG,OAAQA,EACR2oG,aAAc9D,GAAW8D,aACzBC,eAAe,UACf5qE,OAAQ6mE,GAAW7mE,OACnBP,OAAQonE,GAAWpnE,OACnBl0B,WAAY8lD,EAAQ,+BACpBnvD,QAASsuB,IAEV62C,GAAqBzvE,GACpB6L,EAAAA,GAAA7K,cAAC6yG,GAAAA,EAAoC,CACnCzpG,OAAQolE,EACR+G,OAAQ9G,EACRqkC,WAAYR,EACZtzG,QAASA,EACT+zG,iBAAe,EACfC,YAAap7E,EACbtuB,QAASqlE,EACTplE,oBAAqBqlE,KAQ7B/jE,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACR4B,UD9JiB,WC+JjBw0B,iBD/JiI,WCgKjIl2B,QAASsuB,GAER86E,EACD7nG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLrD,KAAK,UACLwD,QAASksB,GAER6gC,EAAQ,gCAEL,KCzKZ,GAAwB,WCuGxB,IAAetvD,EAAAA,EAAAA,KAnF8B1E,IAGvC,IAHwC,OAC5C2E,EAAM,QACNE,GACD7E,EACC,MAAMg0D,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,KAEPu6C,GAAiB3tG,EAAAA,EAAAA,KAAQ,KAC7B,MAAMoyE,EAAWjf,EAAQ,aACzB,OAAOjuD,EACL,4BACA,CACEm9E,KACE98E,EAAAA,GAAA7K,cAAC2yG,GAAAA,EAAQ,CAACv9F,IAAKqjD,EAAQ,2BAA4B/lD,KAAMglE,GACtDA,EACD7sE,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WAIjB,CACEgiE,WAAW,GAEd,GACA,CAAC1iE,EAAMiuD,IAEJy6C,GAAoB5tG,EAAAA,EAAAA,KAAQ,IACzBkF,EACL,gCACAjL,EACA,CACE2tE,WAAW,EACXimC,mBAAoB,CAAE,KAAMtoG,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAAC1/B,UDnD4B,WCmDDE,KAAK,gBAGrE,CAACV,IAEEyjG,GAAY3oG,EAAAA,EAAAA,KAAQ,KACxB,GAAK8D,EAsBL,MAAO,CACLg+B,OApBAv8B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IAAek9C,EAAQ,iCAqBtCs5C,aAlBmB,CACnB,CAAC,UAAWt5C,EAAQ,uCAClBznC,EAAAA,GAAAA,GAAWynC,EAAQ,mCAAoC,CAAC,qBAC1D,CAAC,gBAAiBA,EAAQ,0CACxBznC,EAAAA,GAAAA,GAAWynC,EAAQ,iCAAkC,CAAC,qBACxD,CAAC,cAAeA,EAAQ,wCACtBznC,EAAAA,GAAAA,GAAWynC,EAAQ,oCAAqC,CAAC,sBAa3D5xB,OATAh8B,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IAAe23F,GAC9BroG,EAAAA,GAAA7K,cAAA,KAAGgL,UD3EsC,YC2ENioG,IAQtC,GACA,CAAC7pG,EAAQqvD,EAASy6C,EAAmBD,IAExC,GAAKhF,EAIL,OACEpjG,EAAAA,GAAA7K,cAAC4yG,GAAe,CACdxpG,OAAQA,EACR2oG,aAAc9D,EAAU8D,aACxBC,eAAe,cACf5qE,OAAQ6mE,EAAU7mE,OAClBP,OAAQonE,EAAUpnE,OAClBl0B,WAAY8lD,EAAQ,+BACpBnvD,QAASA,GACT,I,gBCnGN,SAA4C,WCqF5C,IAAeH,EAAAA,EAAAA,KA5DqC1E,IAO9C,IAP+C,OACnD2E,EAAM,OACNa,EAAM,QACNX,EAAO,aACP8pG,EAAY,MACZtmD,EAAK,UACLn7B,GACDltB,EACC,MAAM,sBACJ4uG,EAAqB,qCAAEC,IACrB7pG,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MAEN8oG,EAAoBC,IAAyB5pG,EAAAA,EAAAA,KAAS,GAEvDo5B,GAAeh5B,EAAAA,EAAAA,IAAiBypG,IACpCH,EAAqC,CACnCjqG,OAAQY,EACRypG,gBAAiBD,EACjBE,UAAWA,KACTrqG,GAAS,GAEX,IAGEsqG,GAAmB5pG,EAAAA,EAAAA,IAAgB,KACvCqpG,GAAuB,IAGzB,OACExoG,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACR0jE,gBAAc,EACdliE,MAAOJ,EAAK,iBACZQ,UD5DiB,WC6DjBw0B,iBAAkBjkB,GAClBjS,QAASA,GAETuB,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAgB,iDAC7C1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAC6zG,GAAAA,EAAY,CACXC,kBAAgB,EAChBvqD,YAAa/+C,EAAK,YAClBsiD,MAAOA,GAAStiD,EAAKsiD,GACrBjjD,YAAaW,EAAK,+CAClBupG,WAAYH,EACZjiF,UAAWA,EACXqiF,KAAMZ,EACNa,kBAAmBV,EACnBW,iBAAkB9qG,EAClB+qG,2BAA4BX,EAC5B3hD,SAAU7uB,MAIV,ICjFZ,GAAwB,WCgKxB,IAAe75B,EAAAA,EAAAA,KArIO1E,IAEN,IAFO,MACrByiC,GACSziC,EACT,MAAM,uBACJ2vG,EAAsB,mBAAEC,EAAkB,0BAAEC,IAC1C7qG,EAAAA,EAAAA,MACEe,GAAOC,EAAAA,EAAAA,KACPrB,EAASZ,QAAQ0+B,GAGjBqtE,GAAgB3tG,EAAAA,EAAAA,IAAuB,MAEvC4tG,GAAoBxqG,EAAAA,EAAAA,IAAgB,CAACM,EAAGu7B,KAC5C,MAAM,OAAE57B,EAAM,SAAEwqG,GAAavtE,EAC7BktE,EAAuB,CAAE/qG,OAAQY,EAAQwqG,WAAU5uE,UAAS,KAGvD6uE,EAAkBC,IAAkBrvG,EAAAA,EAAAA,KAAQ,KACjD,IAAK4hC,EAAO,MAAO,MAAC3nC,EAAW,GAC/B,MAAMq1G,EAAe1tE,EAAM2tE,SAASx2G,OAAS,EAC7C,MAAO,CAAC6oC,EAAM2tE,SAASD,GAAeA,EAAa,GAClD,CAAC1tE,IAEEujC,GAAkBzgE,EAAAA,EAAAA,IAAgB,KACjC2qG,EAKLL,IAJED,GAIyB,IAGvBS,GAAaxvG,EAAAA,EAAAA,KAAQ,KACzB,IAAK4hC,EAAO,OACZ,MACM5W,EADW9lB,EAAK,uCACCitE,MAAM,UAC7B,MAAO,CACLnnD,EAAM,GACNzlB,EAAAA,GAAA7K,cAAC2yG,GAAAA,EAAQ,CACPoC,qBAAmB,EACnBriG,KAAMlI,EAAK,sCACX4K,IAAK5K,EAAK,uBAEZ8lB,EAAM,GACP,GACA,CAAC9lB,EAAM08B,IAEJE,GAAS9hC,EAAAA,EAAAA,KAAQ,KACrB,IAAK4hC,EACH,OAGF,MAAM8tE,EAAcxsG,QAAQksG,GAAkB/kF,UAE9C,OACE9kB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,0BACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACLmI,UAAW7F,EAAKmqG,EAAiB,OAAS,SAC1CjpG,QAAS++D,GAET5/D,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAMypG,EAAiB,aAAe,WAE9C9pG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,cD5F2B,WC4FOihG,GD5FiK,aC6FhOnqG,EAAAA,GAAA7K,cAAA,MAAIgL,UD7FgM,YC6FtKR,EAAK,aAClCwqG,GACCnqG,EAAAA,GAAA7K,cAAA,QAAMgL,UD/F8O,YC+FjN0pG,EAAiB/kF,WAGpD,GAEP,CAACnlB,EAAM08B,EAAOytE,EAAgBD,GAAkB/kF,YAEnD5nB,EAAAA,EAAAA,KAAU,KACR,IAAKm/B,EAAO,OACZ,MAAMvK,EAAQj+B,SAASsC,cAA4B,IAAGi0G,GAAAA,SAA8B15F,MACpF,IAAKohB,EAAO,OAEZ,MAAMt1B,EAASs1B,EAAM+L,cACrBtyB,EAAAA,EAAAA,KAAgB,KACdm+F,EAAcxtG,QAAS3D,MAAMiE,OAAU,GAAEA,EAxFzB,MAwFmD,GACnE,GACD,CAAC6/B,IAEJ,MAAMguE,GAAuBlrG,EAAAA,EAAAA,IAAgB,KAC3C,MAAM2yB,EAAQj+B,SAASsC,cAA4B,IAAGm0G,GAAAA,SAA0B55F,OAEhFuwB,EAAAA,EAAAA,KAAe,KACb,MAAMzkC,EAASs1B,EAAM+L,cACrBtyB,EAAAA,EAAAA,KAAgB,KACdm+F,EAAcxtG,QAAS3D,MAAMiE,OAAU,GAAEA,EAlG3B,MAkGqD,GACnE,GACF,IAGJ,OACEwD,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACR0jE,gBAAc,EACd9hE,UDhIoC,WCiIpCo8B,OAAQA,EACR99B,QAAS+qG,GAETxpG,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTxuB,KAAK,QACLF,UDtIgR,WCuIhRiH,IAAKsiG,EACL56E,UAAWg7E,EACXh+D,QAASu+D,GAETrqG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UD5IoJ,YC4InH0pG,GAAkB9pG,OACtD8pG,GAAkBvpG,QAAQoG,KAAKs0B,GAC9Bh7B,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNC,cAAc,OACdrqG,UDjJgG,WCkJhG+tE,gBDlJ0H,WCmJ1HyjB,SAAU32D,EAAOA,OACjBn6B,QAAS8oG,GAET3pG,EAAAA,GAAA7K,cAAA,OAAKgL,UDtJuE,YCsJxC66B,EAAOnzB,UAIjD7H,EAAAA,GAAA7K,cAAA,KAAGgL,UD1JgL,YC0JhJ8pG,IAE/B,I,gBC5JZ,SAAwB,WC0OxB,IAAe3rG,EAAAA,EAAAA,KA3MK1E,IAEJ,IAFK,MACnByiC,GACSziC,EACT,MAAM,eACJ6wG,EAAc,YAAEnxD,EAAW,iBAAEoxD,EAAgB,wBAAEC,IAC7C/rG,EAAAA,EAAAA,MACEe,GAAOC,EAAAA,EAAAA,KACPrB,EAASZ,QAAQ0+B,GAGjBqtE,GAAgB3tG,EAAAA,EAAAA,IAAuB,OAEtC8L,EAAM+iG,IAAW7rG,EAAAA,EAAAA,IAAS,IAE3B4qG,GAAoBxqG,EAAAA,EAAAA,IAAgB,CAACM,EAAGu7B,KAC5C,MAAM,WACJ3N,EAAU,QAAEw9E,EAAO,OAAErsG,EAAM,OAAEY,GAC3Bi9B,EACJ,GAAKhP,EACL,OAAQw9E,GACN,IAAK,UACHJ,EAAe,CAAErrG,OAAQA,EAASiuB,aAAY2N,WAC9C,MACF,IAAK,QACHse,EAAY,CACV5jB,QAASrI,EAAW,GAAI7uB,OAAQA,EAASw8B,WAG/C,KAGK6uE,EAAkBC,IAAkBrvG,EAAAA,EAAAA,KAAQ,KACjD,IAAK4hC,EAAO,MAAO,MAAC3nC,EAAW,GAC/B,MAAMq1G,EAAe1tE,EAAM2tE,SAASx2G,OAAS,EAC7C,MAAO,CAAC6oC,GAAO2tE,SAASD,GAAeA,EAAa,GACnD,CAAC1tE,IAEEujC,GAAkBzgE,EAAAA,EAAAA,IAAgB,KACtCwrG,GAAyB,IAGrBz8C,GAAmB/uD,EAAAA,EAAAA,IAAgB,KACvCurG,GAAkB,IAGdnuE,GAAS9hC,EAAAA,EAAAA,KAAQ,KACrB,IAAK4hC,EACH,OAGF,MAAM8tE,EAAcxsG,QAAQksG,GAAkB/kF,UAE9C,OACE9kB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,0BACZ2pG,EACC9pG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACLmI,UAAW7F,EAAK,QAChBkB,QAAS++D,GAET5/D,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,gBAGbL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACLmI,UAAW7F,EAAK,SAChBkB,QAASqtD,GAETluD,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WAGfL,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,cD1GgD,WC0GdihG,GD1GgO,aC2G/RnqG,EAAAA,GAAA7K,cAAA,MAAIgL,WAAW+I,EAAAA,GAAAA,GD3G8N,WC2GjM4gG,GD3GuN,aC4GhQD,GAAkBvpG,QACfX,EAAwB,UAAnB08B,GAAOwuE,QAAsB,cAAgB,UAAYhB,GAAkB9pG,OAErFoqG,GACCnqG,EAAAA,GAAA7K,cAAA,QAAMgL,UDhH6S,YCgHhR0pG,EAAiB/kF,WAGpD,GAEP,CAACnlB,EAAM08B,EAAOytE,EAAgBD,GAAkBvpG,QAASupG,GAAkB/kF,SAAU+kF,GAAkB9pG,QAEpG+qG,GAAmB3rG,EAAAA,EAAAA,IAAiBM,IACxCmrG,EAAQnrG,EAAEC,OAAOH,MAAM,KAGzBrC,EAAAA,EAAAA,KAAU,KACR,IAAKm/B,EAAO,OACZ,MAAMvK,EAAQj+B,SAASsC,cAA4B,IAAGi0G,GAAAA,SAA8B15F,MACpF,IAAKohB,EAAO,OAEZ,MAAMt1B,EAASs1B,EAAM+L,cACrBtyB,EAAAA,EAAAA,KAAgB,KACdm+F,EAAcxtG,QAAS3D,MAAMiE,OAAU,GAAEA,KAAU,GACnD,GACD,CAAC6/B,IAEJ,MAAMguE,GAAuBlrG,EAAAA,EAAAA,IAAgB,KAC3C,MAAM2yB,EAAQj+B,SAASsC,cAA4B,IAAGm0G,GAAAA,SAA0B55F,OAEhFuwB,EAAAA,EAAAA,KAAe,KACb,MAAMzkC,EAASs1B,EAAM+L,cACrBtyB,EAAAA,EAAAA,KAAgB,KACdm+F,EAAcxtG,QAAS3D,MAAMiE,OAAU,GAAEA,EAnH3B,MAmHqD,GACnE,GACF,IAGEuuG,GAAiC5rG,EAAAA,EAAAA,IAAgB,KACrDyrG,EAAQ,IACRF,GAAkB,IAGdM,GAA2B7rG,EAAAA,EAAAA,IAAgB,KAC/C,MAAM,WACJkuB,EAAU,QAAEw9E,EAAO,OAAErsG,EAAM,OAAEY,GAC3Bi9B,EACJ,OAAQwuE,GACN,IAAK,UACHJ,EAAe,CACbrrG,OAAQA,EAASiuB,aAAY2N,OAAQ6uE,GAAkB7uE,OAAQh8B,YAAa6I,IAE9E,MACF,IAAK,QACHyxC,EAAY,CACV5jB,QAASrI,IAAa,GAAI7uB,OAAQA,EAASw8B,OAAQ6uE,GAAkB7uE,OAAQh8B,YAAa6I,IAIhGkjG,GAAgC,IAGlC,OACE/qG,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRg+B,OAAQA,EACR99B,QAASssG,EACTp2E,iBD9KyD,WC+KzDx0B,WAAW+I,EAAAA,GAAAA,GD/KyB,WC+KsB,UAAnBmzB,GAAOwuE,SAAuB,yBAErE7qG,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTxuB,KAAK,QACLF,UDnL+U,WCoL/UiH,IAAKsiG,EACL56E,UAAWg7E,EACXh+D,QAASu+D,GAETrqG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACbm5F,GAAkBvpG,QACfN,EAAAA,GAAA7K,cAAA,MAAIgL,UD1LyL,YC0LxJ0pG,GAAkB9pG,YAAcrL,EACxEm1G,GAAkBvpG,SAASoG,KAAKs0B,GAC/Bh7B,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACN5mE,gBAAc,EACd6mE,cAAc,OACdrqG,UDhMyI,WCiMzI+tE,gBDjMmK,WCkMnKyjB,SAAU32D,EAAOA,OACjBn6B,QAAS8oG,GAET3pG,EAAAA,GAAA7K,cAAA,OAAKgL,UDrMgH,YCqMjF66B,EAAOnzB,SAG9CgiG,GAAkB7uE,OACjBh7B,EAAAA,GAAA7K,cAAA,OAAKgL,UDzMyV,YC0M5VH,EAAAA,GAAA7K,cAAC2/F,GAAAA,EAAuB,CACtBpkB,OAAQikB,GAAAA,EAAesW,OACvB5tG,KAAM,IACN8C,UD7M0Y,WC8M1YwjC,gBAAc,EACdotD,aAAW,EACXlgB,QAAQ,IAEV7wE,EAAAA,GAAA7K,cAAC+1G,GAAAA,EAAQ,CACPt0G,GAAG,SACHuJ,UDpNkX,WCqNlXL,MAAO+pG,EAAiBsB,WAAaxrG,EAAK,0BAA4BA,EAAK,kBAC3EY,SAAUuqG,EACVvrG,MAAOsI,EACPioE,UAhMQ,IAiMRs7B,oBAjMQ,IAiM+BvjG,EAAKrU,QAAQ+jF,WACpD8zB,mBAAiB,IAEnBrrG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLrD,KAAK,UACLwD,QAASmqG,EACT53F,SAAWy2F,EAAiBsB,gBAA4Bz2G,GAAdmT,EAAKrU,QAC/CmM,EAAK,qBAGPjL,IAGF,ICjON42G,GAAsD,CAC1D,aACA,YACA,aACA,aACA,kBACA,aACA,aACA,WACA,eACA,YAEIC,GAAgD,IAAID,GAAmB,aAE9D,SAASE,GAAqBC,GAC3C,MAAOC,EAAaC,IAAkB5sG,EAAAA,EAAAA,IAA8B,CAAC,IAC9D6sG,EAAuBC,IAA4B9sG,EAAAA,EAAAA,KAAS,IAC5D+nB,EAAWglF,IAAgB/sG,EAAAA,EAAAA,KAAS,IAE3C7B,EAAAA,EAAAA,KAAU,KACRyuG,EAAeF,GAAsB,CAAC,GACtCI,GAAyB,GACzBpuG,YAAW,KACTquG,GAAa,EAAM,GAxBoB,IAyBD,GACvC,CAACL,IAEJ,MAAMM,GAAyBxqG,EAAAA,EAAAA,KAAa9B,IAC1C,MAAQY,KAAM2rG,GAAevsG,EAAEC,OAEzBW,EAAO2rG,EAEb,SAASC,EAA0B1sG,GACjC,OAAOA,QAAQ7K,CACjB,CAEA,MAAMw3G,EAAiBR,EAEvB,IAAIS,EAAsC,IACrCD,EACH,CAAC7rG,GAAO4rG,EAA0BC,EAAe7rG,OACpC,iBAATA,GAA2B,CAC7B+rG,SAAUH,EAA0BC,EAAe7rG,MAIvD,MAAMgsG,EAAaA,KACjB,MAAMC,EAAmBhB,GAAkB5kG,KAAKG,GAAQslG,EAAetlG,KACnEylG,EAAiBlQ,MAAMmQ,IAAOA,IAChCJ,EAAiB,IACZA,EACHK,eAAW93G,GAEJ43G,EAAiBlL,MAAMzjG,WAChCwuG,EAAiB,IACZA,EACHK,WAAW,GAEf,EAGW,cAATnsG,EACFgsG,IAEAF,EAAiB,IACZA,KACCb,GAAkBp5D,QAAO,CAAC8K,EAAKn2C,IACjC0rC,OAAOk6D,OAAOzvD,EAAK,CAAE,CAACn2C,GAAMslG,EAAeK,aAC1C,CAAC,IAKK,eAATnsG,IAA0B8rG,EAAeO,YAAcP,EAAeQ,YACxER,EAAiB,IACZA,EACHO,YAAY,IAIH,cAATrsG,IAAyB8rG,EAAeO,YAAcP,EAAeQ,YACvER,EAAiB,IACZA,EACHQ,eAAWj4G,IAIF,cAAT2L,GACFgsG,IAGF,MAAMO,EAAerB,GAAoBnK,OAAOv6F,GAAQslG,EAAetlG,KACvEslG,EAAiB,IACZA,EACHS,eAAcA,QAAsBl4G,GAGtCi3G,EAAeQ,GAEfN,GAA0BJ,GAAsBl5D,OAAO4K,KAAKgvD,GAAgB/P,MAAM/7E,IAChF,MAAMxZ,EAAMwZ,EACZ,OAAO1iB,QAAQ8tG,EAAmB5kG,MAAUlJ,QAAQwuG,EAAetlG,GAAK,IACvE,GACF,CAAC4kG,EAAoBC,IAElBmB,GAAmBtrG,EAAAA,EAAAA,KAAY,KACnCoqG,EAAeF,GAAsB,CAAC,GACtCI,GAAyB,EAAM,GAC9B,CAACJ,IAEJ,MAAO,CACLC,cACA5kF,YACA8kF,wBACAG,yBACAD,eACAe,mBAEJ,CCvFA,MAAMC,GAAmD,CACvD,aAAc,aAAc,eAC5B,aAAc,WAAY,aAAc,kBAAmB,aAAc,aAsP3E,IAAexuG,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMqgB,EAAOtmB,GAASwlC,EAAAA,EAAAA,KAAWljC,EAAQtC,QAAU1K,EAC7Cq4G,EAAWrnF,IAAQm9D,EAAAA,EAAAA,KAAmBnhF,EAAQgkB,EAAK9uB,IAGzD,MAAO,CACL8uB,OACAsnF,cAJoBrvG,QAAQovG,GAAUE,cAKvC,GATexrG,EAnPsC7H,IAapD,IAbqD,KACzD8rB,EAAI,oBACJwnF,EAAmB,uBACnBC,EAAsB,cACtBH,EAAa,YACbtB,EAAW,uBACXK,EAAsB,UACtB5rG,EAAS,iBACTitG,EAAgB,kBAChBC,EAAiB,aACjBC,EAAY,qBACZC,EAAoB,gBACpBC,GACD5zG,EACC,MAAM,iBACJq6B,IACEr1B,EAAAA,EAAAA,OAEE,QAAE4+C,GAAY93B,GAAQ,CAAC,EAEvB/lB,GAAOC,EAAAA,EAAAA,KAEPmjC,GAAWtoC,EAAAA,EAAAA,KAAQ,IAAMirB,IAAQs8D,EAAAA,EAAAA,KAAat8D,IAAO,CAACA,IACtD+nF,EAAwCT,GAAiBjqE,EAEzD2qE,GAA0BjzG,EAAAA,EAAAA,KAAQ,IAC/BqyG,GAAkB56D,QAAO,CAAC5sB,EAAOze,KACjC6kG,EAAY7kG,KACfye,GAAS,GAEJA,IACN,IACF,CAAComF,IAEEiC,GAA0BxuG,EAAAA,EAAAA,IAAiBM,KAC/C/J,EAAAA,EAAAA,GAAU+J,GACV0tG,GAAwBD,EAAoB,IAGxCU,GAAsBzuG,EAAAA,EAAAA,IAAgB,KAC1C80B,EAAiB,CAAE9/B,QAASwL,EAAK,sCAAuC,IAG1E,OACEK,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,YACL46B,SAAUywE,EAAYiB,UACtB7sG,MAAOH,EAAK,wBACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,gBAG3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,YACL46B,SAAUywE,EAAYc,UACtB1sG,MAAOH,EAAK,6BACZmuG,UAAY,GAAEJ,KAA2BZ,GAAkBt5G,SAC3Dq6G,UAAQ,EACRL,gBAAiBA,EACjBO,UAAWb,EAAsB,KAAO,OACxC3sG,SAAUwrG,EACViC,aAAcL,EACdv6F,SAAUm6F,GAAwBA,EAAqB,gBAG3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWktG,GACdrtG,EAAAA,GAAA7K,cAAA,OACEgL,UAAWA,GAEXH,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,aACL46B,SAAUywE,EAAYuC,WACtBnuG,MAAOH,EAAK,8BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,iBAI3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,aACL46B,SAAUywE,EAAYwC,WACtBpuG,MAAOH,EAAK,8BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,iBAI3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,eACL46B,SAAUywE,EAAYyC,eAAiBzC,EAAYU,SACnDtsG,MAAOH,EAAK,gCACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,mBAI3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,aACL46B,SAAUywE,EAAY0C,WACtBtuG,MAAOH,EAAK,6BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,iBAI3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,WACL46B,SAAUywE,EAAY2C,SACtBvuG,MAAOH,EAAK,6BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,eAI3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,aACL46B,SAAUywE,EAAY4C,WACtBxuG,MAAOH,EAAK,8BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,iBAI3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,kBACL46B,SAAUywE,EAAY6C,gBACtBzuG,MAAOH,EAAK,6BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,sBAI3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,aACL46B,SAAUywE,EAAYgB,WACtB5sG,MAAOH,EAAK,8BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,iBAI3DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,YACL46B,SAAUywE,EAAY8C,UACtB1uG,MAAOH,EAAK,6BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,kBAK/DvtG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWitG,GACdptG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,cACL46B,SAAUywE,EAAY+C,YACtB3uG,MAAOH,EAAK,+BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,kBAG3DvtG,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,iBACtDzsG,QAAS4sG,EAAwCG,OAAsBl5G,GAEvEsL,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,cACL46B,SAAUywE,EAAYgD,YACtB5uG,MAAOH,EAAK,+BACZyT,SAAUm6F,EAAuBA,EAAqB,eAClDE,EACJI,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,KAGd/rG,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,iBACtDzsG,QAAS4sG,EAAwCG,OAAsBl5G,GAEvEsL,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,aACL46B,SAAUywE,EAAYiD,WACtB7uG,MAAOH,EAAK,8BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBp6F,SAAUm6F,EAAuBA,EAAqB,cAClDE,EACJltG,SAAUwrG,KAGbvuD,GACCx9C,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYokG,GAAgB,kBACzDttG,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,eACL46B,SAAUywE,EAAYkD,aACtB9uG,MAAOH,EAAK,0BACZkuG,UAAQ,EACRL,gBAAiBA,EACjBjtG,SAAUwrG,EACV34F,SAAUm6F,GAAwBA,EAAqB,oBAK9D,K,gBCxRP,UAAgB,cAAgB,WAAW,UAAY,WAAW,MAAQ,WAAW,YAAc,WAAW,YAAc,WAAW,iBAAmB,WAAW,eAAiB,WAAW,OAAS,WAAW,aAAe,WAAW,cAAgB,WAAW,qBAAuB,WAAW,yBAA2B,WAAW,iBAAmB,YC6arW,IAAejvG,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,mBACJmtG,IACE9sG,EAAAA,EAAAA,KAAeL,GACbtC,EAASyvG,GAAsBA,EAAmB16G,SAASiL,OAC3DsmB,EAAOtmB,GAASwlC,EAAAA,EAAAA,KAAWljC,EAAQtC,QAAU1K,EAC7CkuF,EAAel9D,IAAQm9D,EAAAA,EAAAA,KAAmBnhF,EAAQgkB,EAAK9uB,KACvD,SAAEyL,EAAQ,KAAEjP,IAASgP,EAAAA,EAAAA,KAAyBV,IAAW,CAAC,GAC1D,gBAAEotG,GAAqBD,GAAsBA,EAAmB16G,SAAWkO,IAC5ES,EAAAA,EAAAA,KAAgCpB,EAAQmtG,EAAmB16G,QAASkO,IAAc,CAAC,EAClF0gF,EAAmBH,GAAgBA,GAAcG,iBACjDgsB,EAAgBrpF,IAAQspF,EAAAA,EAAAA,KAAwBttG,EAAQgkB,EAAK9uB,GAAIyL,EAAWjP,GAC5EyyB,EAAUloB,QAAQ+nB,KAASupF,EAAAA,EAAAA,KAAiBvpF,GAC5CwpF,EAAevxG,QAAQ+nB,KAASi8D,EAAAA,EAAAA,KAAiBj8D,GACjDgZ,EAASmwE,GAAoB16G,UAAWmwB,EAAAA,EAAAA,KAAa5iB,EAAQmtG,EAAmB16G,SAChFg7G,EAAczpF,IAAQlkB,EAAAA,EAAAA,KAASkkB,EAAK9uB,KACtCuqD,EAAAA,EAAAA,MAAuBxc,EAAAA,EAAAA,KAAWjjC,GAAQ0tG,EAAAA,EAAAA,KAAqB1pF,UAC/DhxB,EACE26G,EAAgB1xG,QAAQkxG,GAAsBA,EAAmB16G,UAClEm7G,EAAAA,EAAAA,KAAU5tG,EAAQmtG,EAAmB16G,QAAQiL,SAC5CmwG,EAAU5xG,QAAQ+nB,KAAS8pF,EAAAA,EAAAA,KAAY9pF,EAAK9uB,MAAO04G,EAAAA,EAAAA,KAAU5tG,EAAQgkB,EAAK9uB,KAC1E64G,EAAc/pF,IAASA,EAAKgqF,YAAaC,EAAAA,EAAAA,KAAiBjqF,EAAM,aAChEkqF,EAAQf,GAAsBA,EAAmB16G,UAAW07G,EAAAA,EAAAA,KAAahB,EAAmB16G,SAE5F27G,EAAgCpqF,IAAQupF,EAAAA,EAAAA,KAAiBvpF,KAAUopF,GAAoBO,EACvFU,EAAmBrqF,IAAQi8D,EAAAA,EAAAA,KAAiBj8D,GAElD,MAAO,CACLA,OACAG,UACAqpF,eACA1oF,cAAe9kB,EAAO8kB,cACtBkY,SACAqwE,gBACAD,gBAAiBD,IAAuBA,EAAmBjpG,YAAckpG,EACzEK,cACAW,+BACAC,mBACAhtB,mBACAwsB,UACA3pG,WAAYipG,GAAsBA,EAAmBjpG,WACrDzR,QAAS06G,GAAsBA,EAAmB16G,QAClD67G,MAAOnB,GAAsBA,EAAmBmB,MAChD7uG,UAAW0tG,GAAsBA,EAAmB1tG,UACpDyuG,QACAH,cACD,GA/CehuG,EApWkC7H,IAoBhD,IApBiD,OACrD2E,EAAM,KACNmnB,EAAI,QACJG,EAAO,aACPqpF,EAAY,OACZxwE,EAAM,cACNlY,EAAa,cACbuoF,EAAa,WACbnpG,EAAU,QACVzR,EAAO,MACP67G,EAAK,gBACLlB,EAAe,YACfK,EAAW,6BACXW,EAA4B,iBAC5BC,EAAgB,UAChB5uG,EAAS,iBACT4hF,EAAgB,QAChBwsB,EAAO,MACPK,EAAK,YACLH,GACD71G,EACC,MAAM,eACJq2G,EAAc,wBACdC,EAAuB,kBACvBC,EAAiB,iBACjBC,EAAgB,6BAChBC,EAA4B,wBAC5BC,IACE1xG,EAAAA,EAAAA,MAEEuoD,GAAa3+B,EAAAA,EAAAA,GAAsBjqB,GAEnCoB,GAAOC,EAAAA,EAAAA,MAEP,YACJ8rG,EAAW,sBAAEE,EAAqB,uBAAEG,EAAsB,iBAAEc,GAC1DrB,GAAqB9lF,GAAM6qF,sBAExBC,EAAoBC,IAAyB1xG,EAAAA,EAAAA,SAA+BrK,IAC5Eg8G,EAAiBC,IAAuB5xG,EAAAA,EAAAA,SAA+BrK,IACvEk8G,EAAkBC,IAAwB9xG,EAAAA,EAAAA,SAA+BrK,IACzEw4G,EAAqBC,IAA0BpuG,EAAAA,EAAAA,KAAS,IACxD+xG,EAA4BC,IAAiChyG,EAAAA,EAAAA,KAAS,GACvEiyG,GAAgBv2G,EAAAA,EAAAA,KAAQ,IACrBikC,GAAUqkD,GAAoBA,EAAiBrkD,EAAO9nC,KAAOmsF,EAAiBrkD,EAAO9nC,IAAIq6G,SAC/F,CAACvyE,EAAQqkD,IAENr+C,GAAOjqC,EAAAA,EAAAA,KAAQ,KACnB,MAAMu7B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KACpC,GAAK2F,IAAU94B,EAEf,OAAOowB,EAAU0I,EAAO9nC,GAAG,GAC1B,CAACgP,EAAY84B,IAEVwyE,GAA8Bz2G,EAAAA,EAAAA,KAAQ,IACnCiqC,GAAQA,EAAK9tC,KAAO4vB,GAC1B,CAACke,EAAMle,IAEJ2qF,GAAoBD,IAAgCpC,IAAoBlpG,IAAeigB,GAAWqpF,GAElGkC,IAAW32G,EAAAA,EAAAA,KAAQ,KACvB,MAAMu7B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KACpC,OAAK2F,GAAU94B,EAAmB,IAE3Bk2B,EAAAA,EAAAA,KAAgB9F,EAAU0I,EAAO9nC,IAAI,GAC3C,CAACgP,EAAY84B,IAEV2yE,IAAqC52G,EAAAA,EAAAA,KAAQ,IAC5CiqC,EAIE,CACL,CACEnlC,MAAOmlC,EAAK9tC,GACZkJ,MAAOH,EAAK,qBANP,IASR,CAACA,EAAM+kC,IAEJ4sE,IAAuC72G,EAAAA,EAAAA,KAAQ,IAC9CiqC,EAIE,CACL,CACEnlC,MAAOmlC,EAAK9tC,GACZkJ,MAAOH,EAAK,gBAAiByxG,MANxB,IASR,CAACzxG,EAAM+kC,EAAM0sE,KAEVG,IAAoC92G,EAAAA,EAAAA,KAAQ,IAC3CiqC,EAIE,CACL,CACEnlC,MAAOmlC,EAAK9tC,GACZkJ,MAAQ3L,GAAW28G,EAA6BnxG,EAAK,sBAAwBA,EAAK,YAAayxG,MAN1F,IASR,CAACN,EAA4BnxG,EAAMxL,EAASuwC,EAAM0sE,KAE/CI,IAA0BryG,EAAAA,EAAAA,IAAgB,KAC9C4xG,GAA+BD,EAA2B,IAGtDW,IAA0BtyG,EAAAA,EAAAA,IAAgB,CAACi5B,EAAmBs5E,IAC7DhsF,EACEgsF,EAAsB/hF,QAAQgiF,IACnC,MAAMC,GAAaC,EAAAA,EAAAA,MAAwB1uE,EAAAA,EAAAA,MAAazd,EAAK9uB,GAAI+6G,GACjE,OAAOC,GAAcx5E,EAAQvhC,SAAS+6G,EAAWh7G,GAAG,IAHpCggC,GAAAA,IAOdk7E,IAAuB3yG,EAAAA,EAAAA,IAAiB4yG,IACxCA,GAAuBv+G,QACzBy8G,EAAe,CAAE5iF,WAAY0kF,EAAuBC,oBAAoB,GAC1E,IAGIC,IAAqB9yG,EAAAA,EAAAA,IAAiB+yG,IAC1CA,EAAmBxnG,SAASmlB,IAC1BugF,EAAiB,CAAEhxG,OAAQsmB,EAAM9uB,GAAIi5B,UAAS,GAC9C,IAGEsiF,IAAqChzG,EAAAA,EAAAA,IAAiB+yG,IAC1DA,EAAmBxnG,SAASmlB,IAC1BwgF,EAA6B,CAC3BjxG,OAAQsmB,EAAM9uB,GACdi5B,SACAuiF,aAAc1G,GACd,GACF,IAGE2G,IAA4BlzG,EAAAA,EAAAA,IAAgB,KAChDgC,MACA,MAAMksB,EAAa2iF,GAAOsC,SACtBtC,EAAMsC,SAAS5rG,KAAIrB,IAAA,IAAC,GAAEzO,GAAIyO,EAAA,OAAKzO,CAAE,IACjC,CAACzC,EAASyC,IACdq5G,EAAe,CAAE5iF,aAAY2kF,oBAAoB,IACjD1B,GAAyB,IAGrBiC,IAA6BpzG,EAAAA,EAAAA,IAAgB,KACjD,IAAKumB,EAAM,OAEXvkB,MACA,MAAMksB,EAAa2iF,GAAOsC,SACtBtC,EAAMsC,SAAS5rG,KAAIC,IAAA,IAAC,GAAE/P,GAAI+P,EAAA,OAAK/P,CAAE,IACjC,CAACzC,EAASyC,IACd,GAAIgP,EACFsqG,EAAwB,CAAE7iF,oBACrB,IAAKuiF,IAAUgB,GAAoBJ,GAAsBE,KAAqB7qF,GAAWqpF,GAAe,CAC7G,GAAI0B,GAAoBlyE,EAAQ,CAC9B,MAAMqzE,EAAwBN,GAAwBb,EAAkB7B,GACpEgD,GAAyBA,EAAsBv+G,QACjD28G,EAAkB,CAAEqC,cAAe9zE,EAAO9nC,GAAIwI,OAAQsmB,EAAK9uB,GAAIy2B,WAAY0kF,GAE/E,CAEA,GAAIvB,EAAoB,CACtB,MAAMuB,EAAwBN,GAAwBjB,EAAoBzB,GAC1E+C,GAAqBC,EACvB,CAEA,GAAIrB,IAAoB9E,GAAyBz3G,EAAS,CACxD,MAAM+9G,EAAqBxB,EAAgB/gF,QAAQE,GAAWxC,GAAY+uE,MAAMuV,IAC9E,MAAMC,GAAaC,EAAAA,EAAAA,MAAwB1uE,EAAAA,EAAAA,MAAazd,EAAK9uB,GAAI+6G,GACjE,OAAOC,GAAcA,EAAWh7G,KAAOi5B,CAAM,MAE/CoiF,GAAmBC,GACnBjC,EAAe,CACb5iF,WAAY,CAACl5B,EAAQyC,IACrBo7G,oBAAoB,GAExB,CAEA,GAAItB,GAAmB9E,EAAuB,CAC5C,MAAMsG,EAAqBxB,EAAgB/gF,QAAQE,GAAWxC,GAAY+uE,MAAMuV,IAC9E,MAAMC,GAAaC,EAAAA,EAAAA,MAAwB1uE,EAAAA,EAAAA,MAAazd,EAAK9uB,GAAI+6G,GACjE,OAAOC,GAAcA,EAAWh7G,KAAOi5B,CAAM,MAE/CsiF,GAAmCD,EACrC,CACF,MACEjC,EAAe,CACb5iF,aACA2kF,oBAAoB,IAGxB1B,GAAyB,IAGrBmC,IAA2BtzG,EAAAA,EAAAA,IAAiBmB,IAChDmwG,EAAsBnwG,EAAQ,IAG1BoyG,IAAwBvzG,EAAAA,EAAAA,IAAiBmB,IAC7CqwG,EAAoBrwG,EAAQ,IAGxBqyG,IAAyBxzG,EAAAA,EAAAA,IAAiBmB,IAC9CuwG,EAAqBvwG,EAAQ,IAGzBysB,IAAc5tB,EAAAA,EAAAA,IAAgB,KAClCmxG,GAAyB,IA6E3B,OA1EApzG,EAAAA,EAAAA,KAAU,MACHqB,GAAU4oD,IACb0pD,OAAqBn8G,GACrB+7G,OAAsB/7G,GACtBi8G,OAAoBj8G,GACpBy4G,GAAuB,GACvB4D,GAA8B,GAC9BlE,IACF,GACC,CAACtuG,EAAQ4oD,EAAY0lD,IAkEtB7sG,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASsuB,GACT7sB,QAAS4uG,OAAkBp6G,EAAY69G,GACvCpyG,UAAU,UAEVH,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOkiG,cAAe,kBApErD5yG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWgxG,IAAqBzgG,GAAOpa,UAAW8S,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC9Ey8G,IACCnxG,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL5oB,KAAK,QACL6oB,KAAMwe,IAGV1kC,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWgxG,GAAoBzgG,GAAO3Q,MAAQ2Q,GAAOmiG,aAAclzG,EAAK,+BA+D3EwxG,IACCnxG,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,GAAOoiG,aAAcnzG,EAAK,4BA1D9CK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOpQ,SACrBN,EAAAA,GAAA7K,cAAC49G,GAAAA,EAAa,CACZzyG,QAAS+wG,GACT9wG,SAAUoyG,GACVnyG,SAAUowG,IAEZ5wG,EAAAA,GAAA7K,cAAC49G,GAAAA,EAAa,CACZzyG,QAASgxG,GACT/wG,SAAUkyG,GACVjyG,SAAUgwG,KAEVQ,GAAiBvB,GACjBzvG,EAAAA,GAAA7K,cAAC49G,GAAAA,EAAa,CACZzyG,QAASixG,GACThxG,SAAUmyG,GACVlyG,SAAUkwG,KAShB1wG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOsiG,qBACpClC,GAA8BpgG,GAAOuiG,2BAErCjzG,EAAAA,GAAA7K,cAAA,MAAIgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOoiG,YAAapiG,GAAOwiG,mBACtDvzG,EAAK,6BAA8B,IAEtCK,EAAAA,GAAA7K,cAACg+G,GAAsB,CACrB7F,cAAY,EACZE,iBAAe,EACfpuG,OAAQsmB,GAAM9uB,GACds2G,oBAAqBA,EACrBC,uBAAwBA,EACxBpB,uBAAwBA,EACxBL,YAAaA,EACbvrG,WAAW+I,EAAAA,GAAAA,GACTwH,GAAO0iG,aACPlG,GAAuBx8F,GAAO2iG,qBAsB5B3C,GAAmBjB,GAAeiB,GAAiBl9G,OACjDwM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAWuQ,GAAO4iG,eAClBplC,gBAAiBx9D,GAAOwwB,OACxBrgC,QAAS2wG,IAER7xG,EAAKmxG,EAA6B,uBAAyB,6BAC5D9wG,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CACHx/B,KAAMywG,EAA6B,KAAO,OAC1C3wG,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOwwB,OAAQ,WAG3C6vE,GAA8B,KAItCxB,IAAY2B,IACZlxG,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,SAAIwK,EAAK,kCACRmwG,GACC9vG,EAAAA,GAAA7K,cAAA,SAAIwK,EAAK,8BAA+B,EAAG,MAE5CowG,GACC/vG,EAAAA,GAAA7K,cAAA,SAAIwK,EAAK,+BAAgC,EAAG,OAIlDK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2uG,EAAkB,yBAC9B5lG,EAAAA,GAAAA,GAAe,iBAAkB4nG,GAA8BpgG,GAAO6iG,gBAEvEzE,GACC9uG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,SAASR,UAAU,wBAAwBS,QAAM,EAACC,QAASwxG,IACtElD,IAAehpF,EAAAA,GAAAA,GAAWxmB,EAAK,iCAAkCwvG,KAChEA,GAAexvG,EAAK,2CAG1BK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,SAASR,UAAU,wBAAwBS,QAAM,EAACC,QAAS0xG,IACtE5yG,EAAKmvG,EAAkB,gCAAkC,WAE5D9uG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wBACVS,QAAM,EACNC,QAASksB,IACTptB,EAAK,aAIL,KCnUZ,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMmuG,GAAgBhyG,EAAAA,EAAAA,KAASpC,GACzBqnB,GAAiBC,EAAAA,EAAAA,KAAqBhlB,EAAQtC,GAC9CsmB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAC1BumB,EAAYhoB,QAAQ+nB,KAASE,EAAAA,EAAAA,KAAcF,GAC3CG,EAAUloB,QAAQ+nB,KAASupF,EAAAA,EAAAA,KAAiBvpF,GAC5CwpF,EAAevxG,QAAQ+nB,KAASi8D,EAAAA,EAAAA,KAAiBj8D,GAMvD,MAAO,CACL8tF,gBACA/sF,iBACAd,YACAE,UACAqpF,eACAuE,aAXoBD,IAAkB/sF,GAAmByoF,GAAgBrpF,EAYzEspF,YAXkBzpF,IAAQlkB,EAAAA,EAAAA,KAASkkB,EAAK9uB,KACtCuqD,EAAAA,EAAAA,MAAuBxc,EAAAA,EAAAA,KAAWjjC,GAAQ0tG,EAAAA,EAAAA,KAAqB1pF,UAC/DhxB,EAUH,GArBe+M,EAlE+B7H,IAU7C,IAV8C,OAClD2E,EAAM,OACNa,EAAM,UACNwM,EAAS,UACT+Z,EAAS,QACTE,EAAO,aACPqpF,EAAY,aACZuE,EAAY,YACZtE,EAAW,QACX1wG,GACD7E,EACC,MAAM,WAAE85G,IAAe90G,EAAAA,EAAAA,MAEjB+0G,GAAyBpyG,EAAAA,EAAAA,KAAY,KACzCmyG,EAAW,CACTt0G,SAAQwM,YAAWgoG,SAAS,IAE9Bn1G,GAAS,GACR,CAACW,EAAQwM,EAAWnN,IAEjBo1G,GAAmBtyG,EAAAA,EAAAA,KAAY,KACnCmyG,EAAW,CACTt0G,SAAQwM,YAAWgoG,SAAS,EAAOE,WAAW,EAAMC,UAAU,IAEhEt1G,GAAS,GACR,CAACW,EAAQwM,EAAWnN,IAEjBkB,GAAOC,EAAAA,EAAAA,KAcb,OACEI,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASA,EACT0B,UAAU,MACVJ,MAAOJ,EAAK,yBAEZK,EAAAA,GAAA7K,cAAA,SAjBOwK,EADLgmB,EACU,yBAGVE,GAAWqpF,EACD,kBAGF,wBAWVlvG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASgzG,GACvDl0G,EAAK,cAEP8zG,GACCzzG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAAS8yG,GACvDxE,GACGhpF,EAAAA,GAAAA,GAAWxmB,EAAK,8BAA+BwvG,IAC/CxvG,EAAK,qDAGbK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASpC,GAAUkB,EAAK,YAErE,KCzDZ,IAAerB,EAAAA,EAAAA,KA1B6B1E,IAKtC,IALuC,OAC3C2E,EAAM,oBACNy1G,EAAsB,EAAC,QACvBv1G,EAAO,QACPw1G,GACDr6G,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEb,OACEI,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASA,EACT0B,UAAU,YACVJ,MAAOJ,EAAK,+BAEZK,EAAAA,GAAA7K,cAAA,SAAIwK,EAAK,oCAAqCq0G,EAAqB,MACnEh0G,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASozG,GACvDt0G,EAAK,gBAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASpC,GAAUkB,EAAK,YAErE,I,eCjCZ,MCJA,IAAgB,KAAO,WAAW,UAAY,WAAW,MAAQ,WAAW,YAAc,WAAW,YAAc,WAAW,iBAAmB,WAAW,eAAiB,WAAW,OAAS,WAAW,aAAe,WAAW,cAAgB,WAAW,qBAAuB,WAAW,yBAA2B,WAAW,iBAAmB,YCud5V,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAAiC,IAA/B,WAAEf,GAAYe,EACrB,MAAQ0mB,WAAY6mF,IAAuBnyG,EAAAA,EAAAA,KAAeL,GAAQyyG,kBAAoB,CAAC,GACjF,gBAAErF,IAAoBsF,EAAAA,EAAAA,KAAgC1yG,GACtDgkB,GAAOysC,EAAAA,EAAAA,KAAkBzwD,GACzBkhF,EAAel9D,IAAQm9D,EAAAA,EAAAA,KAAmBnhF,EAAQgkB,EAAK9uB,KACvD,SAAEyL,EAAQ,KAAEjP,IAASgP,EAAAA,EAAAA,KAAyBV,IAAW,CAAC,EAC1D2rB,EAAa3H,IAAQspF,EAAAA,EAAAA,KAAwBttG,EAAQgkB,EAAK9uB,GAAIyL,EAAWjP,GACzEuyB,EAAYhoB,QAAQ+nB,KAASE,EAAAA,EAAAA,KAAcF,GAC3CG,EAAUloB,QAAQ+nB,KAASupF,EAAAA,EAAAA,KAAiBvpF,GAC5CwpF,EAAevxG,QAAQ+nB,KAASi8D,EAAAA,EAAAA,KAAiBj8D,GACjDypF,EAAczpF,IAAQlkB,EAAAA,EAAAA,KAASkkB,EAAK9uB,KACtCuqD,EAAAA,EAAAA,MAAuBxc,EAAAA,EAAAA,KAAWjjC,GAAQ0tG,EAAAA,EAAAA,KAAqB1pF,UAC/DhxB,EACEquF,EAAmBH,GAAcG,iBACjC0sB,EAAc/pF,IAASA,EAAKgqF,YAAaC,EAAAA,EAAAA,KAAiBjqF,EAAM,aAChEoqF,EAA+BpqF,IAAQupF,EAAAA,EAAAA,KAAiBvpF,KAAUopF,EAClEiB,EAAmBrqF,IAAQi8D,EAAAA,EAAAA,KAAiBj8D,GAElD,MAAO,CACLA,OACAG,UACAF,YACAupF,eACAgF,qBACA1tF,cAAe9kB,EAAO8kB,cACtBsoF,iBAAkBlpG,GAAckpG,EAChCK,cACAW,+BACAC,mBACA1iF,aACA01D,mBACA0sB,cACD,GAjCehuG,EA5Y0C7H,IAiBxD,IAjByD,KAC7D8rB,EAAI,UACJC,EAAS,QACTE,EAAO,aACPqpF,EAAY,OACZ3wG,EAAM,WACNqH,EAAU,cACV4gB,EAAa,mBACb0tF,EAAkB,gBAClBpF,EAAe,YACfK,EAAW,6BACXW,EAA4B,iBAC5BC,EAAgB,WAChB1iF,EAAU,QACV5uB,EAAO,iBACPskF,EAAgB,YAChB0sB,GACD71G,EACC,MAAM,eACJq2G,EAAc,kBACdE,EAAiB,iBACjBC,EAAgB,wBAChBF,EAAuB,sBACvBmE,EAAqB,6BACrBhE,IACEzxG,EAAAA,EAAAA,MAEEuoD,GAAa3+B,EAAAA,EAAAA,GAAsBjqB,GAEnCqvD,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,MAEP,YACJ69C,EAAW,sBAAEE,EAAqB,uBAAEG,EAAsB,iBAAEc,GAC1DrB,GAAqB9lF,GAAM6qF,sBAExBC,EAAoBC,IAAyB1xG,EAAAA,EAAAA,SAA+BrK,IAC5Eg8G,EAAiBC,IAAuB5xG,EAAAA,EAAAA,SAA+BrK,IACvEk8G,EAAkBC,IAAwB9xG,EAAAA,EAAAA,SAA+BrK,IACzEw4G,EAAqBC,IAA0BpuG,EAAAA,EAAAA,KAAS,IACxD+xG,EAA4BC,IAAiChyG,EAAAA,EAAAA,KAAS,GAEvEu1G,GAAa75G,EAAAA,EAAAA,KAAQ,KACzB,GAAIkrB,EACF,OAEF,MAAM4uF,GAAcC,EAAAA,EAAAA,MAA+BrxE,EAAAA,EAAAA,MAAazd,GAChE,OAAO6uF,GAAa5kF,OAAOhyB,QAAQ,GAElC,CAAC+nB,EAAMC,EAAWpnB,IAEfyyG,GAAgBv2G,EAAAA,EAAAA,KAAQ,KAC5B,GAAK65G,EAIL,OAAOA,EAAWlY,MAAM19D,GAAWA,GAC9BqkD,GACAA,EAAiBrkD,EAAO9nC,KAAOmsF,EAAiBrkD,EAAO9nC,IAAIq6G,SAAQ,GACvE,CAACqD,EAAYvxB,IAEV0xB,GAAWh6G,EAAAA,EAAAA,KAAQ,KACvB,MAAMu7B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KACpC,IAAKu7E,GAAc1uG,EAAY,MAAO,GACtC,MAAM8uG,EAAgB,IAAIp2B,IAAIg2B,EAAW5tG,KAAKg+B,GAASA,EAAM9tC,MAE7D,OAAOmiD,MAAMnqC,KAAK8lG,GACfhuG,KAAK9P,GAAOo/B,EAAUp/B,KACtB+4B,OAAOhyB,QAAQ,GACjB,CAACiI,EAAY0uG,IAEVK,GAA8Bx1G,EAAAA,EAAAA,IAAgB,IAC3Cs1G,EAAS/tG,KAAKg+B,IAAI,CACvBnlC,MAAQ,GAAEmlC,EAAK9tC,KACfkJ,OAAOg8B,EAAAA,EAAAA,KAAgB4I,IAAS,GAChC1P,YAAah1B,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAAC5oB,KAAK,QAAQ6oB,KAAMwe,UAItCkwE,GAAwBn6G,EAAAA,EAAAA,KAAQ,KAC5Bg6G,EAASrY,MAAM13D,GAASA,EAAK9tC,KAAO4vB,KAC3C,CAACiuF,EAAUjuF,IAER2qF,GAAoByD,IAA0B9F,IAAoBlpG,IAAeigB,GAAWqpF,GAE5FzsB,IAAYhoF,EAAAA,EAAAA,KAAQ,KACxB,MAAMu7B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KACpC,IAAKu7E,GAAc1uG,EAAY,MAAO,CAAC,EAEvC,MAAM8uG,EAAgB,IAAIp2B,IAAIg2B,EAAW5tG,KAAKg+B,GAASA,EAAM9tC,MACvDwhC,EAAU2gB,MAAMnqC,KAAK8lG,GAAehuG,KAAKmpB,GAAWmG,EAAUnG,KAEpE,OAAOglF,EAAAA,GAAAA,IAA0Bz8E,GAAUsM,GAAS,CAACA,GAAM9tC,IAAIklC,EAAAA,EAAAA,KAAgB4I,KAAO,GACrF,CAAC9+B,EAAY0uG,IAEVjD,IAAqC52G,EAAAA,EAAAA,KAAQ,IAC1C,CACL,CACE8E,MAAO20G,GAAsBO,EAASjhH,QAAU,EAAI,OAASihH,IAAW,IAAI79G,GAC5EkJ,MAAO8tD,EAAQ,mBACfknD,cAAeZ,GAAsBO,EAASjhH,QAAU,EAAI,IACvDmhH,UACDjgH,KAGP,CAACk5D,EAASsmD,EAAoBO,IAE3BnD,IAAuC72G,EAAAA,EAAAA,KAAQ,IAC5C,CACL,CACE8E,MAAO20G,GAAsBO,EAASjhH,QAAU,EAAI,aAAeihH,IAAW,IAAI79G,GAClFkJ,MAAOo0G,GAAsBO,EAASjhH,QAAU,EAC5Co6D,EAAQ,sBACRA,EAAQ,gBAAiBrb,OAAOwK,OAAO0lC,IAAW,IACtDqyB,cAAeZ,GAAsBO,EAASjhH,QAAU,EAAI,IACvDmhH,UACDjgH,KAGP,CAACk5D,EAASsmD,EAAoBO,EAAUhyB,KAErC8uB,IAAoC92G,EAAAA,EAAAA,KAAQ,IACzC,CACL,CACE8E,MAAO20G,GAAsBO,EAASjhH,QAAU,EAAI,MAAQihH,IAAW,IAAI79G,GAC3EkJ,MAAOo0G,GAAsBO,EAASjhH,QAAU,EACdo6D,EAA7BkjD,EAAqC,sBAAiC,kBACtEA,EAA6BljD,EAAQ,sBACpCA,EAAQ,YAAarb,OAAOwK,OAAO0lC,IAAW,IACpDqyB,cAAeZ,GAAsBO,EAASjhH,QAAU,EAAI,IACvDmhH,UACDjgH,KAGP,CAACo8G,EAA4BljD,EAASsmD,EAAoBO,EAAUhyB,KAEjE+uB,IAA0BryG,EAAAA,EAAAA,IAAgB,KAC9C4xG,GAA+B1gD,IAAUA,GAAK,IAG1CgiD,IAA4BlzG,EAAAA,EAAAA,IAAgB,KAChDV,IACAwxG,EAAe,CAAE5iF,WAAY6mF,EAAqBlC,oBAAoB,GAAO,IAGzEP,IAA0BtyG,EAAAA,EAAAA,IAAgB,CAACi5B,EAAmBs5E,IAC7DhsF,EACEgsF,EAAsB/hF,QAAQgiF,IACnC,MAAMjzE,GAASmzE,EAAAA,EAAAA,MAAwB1uE,EAAAA,EAAAA,MAAazd,EAAK9uB,GAAI+6G,GAC7D,OAAOjzE,GAAUtG,EAAQvhC,SAAS6nC,EAAO9nC,GAAG,IAH5BggC,GAAAA,IAOdm+E,IAAmB51G,EAAAA,EAAAA,IAAiB61G,IACxCziE,OAAOC,QAAQwiE,GAAiBtqG,SAAQrF,IAA6B,IAA3BwqB,EAAQk/E,GAAc1pG,EAC1D0pG,EAAcv7G,QAChB28G,EAAkB,CAChBqC,cAAe3iF,EACfzwB,OAAQsmB,EAAM9uB,GACdy2B,WAAY0hF,GAEhB,GACA,IAGE+C,IAAuB3yG,EAAAA,EAAAA,IAAiB4yG,IACxCA,GAAyBA,EAAsBv+G,QACjDy8G,EAAe,CAAE5iF,WAAY0kF,EAAuBC,oBAAoB,GAC1E,IAGIC,IAAqB9yG,EAAAA,EAAAA,IAAiB+yG,IAC1CA,EAAmBxnG,SAASmlB,IAC1BugF,EAAiB,CAAEhxG,OAAQsmB,EAAM9uB,GAAIi5B,UAAS,GAC9C,IAGEsiF,IAAqChzG,EAAAA,EAAAA,IAAiB+yG,IAC1DA,EAAmBxnG,SAASmlB,IAC1BwgF,EAA6B,CAC3BjxG,OAAQsmB,EAAM9uB,GACdi5B,SACAuiF,aAAc1G,GACd,GACF,IAGE6G,IAA6BpzG,EAAAA,EAAAA,IAAgB,KACjD,GAAKumB,EAAL,CAEA,GAAI9f,EACFsqG,EAAwB,CAAE7iF,WAAY6mF,SACjC,IAAKlD,GAAiBG,GAAmB,CAC9C,GAAIP,EAAkB,CACpB,MAAMqE,EAAarE,EAAiBjhF,QAAQqL,IAAYhjB,OAAOk9F,MAAMl9F,OAAOgjB,MACtEg6E,EAAkBd,EAAoBhiE,QAAiC,CAAC8K,EAAK20D,KACjF,MAAMjzE,GAASmzE,EAAAA,EAAAA,MAAwB1uE,EAAAA,EAAAA,MAAazd,EAAK9uB,GAAI+6G,GAO7D,OANIjzE,GAAUu2E,EAAWp+G,SAAS6nC,EAAO9nC,MAClComD,EAAIte,EAAO9nC,MACdomD,EAAIte,EAAO9nC,IAAM,IAEnBomD,EAAIte,EAAO9nC,IAAIoP,KAAKgS,OAAO25F,KAEtB30D,CAAG,GACT,CAAC,GAEJ+3D,GAAiBC,EACnB,CAEA,GAAIxE,EAAoB,CACtB,MAAMyE,EAAazE,EAAmB7gF,QAAQqL,IAAYhjB,OAAOk9F,MAAMl9F,OAAOgjB,MACxE+2E,EAAwBN,GAAwBwD,EAAY5nF,GAClEykF,GAAqBC,EACvB,CAEA,GAAIrB,IAAoB9E,EAAuB,CAC7C,MAAMqJ,EAAavE,EAAgB/gF,QAAQqL,IAAYhjB,OAAOk9F,MAAMl9F,OAAOgjB,MACrEk3E,EAAqB+C,EAAWtlF,QAAQE,GAAWqkF,GAAoB9X,MAAMuV,IACjF,MAAMjzE,GAASmzE,EAAAA,EAAAA,MAAwB1uE,EAAAA,EAAAA,MAAazd,EAAK9uB,GAAI+6G,GAC7D,OAAOjzE,GAAUA,EAAO9nC,KAAOi5B,CAAM,MAEvCoiF,GAAmBC,GACnB,MAAMH,EAAwBN,GAAwBwD,EAAYf,GAClEpC,GAAqBC,EACvB,CAEA,GAAIrB,GAAmB9E,EAAuB,CAC5C,MACMsG,EADaxB,EAAgB/gF,QAAQqL,IAAYhjB,OAAOk9F,MAAMl9F,OAAOgjB,MACrCrL,QAAQE,GAAWqkF,GAAoB9X,MAAMuV,IACjF,MAAMjzE,GAASmzE,EAAAA,EAAAA,MAAwB1uE,EAAAA,EAAAA,MAAazd,EAAK9uB,GAAI+6G,GAC7D,OAAOjzE,GAAUA,EAAO9nC,KAAOi5B,CAAM,MAEvCsiF,GAAmCD,EACrC,CACF,MACEjC,EAAe,CAAE5iF,WAAY6mF,EAAqBlC,oBAAoB,IAGxEvzG,GAlDiB,CAkDR,IAGL02G,IAAiBh2G,EAAAA,EAAAA,IAAgB,KACrCV,GAAS,IAGLg0G,IAA2BtzG,EAAAA,EAAAA,IAAiBmB,IAChDmwG,EAAsBnwG,EAAQ,IAG1BoyG,IAAwBvzG,EAAAA,EAAAA,IAAiBmB,IAC7CqwG,EAAoBrwG,EAAQ,IAGxBqyG,IAAyBxzG,EAAAA,EAAAA,IAAiBmB,IAC9CuwG,EAAqBvwG,EAAQ,IAmF/B,IAhFApD,EAAAA,EAAAA,KAAU,MACHqB,GAAU4oD,IACbktD,IACAxD,OAAqBn8G,GACrB+7G,OAAsB/7G,GACtBi8G,OAAoBj8G,GACpBy4G,GAAuB,GACvB4D,GAA8B,GAC9BlE,IACF,GACC,CAACwH,EAAuB91G,EAAQ4oD,EAAY0lD,IAsE1CqH,EAIL,OACEl0G,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASA,EACTyB,QAAS4uG,OAAkBp6G,EAAY69G,GACvCpyG,UAAU,UAEVH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOowE,MA7EvB9gF,EAAAA,GAAA7K,cAAA,OACEgL,UAAWgxG,IAAqBzgG,GAAOpa,UACvC8S,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GAE5By8G,IACCnxG,EAAAA,GAAA7K,cAACsuC,GAAAA,EAAU,CACTpmC,KAAK,QACLqmC,MAAO+wE,IAGXz0G,EAAAA,GAAA7K,cAAA,MAAIgL,WAAW+I,EAAAA,GAAAA,GAAeioG,GAAoBzgG,GAAO3Q,MAAQ2Q,GAAOmiG,cACrEjlD,EAAQ,kCAAmCsmD,GAAoB1gH,WAoEhEohH,GAAyB50G,EAAAA,GAAA7K,cAAA,SAAIwK,EAAK,gCACnCwxG,IACCnxG,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,GAAOoiG,aAAcllD,EAAQ,4BA/DjD5tD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOpQ,SACrBN,EAAAA,GAAA7K,cAAC49G,GAAAA,EAAa,CACZzyG,QAAS+wG,GACT9wG,SAAUoyG,GACVnyG,SAAUowG,EACVwE,eAAgBlB,GAAsBO,EAASjhH,QAAU,IAE3DwM,EAAAA,GAAA7K,cAAC49G,GAAAA,EAAa,CACZzyG,QAASgxG,GACT/wG,SAAUkyG,GACVjyG,SAAUgwG,EACV4E,eAAgBlB,GAAsBO,EAASjhH,QAAU,KAEzDw9G,GAAiBvB,GACjBzvG,EAAAA,GAAA7K,cAAC49G,GAAAA,EAAa,CACZzyG,QAASixG,GACThxG,SAAUmyG,GACVlyG,SAAUkwG,EACV0E,eAAgBlB,GAAsBO,EAASjhH,QAAU,KAS/DwM,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOsiG,qBACpClC,GAA8BpgG,GAAOuiG,2BAErCjzG,EAAAA,GAAA7K,cAAA,MAAIgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOoiG,YAAapiG,GAAOwiG,mBACtDtlD,EAAQ,6BAA8B6mD,EAASjhH,SAElDwM,EAAAA,GAAA7K,cAACg+G,GAAsB,CACrB7F,cAAY,EACZE,iBAAe,EACfpuG,OAAQsmB,GAAM9uB,GACds2G,oBAAqBA,EACrBC,uBAAwBA,EACxBpB,uBAAwBA,EACxBL,YAAaA,EACbvrG,WAAW+I,EAAAA,GAAAA,GAAewH,GAAO0iG,aAAclG,GAAuBx8F,GAAO2iG,qBA0BzE3C,GAAmBjB,GAAeiB,GAAiBl9G,OACjDwM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAWuQ,GAAO4iG,eAClBplC,gBAAiBx9D,GAAOwwB,OACxBrgC,QAAS2wG,IAER5jD,EAAQkjD,EAA6B,uBAAyB,6BAC/D9wG,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CACHx/B,KAAMywG,EAA6B,KAAO,OAC1C3wG,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOwwB,OAAQ,WAG3C6vE,GAA8B,IAIvCjB,GAAgCnwG,EAAK,0BACpCowG,IAAqB6E,GAA0Bj1G,EAAK,gCACtDK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2uG,EAAkB,yBAC9B5lG,EAAAA,GAAAA,GAAe,iBAAkB4nG,GAA8BpgG,GAAO6iG,gBAEvEzE,GACC9uG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,SAASR,UAAU,wBAAwBS,QAAM,EAACC,QAASwxG,IACtElD,GACGhpF,EAAAA,GAAAA,GAAWynC,EAAQ,6BAA8BuhD,IACjDvhD,EAAQ,2CAGhB5tD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,SAASR,UAAU,wBAAwBS,QAAM,EAACC,QAAS0xG,IACtE3kD,EAAQkhD,EAAkB,gCAAkC,WAE/D9uG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASs0G,IAAiBvnD,EAAQ,aAGjF,KC9QZ,IAAetvD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAMI,GAAWC,EAAAA,EAAAA,KAAeL,GAC1BgkB,GAAOysC,EAAAA,EAAAA,KAAkBzwD,IACvBtO,KAAM+P,EAAe,OAAE/D,IAAWgD,EAAAA,EAAAA,KAAyBV,IAAW,CAAC,EACzEkE,EAAiC,cAApBzC,GACb,UAAEP,IAAcwxG,EAAAA,EAAAA,KAAgC1yG,GAChDimG,EAAYhqG,SAASiI,IAAcyvG,EAAAA,EAAAA,KAAgC3zG,IACnE4xB,GAAcgiF,EAAAA,EAAAA,KAAkC5zG,IAC9C2rB,WAAY6mF,GAAuBpyG,EAASqyG,kBAAoB,CAAC,EACnEoB,IAAsBn2G,IAASo2G,EAAAA,EAAAA,KAA0B9zG,EAAQtC,EAAQ80G,GACzEpxE,IAAcl9B,IAAcxG,KAASq2G,EAAAA,EAAAA,KAAyB/zG,EAAQtC,EAAQ80G,GAC9EwB,EAA0B5zG,EAAS6zG,yBACnCC,EAAiBj4G,QAAQ+3G,GAA2B5zG,EAASw/C,gBAC9Dx/C,EAAS4/C,0BAA4B5/C,EAAS+zG,2BAA6B/zG,EAASs3C,aAEzF,MAAO,CACL1zB,OACA9f,aACAkwG,uBAAuBC,EAAAA,EAAAA,KAA4Br0G,GACnDs0G,kBAAmBpzG,EACnBqzG,kBAAmBtO,EACnBuO,oBAAqB5iF,EACrB6iF,mBAAoBrzE,EACpBoxE,qBACAqB,sBACAK,iBACD,GA3Ben0G,EApJoC7H,IAclD,IAdmD,KACvD8rB,EAAI,QACJ0wF,EAAO,SACP1pG,EAAQ,gBACRvJ,EAAe,WACfyC,EAAU,sBACVkwG,EAAqB,kBACrBE,EAAiB,kBACjBC,EAAiB,oBACjBC,EAAmB,mBACnBC,EAAkB,oBAClBZ,EAAmB,eACnBK,EAAc,mBACd1B,GACDt6G,EACC,MAAM,sBACJy6G,EAAqB,mCACrBgC,EAAkC,yBAClCC,EAAwB,qBACxBC,EAAoB,iBACpBtiF,EAAgB,eAChBw2E,IACE7rG,EAAAA,EAAAA,MACEe,GAAOC,EAAAA,EAAAA,MAEN8D,EAAmBC,EAAiBC,IAAoBC,EAAAA,EAAAA,KHtEhC6I,KAC/B,SAAS8pG,EAAW/2G,GAClBA,EAAE0Y,kBACFvZ,EAAAA,EAAAA,MAAa23G,sBACf,EAEAE,EAAAA,GAAAA,IAAWh8G,EAAAA,EAAAA,KAAQ,IAAOiS,EAAW,CACnC,QAAS8pG,QACP9hH,GAAY,CAACgY,IAAW,EGgE5BgqG,CAAwBhqG,GAExB,MAAMiqG,GAA8Bx3G,EAAAA,EAAAA,IAAgB,KAClDk1G,GAAuB,KAGzBn3G,EAAAA,EAAAA,KAAU,KACDwP,GAAahJ,GAAsBkyG,OAMtClhH,GALAo4C,EAAAA,GAAAA,GAAyB,CACzB8pE,YAAaZ,EAAoBryG,OAAkBjP,EACnDmyC,SAAUmvE,EAAoBryG,OAAkBjP,EAChDmiH,MAAOF,KAGV,CACDjqG,EAAUhJ,EAAmBC,EAAiBgzG,EAA6Bf,EAC3EI,IAGF,MAAMQ,GAAar3G,EAAAA,EAAAA,IAAgB,KACjCo3G,IACAtiF,EAAiB,CACf9/B,QAASwL,EAAK,uBAEhB00G,GAAuB,IAGnBxmE,GAAiB1uC,EAAAA,EAAAA,IAAgB,KACrCm3G,IACAjC,GAAuB,IAGnByC,GAA4BtuF,EAAAA,EAAAA,GAAsBstF,QAAyBphH,GAAW,GAGtFqiH,EAAyBp3G,EAAK,kCAFG+M,EAAWopG,EAAwBgB,EAE6B,KAEjGj9D,GAAoB16C,EAAAA,EAAAA,IAAgB,KACnC+0G,GAAuBxuF,IAC5B+kF,EAAe,CACbrrG,OAAQsmB,EAAK9uB,GACby2B,WAAY6mF,IAEdG,IAAuB,IAGnBl0G,GAAY+I,EAAAA,GAAAA,GAChB,uBACAktG,GAAW,gBACX1pG,GAAY,SAGRsqG,EAAeA,CACnB/wG,EAAgBnG,EAAee,EAA4ByF,IAGzDtG,EAAAA,GAAA7K,cAAA,OACEsmC,KAAK,SACLD,SAAU,EACVr7B,WAAW+I,EAAAA,GAAAA,GACT,aACA,OACA5C,GAAe,eAEjBzF,QAASA,EACTd,MAAOD,EACP,aAAYA,GAEZE,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,OAAS,QAAOjD,QAKnD,OACEjG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWA,GACdH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,8BACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,cACN4E,OAAK,EACL1E,QAAS81G,EACTnxG,UAAU,oBAEVxF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEfH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,6BAA6BJ,MAAOg3G,GACjDA,GAGFp5G,QAAQm4G,IACP91G,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gCACQ,cAApBgD,GAAmCgzG,GAClCa,EACE,UAAWr3G,EAAK,4BAA6B02G,GAGhDJ,GACCe,EAAa,OAAQr3G,EAAK,+BAAgCk6C,GAE3Dq8D,IAAwBX,GACvByB,EAAa,WAAYr3G,EAAK,sBAAuBkuC,IAErD0nE,GACAyB,EAAa,OAAQr3G,EAAK,mCAAoC62G,GAE/DR,GACCgB,EAAa,SAAUr3G,EAAK,gCAAiCgE,GAAiB,KAKrFqyG,GACCh2G,EAAAA,GAAA7K,cAAC8hH,GAA0B,CACzB14G,OAAQmF,EACRkC,WAAYA,EACZnH,QAASmF,IAGT,KC9FV,IAAetF,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAEtC,EAAM,UAAEwM,IAAc7J,EAAAA,EAAAA,KAAeL,GAAQw1G,aAAe,CAAC,EACrE,OAAK93G,GAAWwM,EAIT,CACLurG,aAAalwF,EAAAA,EAAAA,KAAkBvlB,EAAQtC,EAAQwM,IAAYurG,aAJpD,CAAC,CAKT,GATe11G,EAxEpB,SAAoB7H,GAGM,IAHL,OACnB2E,EAAM,YACN44G,GACsBv9G,EACtB,MAAM,SACJklC,EAAQ,iBACRs4E,IACEx4G,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,KAEPy3G,GAAuB/2E,EAAAA,GAAAA,GAAiB62E,GAAa,GACrDn0B,GAAYvoF,EAAAA,EAAAA,KAAQ,KACxB,IAAK48G,EACH,OAGF,MAAMvrG,EAASymC,OAAO4K,KAAKk6D,GAG3B,OAFAvrG,EAAOkrC,MAAK,CAACsgE,EAAQC,IAAYF,EAAqBE,GAAWF,EAAqBC,KAE/ExrG,CAAM,GACZ,CAACurG,IAEEpgG,GAAc9X,EAAAA,EAAAA,IAAiB0wB,IACnCunF,IAEA35G,YAAW,KACTqhC,EAAS,CAAEloC,GAAIi5B,GAAS,GA7BG,IA8BD,IAGxB2nF,GAAyBr4G,EAAAA,EAAAA,IAAgB,KAC7Ci4G,GAAkB,IAGpB,OACEp3G,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAAS24G,EACTj3G,WAAW+I,EAAAA,GAAAA,GClEO,WDkEsB,UACxCnJ,MAAQ,WAAUijF,GAAWxvF,gBAE7BwM,EAAAA,GAAA7K,cAAA,OAAKiU,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5BsuF,GAAaA,EAAUt8E,KAAKmpB,GAC3B7vB,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKgpB,EACL1vB,UAAU,6CAEVU,QAASA,IAAMoW,EAAY4Y,IAE3B7vB,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQA,EACR4lB,kBAAgB,EAChBd,QAAQE,EAAAA,GAAAA,GAAiBl1C,EAAsC,IAAhC03G,EAAsBxnF,IACrD4kB,WAAW,qBAKnBz0C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wBACVS,QAAM,EACNC,QAAS22G,GAER73G,EAAK,WAKhB,KEjGA,GAAkE,WAAlE,GAAoF,WAApF,GAA+H,WC8BzH83G,GAA2Bz8F,EAAAA,EAAqBoP,EAAAA,IA4GtD,IAAe9rB,EAAAA,EAAAA,KACbmD,EAAAA,EAAAA,KAAsBC,IACpB,MAAM,OAAEtC,EAAM,WAAEs4G,IAAe31G,EAAAA,EAAAA,KAAeL,GAAQi2G,4BAA8B,CAAC,EAGrF,MAAO,CAAEjzE,KAFItlC,GAASulC,EAAAA,EAAAA,KAAWjjC,EAAQtC,QAAU1K,EAEpCgjH,aAAY,GAJ7Bj2G,EA3GiC7H,IAAyD,IAAxD,OAAE2E,EAAM,WAAEm5G,EAAU,KAAEhzE,GAA6B9qC,EACrF,MAAM+F,GAAOC,EAAAA,EAAAA,MACP,4BACJg4G,EAA2B,iBAC3B1jF,EAAgB,gCAChB2jF,EAA+B,iBAC/B5jF,EAAgB,qBAChB6jF,EAAoB,SACpBC,IACEn5G,EAAAA,EAAAA,MACEwyG,GAAWjwD,EAAAA,EAAAA,KAAuBzc,GAElCszE,GAAqB74G,EAAAA,EAAAA,IAAgB,KACzCy4G,EAA4B,CAAEK,qBAAqB,IACnDJ,IAEAp6G,YAAW,KACTw2B,EAAiB,CAAE9/B,QAASwL,EAAK,mBAAoB,GACpD83G,GAAyB,IAGxBS,GAAqB/4G,EAAAA,EAAAA,IAAgB,KACzC24G,EAAqB,CACnBK,WAAY,WACZv/E,WAAY,YACZkwE,UAAWA,IAAMiP,EAAS,CAAEloF,OAAQ6U,EAAM9tC,OAE5CihH,IAEAp6G,YAAW,KACTw2B,EAAiB,CAAE9/B,QAASwL,EAAK,uBAAwB,GACxD83G,GAAyB,IAGxBW,GAAoBj5G,EAAAA,EAAAA,IAAgB,KACxC04G,IAEAp6G,YAAW,KACTy2B,EAAiB,CAAEQ,eAAgB,aAAc,GAChD+iF,GAAyB,IAGxB1qF,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClC04G,GAAiC,IAGnC,OACE73G,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CAAC20B,QAAM,EAACr2B,OAAQA,EAAQE,QAASsuB,GACrC/sB,EAAAA,GAAA7K,cAAA,OAAKgL,UDhFiB,WCgFYiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC1DsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UDlF8I,WCmF9IQ,MAAM,cACN4E,OAAK,EACLlI,KAAK,UACLwD,QAASksB,EACTvnB,UAAU,SAEVxF,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WAEbL,EAAAA,GAAA7K,cAAC2/F,GAAAA,EAAuB,CACtBpkB,OAAQgnC,EAAa/iB,GAAAA,EAAe0jB,SAAW1jB,GAAAA,EAAe2jB,SAC9Dj7G,KAAM,GACN8C,UD9FoC,WC+FpCwjC,gBAAc,EACdktC,QAAM,IAER7wE,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACZ/Q,EAAK+3G,EAAa,qBAAuB,2BAE5C13G,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,KACXyV,EAAAA,GAAAA,GACCxmB,EACE+3G,EAAa,mBAAqB,6BAClCtG,GAEF,CAAC,qBAGLpxG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLrD,KAAK,UACLwD,QAAS62G,EAAaM,EAAqBE,EAC3C/3G,UAAWuQ,IAEV/Q,EAAK+3G,EAAa,qBAAuB,2BAE5C13G,EAAAA,GAAA7K,cAACkyG,GAAAA,EAAS,CAAClnG,UDrHwF,YCqH1DR,EAAK,cAC9CK,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IAAgB/Q,EAAK,uBACpCK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,KACXyV,EAAAA,GAAAA,GACCxmB,EAAK+3G,EAAa,mBAAqB,uBAAwBtG,GAC/D,CAAC,qBAGLpxG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLw0B,qBAAmB,EACnB73B,KAAK,UACLwD,QAASu3G,EACTj4G,UAAWuQ,IAEV/Q,EAAK,4BAGJ,KC+HZ,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAEtC,EAAM,UAAEwM,IAAc7J,EAAAA,EAAAA,KAAeL,GAAQ62G,cAAgB,CAAC,EAChEpkH,EAAUiL,GAAUwM,GAAYqb,EAAAA,EAAAA,KAAkBvlB,EAAQtC,EAAQwM,QAAalX,EAErF,MAAO,CACL0K,SACAwM,YACA+nC,UAAWx/C,GAASw/C,UACpB6kE,SAAUrkH,GAASqkH,SACnBrB,YAAahjH,GAASgjH,YACtBzjE,mBAAoBhyC,EAAOiyC,UAAUD,mBACtC,GAZejyC,EArNgC7H,IAQ9C,IAR+C,OACnD2E,EAAM,SACNi6G,EAAQ,UACR7kE,EAAS,OACTv0C,EAAM,UACNwM,EAAS,YACTurG,EAAW,mBACXzjE,GACD95C,EACC,MAAM,aACJ6+G,EAAY,sBACZC,EAAqB,SACrB55E,IACElgC,EAAAA,EAAAA,MAGE89C,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAC9B/C,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KAE9Bp5B,GAAOC,EAAAA,EAAAA,MACN6sF,EAAWC,EAAcC,IAAe9oF,EAAAA,EAAAA,IAAQ,IAChD80G,EAAWC,IAAgB75G,EAAAA,EAAAA,SAAkCrK,GAC9DmkH,EAAiBL,GAAY7kE,GAAa6kE,EAASlzF,OAlCnB,IAmCjCquB,EAAUmlE,QAAQtlH,OAAS,EAC1BulH,GAAYh9G,EAAAA,EAAAA,OAElBmB,EAAAA,EAAAA,KAAU,KACJqB,IAAWkuF,IACbssB,EAAU78G,aAAUxH,GAGlB+3F,IAAcluF,IAChBouF,IACAisB,OAAalkH,GACf,GACC,CAAC+3F,EAAWluF,EAAQouF,IAEvB,MAAMqsB,GAA0B75G,EAAAA,EAAAA,IAAgB,KAC1C45G,EAAU78G,SACZ4iC,EAAS,CAAEloC,GAAImiH,EAAU78G,UAE3Bw8G,GAAuB,IAGnB3rF,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClCutF,GAAc,IAGVz1E,GAAc9X,EAAAA,EAAAA,IAAiB0wB,IACnCkpF,EAAU78G,QAAU2zB,EACpB9C,GAAa,IAGTyqB,GAAiBr4C,EAAAA,EAAAA,IAAgB,KACrCs5G,EAAa,CACXr5G,OAAQA,EACRwM,UAAWA,GACX,IAGEqtG,GAAex+G,EAAAA,EAAAA,KAAQ,KAC3B,MAAMy+G,EAAiC,GAMvC,OALAV,GAAU7kE,WAAWjpC,SAAQrF,IAAkB,IAAjB,SAAEm+B,GAAUn+B,EACnC6zG,EAAgB9c,MAAMvxB,IAAMjoC,EAAAA,EAAAA,KAAeioC,EAAGrnC,MACjD01E,EAAgBlzG,KAAKw9B,EACvB,IAEK01E,CAAe,GACrB,CAACV,IAEE3nE,GAAUp2C,EAAAA,EAAAA,KAAQ,KACtB,GAAIk+G,EACF,OAAOH,GAAU7kE,UACdhkB,QAAOhpB,IAAA,IAAC,SAAE68B,GAAU78B,EAAA,OAAKi8B,EAAAA,EAAAA,KAAeY,EAAUm1E,EAAU,IAC5DjyG,KAAI/E,IAAA,IAAC,OAAEnD,GAAQmD,EAAA,OAAKnD,CAAM,IAG/B,MAAM26G,EAAgB5mE,OAAO4K,KAAKg6D,GAAe,CAAC,GAElD,OAAO3gF,EAAAA,GAAAA,IAAOgiF,GAAU7kE,UAAUjtC,KAAIwc,IAAA,IAAC,OAAE1kB,GAAQ0kB,EAAA,OAAK1kB,CAAM,IAAEqgF,OAAOs6B,GAAiB,KAAO,GAAG,GAC/F,CAACR,EAAWH,EAAUrB,KAElBz7D,EAAaC,IAAWC,EAAAA,GAAAA,GAC7BpE,EAAgB3G,EAAS2nE,QAAoC9jH,IAAxB8jH,EAAS7iE,YAOhD,OAJAz4C,EAAAA,EAAAA,KAAU,KACRy+C,IAAU,CAAE/8B,UAAW2xC,EAAAA,GAAkBC,WAAY,GACpD,CAAC7U,IAGF37C,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,IAAWkuF,EACnBhuF,QAASsuB,EACT5sB,UAAU,0BACVJ,MAAOJ,EAAK,aACZjB,oBAAqBs6G,GAEpBH,GACC74G,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YAAYiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACnDsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,IAAgByvG,GAAa,UACxCt7G,KAAK,OACLsV,QAAM,EAEN9R,QAASA,IAAM+3G,OAAalkH,IAE5BsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oBACZxC,QAAQ66G,GAAUlzF,SAAU0pC,EAAAA,GAAAA,IAAqBwpD,EAASlzF,QAE5D2zF,EAAavyG,KAAK88B,IACjB,MAAMle,EAAQquB,GAAWmlE,QACtBpzE,MAAMhD,IAAmBE,EAAAA,EAAAA,KAAeF,EAAec,SAAUA,MAAYle,MAChF,OACEtlB,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLmG,KAAKg9B,EAAAA,EAAAA,KAAeL,GACpBrjC,WAAW+I,EAAAA,GAAAA,IAAe05B,EAAAA,EAAAA,KAAe+1E,EAAWn1E,IAAa,UACjEnmC,KAAK,OACLsV,QAAM,EAEN9R,QAASA,IAAM+3G,EAAap1E,IAE5BxjC,EAAAA,GAAA7K,cAAC8/C,GAAAA,EAAmB,CAClBzR,SAAUA,EACVrjC,UAAU,wBACVuzC,mBAAoBA,IAErB/1C,QAAQ2nB,KAAU0pC,EAAAA,GAAAA,IAAqB1pC,GACjC,KAMjBtlB,EAAAA,GAAA7K,cAAA,OAAKiU,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,EAAWyL,UAAU,wBACjDu7C,GAAaloD,OACZwM,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,UAAU,6BACVu4C,MAAOgD,EACP/C,WAAYgD,GAEXD,GAAa09D,SACX56G,IACC,MAAM0nB,EAAO8P,EAAUx3B,IAAWk+C,EAAUl+C,GAEtC66G,EAAgBb,GAAU7kE,UAAUhkB,QAAQ2pF,GAAYA,EAAQ96G,SAAWA,IAC3Ek6C,EAA2B,GAC3B6gE,EAAapC,IAAc34G,GAiDjC,OA/CA66G,GAAe3uG,SAASmgE,IAClB8tC,KAAc/1E,EAAAA,EAAAA,KAAeioC,EAAErnC,SAAUm1E,IAE7CjgE,EAAM1yC,KACJhG,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAM,GAAErI,MAAUqlC,EAAAA,EAAAA,KAAegnC,EAAErnC,YACnCrjC,UAAU,yCAEVU,QAASA,IAAMoW,EAAYzY,IAE3BwB,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAACC,KAAMA,EAAM7oB,KAAK,WACzB2C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,QACbH,EAAAA,GAAA7K,cAACkpD,GAAAA,EAAa,CAACn4B,KAAMA,EAAMszF,iBAAe,IAC1Cx5G,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASiJ,IAAI,QAC3BpJ,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,yCACZ00C,EAAAA,GAAAA,GAAiBl1C,EAAoB,IAAdkrE,EAAE4uC,aAG7B5uC,EAAErnC,UACDxjC,EAAAA,GAAA7K,cAAC8/C,GAAAA,EAAmB,CAClB90C,UAAU,sBACVqjC,SAAUqnC,EAAErnC,SACZkQ,mBAAoBA,KAI3B,IAGEilE,GAAcU,GAAe7lH,QAChCklD,EAAM1yC,KACJhG,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAM,GAAErI,YACR2B,UAAU,6CAEVU,QAASA,IAAMoW,EAAYzY,IAE3BwB,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQrxB,EACRi3C,kBAAgB,EAChBikE,WAAW,SACX/kE,OAAQ4kE,GAAa1kE,EAAAA,GAAAA,GAAiBl1C,EAAmB,IAAb45G,QAAqB7kH,EACjE+/C,WAAW,mBAKZiE,CAAK,KAIhB14C,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,OAEd7+C,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wBACVS,QAAM,EACNC,QAASksB,GAERptB,EAAK,UAEF,KC7IZ,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6C,IAA3C,uBAAEs0G,GAAwBt0G,EACjC,MAAMu0G,OAA2DllH,IAA1CilH,EAAuBC,iBACzCC,EAAAA,EAAAA,KAA0Bn4G,EAAQi4G,EAAuBC,gBAC9D,MAAO,CACLE,kBAAmBF,EAAiBA,EAAehjH,QAAKlC,EACzD,GANe+M,EAlFyC7H,IAGvD,IAHwD,kBAC5DkgH,EAAiB,uBACjBH,GACD//G,EACC,MAAM,2BAAEmgH,IAA+Bn7G,EAAAA,EAAAA,OAEhCo7G,EAAUC,IAAep2G,EAAAA,EAAAA,IAAQ,IACjC8I,EAAWutG,IAAgBr2G,EAAAA,EAAAA,IAAQ,GACpC/G,GAAaf,EAAAA,EAAAA,MAEbo+G,GAAOh7G,EAAAA,EAAAA,IAAgB,KAC3B86G,IACIn9G,EAAWZ,SACbe,aAAaH,EAAWZ,SAE1BuB,YAAW,KACTs8G,EAA2B,CAAEnjH,GAAI+iH,EAAuB/iH,IAAK,GApBnC,IAqBD,IAGvBwjH,GAAwBj7G,EAAAA,EAAAA,IAAiBM,IACvCA,EAAEC,QAAwB/I,QAAQ,mBACtCwjH,GACF,KAGFj9G,EAAAA,EAAAA,KAAU,KACRrJ,SAASiV,iBAAiB,aAAcsxG,GACxCvmH,SAASiV,iBAAiB,YAAasxG,GACvCvmH,SAASiV,iBAAiB,YAAasxG,GACvCvmH,SAASiV,iBAAiB,QAASsxG,GAE5B,KACLvmH,SAASkV,oBAAoB,aAAcqxG,GAC3CvmH,SAASkV,oBAAoB,YAAaqxG,GAC1CvmH,SAASkV,oBAAoB,YAAaqxG,GAC1CvmH,SAASkV,oBAAoB,QAASqxG,EAAsB,IAE7D,CAACA,KAEJrrG,EAAAA,EAAAA,KAAgB,KACd,MAAMsrG,GAAoBlwF,EAAAA,EAAAA,MAE1BrtB,EAAWZ,QAAUuB,YAAW,KAC9B08G,IACAE,GAAmB,GAhDA,IAiDD,GACnB,CAACF,IAEJ,MAAMG,EAAaR,GAAsB,UAASA,IAC5CS,GAAex/G,EAAAA,EAAAA,GAASu/G,GAAaR,GAE3C,IAAKH,EAAuBa,UAC1B,OAGF,MAAMz+F,GAAS49F,EAAuBa,WAAa,GA1DjC,IA4DlB,OACEx6G,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACT,4BACA8wG,GAAY,SACZrtG,GAAa,UACbgtG,EAAuBc,YAAc,YAEvCliH,MAAQ,YAAWwjB,iBAAqB49F,EAAuB99F,mBAAmB89F,EAAuB79F,QAEzG9b,EAAAA,GAAA7K,cAACs7E,GAAAA,EAAe,CACd5pE,IAAM,UAASizG,IACfz8G,KAxEY,IAyEZqzE,OAAQ6pC,EACR5pC,MAAI,EACJ+pC,QAAS7wG,EAAAA,GAAa,QAAMnV,EAC5Bq8F,aAAW,EACXlgB,QAAM,EACN9Y,OAAQmiD,IAEN,KCkCV,IAAe57G,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAEtC,EAAM,UAAEwM,IAAc7J,EAAAA,EAAAA,KAAeL,GAAQi5G,mBAAqB,CAAC,EAErEC,GAAsBC,EAAAA,EAAAA,KAAmBn5G,GAO/C,MAAO,CACLtC,SACAwM,YACAkvG,0BATgC17G,EAC9BwM,GACEmvG,EAAAA,EAAAA,KAA0Cr5G,EAAQtC,EAAQwM,IAC1DovG,EAAAA,EAAAA,KAAuCt5G,EAAQtC,QACjD1K,EAMFkmH,sBACD,GAhBen5G,EAzGiC7H,IAM/C,IANgD,OACpD2E,EAAM,OACNa,EAAM,UACNwM,EAAS,0BACTkvG,EAAyB,oBACzBF,GACDhhH,EACC,MAAM,0BACJqhH,EAAyB,uBACzBC,EAAsB,iBACtBC,EAAgB,uBAChBC,IACEx8G,EAAAA,EAAAA,OAEGy5C,EAAQqH,IAAa3gD,EAAAA,EAAAA,IAAS,IAC/BY,GAAOC,EAAAA,EAAAA,KAEPy7G,GAAel8G,EAAAA,EAAAA,IAAiBm8G,IAC/Bl8G,IAEDwM,EACFqvG,EAA0B,CAAE77G,SAAQxI,GAAIgV,EAAW2vG,eAAgBD,KAEnEH,EAAiB,CAAEK,oBAAqBF,IACxCF,EAAuB,CAAEh8G,SAAQm8G,eAAgBD,KAGnDJ,IAAwB,IAGpBO,GAAet8G,EAAAA,EAAAA,IAAiBM,IACpCigD,EAAUjgD,EAAEC,OAAOH,MAAM,IAGrBm8G,GAAqBjhH,EAAAA,EAAAA,KAAQ,IAAMkhH,EAAAA,IAAgCj1G,KAAK40G,IAOrE,CACLA,WACAM,eARsB,IAAIC,KAAKC,aAAa,CAAClB,GAAsB,CAAExnH,KAAM,aACtC2oH,GAAGT,GAQxCU,aANoB,IAAIH,KAAKC,aAAa,CAACR,GAAW,CAAEloH,KAAM,aAC7B2oH,GAAGT,QAOpC,CAACV,KAEL19G,EAAAA,EAAAA,KAAU,KACHqB,GAAQmhD,EAAU,GAAG,GACzB,CAACnhD,IAEJ,MAAM09G,GAA6BxhH,EAAAA,EAAAA,KAAQ,IACpC49C,EAAO0iB,OAIL2gD,EAAmB/rF,QAAOtqB,IAAA,IAAC,SAAEi2G,EAAQ,eAAEM,EAAc,aAAEI,GAAc32G,EAAA,OAC1Eu2G,EAAe39E,cAAcpnC,SAASwhD,EAAOpa,gBAC1C+9E,EAAa/9E,cAAcpnC,SAASwhD,EAAOpa,gBAC3Cq9E,EAASr9E,cAAcpnC,SAASwhD,EAAOpa,cAAc,IANjDy9E,GAQR,CAACA,EAAoBrjE,IAExB,OACEr4C,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UC3GiB,WD4GjBy0B,QAAM,EACNr2B,OAAQA,EACR0jE,gBAAc,EACdliE,MAAOJ,EAAK,YACZlB,QAASy8G,GAETl7G,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRoG,IAAI,SACJtH,MAAO84C,EACP93C,SAAUk7G,EACV/8D,YAAa/+C,EAAK,UAClB07B,2BAAyB,IAE3Br7B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GCzH8G,WDyH7E,kBAC9C+yG,EAA2Bv1G,KAAIC,IAAA,IAAC,SAAE20G,EAAQ,aAAEU,EAAY,eAAEJ,GAAgBj1G,EAAA,OACzE3G,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKy0G,EACLn7G,WAAW+I,EAAAA,GAAAA,GC7H6C,WD6Hb,WAC3CshG,cAAesQ,IAA8BQ,EAAW,aAAU5mH,EAClE0e,SAAU0nG,IAA8BQ,EACxCxmF,WAAS,EACTy1E,QAAM,EAEN1pG,QAASA,IAAMw6G,EAAaC,IAE5Bt7G,EAAAA,GAAA7K,cAAA,QAAMgL,WAAW+I,EAAAA,GAAAA,GAAe,QCrI2C,cDsIxEid,EAAAA,GAAAA,GAAW61F,EAAc,CAAC,aAAc,CAAEE,UAAW7jE,KAExDr4C,EAAAA,GAAA7K,cAAA,QAAMgL,WAAW+I,EAAAA,GAAAA,GAAe,WCxIiE,cDyI9Fid,EAAAA,GAAAA,GAAWy1F,EAAgB,CAAC,aAAc,CAAEM,UAAW7jE,KAEjD,KAGT,K,4BE9IZ,UAAgB,QAAU,WAAW,YAAc,WAAW,KAAO,WAAW,MAAQ,WAAW,YAAc,YCmJjH,IAAe/5C,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,YAAEmpD,GAAgBnpD,EAExB,MAAO,CACLkpD,cAAeC,EAAYC,WAC5B,GANerpD,EA7GoC7H,IAGlD,IAHmD,MACvDyiC,EAAK,cACLuuB,GACDhxD,EACC,MAAM,0BACJuiH,EAAyB,SACzBr9E,EAAQ,QACR1W,EAAO,iBACP6L,IACEr1B,EAAAA,EAAAA,MACEe,GAAOC,EAAAA,EAAAA,KAEPw8G,EAA6B,aAAhB//E,GAAOjpC,KAEpB25B,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClCg9G,GAA2B,IAGvB3vE,GAAiBrtC,EAAAA,EAAAA,IAAgB,KACrC2/B,EAAS,CAAEloC,GAAIylC,EAAO79B,SACtBuuB,GAAa,IAGTsvF,GAAgBl9G,EAAAA,EAAAA,IAAgB,KACpCipB,EAAQ,CACN7d,IAAK8xB,EAAO9xB,IACZ+xG,iBAAiB,IAEnBvvF,GAAa,IAGTypF,GAAar3G,EAAAA,EAAAA,IAAgB,KACjC,MAAM0I,EAAOu0G,GAAaG,EAAAA,GAAAA,GAAelgF,EAAOmgF,cAC5CrwD,EAAAA,GAAAA,IAA0BvB,EAAevuB,EAAOmgF,cACpDC,EAAAA,GAAAA,IAAoB50G,GACpBosB,EAAiB,CACf9/B,QAASwL,EAAKy8G,EAAa,iBAAmB,iBAEhDrvF,GAAa,IAGThtB,GAAQtF,EAAAA,EAAAA,KAAQ,KACpB,IAAK4hC,EAAO,OACZ,MAAMx1B,EAAMu1G,EAAa,wBAA0B,qBAC7CM,EAAuBN,GACzBG,EAAAA,GAAAA,GAAelgF,EAAMmgF,cACrBrwD,EAAAA,GAAAA,IAA0BvB,EAAevuB,EAAMmgF,aACnD,OAAO78G,EAAKkH,EAAK61G,EAAqB,GACrC,CAACrgF,EAAO+/E,EAAYxxD,EAAejrD,IAEhCX,GAAcvE,EAAAA,EAAAA,KAAQ,KAC1B,IAAK4hC,EAAO,OACZ,MAAMx1B,EAAMu1G,EAAa,0BAA4B,uBAC/Cj3F,GAAO0vB,EAAAA,GAAAA,GAAiBl1C,EAA2B,IAArB08B,EAAMsgF,cACpCjmC,GAAWkmC,EAAAA,GAAAA,GAAuBvgF,EAAMm6C,OAAQn6C,EAAMq6C,SAAU/2E,EAAK4pD,MACrEszD,GAAiBD,EAAAA,GAAAA,GAAuBvgF,EAAMygF,aAAczgF,EAAMwgF,eAAgBl9G,EAAK4pD,MAE7F,OAAO5pD,EAAKkH,EAAK,CAACse,EADJ,GAAE03F,MAAmBnmC,MACL,GAC7B,CAACr6C,EAAO+/E,EAAYz8G,IAEvB,OACEK,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQZ,QAAQ0+B,GAChBzH,QAAM,EACND,iBAAkBjkB,GAAO3K,QACzBtH,QAAS09G,GAETn8G,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACL8C,UAAWuQ,GAAO8rB,YAClBh3B,UAAW7F,EAAK,SAChBkB,QAASksB,GAET/sB,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WAEbL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOzK,MACrBjG,EAAAA,GAAA7K,cAAC2/F,GAAAA,EAAuB,CACtBpkB,OAAQ0rC,EAAaznB,GAAAA,EAAeooB,QAAUpoB,GAAAA,EAAet8D,SAC7Dh7B,KAlFY,MAqFhB2C,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAO3Q,OACnBA,IAASomB,EAAAA,GAAAA,GAAWpmB,EAAO,CAAC,qBAE/BC,EAAAA,GAAA7K,cAACmqG,GAAAA,EAAkB,CACjB3nD,OAAK,EACLx3C,UAAWuQ,GAAOssG,KAClBx+G,OAAQ69B,GAAO79B,OACf24B,eAAa,EACbw6D,SAAUt1D,GAAO79B,OACjBqC,QAAS2rC,IAEXxsC,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,GAAO1R,aAClBA,IAAemnB,EAAAA,GAAAA,GAAWnnB,EAAa,CAAC,qBAE3CgB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,0CACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBU,QAASw7G,GAChD18G,EAAK,yBAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACT,UAAU,wBAAwBU,QAAS21G,GACvD72G,EAAKy8G,EAAa,uBAAyB,uBAG1C,K,4BC1HL,SAASa,GAAsB7pH,GACpC,MAAO,CAACsO,EAAqBw7G,KAC3B,MAAMp7G,GAAWC,EAAAA,EAAAA,KAAeL,IACxBq3B,KAAM2jB,GAAch7C,EAAOi7C,OAC3B5jB,KAAM/C,GAAct0B,EAAOo3B,OAC7B,eACJ+2B,EAAc,cAAEhoC,EAAa,OAAEzoB,GAC7B0C,EAAS6tD,aAKPwtD,EAAuB,UAAT/pH,EAAmBA,EAAQ8pH,GAAOE,QAAU,QAAU,SAElEC,SAAUC,GAA2B57G,EAAO4wG,SAC9C5qF,EAAWG,IAAgBs1F,IAAcz1F,SAEzCllB,EAAkBV,EAASU,gBAEjC,MAAO,CACLmsD,OAAOyD,EAAAA,EAAAA,KAAY1wD,GACnBolB,eAAwBpyB,IAAbgzB,KACLmoC,GAAiBlyD,QAAQkyD,EAAelT,OAASkT,EAAeyiD,UACtE51D,YACA1mB,YACAsnF,yBACA51F,WACA61F,aAAcn+G,EACdoD,kBACAE,gBAAiBtD,GAASwlC,EAAAA,EAAAA,KAAWljC,EAAQtC,IAASkD,iBAAc5N,EACpE8oH,mBAAoB97G,EAAO+kC,SAASg3E,MAAMD,mBAC3C,CAEL,C,wCCzBA,MAAM/tD,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAK,GAoHjD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,IAClBw7G,GAAsB,SADJx7G,EAlH4B7H,IAU1C,IAV2C,MAC/C+0D,EAAK,QACLyuD,EAAO,YACPhnF,EAAW,UACXtP,EAAS,UACT41B,EAAS,UACT1mB,EAAS,uBACTsnF,EAAsB,SACtB51F,EAAQ,gBACRllB,GACD5I,EACC,MAAM,qBACJ8jH,EAAoB,aACpBj5F,EAAY,gBACZk5F,IACE/+G,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,KACPu9G,EAAcC,EAAU,QAAU,QAClC5lE,GAAiBj2C,EAAAA,EAAAA,KAAY8D,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EAC7EuZ,IAAc2xC,EAAAA,GAAkBC,WAClCf,IAAa,KACXiuD,EAAqB,CACnBtqH,KAAM+pH,GACN,GAEN,GAEC,CAACA,EAAaO,EAAsBtnF,IAEjCwnF,GAAgBnjH,EAAAA,EAAAA,KAAQ,IACvBitB,GAAa41F,EAIX51F,EAAShhB,KAAK9P,IACnB,MAAOwI,EAAQwM,IAAaiyG,EAAAA,GAAAA,GAAqBjnH,GAEjD,OAAO0mH,EAAuBl+G,IAAS25B,KAAKntB,EAAU,IACrD+jB,OAAOhyB,SAPDi5B,GAAAA,GAQR,CAAC0mF,EAAwB51F,IAEtBo2F,GAAqBv8G,EAAAA,EAAAA,KAAapN,IACtCswB,EAAa,CAAErlB,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAAK,GAC9D,CAAC6tB,IAEEs5F,GAAkBx8G,EAAAA,EAAAA,KAAY,CAACqK,EAAmBxM,KACtDu+G,EAAgB,CAAEv+G,SAAQwM,aAAY,GACrC,CAAC+xG,IA2CEK,GAAoBhhB,EAAAA,GAAAA,GAAkB,CAAC5mE,GAAc82D,EAAAA,OAA+BpmE,EAE1F,OACE9mB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,UAAU,8CACVu4C,MAAOslE,EAAoBJ,OAAgBlpH,EAC3CikD,WAAYnB,EACZkZ,YAAU,IAERstD,GAAqBh+G,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAC9Bm/D,KAAuBt2F,GAAgC,IAApBA,EAASl0B,SAC3CwM,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CACXp2G,KAAMlI,EAAK,6BACXX,YAAaW,EAAK,0CAGrBq+G,GAAqBt2F,GAAYA,EAASl0B,OAAS,GAzDjDoqH,EAAcl3G,KAAI,CAACvS,EAAS+C,KACjC,MACMgnH,EADoB,IAAVhnH,IAEXinH,EAAAA,GAAAA,IAAYhqH,EAAQgxB,SAAUg5F,EAAAA,GAAAA,IAAYP,EAAc1mH,EAAQ,GAAGiuB,MAElE9xB,GAAQ+qH,EAAAA,EAAAA,KAA4BjqH,GAC1C,OACE6L,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG6lF,GACCl+G,EAAAA,GAAA7K,cAAA,KACEgL,UAAU,kBACV0G,IAAK1S,EAAQgxB,KACb/b,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,IAEzB2pH,EAAAA,GAAAA,IAAmB1+G,EAAM,IAAI4e,KAAoB,IAAfpqB,EAAQgxB,QAG/CnlB,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,sBACV0G,IAAK1S,EAAQyC,IAEboJ,EAAAA,GAAA7K,cAACmpH,GAAAA,GAAK,CACJz3G,IAAK1S,EAAQyC,GACb+3D,MAAOA,EACPx6D,QAASA,EACTc,OAAQspH,EAAAA,GAAYC,OACpBz4F,aAAa04F,EAAAA,GAAAA,GAAc9+G,EAAMxL,EAASuoD,EAAW1mB,GACrD7Q,KAAMhxB,EAAQgxB,KACdhlB,UAAU,cACV8Y,OAAQ8kG,EACRW,YAAaZ,EACbxqF,aAAcopB,EAAUvoD,EAAQiL,SAASkD,cAAgBnO,EAAQmO,YACjEmC,eAAeC,EAAAA,EAAAA,KAAiBlC,EAAiBnP,MAGpD,KAwBD,K,gBC5IV,MAwBA,GAvBE8iC,IAGA,MAAMwoF,GAAY5iH,EAAAA,EAAAA,IAAuB,MAEnCmc,GAAgB3W,EAAAA,EAAAA,KAAa9B,IACnB,UAAVA,EAAEoH,KACY83G,EAAUziH,UAAYrI,SAAS+qH,eAG/CzoF,GACF,GACC,CAACA,IAQJ,OANAj5B,EAAAA,EAAAA,KAAU,KACRM,OAAOsL,iBAAiB,UAAWoP,GAAe,GAE3C,IAAM1a,OAAOuL,oBAAoB,UAAWmP,GAAe,KACjE,CAACA,IAEGymG,CAAS,E,4BCmBlB,MAgHA,IAAergH,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMqgB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAOhC,MAAO,CACLsmB,OACAgf,MARWC,EAAAA,EAAAA,KAAWjjC,EAAQtC,GAS9Bm6B,UAReslF,EAAAA,EAAAA,KAAmBn9G,EAAQtC,GAS1CgS,QARcsU,GACZo5F,EAAAA,EAAAA,KAAkBp5F,GAAMq5F,EAAAA,EAAAA,KAAqBr9G,IAASs9G,EAAAA,EAAAA,KAAuBt9G,SAC7EhN,EAOFuqH,gBAAiBthH,QAAQ+D,EAAOw9G,YAAYj5E,YAAYzyC,QACzD,GAfeiO,EAhHoC7H,IAUlD,IAVmD,OACvDwF,EAAM,aACN+/G,EAAY,KACZz5F,EAAI,KACJgf,EAAI,SACJnL,EAAQ,QACRnoB,EAAO,gBACP6tG,EAAe,kBACfG,EAAiB,QACjBv+G,GACDjH,EACC,MAAM,mBAAE80D,IAAuB9vD,EAAAA,EAAAA,MACzBgvD,GAAUhuD,EAAAA,EAAAA,MAETy/G,EAAiBC,EAAeC,IAAkB17G,EAAAA,EAAAA,MAClD27G,EAAuBC,EAAqBC,IAAwB77G,EAAAA,EAAAA,MACpE87G,EAA6BC,EAA2BC,IAA+Bh8G,EAAAA,EAAAA,MACvFi8G,EAAuBC,EAAqBC,IAAyBn8G,EAAAA,EAAAA,KAEtEo8G,GAAyB1+G,EAAAA,EAAAA,KAAY,KACzCq+G,IACAH,GAAqB,GACpB,CAACG,EAA2BH,IAEzBS,GAAa3+G,EAAAA,EAAAA,KAAY,KAC7Bw+G,IACAT,GAAe,GACd,CAACS,EAAqBT,IAEnBprE,GAAiBisE,EAAAA,GAAAA,GAAsB,CAC3Cz6F,OACAgf,OACAnL,WACAnoB,UACA6tG,kBACAiB,aACAD,2BACC,GAEGhpG,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC0B,EAAQzB,EAAO,IAGXghH,GAAgBjhH,EAAAA,EAAAA,IAAiBM,IACrCA,EAAE0J,kBAEF,MAAMwlD,GAAQC,EAAAA,GAAAA,KACdF,EAAmB,CACjBxJ,MAAO9lD,EACPZ,OAAQY,EACRuvD,QACA0xD,sBAAsB,GACtB,IAGE1B,EAAY2B,GAAmBrpG,GAErC,OACEjX,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,oCACVU,QAASoW,EACTi9B,eAAgBA,EAChByqE,UAAWA,IAEVn9G,EAAAA,EAAAA,KAASpC,GACRY,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQzwB,EACR+/G,aAAcA,EACdvwE,WAAS,EACT8qE,WAAW,SACX6G,kBAAmBxwF,EAAAA,GAAkBr4B,eAGvCsI,EAAAA,GAAA7K,cAACugD,GAAAA,EAAa,CACZt2C,OAAQA,EACR+/G,aAAcA,EACdzF,WAAW,SACX9qE,WAAS,EACT2xE,kBAAmBxwF,EAAAA,GAAkBr4B,eAGxC0nH,GAAqB16E,GAAM87E,gBAC1BxgH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,oBACV84F,MAAI,EACJthD,OAAK,EACLt6C,KAAK,OACLwD,QAASu/G,GAERxyD,EAAQ,YAGZkyD,GACC9/G,EAAAA,GAAA7K,cAACsrH,GAAAA,EAAa,CACZliH,OAAQ8gH,EACR5gH,QAAS8gH,EACT7gH,oBAAqBshH,EACrB5gH,OAAQA,IAGXugH,GACC3/G,EAAAA,GAAA7K,cAACurH,GAAAA,EAAe,CACdniH,OAAQihH,EACR/gH,QAASihH,EACThhH,oBAAqBmhH,EACrBzgH,OAAQA,IAGH,KCnHTqwD,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAK,GA0GjD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACxC,MAAMiuD,GAAe5tD,EAAAA,EAAAA,KAAeL,GAAQiuD,aACtCjoC,EAAWioC,EAAaC,gBAAgB/e,QAE9C,MAAO,CACL/pB,WAAYY,GAAYioC,EAAaE,gBAAgBC,QACrDpoC,WACAqoC,aAAcruD,EAAOsuD,WAAW53B,QACjC,GARiB32B,EAxG6B7H,IAK3C,IAL4C,YAChDw8B,EAAW,UACXtP,EAAS,SACTY,EAAQ,aACRqoC,GACDn2D,EACC,MAAM,qBACJu2D,EAAoB,iBACpBwwD,IACE/hH,EAAAA,EAAAA,MAGE4c,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC4D,GAAOC,EAAAA,EAAAA,MAENqwD,EAAoBC,IAAyBnxD,EAAAA,EAAAA,KAAkB,GAEhEuxD,GAAmB71D,EAAAA,EAAAA,KAAQ,KAC/B,IAAKitB,EAAU,MAAO,GACtB,MAAMk5F,EAAY,IAAItiC,IAAIvuB,GACpB8wD,EAAgBn5F,EAASiI,QAAQ/4B,IAAQgqH,EAAUhiC,IAAIhoF,KAEvDo/B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KACpC,OAAOtC,EAAAA,EAAAA,KAAkBoqF,EAAe7qF,EAAWI,EAAY,GAC9D,CAAC1O,EAAUqoC,EAAc35B,IAEtB0qF,GAAkB3hH,EAAAA,EAAAA,IAAiBvI,IACvC+pH,EAAiB,CAAE/pH,KAAImqH,sBAAsB,GAAO,IAGhDvpE,GAAiBj2C,EAAAA,EAAAA,KAAY8D,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EAC7EuZ,IAAc2xC,EAAAA,GAAkBC,WAClCf,IAAa,KACXU,GAAsB,GAE1B,GACC,IAEGC,GAA2BjxD,EAAAA,EAAAA,IAAgB,KAC/C+wD,GAAuBG,IAAUA,GAAK,IAGlC2tD,GAAoBhhB,EAAAA,GAAAA,GAAkB,CAAC5mE,GAAc82D,EAAAA,OAA+BpmE,EAE1F,OACE9mB,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,EAAcrb,UAAU,uBAChCH,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,UAAU,+BACVu4C,MAAOslE,EAAoB1tD,OAAmB57D,EAC9CikD,WAAYnB,EACZkZ,YAAU,IAERstD,GAAqBh+G,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAC9Bm/D,IAAsB1tD,GAAkB98D,QACvCwM,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CACXp2G,KAAMlI,EAAK,6BACXX,YAAaW,EAAK,0CAGrBq+G,IAAsB5nF,GAAez4B,QAAQoyD,GAAcv8D,SAC1DwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,mBACX4vD,EAAav8D,OAlEG,GAmEfwM,EAAAA,GAAA7K,cAACg2F,GAAAA,EAAI,CAAChrF,UAAU,OAAOU,QAASuvD,GAC7BzwD,EAAKswD,EAAqB,2BAA6B,6BAG3DtwD,EAAK,mBAEPowD,EAAarpD,KAAI,CAAC9P,EAAIM,KACrB,GAAK+4D,KAAsB/4D,GA1EV,GA8EjB,OACE8I,EAAAA,GAAA7K,cAAC6rH,GAAoB,CACnB5hH,OAAQxI,EACRiK,QAASigH,EACT1B,mBAAiB,GACjB,KAKTpB,GAAqB1tD,GAAkB98D,QACtCwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,mBAAmBR,EAAK,sBACrC2wD,EAAiB5pD,KAAK9P,GAEnBoJ,EAAAA,GAAA7K,cAAC6rH,GAAoB,CACnB5hH,OAAQxI,EACRiK,QAASigH,EACT1B,mBAAiB,QAOzB,KCAV,IAAe9gH,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMqgB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAChC,IAAKsmB,EACH,MAAO,CAAC,EAGV,MAAMu7F,GAAoB7R,EAAAA,EAAAA,KAAqB1pF,GACzCw7F,EAAkBD,GAAoBt8E,EAAAA,EAAAA,KAAWjjC,EAAQu/G,QAAqBvsH,EAEpF,MAAO,CACLgxB,UACIu7F,GAAqB,CAAEC,mBAC5B,GAbez/G,EAxF2B7H,IAMzC,IAN0C,QAC9CzF,EAAO,YACPiiC,EAAW,OACXh3B,EAAM,KACNsmB,EAAI,gBACJw7F,GACDtnH,EACC,MAAM,aAAE6qB,IAAiB7lB,EAAAA,EAAAA,OAEnB,SAAEkF,IAAaC,EAAAA,EAAAA,MACfo9G,GAAkBC,EAAAA,EAAAA,KAAkBjtH,QAAkDO,GAAvC2sH,EAAAA,EAAAA,KAA4BltH,GAC3EmtH,GAAevmH,EAAAA,EAAAA,IAASwmH,EAAAA,EAAAA,KAAoBptH,EAAS,UACrDqtH,EAAe7jH,SAAQ8jH,EAAAA,EAAAA,KAAqBttH,IAE5C8iB,GAAc9X,EAAAA,EAAAA,IAAgB,KAClCslB,EAAa,CAAErlB,SAAQwM,UAAWzX,EAAQyC,GAAImqH,sBAAsB,GAAO,IAGvEphH,GAAOC,EAAAA,EAAAA,KAEP++G,EAAY2B,GAAmBrpG,GAErC,IAAKyO,EACH,OAGF,MAAMQ,EAAOg7F,GAAmBx7F,EAEhC,OACE1lB,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,kCACVwS,QAAS7O,EACTjD,QAASoW,EACT0nG,UAAWA,GAEX3+G,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACLC,KAAMA,EACNo4B,gBAAiB4iE,GAAiBvjE,SAEpC39C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,QACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACkpD,GAAAA,EAAa,CACZn4B,KAAMA,EACNszF,iBAAe,EACfl7D,gBAAiBl/C,IAAW8hH,GAAiBtqH,IAAMsqH,GAAiBvjE,SAEtE39C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gBACbH,EAAAA,GAAA7K,cAACg2F,GAAAA,EAAI,CAAChrF,UAAU,SACbuhH,EAAAA,GAAAA,IAAoB/hH,EAAqB,IAAfxL,EAAQgxB,SAKzCnlB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUiJ,IAAI,QASvC,SACEzJ,EAAiBxL,EAAqBuH,EAAkB06B,EAAsBorF,GAE9E,IAAK9lH,EACH,OAAOimH,EAAAA,EAAAA,GAAqBhiH,EAAMxL,OAASO,EAAW0hC,GAGxD,MAAMwrF,GAAYC,EAAAA,EAAAA,KAAoB1tH,GAEtC,OACE6L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,iBACdH,EAAAA,GAAA7K,cAAA,OACEQ,IAAK+F,EACLif,IAAI,GACJxa,WACE+I,EAAAA,GAAAA,GAAe,uBAAwBs4G,GAAgB,QAASI,GAAa,yBAE/EpsH,WAAW,KAEZssH,EAAAA,EAAAA,KAAgB3tH,IAAY6L,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oBACzCwhH,EAAAA,EAAAA,GAAqBhiH,EAAMxL,GAAS,EAAMiiC,GAGjD,CA/Ba2rF,CAAcpiH,EAAMxL,EAASmtH,GAAgBH,EAAgB/qF,EAAaorF,MAIxE,KClDf,IAAeljH,EAAAA,EAAAA,KA5CmB1E,IAE5B,IAF6B,WACjCooH,EAAU,SAAE7rF,GACbv8B,EACC,MAAMqoH,GAAcxnH,EAAAA,EAAAA,KAAQ,IAmB9B,SAAgCunH,GAE9B,GADgBA,EAAW92B,MAAM,0BACpB,CACX,MAAM/lE,EAAO,IAAI5G,KAAKyjG,GACtB,MAAO,CAAC,CAAE78F,OAAMtd,MAAMyhD,EAAAA,GAAAA,GAAmBnkC,IAC3C,CAEA,MAAM+8F,EAAa,GACbC,EAAc,IAAI5jG,KAClB4pC,EAAcg6D,EAAYz6D,cAC1B06D,EAAaD,EAAY95D,UAAa,IAAI9pC,KAAM,GAAE4pC,KAAe65D,KAAe35D,UAClFF,EACAA,EAAc,EAElB,IAAK,IAAIlP,EAAI,EAAGA,EA3CO,EA2CeA,IAAK,CACzC,MAAM9zB,EAAO,IAAI5G,KAAM,GAAE6jG,EAAanpE,KAAK+oE,KAC3CE,EAAWl8G,KAAK,CAAEmf,OAAMtd,MAAMyhD,EAAAA,GAAAA,GAAmBnkC,IACnD,CAEA,OAAO+8F,CACT,CAvCoCG,CAAuBL,IAAa,CAACA,IACvE,OACEhiH,EAAAA,GAAA7K,cAAA,WAASgL,UAAU,6CAChB8hH,EAAYv7G,KAAIrB,IAAoB,IAAnB,KAAE8f,EAAI,KAAEtd,GAAMxC,EAC9B,OACErF,EAAAA,GAAA7K,cAAA,OACE0L,QAASA,IAAMs1B,EAAShR,GACxBhlB,UAAU,YACV0G,IAAKgB,GAEL7H,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,uBACbH,EAAAA,GAAA7K,cAAA,YAAO0S,GACH,IAGF,ICPRkzC,GAAkB,EAAIpyC,EAAAA,EAmC5B,IAAerK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAAsC,IAApC,OAAEjG,EAAM,QAAE0/C,GAASz5C,EAG1B,MAAO,CACL43C,OAHYqlE,EAAAA,EAAAA,KAAY5gH,EAAQtC,EAAQ0/C,GAIzC,GANer9C,EAjCqC7H,IAInD,IAJoD,QACxDklD,EAAO,MACP7B,EAAK,QACLp8C,GACDjH,EACC,MAAMqd,GAAc1V,EAAAA,EAAAA,KAAY,KAC9BV,EAAQi+C,EAAQ,GACf,CAACA,EAASj+C,IAEP89G,EAAY2B,GAAmBrpG,GAErC,GAAKgmC,EAIL,OACEj9C,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,oCACVU,QAASoW,EACTi3D,gBAAgB,aAChBywC,UAAWA,GAEX3+G,EAAAA,GAAA7K,cAAC4pD,GAAAA,EAAS,CACR1hD,KAAM09C,GACNkC,MAAOA,EACP98C,UAAU,aACV6+C,gBAAgB,sBAElBh/C,EAAAA,GAAA7K,cAAA,OAAKiU,IAAI,OAAOjJ,UAAU,aAAYgmB,EAAAA,GAAAA,GAAW82B,EAAMl9C,QAC9C,KCjBT0vD,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAK,GAgIjD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAQq3B,KAAM2jB,GAAch7C,EAAOi7C,OAC7B,cAAEn2B,EAAe8rF,UAAY+K,SAAUC,IAA6B57G,GACpE,eACJmuD,EAAc,cAAEhoC,EAAa,cAAE06F,EAAenjH,OAAQm+G,IACpDx7G,EAAAA,EAAAA,KAAeL,GAAQiuD,cAErB,SAAEjoC,GAAcG,GAAehgB,MAAS,CAAC,EAE/C,MAAO,CACL2e,gBACAkB,WACA41F,yBACA5gE,YACAmT,iBACA0yD,gBACAhF,eACD,GAlBe97G,EA9HkC7H,IAWhD,IAXiD,YACrDw8B,EAAW,gBACXosF,EAAe,SACf96F,EAAQ,uBACR41F,EAAsB,UACtB5gE,EAAS,eACTmT,EAAc,cACd0yD,EAAa,aACbhF,EAAY,mBACZkF,EAAkB,QAClB7xD,GACDh3D,EACC,MAAM,qBAAE8jH,EAAoB,WAAEgF,IAAe9jH,EAAAA,EAAAA,MAEvCe,GAAOC,EAAAA,EAAAA,MACP,SAAEkE,IAAaC,EAAAA,EAAAA,MAEfyzC,GAAiBj2C,EAAAA,EAAAA,KAAY8D,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EAC7EuZ,IAAc2xC,EAAAA,GAAkBC,WAClCf,IAAa,KACXiuD,EAAqB,CACnBtqH,KAAM,QACN,GAEN,GAEC,CAACgjC,IAEEusF,GAAmBphH,EAAAA,EAAAA,KACtB3K,IACM2mH,IACLmF,EAAW,CAAEtjH,OAAQm+G,EAAcl7G,SAAUzL,EAAImqH,sBAAsB,IAElEj9G,GACH8sD,IACF,GAEF,CAAC2sD,EAAcz5G,EAAU8sD,IAGrBgtD,GAAgBnjH,EAAAA,EAAAA,KAAQ,IACvBitB,GAAgC,IAApBA,EAASl0B,OAInBk0B,EACJhhB,KAAK9P,IACJ,MAAOwI,EAAQwM,IAAaiyG,EAAAA,GAAAA,GAAqBjnH,GAEjD,OAAO0mH,IAAyBl+G,IAAS25B,KAAKntB,EAAU,IAEzD+jB,OAAOhyB,SACPq5C,MAAK,CAACC,EAAGC,IAAMA,EAAE/xB,KAAO8xB,EAAE9xB,OAVpByR,GAAAA,GAWR,CAAClP,EAAU41F,IAmBRsF,EAAe/yD,IAAmBA,EAAelT,QAAUkT,EAAeyiD,WAAasL,EAAcpqH,SACrG+uH,GAAe/uH,OAErB,OACEwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,UAAU,yCACVu4C,MAAOklE,EACPjlE,WAAYnB,EACZkZ,YAAU,GAET8xD,GACCxiH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,+BACbH,EAAAA,GAAA7K,cAAC0tH,GAAW,CACVb,WAAYQ,EACZrsF,SAAUssF,KAIfG,GACC5iH,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CACXp2G,KAAMlI,EAAK,6BACXX,YAAaW,EAAK,0CAGrBhC,QAAQ4kH,GAAe/uH,SACtBwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,QACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uCAAuCiJ,IAAKzJ,EAAKqkB,MAAQ,YAAStvB,GAC7EiL,EAAK,WAEP4iH,EAAe77G,KAAK9P,GAEjBoJ,EAAAA,GAAA7K,cAAC2tH,GAAqB,CACpB1jH,OAAQm+G,EACRz+D,QAASloD,EACTiK,QAAS8hH,OAMlBhlH,QAAQigH,EAAcpqH,SACrBwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,QACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uCAAuCiJ,IAAKzJ,EAAKqkB,MAAQ,YAAStvB,GAC7EiL,EAAK,mBAEPi+G,EAAcl3G,KA/DzB,SAA4BvS,GAC1B,MAAM0T,GAAO85G,EAAAA,EAAAA,GAAqBhiH,EAAMxL,GAClCuxB,EAAOg3B,EAAUvoD,EAAQiL,QAE/B,GAAKyI,GAAS6d,EAId,OACE1lB,EAAAA,GAAA7K,cAAC4tH,GAAW,CACV3jH,OAAQjL,EAAQiL,OAChBjL,QAASA,EACTiiC,YAAaA,GAGnB,MAoDQ,K,gBClIV,MAGMq5B,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAO,GA+FnD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAQ02B,QAAS4qF,GAAethH,EAAOuhH,SACjCjtF,EAAYt0B,EAAOo3B,MAAMC,MACzB,qBAAEmqF,GAAyBxhH,EAEjC,MAAO,CACLshH,aACAhtF,YACAktF,uBACD,GAVezhH,EA7F8B7H,IAK5C,IAL6C,WACjDopH,EAAU,UACVhtF,EAAS,qBACTktF,EAAoB,QACpBtyD,GACDh3D,EACC,MAAM,aACJupH,EAAY,SAAErkF,EAAQ,uBACtBskF,EAAsB,wBAAEC,IACtBzkH,EAAAA,EAAAA,MAGE0kH,GAAcvnH,EAAAA,EAAAA,IAAuB,OAI3CmB,EAAAA,EAAAA,KAAU,KACRuyD,IAAa,KACX0zD,GAAc,GACd,GACD,CAACA,KAEJ53C,EAAAA,GAAAA,GAAoB+3C,GAAcN,GAElC,MAAM/rG,GAAc1V,EAAAA,EAAAA,KAAa3K,IAC/BkoC,EAAS,CAAEloC,KAAImqH,sBAAsB,IACrCnwD,IACAnzD,YAAW,KACT2lH,EAAuB,CAAExsH,MAAK,GAjCJ,IAkCD,GAC1B,CAACkoC,EAAUskF,EAAwBxyD,IAEhC2yD,GAAgChiH,EAAAA,EAAAA,KAAY,KAChD8hH,GAAyB,GACxB,CAACA,IAEE1jH,GAAOC,EAAAA,EAAAA,KAEb,OACEI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gCACZ6iH,GACChjH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oBAAoBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC3DsL,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKk8G,EAAanjH,UAAU,aAC9B6iH,EAAWt8G,KAAKmpB,GACf7vB,EAAAA,GAAA7K,cAAA,OACE0R,IAAKgpB,EACL1vB,UAAU,gBACVU,QAASA,IAAMoW,EAAY4Y,GAC3BzmB,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAE1BsL,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAACC,KAAM8P,EAAUnG,KACxB7vB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBAAiBgmB,EAAAA,GAAAA,IAAWg7B,EAAAA,EAAAA,KAAuBnrB,EAAUnG,KAvD/E,WA6DNqzF,GACCljH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAAA,MACEgL,WAAW+I,EAAAA,GAAAA,GACT,4CACC85G,GAAc,kBAEjB55G,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAEzBiL,EAAK,UAENK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,qBACVoF,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACN6E,UAAW7F,EAAK,SAChBkB,QAAS0iH,EACTv/F,MAAOrkB,EAAKqkB,OAEZhkB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,sBAGhB+iH,EAAqBx8G,KAAK9P,GACzBoJ,EAAAA,GAAA7K,cAAC6rH,GAAoB,CACnB5hH,OAAQxI,EACRwoH,mBAAiB,EACjBv+G,QAASoW,OAKb,KClEJw4C,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAK,GAkSjD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAAoC,IAAlC,cAAE68G,GAAe78G,EACxB,MAAQyxB,QAAS7B,GAAe70B,EAAOm3B,aAAe,CAAC,GACjD,cACJrS,EAAa,SAAE8rF,GACb5wG,EAEJ,IAAK60B,EACH,MAAO,CAAC,EAGV,MAAM,eACJs5B,EAAc,cAAE4zD,EAAa,aAAEC,EAAY,cAAE77F,IAC3C9lB,EAAAA,EAAAA,KAAeL,GAAQiuD,cACnB9e,QAAS8yE,GAAkBF,GAAiB,CAAC,GAC7C5yE,QAAS+yE,GAAmBF,GAAgB,CAAC,GAC7CrG,SAAUC,GAA2BhL,EACvC5qF,EAAWG,IAAgB27F,EAAgB,WAAa,SAAS97F,UACjE,kBAAEm8F,IAAsBC,EAAAA,EAAAA,KAAwBpiH,EAAQqiH,EAAAA,MAAiC,CAAC,EAEhG,MAAO,CACLv9F,gBACA+P,aACAqtF,iBACAD,gBACAj8F,WACA41F,yBACAztD,iBACAm0D,oBAAqBH,EACtB,GA7BepiH,EAhS2B7H,IAezC,IAf0C,cAC9C4pH,EAAa,YACbptF,EAAW,WACX4rF,EAAU,gBACVQ,EAAe,cACfh8F,EAAa,WACb+P,EAAU,eACVqtF,EAAc,cACdD,EAAa,SACbj8F,EAAQ,uBACR41F,EAAsB,eACtBztD,EAAc,oBACdm0D,EAAmB,QACnBpzD,EAAO,mBACP6xD,GACD7oH,EACC,MAAM,SACJklC,EAAQ,uBAAEskF,EAAsB,qBAAE1F,EAAoB,sBAAEuG,EAAqB,2BAAEC,IAC7EtlH,EAAAA,EAAAA,MAGEulH,GAAmBpoH,EAAAA,EAAAA,IAAuB,MAE1C4D,GAAOC,EAAAA,EAAAA,MAEP,SAAEkE,IAAaC,EAAAA,EAAAA,OACdqgH,EAAqBC,IAA0BtlH,EAAAA,EAAAA,KAAkB,IACjEulH,EAAsBC,IAA2BxlH,EAAAA,EAAAA,KAAkB,IAE1EsI,EAAAA,GAAAA,IAAc,KACRm8G,GAAeU,EAA2B,CAAC,EAAE,IAGnD,MAAM1sE,GAAiBj2C,EAAAA,EAAAA,KAAY8D,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EAC7EuZ,IAAc2xC,EAAAA,GAAkBC,WAClCf,IAAa,KACXiuD,EAAqB,CACnBtqH,KAAMowH,EAAgB,WAAa,QACnC,GAEN,GAEC,CAACptF,IAEE0qF,GAAkBv/G,EAAAA,EAAAA,KACrB3K,IACCkoC,EAAS,CAAEloC,KAAImqH,sBAAsB,IAEjCnqH,IAAO4vB,GACT48F,EAAuB,CAAExsH,OAGtBkN,GACH8sD,GACF,GAEF,CAAC9xB,EAAUtY,EAAe1iB,EAAUs/G,EAAwBxyD,IAGxD4zD,GAAwBjjH,EAAAA,EAAAA,KAAa3K,IACzCqtH,EAAsB,CAAErtH,MAAK,GAC5B,CAACqtH,IAEEP,GAAejpH,EAAAA,EAAAA,KAAQ,KAC3B,IAAK+oH,KAAmBptF,GAAgBA,EAAYquF,WAAW,MAAQruF,EAAY5iC,OAAS,GAC1F,OAAOojC,GAAAA,EAIT,MAAMZ,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KAC9B2jB,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAG9B2rF,IADiBC,EAAAA,GAAAA,IAAcC,EAAAA,MAAkB,IAChBj1F,QAAQ/4B,IAC7C,IAAK4sH,EAAe,OAAO,EAC3B,MAAM99F,EAAOg3B,EAAU9lD,GACvB,OAAO8uB,IAAQE,EAAAA,EAAAA,KAAcF,EAAK,IAE9Bm/F,GAAe5kE,EAAAA,EAAAA,KAAkBtgD,EAAM+kH,EAAiBhoE,EAAWtmB,EAAa5P,GAEtF,GAAIg9F,EAAe,OAAOqB,EAE1B,MAAMC,EAAmB,IACnBt+F,EAAgB,CAACA,GAAiB,MAClC+P,GAAc,IAOdwuF,EAAe,KAJGtuF,EAAAA,EAAAA,KACtBquF,EAAkB9uF,EAAWI,EAAa5P,EAAe7mB,EAAK,qBAK3DklH,GAGL,OAAOruF,EAAAA,GAAAA,IAAO,KACTwpB,EAAAA,GAAAA,GAAY+kE,OAAcrwH,EAAW8xB,EAAgB,CAACA,QAAiB9xB,OACvEsrD,EAAAA,GAAAA,GAAY4jE,GAAkB,KACjC,GACD,CAACxtF,EAAaz2B,EAAM6mB,EAAe+P,EAAYqtF,EAAgBJ,KAElEj4C,EAAAA,GAAAA,GAAoB44C,GAAmBT,EAAalwH,QAAUgwH,GAAe,GAE7E,MAAMC,GAAgBhpH,EAAAA,EAAAA,KAAQ,KAC5B,IAAK27B,GAAeA,EAAY5iC,OA9GO,IA8GyCmwH,EAC9E,OAAO/sF,GAAAA,EAIT,MAAM8lB,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAE9BisF,EAAcrB,EAAch0F,QAAQ/4B,IACxC,IAAK4sH,EAAe,OAAO,EAC3B,MAAM99F,EAAOg3B,EAAU9lD,GACvB,OAAO8uB,IAAQE,EAAAA,EAAAA,KAAcF,EAAK,IAGpC,OAAOs6B,EAAAA,GAAAA,GAAYglE,GAAa,EAAK,GACpC,CAACrB,EAAeH,EAAeptF,IAE5BwnF,GAAgBnjH,EAAAA,EAAAA,KAAQ,KAC5B,IAAM27B,IAAgB4rF,IAAgBt6F,GAAgC,IAApBA,EAASl0B,OACzD,OAAOojC,GAAAA,EAIT,MAAM8lB,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAEpC,OAAOrR,EACJhhB,KAAK9P,IACJ,MAAOwI,EAAQwM,IAAaiyG,EAAAA,GAAAA,GAAqBjnH,GAC3C8uB,EAAOg3B,EAAUt9C,GACvB,GAAKsmB,KACD89F,IAAkB59F,EAAAA,EAAAA,KAAcF,IAEpC,OAAO43F,IAAyBl+G,IAAS25B,KAAKntB,EAAU,IAEzD+jB,OAAOhyB,QAAQ,GACjB,CAACy4B,EAAa4rF,EAAYt6F,EAAU87F,EAAelG,IAEhD2H,GAA2B1jH,EAAAA,EAAAA,KAAY,KAC3C8iH,GAAwBD,EAAoB,GAC3C,CAACA,IAEEc,GAA4B3jH,EAAAA,EAAAA,KAAY,KAC5CgjH,GAAyBD,EAAqB,GAC7C,CAACA,IAqBE1B,EAAe/yD,IAAmBA,EAAelT,QAAUkT,EAAeyiD,WAC1EoR,EAAalwH,SAAWiwH,EAAcjwH,SAAWoqH,EAAcpqH,OAErE,OAAK4iC,GAAgB4rF,GAAewB,EAKlCxjH,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,UAAU,oCACVu4C,MAAOklE,EACPjlE,WAAYnB,EAEZ2tE,sBAAoB,EACpBz0D,YAAU,GAET8xD,GACCxiH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,+BACbH,EAAAA,GAAA7K,cAAC0tH,GAAW,CACVb,WAAYQ,EACZrsF,SAAUssF,KAIfG,GACC5iH,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CACXp2G,KAAMlI,EAAK,6BACXX,YAAaW,EAAK,0CAGrBhC,QAAQ+lH,EAAalwH,UAAYgwH,GAChCxjH,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,8BACViJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,EAC1B0S,IAAK+8G,GAEJT,EAAah9G,KAAK9P,GACjBoJ,EAAAA,GAAA7K,cAACmqG,GAAAA,EAAkB,CACjB9gG,OAAQ5H,EACRiK,QAAS2jH,EACT7yB,SAAU/6F,OAKjB+G,QAAQ+lH,EAAalwH,SACpBwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,kBAAkBiJ,IAAKzJ,EAAKqkB,MAAQ,YAAStvB,GACxDgvH,EAAalwH,OA5NK,GA6NjBwM,EAAAA,GAAA7K,cAACg2F,GAAAA,EAAI,CAAChrF,UAAU,OAAOU,QAASokH,GAC7BtlH,EAAKykH,EAAsB,2BAA6B,6BAG5DzkH,EAAK6jH,EAAgB,mBAAqB,oCAE5CE,EAAah9G,KAAI,CAAC9P,EAAIM,KACrB,GAAKktH,KAAuBltH,GApOT,GAwOnB,OACE8I,EAAAA,GAAA7K,cAAC6rH,GAAoB,CACnB5hH,OAAQxI,EACRiK,QAASigH,GACT,KAKTnjH,QAAQ8lH,EAAcjwH,SACrBwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,kBAAkBiJ,IAAKzJ,EAAKqkB,MAAQ,YAAStvB,GACxD+uH,EAAcjwH,OApPI,GAqPjBwM,EAAAA,GAAA7K,cAACg2F,GAAAA,EAAI,CAAChrF,UAAU,OAAOU,QAASqkH,GAC7BvlH,EAAK2kH,EAAuB,2BAA6B,6BAG7D3kH,EAAK,mCAEP8jH,EAAc/8G,KAAI,CAAC9P,EAAIM,KACtB,GAAKotH,KAAwBptH,GA5PV,GAgQnB,OACE8I,EAAAA,GAAA7K,cAAC6rH,GAAoB,CACnB5hH,OAAQxI,EACRuoH,cAAY,EACZt+G,QAASigH,GACT,KAKTnjH,QAAQqmH,GAAqBxwH,UAAY4iC,GACxCp2B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,kBAAkBiJ,IAAKzJ,EAAKqkB,MAAQ,YAAStvB,GACxDiL,EAAK,8BAEPqkH,EAAoBt9G,KAAK9P,GAEtBoJ,EAAAA,GAAA7K,cAAC6rH,GAAoB,CACnB5hH,OAAQxI,EACRuoH,cAAY,EACZt+G,QAASigH,OAMlBnjH,QAAQigH,EAAcpqH,SACrBwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,kBAAkBiJ,IAAKzJ,EAAKqkB,MAAQ,YAAStvB,GAAYiL,EAAK,mBAC3Ei+G,EAAcl3G,KApIvB,SAA4BvS,GAC1B,MAAMuoD,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAE9BlxB,GAAO85G,EAAAA,EAAAA,GAAqBhiH,EAAMxL,GAClCuxB,EAAOg3B,EAAUvoD,EAAQiL,QAE/B,GAAKyI,GAAS6d,EAId,OACE1lB,EAAAA,GAAA7K,cAAC4tH,GAAW,CACV3jH,OAAQjL,EAAQiL,OAChBjL,QAASA,EACTiiC,YAAaA,GAGnB,MAMSp2B,EAAAA,GAAA7K,cAACiwH,GAAc,CAACx0D,QAASA,GAgHf,K,gBC3TrB,MAAMy0D,GAAe,YAGf51D,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAK,GAqHjD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,IAClBw7G,GAAsBoI,IADJ5jH,EAnH2B7H,IASzC,IAT0C,YAC9Cw8B,EAAW,UACXtP,EAAS,UACT41B,EAAS,UACT1mB,EAAS,uBACTsnF,EAAsB,SACtB51F,EAAQ,gBACRllB,EAAe,mBACfg7G,GACD5jH,EACC,MAAM,qBACJ8jH,EAAoB,aACpBj5F,IACE7lB,EAAAA,EAAAA,MAGE4c,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC4D,GAAOC,EAAAA,EAAAA,MAEL6tF,QAAS63B,IAAgCv3B,EAAAA,GAAAA,IAAwB,CACvEC,QAASxyE,EACTkzE,WA1B0B,MA6BtBl3C,GAAiBj2C,EAAAA,EAAAA,KAAY8D,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EAC7EuZ,IAAc2xC,EAAAA,GAAkBC,WAClCf,IAAa,KACXiuD,EAAqB,CACnBtqH,KAAMiyH,IACN,GAEN,GAEC,CAACjvF,IAEEwnF,GAAgBnjH,EAAAA,EAAAA,KAAQ,IACvBitB,GAAa41F,EAIX51F,EAAShhB,KAAK9P,IACnB,MAAOwI,EAAQwM,IAAaiyG,EAAAA,GAAAA,GAAqBjnH,GAC3CzC,EAAUmpH,EAAuBl+G,IAAS25B,KAAKntB,GAErD,OAAOzX,IAAWoxH,EAAAA,EAAAA,KAAmBpxH,GAAWA,OAAUO,CAAS,IAClEi7B,OAAOhyB,SARDi5B,GAAAA,GASR,CAAC0mF,EAAwB51F,IAEtBo2F,GAAqBv8G,EAAAA,EAAAA,KAAapN,IACtCswB,EAAa,CAAErlB,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAAK,GAC9D,CAAC6tB,IAyCEu5F,GAAoBhhB,EAAAA,GAAAA,GAAkB,CAAC5mE,GAAc82D,EAAAA,OAA+BpmE,EAE1F,OACE9mB,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,EAAcrb,UAAU,uBAChCH,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,UAAU,8CACVu4C,MAAOslE,EAAoBJ,OAAgBlpH,EAC3CikD,WAAYnB,EACZkZ,YAAU,IAERstD,GAAqBh+G,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAC9Bm/D,KAAuBt2F,GAAgC,IAApBA,EAASl0B,SAC3CwM,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CACXp2G,KAAMlI,EAAK,6BACXX,YAAaW,EAAK,0CAGrBq+G,GAAqBt2F,GAAYA,EAASl0B,OAAS,GAvDjDoqH,EAAcl3G,KAAI,CAACvS,EAAS+C,KACjC,MACMgnH,EADoB,IAAVhnH,IAEXinH,EAAAA,GAAAA,IAAYhqH,EAAQgxB,SAAUg5F,EAAAA,GAAAA,IAAYP,EAAc1mH,EAAQ,GAAGiuB,MACxE,OACEnlB,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG6lF,GACCl+G,EAAAA,GAAA7K,cAAA,KACEgL,UAAU,kBACViJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,EAC1BmS,IAAK1S,EAAQgxB,OAEZk5F,EAAAA,GAAAA,IAAmB1+G,EAAM,IAAI4e,KAAoB,IAAfpqB,EAAQgxB,QAG/CnlB,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,sBACV0G,IAAK1S,EAAQyC,IAEboJ,EAAAA,GAAA7K,cAACqwH,GAAAA,EAAQ,CACP3xH,UAAU0xH,EAAAA,EAAAA,KAAmBpxH,GAC7BA,QAASA,EACTsxH,UAAQ,EACRC,SAAUvxH,EAAQgxB,KAClBwgG,SAAO,EACPjnF,QAAQ+/E,EAAAA,GAAAA,GAAc9+G,EAAMxL,EAASuoD,EAAW1mB,GAChD71B,UAAU,cACVsE,eAAeC,EAAAA,EAAAA,KAAiBlC,EAAiBrO,EAAQ4R,QAAQlS,UACjE2pH,mBAAoBA,EACpBruB,oBAAqBm2B,EACrB5G,YAAaZ,KAGhB,KAwBD,K,gBCrHV,MAAMuH,GAAe,QAGf51D,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAK,GA+GjD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,IAClBw7G,GAAsBoI,IADJ5jH,EA7G2B7H,IAQzC,IAR0C,YAC9Cw8B,EAAW,UACXtP,EAAS,UACT41B,EAAS,UACT1mB,EAAS,uBACTsnF,EAAsB,SACtB51F,EAAQ,gBACRhlB,GACD9I,EACC,MAAM,qBACJ8jH,EAAoB,aACpBj5F,IACE7lB,EAAAA,EAAAA,MAGE4c,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC4D,GAAOC,EAAAA,EAAAA,MAEL6tF,QAAS63B,IAAgCv3B,EAAAA,GAAAA,IAAwB,CACvEC,QAASxyE,EACTkzE,WAzB0B,MA4BtBl3C,GAAiBj2C,EAAAA,EAAAA,KAAY8D,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EAC7EuZ,IAAc2xC,EAAAA,GAAkBC,WAClCf,IAAa,KACXiuD,EAAqB,CACnBtqH,KAAMiyH,IACN,GAEN,GAEC,CAACjvF,IAEEwnF,GAAgBnjH,EAAAA,EAAAA,KAAQ,IACvBitB,GAAa41F,EAIX51F,EAAShhB,KAAK9P,IACnB,MAAOwI,EAAQwM,IAAaiyG,EAAAA,GAAAA,GAAqBjnH,GAEjD,OAAO0mH,EAAuBl+G,IAAS25B,KAAKntB,EAAU,IACrD+jB,OAAOhyB,SAPDi5B,GAAAA,GAQR,CAAC0mF,EAAwB51F,IAEtBo2F,GAAqBv8G,EAAAA,EAAAA,KAAapN,IACtCswB,EAAa,CAAErlB,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAAK,GAC9D,CAAC6tB,IAqCEu5F,GAAoBhhB,EAAAA,GAAAA,GAAkB,CAAC5mE,GAAc82D,EAAAA,OAA+BpmE,EAE1F,OACE9mB,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,EAAcrb,UAAU,uBAChCH,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,UAAU,8CACVu4C,MAAOslE,EAAoBJ,OAAgBlpH,EAC3CikD,WAAYnB,EACZkZ,YAAU,IAERstD,GAAqBh+G,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAC9Bm/D,KAAuBt2F,GAAgC,IAApBA,EAASl0B,SAC3CwM,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CACXp2G,KAAMlI,EAAK,6BACXX,YAAaW,EAAK,0CAGrBq+G,GAAqBt2F,GAAYA,EAASl0B,OAAS,GAnDjDoqH,EAAcl3G,KAAI,CAACvS,EAAS+C,KACjC,MACMgnH,EADoB,IAAVhnH,IAEXinH,EAAAA,GAAAA,IAAYhqH,EAAQgxB,SAAUg5F,EAAAA,GAAAA,IAAYP,EAAc1mH,EAAQ,GAAGiuB,MACxE,OACEnlB,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG6lF,GACCl+G,EAAAA,GAAA7K,cAAA,KACEgL,UAAU,kBACV0G,IAAK1S,EAAQgxB,KACb/b,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,IAEzB2pH,EAAAA,GAAAA,IAAmB1+G,EAAM,IAAI4e,KAAoB,IAAfpqB,EAAQgxB,QAG/CnlB,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,sBACViJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,EAC1BmS,IAAK1S,EAAQyC,IAEboJ,EAAAA,GAAA7K,cAACywH,GAAAA,EAAO,CACN/+G,IAAK1S,EAAQyC,GACbzC,QAASA,EACT4xB,aAAa04F,EAAAA,GAAAA,GAAc9+G,EAAMxL,EAASuoD,EAAW1mB,GACrD1zB,YAAaI,GAAmBvO,EAAQmO,YACxC6sF,oBAAqBm2B,EACrBO,eAAgB/H,KAGnB,KAwBD,K,gBC/GV,MAAMuH,GAAe,QAGf51D,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAK,GAkHjD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,IAClBw7G,GAAsBoI,IADJ5jH,EAhH4B7H,IAM1C,IAN2C,YAC/Cw8B,EAAW,UACXtP,EAAS,uBACTw2F,EAAsB,SACtB51F,EAAQ,gBACRhlB,GACD9I,EACC,MAAM,qBACJ8jH,EAAoB,gBACpBt5G,IACExF,EAAAA,EAAAA,MAGE4c,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC4D,GAAOC,EAAAA,EAAAA,MAEL6tF,QAAS63B,IAAgCv3B,EAAAA,GAAAA,IAAwB,CACvEC,QAASxyE,EACTkzE,WAvB0B,MA0BtBl3C,GAAiBj2C,EAAAA,EAAAA,KAAY8D,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EAC7EuZ,IAAc2xC,EAAAA,GAAkBC,WAClCf,IAAa,KACXiuD,EAAqB,CACnBtqH,KAAMiyH,IACN,GAEN,GAEC,CAAC3H,EAAsBtnF,IAEpBwnF,GAAgBnjH,EAAAA,EAAAA,KAAQ,IACvBitB,GAAa41F,EAIX51F,EAAShhB,KAAK9P,IACnB,MAAOwI,EAAQwM,IAAaiyG,EAAAA,GAAAA,GAAqBjnH,GAEjD,OAAO0mH,EAAuBl+G,IAAS25B,KAAKntB,EAAU,IACrD+jB,OAAOhyB,SAPDi5B,GAAAA,GAQR,CAAC0mF,EAAwB51F,IAEtBo+F,GAAoBvkH,EAAAA,EAAAA,KAAY,CAAC3K,EAAYwI,KACjDgF,EAAgB,CACdhF,SACAwM,UAAWhV,EACX3B,OAAQc,EAAAA,GAAkB2B,cAC1B,GACD,CAAC0M,IA6BE45G,GAAoBhhB,EAAAA,GAAAA,GAAkB,CAAC5mE,GAAc82D,EAAAA,OAA+BpmE,EACpFi/F,EAAc/H,GAAqBt2F,GAAYA,EAASl0B,OAAS,IAAM4iC,EACvE4vF,EAAgBhI,GAAqBt2F,GAAYA,EAASl0B,OAAS,GAAK4iC,EAExEntB,GAAaC,EAAAA,GAAAA,GACjB,+BACA88G,GAAiB,aAGnB,OACEhmH,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,EAAcrb,UAAU,yCAChCH,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,UAAW8I,EACXyvC,MAAOslE,EAAoBJ,OAAgBlpH,EAC3CuqD,aAAe7oB,EAAyB,YAAX,SAC7BuiB,WAAYnB,EACZkZ,YAAU,IAERstD,GAAqBh+G,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAC9Bm/D,KAAuBt2F,GAAgC,IAApBA,EAASl0B,SAC3CwM,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CACXp2G,KAAMlI,EAAK,6BACXX,YAAaW,EAAK,0CAGrBomH,GAlDH/lH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,aAAaiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACnDkpH,EAAcl3G,KAAKvS,GAClB6L,EAAAA,GAAA7K,cAAC8wH,GAAAA,EAAK,CACJp/G,IAAM,GAAE1S,EAAQiL,UAAUjL,EAAQyC,KAClCy2F,SAAS,eACTl5F,QAASA,EACTmO,YAAaI,GAAmBvO,EAAQmO,YACxC6sF,oBAAqBm2B,EACrBzkH,QAASilH,OA2CZE,GAnCEpI,EAAcl3G,KAAKvS,GACxB6L,EAAAA,GAAA7K,cAAC4tH,GAAW,CACVl8G,IAAK1S,EAAQyC,GACbwI,OAAQjL,EAAQiL,OAChBjL,QAASA,OAiCP,KCpGJ+xH,GAAO,CACX,CAAE9yH,KAAM+yH,EAAAA,GAAoBh2F,SAAUpwB,MAAO,uBAC7C,CAAE3M,KAAM+yH,EAAAA,GAAoBC,YAAarmH,MAAO,eAChD,CAAE3M,KAAM+yH,EAAAA,GAAoBE,QAAStmH,MAAO,WAC5C,CAAE3M,KAAM+yH,EAAAA,GAAoBF,MAAOlmH,MAAO,mBAC1C,CAAE3M,KAAM+yH,EAAAA,GAAoBG,MAAOvmH,MAAO,mBAC1C,CAAE3M,KAAM+yH,EAAAA,GAAoBI,MAAOxmH,MAAO,mBAC1C,CAAE3M,KAAM+yH,EAAAA,GAAoBK,MAAOzmH,MAAO,mBAC1C,CAAE3M,KAAM+yH,EAAAA,GAAoBM,MAAO1mH,MAAO,oBAGtC2mH,GAAY,CAChB,CAAEtzH,KAAM+yH,EAAAA,GAAoBh2F,SAAUpwB,MAAO,mBAC1CmmH,GAAKp0E,MAAM,IA8GhB,IAAexzC,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,eAAEilH,EAAc,OAAEvnH,IAAW2C,EAAAA,EAAAA,KAAeL,GAAQiuD,aAE1D,MAAO,CAAEg3D,iBAAgBvnH,SAAQ,GAJjBqC,EA3G0B7H,IAOxC,IAPyC,YAC7Cw8B,EAAW,WACX4rF,EAAU,SACVt1G,EAAQ,eACRi6G,EAAiBR,EAAAA,GAAoBh2F,SAAQ,OAC7C/wB,EAAM,QACNwxD,GACDh3D,EACC,MAAM,uBACJgtH,EAAsB,oBACtBC,IACEjoH,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MACNknH,EAAWC,IAAgBhoH,EAAAA,EAAAA,IAAS4nH,GACrCnE,GAAkB/nH,EAAAA,EAAAA,KAAQ,KAAMusH,EAAAA,GAAAA,IAAgB5wF,IAAc,CAACA,IAE/D+sC,EAAO/jE,EAASsnH,GAAYR,GAE5Be,GAAkB9nH,EAAAA,EAAAA,IAAiBjI,IACvC,MAAMmzE,EAAMlH,EAAKjsE,GACjB0vH,EAAuB,CAAE7gH,QAASskE,EAAIj3E,OACtC2zH,EAAa7vH,EAAM,IAGfgwH,GAAyB/nH,EAAAA,EAAAA,IAAiBI,IAC9CsnH,EAAoB,CAAE1hG,KAAM5lB,EAAM8oD,UAAY,KAAO,KAGvDlrC,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIV,MAAMp1C,GAAezf,EAAAA,EAAAA,IAAuB,MACtCmc,GAAgBqlC,EAAAA,GAAAA,GAA0B/hC,EAAc9O,OAAUhY,EAAW,oBAAoB,GAEvG,OACEsL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,aAAaiH,IAAKoU,EAAcijC,UAAWvmC,GACxDlY,EAAAA,GAAA7K,cAACgyH,GAAAA,EAAO,CAACL,UAAWA,EAAW3jD,KAAMA,EAAMikD,YAAaH,IACxDjnH,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTxuB,KAAMV,EAAKqkB,MAAQ,oBAAsB,iBACzCqjG,YAAalkD,EAAK3vE,OAClBs7B,UAAW63F,GAEV,MACC,OAAQA,GACN,KAAKR,EAAAA,GAAoBh2F,SACzB,KAAKg2F,EAAAA,GAAoBC,YACvB,OAAIhnH,EAEAY,EAAAA,GAAA7K,cAACmyH,GAAkB,CACjBlxF,YAAaA,EACbosF,gBAAiBA,EACjB5xD,QAASA,EACT6xD,mBAAoByE,IAKxBlnH,EAAAA,GAAA7K,cAACoyH,GAAW,CACV/D,cAAemD,IAAmBR,EAAAA,GAAoBC,YACtDhwF,YAAaA,EACb4rF,WAAYA,EACZQ,gBAAiBA,EACjB5xD,QAASA,EACT6xD,mBAAoByE,IAG1B,KAAKf,EAAAA,GAAoBF,MACvB,OAAOjmH,EAAAA,GAAA7K,cAACqyH,GAAY,CAACpxF,YAAaA,IACpC,KAAK+vF,EAAAA,GAAoBG,MACvB,OAAOtmH,EAAAA,GAAA7K,cAACsyH,GAAW,CAACrxF,YAAaA,IACnC,KAAK+vF,EAAAA,GAAoBI,MACvB,OAAOvmH,EAAAA,GAAA7K,cAACuyH,GAAW,CAACtxF,YAAaA,IACnC,KAAK+vF,EAAAA,GAAoBK,MACvB,OACExmH,EAAAA,GAAA7K,cAACwyH,GAAY,CACX9gH,IAAI,QACJuvB,YAAaA,IAGnB,KAAK+vF,EAAAA,GAAoBM,MACvB,OACEzmH,EAAAA,GAAA7K,cAACwyH,GAAY,CACX9gH,IAAI,QACJu2G,SAAO,EACPhnF,YAAaA,IAGnB,KAAK+vF,EAAAA,GAAoBE,QACvB,OACErmH,EAAAA,GAAA7K,cAACyyH,GAAa,CACZ/gH,IAAI,UACJuvB,YAAaA,IAGnB,QACE,OAEL,EAvDA,IAyDC,K,gBClJV,MAAMyxF,GAA4B,CAChChf,gBAAiB,GACjBD,SAAU,GACVO,KAAM,GACN2e,MAAO,IAGHC,GAAuDA,CAC3D35D,EACAx6D,KAEA,OAAQA,EAAOR,MACb,IAAK,qBACH,MAAO,IACFg7D,EACHy6C,gBAAiBj1G,EAAOo0H,SAG5B,IAAK,cACH,MAAO,IACF55D,EACHw6C,SAAUh1G,EAAOo0H,SAGrB,IAAK,UACH,MAAO,IACF55D,EACH+6C,KAAMv1G,EAAOo0H,SAGjB,IAAK,WACH,MAAO,IACF55D,EACH05D,MAAOl0H,EAAOo0H,SAGlB,IAAK,QACH,OAAOH,GAET,QACE,OAAOz5D,EACX,E,wCCnBF,MAwIA,IAAe9vD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CACLumH,UAAUC,EAAAA,GAAAA,GAAmBxmH,EAAQ,yBAHvBD,EAxI0C7H,IAQxD,IARyD,KAC7DuuH,EAAI,MACJ/5D,EAAK,SACLg6D,EAAQ,SACR17G,EAAQ,QACRkkD,EAAO,aACPy3D,EAAY,SACZJ,GACDruH,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,MAEP,sBAAE0oH,IAA0B1pH,EAAAA,EAAAA,OAE5B,WAAE2pH,GAAen6D,GACjB,gBAAEo6D,EAAe,kBAAEC,IAAsBhuH,EAAAA,EAAAA,KAAQ,KAAMiuH,EAAAA,GAAAA,GAAkBt6D,EAAO+5D,GAAM,IAAO,CAACA,EAAM/5D,IACpGu6D,EAAqB,aAATR,EAAsBS,GAAAA,GAAkCC,GAAAA,IAEnEC,EAAWC,IAAgBhqH,EAAAA,EAAAA,KAAS,GAErCiqH,GAAsBC,EAAAA,GAAAA,IAA8BrE,EAAAA,KACpDsE,GAA2BD,EAAAA,GAAAA,IAA8BE,EAAAA,KAEzDC,EAAsBh7D,EAAM6e,OAAOo8C,YAEzCnsH,EAAAA,EAAAA,KAAU,KACHwP,GACHq8G,GAAa,EACf,GACC,CAACr8G,IAEJ,MAAM4pB,GAAe77B,EAAAA,EAAAA,KAAQ,KAE3B,MAAMiiD,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAE9B8mB,EAAU,IAAImpE,GAAuB,MAAOE,GAA4B,IAC9E,OAAO1yF,EAAAA,GAAAA,IAAO,KACTypB,EAAAA,EAAAA,KAAkBtgD,EAAMkgD,EAASnD,EAAW6rE,IAC/C,GACD,CAACS,EAAqBE,EAA0BvpH,EAAM4oH,IAEnDnpC,GAAqBjgF,EAAAA,EAAAA,IAAiBmqH,IAC1ClB,EAAS,CACPh1H,KAAM,gBACN40H,QAASsB,IAEXP,GAAa,EAAK,IAGdroC,GAA0BvhF,EAAAA,EAAAA,IAAiBwgD,IAC/C,GAAa,aAATwoE,EAAqB,CACvB,GAAIxoE,EAAInsD,QAAUy0H,EAIhB,YAHAK,EAAsB,CACpBzmG,MAAO,uBAIXumG,EAAS,CACPh1H,KAAM,oBACN40H,QAAS,IAAK55D,EAAMm7D,eAAgBC,gBAAiB7pE,IAEzD,MACEyoE,EAAS,CACPh1H,KAAM,oBACN40H,QAAS,IAAK55D,EAAMq7D,eAAgBC,gBAAiB/pE,KAGzDopE,GAAa,EAAK,IAGdY,GAAgCxqH,EAAAA,EAAAA,IAAiBg+C,IACrD,MAAMysE,EAAsC,CAAC,EAC7CzsE,EAAKzyC,SAAS7D,IACZ+iH,EAAW/iH,IAAO,CAAI,IAItBuhH,EADW,aAATD,EACO,CACP/0H,KAAM,oBACN40H,QAAS,CACPwB,gBAAiBhB,KACdoB,IAIE,CACPx2H,KAAM,oBACN40H,QAAS,CACP0B,gBAAiBlB,KACdoB,KAITb,GAAa,EAAK,IAQpB,OALA5rG,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGLt6B,EAKHt2B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTmzF,WAAYT,OAAsB10H,EAAYi0H,EAC9ChyF,QAASL,EACTL,YAAauyF,EACbsB,mBAAoBrB,EACpB3xF,YAAayxF,EACbxxF,kBAAmBp3B,EAAK,UACxBoqH,uBAAuB,kBACvB/yF,cAAc,0BACdC,cAAY,EACZC,oBAAkB,EAClB8yF,eAAa,EACb1yF,eAAa,EACbE,cAAc,WACdJ,oBAAqBspD,EACrBupC,2BAA4BN,EAC5BtyF,eAAgB+nD,IAGlBp/E,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASuwF,EACTjoH,QAASwnH,EACT7iH,UAAW7F,EAAK,SAEhBK,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,YA7BRL,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,KA+BT,K,eCjHV,MAIaqrE,GAAiB,0CACjBC,GAAiB,8BA6U9B,IAAe7rH,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA4B,IAA1B,MAAEysD,GAAOzsD,EAChB,MAAM,QAAEu9C,GAAYx9C,EAAOi7C,OACrB,KAAE5jB,EAAI,QAAEqxF,GAAY1oH,EAAOw9G,YAC3BmL,EAAgB93E,OAAOwK,OAAOhkB,GAAMmZ,QAAO,CAAC8K,EAAK3e,IAAO2e,GAAO3e,EAAGgrF,WAAa,EAAI,IAAI,GAE7F,MAAO,CACLiB,oBAAqBprE,EAAQtO,OAC7B25E,sBAAuBrrE,EAAQI,SAC/B8qE,QAASh8D,EAAMqf,SAAY28C,EAAQh8D,EAAMqf,WAAa72C,GAAAA,OAAoBliC,EAC1E81H,eAA8B91H,IAAnB05D,EAAMqf,WAA2B10C,EAAKq1B,EAAMqf,UACvDg9C,gBAAgBvC,EAAAA,GAAAA,GAAmBxmH,EAAQ,mBAC3CgpH,cAAcxC,EAAAA,GAAAA,GAAmBxmH,EAAQ,kBACzC2oH,gBACD,GAde5oH,EA3UmC7H,IAmBjD,IAnBkD,MACtDw0D,EAAK,SACLg6D,EAAQ,mBACRuC,EAAkB,mBAClBC,EAAkB,cAClBC,EAAa,aACbC,EAAY,SACZp+G,EAAQ,QACRkkD,EAAO,UACP45D,EAAS,OACTptG,EAAM,oBACNktG,EAAmB,cACnBS,EAAa,sBACbR,EAAqB,QACrBH,EAAO,eACPK,EAAc,aACdC,EAAY,cACZL,EAAa,aACbW,GACDpxH,EACC,MAAM,oBACJqxH,EAAmB,sBACnB3C,EAAqB,iBACrBr0F,IACEr1B,EAAAA,EAAAA,MAEEssH,EAA4B,WAAf98D,EAAM+5D,KACnBgD,EAAoB/8D,EAAM6e,OAAOo8C,YAEhC+B,EAA6BC,IAAkCtsH,EAAAA,EAAAA,KAAS,IACxEusH,EAA6BC,IAAkCxsH,EAAAA,EAAAA,KAAS,IAE/E7B,EAAAA,EAAAA,KAAU,KACJstH,GACF55D,GACF,GACC,CAAC45D,EAAW55D,KAEf1zD,EAAAA,EAAAA,KAAU,KACJwP,GAAY0hD,EAAMqf,UAAYrf,EAAM6e,OAAOo8C,YAC7C4B,EAAoB,CAAEx9C,SAAUrf,EAAMqf,UACxC,GACC,CAAC/gE,EAAU0hD,EAAM6e,OAAOo8C,WAAYj7D,EAAMqf,WAE7C,MACE+6C,gBAAiBgB,EACjBf,kBAAmB+C,IACjB/wH,EAAAA,EAAAA,KAAQ,KAAMiuH,EAAAA,GAAAA,GAAkBt6D,EAAO,aAAa,CAACA,KAEvDo6D,gBAAiBkB,EACjBjB,kBAAmBgD,IACjBhxH,EAAAA,EAAAA,KAAQ,KAAMiuH,EAAAA,GAAAA,GAAkBt6D,EAAO,aAAa,CAACA,KAEzDlxD,EAAAA,EAAAA,KAAU,KACRmuH,GAA+B,GAC/BE,GAA+B,EAAM,GACpC,CAACn9D,EAAMqf,WAEV,MAAOi+C,EAAwBC,IAA0BlxH,EAAAA,EAAAA,KAAQ,KAC/D,MAAMmxH,EAAoB,IAAIttC,IAAI,IAC5BgsC,GAAuB,MACvBC,GAAyB,KAGzBsB,GAAwBC,EAAAA,GAAAA,IAAwBtC,EAAiBoC,GACjEG,GAAwBD,EAAAA,GAAAA,IAAwBpC,EAAiBkC,GAEvE,MAAO,CACLR,EACIS,EACAA,EAAsB/5E,MAAM,EA3EV,EA2EmC05E,EAAkBh4H,QAC3E83H,EACIS,EACAA,EAAsBj6E,MAAM,EA9EV,EA8EmC25E,EAAkBj4H,QAC5E,GACA,CACDk2H,EAAiBF,EAAiBgC,EAAmBC,EACrDH,EAA6BF,EAC7Bd,EAAqBC,IAGjB5qH,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,WAGF,MAAMq7D,GAAel3E,EAAAA,EAAAA,KAAa0f,IAChC,MAAM,cAAE7J,GAAkB6J,EAC1BmnG,EAAS,CAAEh1H,KAAM,WAAY40H,QAAS5wG,EAAc7X,MAAMw7D,QAAS,GAClE,CAACqtD,IAEEjwF,GAAe52B,EAAAA,EAAAA,KAAY,KAC/B6mH,EAAS,CAAEh1H,KAAM,eAAgB40H,SAAS,IAE1CgD,GAAa,KACXvtH,YAAW,KACTmzD,GAAS,GAzGM,IA0GC,GAClB,GACD,CAACw3D,EAAU4C,EAAcp6D,IAEtBo7D,GAA0BzqH,EAAAA,EAAAA,KAAY,KACrC6oH,GAQA6B,EAAAA,EAAAA,MAAqB9oF,EAAAA,EAAAA,MAAairB,EAAMqf,UAKzC48C,GAAiBK,IAAiBt8D,EAAM6e,OAAOo8C,WACjDf,EAAsB,CACpBzmG,MAAO,mBAKPuoG,EAAQ52H,OAASi3H,EACfr8D,EAAM06D,UACRkC,EAAaH,GAEbA,IAKJvC,EAAsB,CACpBzmG,MAAO,oBArBPoS,EAAiB,CAAE9/B,QAASwL,EAAK,oDAR7BurH,GACFF,EAAaH,EA6Bf,GACD,CACDT,EAASh8D,EAAMqf,SAAUrf,EAAM06D,UAAWuB,EAAeI,EAAgBS,EAAYF,EACrFH,EAAelrH,EAAM+qH,EAAct8D,EAAM6e,OAAOo8C,aAG5C6C,GAAwB3qH,EAAAA,EAAAA,KAAY,CAAC9B,EAAkC8K,KACvE6jD,EAAM06D,UACRkC,GAAa,IAAMF,EAAavgH,KAEhCugH,EAAavgH,EACf,GACC,CAACygH,EAAcF,EAAc18D,EAAM06D,YA0BtC,SAASqD,EAAYhE,GACnB,MAAMM,EAA6B,aAATN,EAAsBqD,EAAoBC,EAC9DW,EAA0B,aAATjE,EAAsBuD,EAAyBC,EAEhE5rF,EAAsB,aAATooF,EAAsBiD,EAA8BE,EAEjEe,GADsB,aAATlE,EAAsBqB,EAAkBE,GACzBl2H,OAAS44H,EAAe54H,OACpD84H,EAAwB,aAATnE,EACjB,IAAMkD,GAA+B,GACrC,IAAME,GAA+B,GAEzC,OACEvrH,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACGowF,EAAkB/hH,KAAKG,GArC9B,SAAwBA,EAAashH,GACnC,MAAMoE,EAAoB,aAATpE,EACbS,GAAAA,GAAgCljF,MAAKrgC,IAAA,IAAGjS,KAAMo5H,GAASnnH,EAAA,OAAKmnH,IAAY3lH,CAAG,IAC3EgiH,GAAAA,GAAgCnjF,MAAK/+B,IAAA,IAAGvT,KAAMo5H,GAAS7lH,EAAA,OAAK6lH,IAAY3lH,CAAG,IAE/E,GAAK0lH,EAIL,OACEvsH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAK0lH,EAASn5H,KACd+M,UAAU,kCACVoqG,QAAM,EACNx1E,UAAQ,GAER/0B,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACdmkE,WAAW,QACX9S,WAAY2lB,IAIpB,CAesCE,CAAe5lH,EAAKshH,KACnDiE,EAAe1lH,KAAK9P,GACnBoJ,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,kCACVoqG,QAAM,EACNx1E,UAAQ,IAEPvzB,EAAAA,EAAAA,KAAS5K,GACRoJ,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CAACmkE,WAAW,QAAQ7pF,OAAQj5B,IAE5CoJ,EAAAA,GAAA7K,cAACugD,GAAAA,EAAa,CAACgkE,WAAW,QAAQt6G,OAAQxI,QAI7CmpC,GAAcssF,EAAiB,GAChCrsH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAI,YACJ1G,UAAU,6BACVoqG,QAAM,EAEN1pG,QAASyrH,EACTrmH,KAAK,QAEJtG,EAAK,sBAAuB0sH,EAAgB,MAKvD,CAEA,OACErsH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4CACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BACbH,EAAAA,GAAA7K,cAACu3H,GAAAA,EAAY,CACXrvH,KAAMsvH,EAAAA,IACNj8C,OAAQikB,GAAAA,EAAei4B,WACvBj8C,KAAMl+B,OAAO2b,EAAMqf,UACnBttE,UAAU,0BAGX+qH,GACClrH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACrEiL,EAAK,sBAIVK,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRN,UAAU,OACVL,MAAOH,EAAK,kBACZJ,MAAO6uD,EAAM6e,OAAOltE,MACpBQ,SAAUk4E,EACVx2B,MAAOmM,EAAMnM,OAASmM,EAAMnM,QAAUioE,GAAiBA,QAAiBx1H,MAI1Eq2H,GACA/qH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACZiuD,EAAMnM,OAASmM,EAAMnM,QAAUkoE,IAC9BnqH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,8CAA8CiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAClFiL,EAAKyuD,EAAMnM,QAIhBjiD,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,kBAErFK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,2CACV8F,KAAK,MACLskG,QAAM,EACN1pG,QAAS8pH,GAERhrH,EAAK,mBAGPwsH,EAAY,cAIfpB,IAAkBI,GAClBnrH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,kBAErFK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,2CACV8F,KAAK,MACLskG,QAAM,EACN1pG,QAAS+pH,GAERjrH,EAAK,mBAGPwsH,EAAY,aAIjBnsH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACjEiL,EAAK,2BAGRK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,2CACV8F,KAAK,MACLskG,QAAM,EACN1pG,QAASmrH,GAERrsH,EAAK,iCAGPyqH,GAAS1jH,KAAK+8F,GACbzjG,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,6BACV8F,KAAK,OACLskG,QAAM,EACNz1E,WAAS,EACTj0B,QAASqrH,EACTv6B,SAAU8R,EAAOl5F,KAEjBvK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,QAAQiJ,IAAI,QAAQq6F,EAAO1jG,OAAS0jG,EAAOl5F,KAC3DvK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YACbR,EAAK,oCAAqC8jG,EAAO5yD,QAAQr9C,OAAQ,WAQ5EwM,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAAS56B,QAAQywD,EAAM06D,WACvB11G,SAAUg7C,EAAMtnC,UAChBjmB,QAASs3B,EACT3yB,UAA0B,SAAf4oD,EAAM+5D,KAAkB,eAAiB,iBAEnD/5D,EAAMtnC,UACL9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGb,K,gBCpVV,MACM0sH,IAAiChkH,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAO,GA+SrE,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MACEukC,WAAY6mF,EACZ/zF,KAAMg0F,EACNC,YAAaC,GACXvrH,EAAOw9G,YAEX,MAAO,CACL4N,YACAC,cACA53C,WAAWrhD,EAAAA,EAAAA,KAA2BpyB,GACtCurH,yBACAC,YAAYhF,EAAAA,GAAAA,GAAmBxmH,EAAQ,iBACxC,GAdeD,EA7SmC7H,IAUjD,IAVkD,SACtD8S,EAAQ,eACRygH,EAAc,aACdC,EAAY,QACZx8D,EAAO,UACPk8D,EAAS,YACTC,EAAW,UACX53C,EAAS,uBACT83C,EAAsB,WACtBC,GACDtzH,EACC,MAAM,2BACJyzH,EAA0B,cAC1BC,EAAa,sBACbhF,EAAqB,0BACrBl7C,EAAyB,gBACzBmgD,IACE3uH,EAAAA,EAAAA,OAEGwvD,EAAOo/D,IAAYzuH,EAAAA,EAAAA,IAAoB,CAC5C0uH,iBAAkBX,EAClBY,aAAcZ,EACda,kBAAcj5H,IAGVk5H,GAAgBplG,EAAAA,EAAAA,GAAsBskG,IAG5C5vH,EAAAA,EAAAA,KAAU,KACJ0wH,IAAkBd,GACpBU,EAAS,CACPC,iBAAkBX,EAClBY,aAAcZ,EACda,kBAAcj5H,GAElB,GACC,CAACk5H,EAAed,EAAW1+D,EAAMq/D,kBAAkBj6H,UAItD0J,EAAAA,EAAAA,KAAU,KACR2vH,IAA+B,KAC7BQ,GAA4B,GAC5B,GACD,CAACA,IAEJ,MAAMQ,GAAqBtsH,EAAAA,EAAAA,KAAY,KACjCgxC,OAAO4K,KAAK4vE,GAAav5H,QAAU05H,EAAa,EAClD5E,EAAsB,CACpBzmG,MAAO,kBAMXsrG,GAAgB,GACf,CAACJ,EAAaG,EAAYC,EAAgB7E,IAEvC3oH,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAMk9D,GAAuBC,EAAAA,GAAAA,MACvBC,GAAcvzH,EAAAA,EAAAA,KAAQ,KAC1B,GAAKqyH,EAIL,OAAIA,EAAUt5H,QAAU,EACfojC,GAAAA,EAGFk2F,EAAUpmH,KAAK9P,IACpB,MAAMq2E,EAAS8/C,EAAYn2H,GAE3B,OAAIA,IAAOguH,EAAAA,IACF,CACLhuH,KACAmJ,MAAOJ,EAAK,mBAIT,CACL/I,GAAIq2E,EAAOr2E,GACXmJ,MAAOktE,EAAOltE,MACd+kB,UAAUmpG,EAAAA,EAAAA,KAAyBtuH,EAAMstE,EAAQ6gD,EAAqB7gD,EAAOr2E,KAC7EyyH,WAAYp8C,EAAOo8C,WACpB,GACD,GACD,CAACyD,EAAWC,EAAaptH,EAAMmuH,IAE5BI,GAAoC3sH,EAAAA,EAAAA,KAAa0rE,IACjD16B,OAAO4K,KAAK4vE,GAAav5H,QAAU05H,EAAa,EAClD5E,EAAsB,CACpBzmG,MAAO,kBAMXyrG,EAAc,CAAErgD,UAAS,GACxB,CAAC8/C,EAAaG,EAAYI,EAAehF,IAEtCjgD,GAAa9mE,EAAAA,EAAAA,KAAY,CAAC4sH,EAAuCv3H,KACrE,MAAM0sB,EAAQnd,KAAKZ,MAAM4oH,EAAYryG,EA9GhB,IA+Gf5kB,EAAQk3D,EAAMq/D,kBAAkBv/F,QAAQt3B,IAAiB,EACzD82H,EAAet/D,EAAMq/D,kBAAkB99F,QAAQ89C,GAAaA,IAAa72E,IAE1E82H,IAAiBhuG,EAAAA,GAAAA,IAAUxoB,EAAQosB,EAAO,EAAGwpG,GAAWt5H,QAAU,KAIvEk6H,EAAa1uC,OAAO9nF,EAAQosB,GAAS6xD,EAAY,EAAI,GAAI,EAAGv+E,GAC5D42H,GAAUtxH,IAAO,IACZA,EACHyxH,aAAcz2H,EACdw2H,mBACC,GACF,CAACZ,GAAWt5H,OAAQ2hF,EAAW/mB,EAAMq/D,mBAElCW,GAAgB7sH,EAAAA,EAAAA,KAAY,KAChCisH,GAAUtxH,IACRqxH,EAAgB,CAAET,UAAW5wH,EAAQwxH,eAE9B,IACFxxH,EACHuxH,iBAAkBvxH,EAAQwxH,aAC1BC,kBAAcj5H,KAEhB,GACD,CAAC64H,IAEEc,GAAqB5zH,EAAAA,EAAAA,KAAQ,KACzB06E,GAAa5iC,OAAO4K,KAAK4vE,GAAav5H,OAAS05H,EAAa,GACnE,CAACH,EAAa53C,EAAW+3C,IAE5B,OACEltH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4CACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BACbH,EAAAA,GAAA7K,cAACu3H,GAAAA,EAAY,CACXrvH,KAAMsvH,EAAAA,IACNj8C,OAAQikB,GAAAA,EAAe25B,WACvBnuH,UAAU,0BAGZH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAC/CzJ,EAAK,wBAGP0uH,GACCruH,EAAAA,GAAA7K,cAACuL,EAAAA,EACD,CACEP,UAAU,iCACVQ,MAAM,UACNtD,KAAK,UACL47F,MAAI,EACJthD,OAAK,EACL92C,QAASgtH,EACT7pG,MAAOrkB,EAAKqkB,OAEZhkB,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,QACVV,EAAK,qBAKZK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,YAErFK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,8BAA8B5H,MAAQ,WA/KpC,IA+K+Cu0H,GAAWt5H,QAAU,QAClFw6H,GAAax6H,OAASw6H,EAAYtnH,KAAI,CAACumE,EAAQh0B,KAC9C,MAAMs1E,EAAYt1E,EAAIi0E,EAAa,EAC7BsB,EAAYpgE,EAAMu/D,eAAiB10E,EACnCw1E,EAnLO,IAmLOrgE,EAAMq/D,kBAAkBv/F,QAAQ++C,EAAOr2E,KAAO,GAC5Dsf,EApLO,IAoLAk4C,EAAMs/D,cAAcx/F,QAAQ++C,EAAOr2E,KAAO,GAEvD,OAAIq2E,EAAOr2E,KAAOguH,EAAAA,IAEd5kH,EAAAA,GAAA7K,cAACu5H,GAAAA,EAAS,CACR7nH,IAAKomE,EAAOr2E,GACZA,GAAIq2E,EAAOr2E,GACX0Z,OAAQ+3D,EACRsmD,UAAWP,EACX71H,MAAQ,QAAOi2H,EAAYC,EAAav4G,OACxC04G,WAAcjvH,EAAKqkB,MAAQ,OAAS,SAAxB,cACZrnB,YAAaw4E,IAAczoE,GAE3B1M,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKomE,EAAOr2E,GACZuJ,UAAU,gDACVoqG,QAAM,EACNx1E,UAAQ,EACRD,WAAS,EACTsyE,UAAQ,EACRynB,gBAAc,GAEd7uH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SACb8sE,EAAOltE,OAEVC,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAYR,EAAK,0BAOvCK,EAAAA,GAAA7K,cAACu5H,GAAAA,EAAS,CACR7nH,IAAKomE,EAAOr2E,GACZA,GAAIq2E,EAAOr2E,GACX0Z,OAAQ+3D,EACRsmD,UAAWP,EACX71H,MAAQ,QAAOi2H,EAAYC,EAAav4G,OACxC04G,WAAcjvH,EAAKqkB,MAAQ,OAAS,SAAxB,UACZrnB,WAAY4xH,IAAc7hH,GAE1B1M,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,gDACVoqG,QAAM,EACNC,cAAc,OACd11E,WAAS,EACTof,eAAgB,CACd,CACEK,QAASA,KACP64B,EAA0B,CAAEK,SAAUR,EAAOr2E,IAAK,EAEpD0P,aAAa,EACbvG,MAAOJ,EAAK,UACZsG,KAAM,WAIVpF,QAASA,KACH0tH,EACFjG,EAAsB,CACpBzmG,MAAO,kBAGTurG,EAAaL,EAAY9/C,EAAOr2E,IAClC,GAGFoJ,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,UACbgmB,EAAAA,GAAAA,GAAW8mD,EAAOltE,MAAO,CAAC,UAC1BwuH,GAAavuH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,wDAE7BH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YACb8sE,EAAOo8C,YAAcrpH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,wBAClC8sE,EAAOnoD,WAGF,IAEXkpG,IAAgBA,EAAYx6H,OAC/BwM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAAO,4BAGvDpJ,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,QAIdouE,GAA0BtvH,QAAQsvH,EAAuBz5H,SACzDwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACjEiL,EAAK,sBAGPstH,EAAuBvmH,KAAKumE,GAC3BjtE,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,OACVoqG,QAAM,EAEN1pG,QAASA,IAAMqtH,EAAkCjhD,IAEjDjtE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,UAASgmB,EAAAA,GAAAA,GAAW8mD,EAAOltE,MAAO,CAAC,WACnDC,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAY8sE,EAAOjuE,cAGrCgB,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,OACVQ,MAAM,UACNtD,KAAK,OACL47F,MAAI,EACJthD,OAAK,EACL3zB,MAAOrkB,EAAKqkB,OAEXrkB,EAAK,aAOd,KCzJV,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,SAAE+rE,EAAQ,IAAEljE,EAAG,UAAEuc,IAAc/kB,EAAAA,EAAAA,KAAeL,GAAQotH,mBAAqB,CAAC,EAC5E7hD,EAASQ,GAAWw3B,EAAAA,EAAAA,KAAiBvjG,EAAQ+rE,QAAY/4E,EACzD+uG,EAASh2B,EAAW/rE,EAAOw9G,YAAYkL,QAAQ38C,IAAW/nC,MAAMuT,GAAMA,EAAE1uC,MAAQA,SAAO7V,EAE7F,MAAO,CACL+4E,WACA1tE,MAAOktE,GAAQltE,MACfypH,gBAAiBv8C,GAAQu8C,gBACzBuF,cAAe9hD,GAAQ8hD,cACvBxkH,MACAuc,YACA+pB,QAAS4yD,GAAQ5yD,QAClB,GAdepvC,EA3JqC7H,IAUnD,IAVoD,SACxD8S,EAAQ,QACRkkD,EAAO,SACP6c,EAAQ,MACR1tE,EAAK,gBACLypH,EAAe,cACfuF,EAAa,QACbl+E,EAAO,IACPtmC,EAAG,UACHuc,GACDltB,EACC,MAAM,qBACJo1H,EAAoB,qBAAEC,EAAoB,mBAAEC,EAAkB,iBAAEj7F,IAC9Dr1B,EAAAA,EAAAA,MACEe,GAAOC,EAAAA,EAAAA,MAENkpH,EAAWC,IAAgBhqH,EAAAA,EAAAA,KAAS,IAE3Coe,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,KAGV1zD,EAAAA,EAAAA,KAAU,KACH4pB,GACHiiG,GAAa,EACf,GACC,CAACjiG,KAEJ5pB,EAAAA,EAAAA,KAAU,MACHqN,GAAOkjE,GAAY/gE,GACtBsiH,EAAqB,CAAEvhD,YACzB,GACC,CAACA,EAAU/gE,EAAUnC,IAExB,MAAM4kH,GAAehwH,EAAAA,EAAAA,IAAgB,KAC9BoL,GAAQkjE,IAEbwhD,EAAqB,CAAExhD,WAAUljE,QACjCqmD,IAAS,IAGLj6B,GAAUl8B,EAAAA,EAAAA,KAAQ,KACd+uH,GAAmB,IAAI3qC,OAAOkwC,GAAiB,KACtD,CAACvF,EAAiBuF,KAEdK,EAAal5F,IAAaz7B,EAAAA,EAAAA,KAAQ,KACvC,MAAMiH,GAASyhC,EAAAA,EAAAA,MACf,OAAOksF,EAAAA,GAAAA,IAAU14F,GAAU//B,IAAO04H,EAAAA,EAAAA,KAAsB5tH,EAAQ9K,IAAI,GACnE,CAAC+/B,KAEGV,EAAawrD,IAAkB1iF,EAAAA,EAAAA,IAAmB8xC,GAAW,IAE9D0+E,GAAmBxzH,EAAAA,EAAAA,KAAO,IAChCi8B,EAAAA,GAAAA,IAAsB3yB,IAAe,IAAbmqH,GAAQnqH,EAC1BmqH,IAAYjlH,IACdglH,EAAiBrzH,SAAU,GAExBqzH,EAAiBrzH,UACtBqzH,EAAiBrzH,SAAU,EACtBqO,EAEMsmC,GACT4wC,EAAe5wC,GAFf4wC,EAAe2tC,GAGjB,GACC,CAAC7kH,EAAK6kH,EAAav+E,IAEtB,MAAM4+E,GAAsBtwH,EAAAA,EAAAA,IAAiBvI,IAC3C,MAAM8K,GAASyhC,EAAAA,EAAAA,MACTuB,GAAOC,EAAAA,EAAAA,KAAWjjC,EAAQ9K,GAC1B8uB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQ9K,GAC5B8tC,IAAQ4+C,EAAAA,EAAAA,KAAU5+C,GACpBzQ,EAAiB,CACf9/B,QAASwL,EAAK,8CAEP+kC,EACTzQ,EAAiB,CACf9/B,QAASwL,EAAK,+CAEP+lB,IAAQE,EAAAA,EAAAA,KAAcF,GAC/BuO,EAAiB,CACf9/B,QAASwL,EAAK,wDAGhBs0B,EAAiB,CACf9/B,QAASwL,EAAK,qDAElB,IAGI+gF,GAA0BvhF,EAAAA,EAAAA,IAAiBwgD,IAC/C8hC,EAAe9hC,GACfopE,GAAa,EAAK,IAGd5wF,GAAeh5B,EAAAA,EAAAA,IAAgB,KAC9BsuE,GAAaljE,GAAQu+G,GAC1BoG,EAAmB,CAAEzhD,WAAU58B,QAAS5a,EAAa1rB,OAAM,IAGvDmlH,EAAaz5F,EAAYziC,OACzBmJ,GAAc+yH,GAAc5oG,EAElC,OACE9mB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uEACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BACbH,EAAAA,GAAA7K,cAACu3H,GAAAA,EAAY,CACXrvH,KAAMsvH,EAAAA,IACNj8C,OAAQikB,GAAAA,EAAeg7B,aACvBxvH,UAAU,0BAGZH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,SAC/C+c,EAAAA,GAAAA,GAAWxmB,EAAK,4CAA6C,CAACI,EAAO2vH,IACpE,CAAC,sBAIP1vH,EAAAA,GAAA7K,cAACkuG,GAAAA,EAAS,CACRljG,UAAU,gBACV28E,KAAOvyE,GAAM5K,EAAK,WAClBiwH,WAAS,EACTC,SAAUV,EACVxyH,YAAa+yH,GAAc5G,IAG7B9oH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sCACbH,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTC,QAASA,EACTm5F,oBAAqB55F,EACrBkB,oBAAqBspD,EACrBzqD,YAAaA,EACb6nD,gBAAiB2xC,EACjBn4F,eAAa,EACbC,YAAU,EACVC,cAAc,cAIlBx3B,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASzR,GAAagiG,EACtB11G,SAAUzW,EACVkE,QAASs3B,EACT3yB,UAAU,gBAETshB,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGb,KCmCV,IAAe7B,EAAAA,EAAAA,KAxMuB1E,IAQhC,IARiC,cACrCm2H,EAAa,YACbC,EAAW,MACX5hE,EAAK,SACLg6D,EAAQ,SACR17G,EAAQ,eACRujH,EAAc,QACdr/D,GACDh3D,EACC,MAAM,yBACJs2H,EAAwB,eACxBC,EAAc,cACd7C,IACE1uH,EAAAA,EAAAA,MAEEwxH,GAAc7uH,EAAAA,EAAAA,KAAY,KAE5BwuH,IAAkBM,EAAAA,GAAgBC,qBAC/BP,IAAkBM,EAAAA,GAAgBE,mBAClCR,IAAkBM,EAAAA,GAAgBG,+BAClCT,IAAkBM,EAAAA,GAAgBI,0BAErChzH,YAAW,KACT2qH,EAAS,CAAEh1H,KAAM,SAAU,GAnCP,KAwCtB28H,IAAkBM,EAAAA,GAAgBK,sBAC/BX,IAAkBM,EAAAA,GAAgBM,qBAUvC//D,IARqB,WAAfxC,EAAM+5D,KACR8H,EAAeI,EAAAA,GAAgBC,qBAE/BL,EAAeI,EAAAA,GAAgBE,kBAK1B,GACR,CACDniE,EAAM+5D,KAAMC,EACZ2H,EAAen/D,EAASq/D,IAGpB/E,EAA4B,WAAf98D,EAAM+5D,KAEnByI,GAAYrvH,EAAAA,EAAAA,KAAasvH,IAC7B,MAAM,MAAE9wH,GAAU8wH,EAAS5jD,OAE3B,IAAKltE,EAEH,OADAqoH,EAAS,CAAEh1H,KAAM,WAAY40H,QAASkC,MAC/B,EAGT,MACE1B,gBAAiBgB,EACjBf,kBAAmB+C,IACjB9C,EAAAA,GAAAA,GAAkBmI,EAAU,YAEhC,OAAKrH,EAAgBh2H,QAAW++C,OAAO4K,KAAKquE,GAAmBh4H,QAK1D03H,EAGHoC,EAAc,CAAErgD,OAAQ4jD,EAAS5jD,SAFjCkjD,EAAe,CAAEv5H,GAAIi6H,EAASpjD,SAAWqjD,aAAcD,EAAS5jD,SAKlEm7C,EAAS,CAAEh1H,KAAM,WAAY40H,aAAStzH,IACtC0zH,EAAS,CAAEh1H,KAAM,eAAgB40H,SAAS,KAEnC,IAbLI,EAAS,CAAEh1H,KAAM,WAAY40H,QAASmC,MAC/B,EAYE,GACV,CAAC/B,EAAU8C,IAER6F,GAAmBxvH,EAAAA,EAAAA,KAAamuD,IAC/BkhE,EAAUxiE,IAGfsB,KAAM,GACL,CAACkhE,EAAWxiE,IAET4iE,GAAmBzvH,EAAAA,EAAAA,KAAY,KACnC,MAAMsvH,EAAWzI,EAAS,CAAEh1H,KAAM,gBAClCg9H,IACAQ,EAAUC,EAAS,GAClB,CAACzI,EAAUgI,EAAaQ,IAErB/C,GAAqBtsH,EAAAA,EAAAA,KAAY,KACrC6mH,EAAS,CAAEh1H,KAAM,UACjB68H,EAAeI,EAAAA,GAAgBC,oBAAoB,GAClD,CAACL,EAAgB7H,IAEd6I,GAAmB1vH,EAAAA,EAAAA,KAAa0rE,IACpCm7C,EAAS,CAAEh1H,KAAM,aAAc40H,QAAS/6C,IACxCgjD,EAAeI,EAAAA,GAAgBE,kBAAkB,GAChD,CAACnI,EAAU6H,IAERiB,GAAyB3vH,EAAAA,EAAAA,KAAY,KACzC6mH,EAAS,CAAEh1H,KAAM,uBACjB68H,EAAeF,IAAkBM,EAAAA,GAAgBG,8BAC7CH,EAAAA,GAAgBc,iCAChBd,EAAAA,GAAgBK,qBAAqB,GACxC,CAACX,EAAe3H,EAAU6H,IAEvBmB,GAAyB7vH,EAAAA,EAAAA,KAAY,KACzC6mH,EAAS,CAAEh1H,KAAM,uBACjB68H,EAAeF,IAAkBM,EAAAA,GAAgBG,8BAC7CH,EAAAA,GAAgBgB,iCAChBhB,EAAAA,GAAgBM,qBAAqB,GACxC,CAACZ,EAAe3H,EAAU6H,IAEvBqB,GAAoB/vH,EAAAA,EAAAA,KAAY,KACpC2uH,EAAyB,CAAEziD,SAAUrf,EAAMqf,SAAW8jD,qBAAqB,IAC3EnJ,EAAS,CAAEh1H,KAAM,gBAAiB40H,SAAS,IAC3CiI,EAAeI,EAAAA,GAAgBV,aAAa,GAC3C,CAACvH,EAAU6H,EAAgB7hE,EAAMqf,WAE9B+jD,GAAmBjwH,EAAAA,EAAAA,KAAagJ,IACpC2lH,EAAyB,CAAEziD,SAAUrf,EAAMqf,SAAWljE,MAAKgnH,qBAAqB,IAChFtB,EAAeI,EAAAA,GAAgBV,aAAa,GAC3C,CAACM,EAAgB7hE,EAAMqf,WAE1B,OAAQsiD,GACN,KAAKM,EAAAA,GAAgBoB,QACnB,OACEzxH,EAAAA,GAAA7K,cAACu8H,GAAmB,CAClBvE,eAAgBU,EAChBT,aAAc6D,EACdvkH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBC,oBAChBD,EAAAA,GAAgBE,kBAChBF,EAAAA,GAAgBK,qBAChBL,EAAAA,GAAgBM,sBAChB95H,SAASm5H,GACXp/D,QAASA,IAGf,KAAKy/D,EAAAA,GAAgBC,oBACrB,KAAKD,EAAAA,GAAgBE,kBACrB,KAAKF,EAAAA,GAAgBG,8BACrB,KAAKH,EAAAA,GAAgBI,yBACnB,OACEzwH,EAAAA,GAAA7K,cAACw8H,GAAmB,CAClBvjE,MAAOA,EACPg6D,SAAUA,EACVuC,mBAAoBuG,EACpBtG,mBAAoBwG,EACpBvG,cAAeyG,EACfxG,aAAc0G,EACd5gE,QAASw/D,EACT1jH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBK,qBAChBL,EAAAA,GAAgBM,sBAChB95H,SAASm5H,GACXjF,cAAegF,IAAkBM,EAAAA,GAAgBI,yBACjDrzG,OAAQwzC,EACRo6D,aAAc+F,IAGpB,KAAKV,EAAAA,GAAgBK,qBACrB,KAAKL,EAAAA,GAAgBc,iCACnB,OACEnxH,EAAAA,GAAA7K,cAACy8H,GAA0B,CACzBzJ,KAAK,WACL/5D,MAAOA,EACPg6D,SAAUA,EACVx3D,QAASw/D,EACT/H,aAAc2I,EACdtkH,SAAUA,IAGhB,KAAK2jH,EAAAA,GAAgBM,qBACrB,KAAKN,EAAAA,GAAgBgB,iCACnB,OACErxH,EAAAA,GAAA7K,cAACy8H,GAA0B,CACzBzJ,KAAK,WACL/5D,MAAOA,EACPg6D,SAAUA,EACVx3D,QAASw/D,EACT/H,aAAc2I,EACdtkH,SAAUA,IAIhB,KAAK2jH,EAAAA,GAAgBV,aACnB,OACE3vH,EAAAA,GAAA7K,cAAC08H,GAAqB,CACpBnlH,SAAUA,EACVkkD,QAASw/D,IAIf,QACE,OACJ,I,2BC3MF,MAiEA,IAAe9xH,EAAAA,EAAAA,KA/D4B1E,IAYrC,IAZsC,SAC1C8S,EAAQ,QACRkkD,EAAO,MACP3O,EAAK,UACLn7B,EAAS,6BACTgrG,EAA4B,iBAC5BC,EAAgB,YAChBrzE,EAAc,mBAAkB,KAChCyqD,EAAI,YACJ9/C,EAAW,WACX6/C,EAAU,SACVliD,GACDptD,EACC,MAAOo4H,EAAiBC,IAAsBlzH,EAAAA,EAAAA,IAAiB,KACxD2pG,EAAoBC,IAAyB5pG,EAAAA,EAAAA,KAAS,GAEvDo5B,GAAe52B,EAAAA,EAAAA,KAAa2wH,IAC5BH,GAAoBG,IAAgBH,EACtCE,EApBuB,6BAsBvBjrE,EAASkrE,EACX,GACC,CAAClrE,EAAU+qE,IAERhpB,GAAmBxnG,EAAAA,EAAAA,KAAY,KAC/B2nG,GACFA,IAEF+oB,EAAmB,GAAG,GACrB,CAAC/oB,IAEEvpG,GAAOC,EAAAA,EAAAA,KAOb,OALAud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gDACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAACg9H,GAAAA,EAAc,CAACj1C,OAAK,EAACksB,kBAAmBV,KAG3C1oG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAC6zG,GAAAA,EAAY,CACX/mD,MAAO+vE,GAAmB/vE,EAC1BknD,KAAMA,EACNzqD,YAAaA,EACbozE,6BAA8BA,EAC9BzoE,YAAaA,GAAe1pD,EAAK,QACjCupG,WAAYH,EACZjiF,UAAWA,EACXsiF,kBAAmBV,EACnBW,iBAAkB38F,EAClB48F,2BAA4BX,EAC5B3hD,SAAU7uB,KAGV,IChCV,IAAe75B,EAAAA,EAAAA,KAnCuC1E,IAEhD,IAFiD,SACrD8S,EAAQ,QAAEkkD,GACXh3D,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEPwyH,GAAY7wH,EAAAA,EAAAA,KAAY,KAC5BqvD,GAAQ,EAAK,GACZ,CAACA,IAIJ,OAFAzzC,EAAAA,GAAAA,GAAe,CAAEzQ,WAAU0Q,OAAQwzC,IAGjC5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iDACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAACu3H,GAAAA,EAAY,CACXrvH,KAAMg1H,EAAAA,IACN3hD,OAAQikB,GAAAA,EAAe29B,gBACvBnyH,UAAU,0BAGZH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAAO,oBAGzDpJ,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAAO,2EAK3DpJ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACG,QAASuxH,GAAYzyH,EAAK,UAEhC,I,gBC3BV,MA0CA,IAAerB,EAAAA,EAAAA,KA1C+B1E,IAExC,IAFyC,SAC7C8S,EAAQ,QAAEkkD,EAAO,eAAEq/D,GACpBr2H,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAIb,OAFAud,EAAAA,GAAAA,GAAe,CAAEzQ,WAAU0Q,OAAQwzC,IAGjC5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iDACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAAC2/F,GAAAA,EAAuB,CACtBpkB,OAAQikB,GAAAA,EAAe49B,KACvBC,WAAYC,GACZp1H,KAAM,IACN8C,UAAU,0BAGZH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAAO,+BAK3DpJ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,OAELpF,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBqC,gCAE7C/yH,EAAK,oBAERK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,eAELpF,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBsC,kBAE7ChzH,EAAK,sBAGN,ICNV,IAAerB,EAAAA,EAAAA,KAjC6B1E,IAEtC,IAFuC,SAC3C8S,EAAQ,QAAEkkD,EAAO,QAAE9kB,GACpBlyC,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAIb,OAFAud,EAAAA,GAAAA,GAAe,CAAEzQ,WAAU0Q,OAAQwzC,IAGjC5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iDACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAAC2/F,GAAAA,EAAuB,CACtBpkB,OAAQikB,GAAAA,EAAe49B,KACvBC,WAAYC,GACZp1H,KAAMg1H,EAAAA,IACNlyH,UAAU,0BAGZH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,4BAA4BiJ,IAAI,QAAO,qIAIpDpJ,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAAO,wGAK3DpJ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACG,QAASirC,GAAUnsC,EAAK,oBAE9B,IC8KV,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IAAM,IAAuBA,EAAOkxH,YADnBnxH,EAnMgC7H,IAU9C,IAV+C,SACnDg5H,EAAQ,cACR7C,EAAa,YACbC,EAAW,MACX/tE,EAAK,SACLv1C,EAAQ,UACRoa,EAAS,eACTmpG,EAAc,cACd4C,EAAa,QACbjiE,GACDh3D,EACC,MAAM,YACJk5H,EAAW,cACXC,EAAa,iBACbC,EAAgB,mBAChBC,IACEr0H,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,KAEPszH,GAAoB3xH,EAAAA,EAAAA,KAAY,KACpCsxH,EAAc,IACd5C,EAAeI,EAAAA,GAAgB8C,oBAAoB,GAClD,CAAClD,EAAgB4C,IAEdO,GAAoB7xH,EAAAA,EAAAA,KAAahC,IACrCszH,EAActzH,GACd0wH,EAAeI,EAAAA,GAAgBgD,2BAA2B,GACzD,CAACpD,EAAgB4C,IAEdS,GAA2B/xH,EAAAA,EAAAA,KAAY,KAC3CuxH,EAAY,CAAEF,aACdC,EAAc,IACd5C,EAAeI,EAAAA,GAAgBkD,wBAAwB,GACtD,CAACtD,EAAgB4C,EAAeD,EAAUE,IAEvCU,GAA8BjyH,EAAAA,EAAAA,KAAakyH,IAC/CZ,EAAc,KACda,EAAAA,GAAAA,IAAeD,GAAiBz8C,MAAK,KACnCi5C,EAAeI,EAAAA,GAAgBsD,0BAA0B,IACxD,KACDX,EAAiB,CACf/wE,MAAOtiD,EAAK,qCACZ,GACF,GACD,CAACA,EAAMswH,EAAgB4C,EAAeG,IAEnCY,GAA0BryH,EAAAA,EAAAA,KAAahC,IAC3CszH,EAActzH,GACd0wH,EAAeI,EAAAA,GAAgBwD,8BAA8B,GAC5D,CAAC5D,EAAgB4C,IAEdiB,GAAgBvyH,EAAAA,EAAAA,KAAakyH,KACjCC,EAAAA,GAAAA,IAAeD,GAAiBz8C,MAAK,KACnC+7C,IACA9C,EAAeI,EAAAA,GAAgB0D,QAAQ,IACtC,KACDf,EAAiB,CACf/wE,MAAOtiD,EAAK,qCACZ,GACF,GACD,CAACozH,EAAepzH,EAAMswH,EAAgB+C,IAEzC,OAAQjD,GACN,KAAKM,EAAAA,GAAgB2D,iBACnB,OACEh0H,EAAAA,GAAA7K,cAAC8+H,GAAqB,CACpBnoF,QAASonF,EACTxmH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgB8C,oBAChB9C,EAAAA,GAAgBgD,2BAChBhD,EAAAA,GAAgBkD,yBAChB18H,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgB8C,oBACnB,OACEnzH,EAAAA,GAAA7K,cAAC++H,GAAoB,CACnBpC,8BAA4B,EAC5BpzE,YAAa/+C,EAAK,oBAClB0pD,YAAa1pD,EAAK,YAClBqnD,SAAUosE,EACV1mH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBgD,2BAChBhD,EAAAA,GAAgBkD,yBAChB18H,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBgD,2BACnB,OACErzH,EAAAA,GAAA7K,cAAC++H,GAAoB,CACnBpC,8BAA4B,EAC5BC,iBAAkBa,EAClBl0E,YAAa/+C,EAAK,uBAClB0pD,YAAa1pD,EAAK,YAClBmnB,UAAWA,EACXkgC,SAAUssE,EACV5mH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBkD,yBAChB18H,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBkD,wBACnB,OACEvzH,EAAAA,GAAA7K,cAACg/H,GAA+B,CAC9BznH,SAAUA,EACVkkD,QAASA,IAIf,KAAKy/D,EAAAA,GAAgB+D,gBACnB,OACEp0H,EAAAA,GAAA7K,cAACk/H,GAAuB,CACtBpE,eAAgBA,EAChBvjH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBqC,8BAChBrC,EAAAA,GAAgBsD,0BAChBtD,EAAAA,GAAgBwD,8BAChBxD,EAAAA,GAAgBkD,wBAChBlD,EAAAA,GAAgBsC,iBAChB97H,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBqC,8BACnB,OACE1yH,EAAAA,GAAA7K,cAAC++H,GAAoB,CACnBpC,8BAA4B,EAC5B7vE,MAAOA,EACPinD,WAAY+pB,EACZv0E,YAAa/+C,EAAK,0CAClBqnD,SAAUwsE,EACV9mH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBsD,0BAChBtD,EAAAA,GAAgBwD,8BAChBxD,EAAAA,GAAgBkD,yBAChB18H,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBsD,0BACnB,OACE3zH,EAAAA,GAAA7K,cAAC++H,GAAoB,CACnBpC,8BAA4B,EAC5BpzE,YAAa/+C,EAAK,+BAClBqnD,SAAU4sE,EACVlnH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBwD,8BAChBxD,EAAAA,GAAgBkD,yBAChB18H,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBwD,8BACnB,OACE7zH,EAAAA,GAAA7K,cAAC++H,GAAoB,CACnBpC,8BAA4B,EAC5BC,iBAAkBa,EAClBl0E,YAAa/+C,EAAK,kDAClBmnB,UAAWA,EACXkgC,SAAUssE,EACV5mH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBkD,yBAChB18H,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBsC,gBACnB,OACE3yH,EAAAA,GAAA7K,cAAC++H,GAAoB,CACnBpC,8BAA4B,EAC5B7vE,MAAOA,EAAQtiD,EAAKsiD,QAASvtD,EAC7Bw0G,WAAY+pB,EACZv0E,YAAa/+C,EAAK,0CAClBqnD,SAAU8sE,EACVpnH,SAAUA,EACVkkD,QAASA,IAIf,QACE,OACJ,K,eCtLF,UAAetyD,EAAAA,EAAAA,KAvBf,SAA0B1E,GAA+B,IAA9B,eAAE06H,GAA0B16H,EACrD,MAAM,iBAAEs6B,IAAqBt1B,EAAAA,EAAAA,MACvBe,GAAOC,EAAAA,EAAAA,KACP20H,GAAyBp1H,EAAAA,EAAAA,IAAgB,IAAM+0B,EAAiB,CAAEQ,eAAgB4/F,MAExF,OACEt0H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPG,YAAah1B,EAAAA,GAAA7K,cAACq/H,GAAAA,EAAQ,CAACr0H,UAAU,0BAA0B/M,KAAK,UAAUiK,KAAK,QAC/EwD,QAAS0zH,GAER50H,EAAK,2BAERK,EAAAA,GAAA7K,cAAA,KACEgL,UAAU,gDACViJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAEzBiL,EAAK,uCAId,ICRA,IAAerB,EAAAA,EAAAA,KAff,SAA4B1E,GAAsB,IAArB,MAAEkG,GAAiBlG,EAC9C,MAAM+F,GAAOC,EAAAA,EAAAA,MACP,iBAAEq0B,IAAqBr1B,EAAAA,EAAAA,MAE7B,OACEoB,EAAAA,GAAA7K,cAAA,OACEgL,UClByF,WDmBzFU,QAASA,IAAMozB,EAAiB,CAAE9/B,QAASwL,EAAK,mCAEhDK,EAAAA,GAAA7K,cAAA,YAAO2K,GACPE,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,aAAaF,UCtB8G,aDyB5I,IEuDA,IAAe7B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACjC,CACL+yH,wCAAwCC,EAAAA,EAAAA,KAAuChzH,GAC/E0wB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GACjDizH,kCAAmCjzH,EAAO+iC,WAAWkwF,qCAJrClzH,EAzDpB,SAAwB7H,GAME,IAND,SACvB8S,EAAQ,kCACRioH,EAAiC,uCACjCF,EAAsC,qBACtCriG,EAAoB,QACpBw+B,GACsBh3D,EACtB,MAAM,4BAAEg+G,IAAgCh5G,EAAAA,EAAAA,MAClCe,GAAOC,EAAAA,EAAAA,KAEPg1H,EAAYxiG,GAAwBuiG,EAEpCr0H,GAAU7F,EAAAA,EAAAA,KAAQ,IACf,CACL,CAAE8E,MAAO,YAAaO,MAAOH,EAAK,iBAClC,CACEJ,MAAO,uBACPO,MAAO80H,EACLj1H,EAAK,qCAELK,EAAAA,GAAA7K,cAAC0/H,GAAmB,CAAC/0H,MAAOH,EAAK,uCAEnCygE,QAASw0D,KAGZ,CAACj1H,EAAMi1H,IAEJn8C,GAAet5E,EAAAA,EAAAA,IAAiBk6B,IACpCu+E,EAA4B,CAAE6c,uCAAoD,yBAAZp7F,GAAqC,IAQ7G,OALAlc,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DiL,EAAK,yBAERK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,mBACLC,QAASA,EACTC,SAAUk4E,EACVj4E,SAAUi0H,EAAyC,uBAAyB,cAE9Ez0H,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mCAAmCiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACvEiL,EAAK,qCAGRi1H,GAAa50H,EAAAA,GAAA7K,cAAC2/H,GAAiB,CAACR,eAAe,oBAGvD,KC5Ee,SAASS,GAAeC,GACrC,MAAMC,EAAWD,EAAQC,SAASh3F,cAC5Bi3F,EAASF,EAAQG,YAAYl3F,cAC7Bm3F,EAAgBJ,EAAQI,cAAcn3F,cAE5C,OAAIi3F,EAAOr+H,SAAS,QACX,OAGLq+H,EAAOr+H,SAAS,YAAcq+H,EAAOr+H,SAAS,cACzC,SAELq+H,EAAOr+H,SAAS,SACX,QAELq+H,EAAOr+H,SAAS,WACX,UAELq+H,EAAOr+H,SAAS,UACX,SAELq+H,EAAOr+H,SAAS,WACX,UAELq+H,EAAOr+H,SAAS,SACX,QAELq+H,EAAOr+H,SAAS,kBACX,UAELo+H,EAASp+H,SAAS,WACb,UAGPq+H,EAAOr+H,SAAS,WACbq+H,EAAOr+H,SAAS,SAChBo+H,EAASp+H,SAAS,QAClBo+H,EAASp+H,SAAS,UAClBu+H,EAAcv+H,SAAS,SAEnB,QAELo+H,EAASp+H,SAAS,WAAau+H,EAAcv+H,SAAS,UACjD,SAELo+H,EAASp+H,SAAS,UAAYu+H,EAAcv+H,SAAS,SAChD,QAELo+H,EAASp+H,SAAS,YAAcu+H,EAAcv+H,SAAS,WAClD,UAGF,SACT,CCvDA,UAAgB,sBAAwB,WAAW,sBAAwB,WAAW,WAAa,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,kBAAoB,WAAW,gBAAkB,WAAW,kBAAoB,WAAW,gBAAkB,WAAW,mBAAqB,WAAW,iBAAmB,WAAW,iBAAmB,WAAW,eAAiB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,kBAAoB,WAAW,gBAAkB,WAAW,kBAAoB,WAAW,gBAAkB,WAAW,mBAAqB,WAAW,iBAAmB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,mBAAqB,WAAW,iBAAmB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,iBAAmB,WAAW,eAAiB,WAAW,MAAQ,WAAW,KAAO,WAAW,KAAO,WAAW,IAAM,WAAW,aAAe,WAAW,WAAa,WAAW,aAAe,YCyIrpC,IAAeyH,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAqB,CAACC,EAAM2D,KAAe,IAAb,KAAE6gG,GAAM7gG,EACxD,MAAO,CACL2vH,QAAS9uB,EAAOxkG,EAAO2zH,eAAeC,OAAOpvB,QAAQxxG,EACtD,GAHiB+M,EA5GqC7H,IAEnD,IAFoD,OACxD2E,EAAM,QAAEy2H,EAAO,QAAEv2H,GAClB7E,EACC,MAAM,sBAAE27H,EAAqB,uBAAEC,IAA2B52H,EAAAA,EAAAA,MACpDe,GAAOC,EAAAA,EAAAA,KAEP61H,GAAmBn1F,EAAAA,GAAAA,GAAiB00F,GAAS,GAE7CU,GAA+Bn0H,EAAAA,EAAAA,KAAY,KAC/Cg0H,EAAsB,CACpBrvB,KAAM8uB,EAAS9uB,KACfyvB,uBAAwBX,EAASW,uBACjC,GACD,CAACJ,EAAuBP,IAErBY,GAAyBr0H,EAAAA,EAAAA,KAAY,KACzCg0H,EAAsB,CACpBrvB,KAAM8uB,EAAS9uB,KACf2vB,iBAAkBb,EAASa,iBAC3B,GACD,CAACN,EAAuBP,IAErBc,GAA8Bv0H,EAAAA,EAAAA,KAAY,KAC9Ci0H,EAAuB,CAAEtvB,KAAM8uB,EAAS9uB,OACxCznG,GAAS,GACR,CAACA,EAASu2H,EAASQ,IAEtB,GAAKC,EAqBL,OACEz1H,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJs8B,OAjBAv8B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yBAAyBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAChEsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAAC6E,OAAK,EAAC5E,MAAM,cAActD,KAAK,UAAUmI,UAAW7F,EAAK,SAAUkB,QAASpC,GAClFuB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAeR,EAAK,yBACnCK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,SACNE,QAASi1H,EACT31H,WAAW+I,EAAAA,GAAAA,GAAe,sBAAuBwH,GAAO6vD,eAEvD5gE,EAAK,qCAQVpB,OAAQA,EACR0jE,gBAAc,EACdxjE,QAASA,EACT0B,UAAWuQ,GAAOqlH,uBAElB/1H,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GACdwH,GAAOslH,WACPP,GAAoB/kH,GAAQ,eAAcqkH,GAAeU,SAG3Dz1H,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAO3Q,MAAOqJ,IAAI,QAAQqsH,GAAkBN,aAC3Dn1H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOyU,KAAM,aAAYxlB,EAAK,8BAC3C+qF,EAAAA,GAAAA,IAAqD,IAA9B+qC,EAAiBQ,WAAmBt2H,EAAK4pD,OAGnEvpD,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAOwlH,KACpBl2H,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,uBACVK,EAAAA,GAAA7K,cAAA,UACGsgI,GAAkB9/D,QAAQ,IAAE8/D,GAAkBU,WAAW,IAAE,IAC3DV,GAAkBR,SAAS,IAAEQ,GAAkBL,eAGlDp1H,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,sBACVK,EAAAA,GAAA7K,cAAA,UAAKsgI,GAAkBW,IAEvBp2H,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,4BACVK,EAAAA,GAAA7K,cAAA,UAAKsgI,GA2Bb,SAAqBT,GACnB,MAAO,CAACA,EAAQqB,OAAQrB,EAAQz0C,SAAS5wD,OAAOhyB,SAAS0b,KAAK,KAChE,CA7BiCi9G,CAAYb,KAGvCz1H,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,GAAO6lH,MAAO52H,EAAK,0BAEjCK,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAO8lH,cAAe72H,EAAK,kCAE1CK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAACh0B,QAAS60H,GACjB11H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,GAAO+lH,YAAa92H,EAAK,iCAC1CK,EAAAA,GAAA7K,cAAC4mC,GAAAA,EAAQ,CACPnlC,GAAG,iBACHkJ,MAAM,KACNm7B,QAASw6F,EAAiBE,yBAG9B31H,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAACh0B,QAAS+0H,GACjB51H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,GAAO+lH,YAAa92H,EAAK,gCAC1CK,EAAAA,GAAA7K,cAAC4mC,GAAAA,EAAQ,CACPnlC,GAAG,eACHkJ,MAAM,KACNm7B,QAASw6F,EAAiBI,mBAGxB,KCiIZ,SAASS,GAAYtB,GACnB,MAAO,CAACA,EAAQqB,OAAQrB,EAAQz0C,SAAS5wD,OAAOhyB,SAAS0b,KAAK,KAChE,CAEA,UAAe/a,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,GAAuBA,EAAO2zH,gBADb5zH,EArOsC7H,IAMpD,IANqD,SACzD8S,EAAQ,QACRkkD,EAAO,OACP0kE,EAAM,cACNoB,EAAa,QACbC,GACD/8H,EACC,MAAM,uBACJ47H,EAAsB,2BACtBoB,EAA0B,iBAC1BC,IACEj4H,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MACNk3H,EAAiCC,EAA+BC,IAAkCnzH,EAAAA,EAAAA,MAClGozH,EAAmBC,IAAwBn4H,EAAAA,EAAAA,OAC3CwjD,EAAappB,EAAWC,IAAcv1B,EAAAA,EAAAA,KAEvCszH,GAAqB18H,EAAAA,EAAAA,KAAQ,KAGjC,QAAgB/F,IAAZiiI,EAIJ,OAAIA,GAAW,EACN,IAGLA,GAAW,GACN,KAGLA,GAAW,GACN,KAGLA,GAAW,IACN,MAGLA,EAAU,IACL,WADT,CAIgB,GACf,CAACA,IAEES,GAAyB38H,EAAAA,EAAAA,KAAQ,KACrC,MAAM6F,EAAU,CAAC,CACfR,MAAOH,EAAK,QAAS,EAAG,KACxBJ,MAAO,KACN,CACDO,MAAOH,EAAK,SAAU,EAAG,KACzBJ,MAAO,MACN,CACDO,MAAOH,EAAK,SAAU,EAAG,KACzBJ,MAAO,MACN,CACDO,MAAOH,EAAK,SAAU,EAAG,KACzBJ,MAAO,QAQT,OANIo3H,GAAWA,GAAW,KACxBr2H,EAAQ0F,KAAK,CACXlG,MAAOH,EAAK,QAAS,EAAG,KACxBJ,MAAO,QAGJe,CAAO,GACb,CAACX,EAAMg3H,IAEJb,GAA8Bv0H,EAAAA,EAAAA,KAAa2kG,IAC/CsvB,EAAuB,CAAEtvB,QAAO,GAC/B,CAACsvB,IAEE6B,GAA6B91H,EAAAA,EAAAA,KAAY,KAC7Cy1H,IACAJ,GAA4B,GAC3B,CAACI,EAAgCJ,IAE9BU,GAAyB/1H,EAAAA,EAAAA,KAAa2kG,IAC1CgxB,EAAqBhxB,GACrB/sE,GAAW,GACV,CAACA,IAEEo+F,GAA0Bh2H,EAAAA,EAAAA,KAAY,KAC1C21H,OAAqBxiI,GACrB0kC,GAAY,GACX,CAACA,IAEEo+F,GAAyBj2H,EAAAA,EAAAA,KAAahC,IAC1Cs3H,EAAiB,CAAEY,KAAMz/G,OAAOzY,IAAS,GACxC,CAACs3H,IAEEa,GAAiBj9H,EAAAA,EAAAA,KAAQ,KAC7B,MAAMk9H,EAAqBjB,EAAchxF,MAAMwgE,GAASovB,EAAOpvB,GAAM0xB,YAErE,OAAOD,EAAqBrC,EAAOqC,QAAsBjjI,CAAS,GACjE,CAAC4gI,EAAQoB,IAENmB,GAAqBp9H,EAAAA,EAAAA,KAAQ,IAC1Bi8H,EAAc/mG,QAAQu2E,IAAUovB,EAAOpvB,GAAM0xB,aACnD,CAACtC,EAAQoB,IACNoB,EAAmBn6H,QAAQk6H,EAAmBrkI,QAqGpD,OAnGA2pB,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAkGR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yDACZu3H,IAhGyB1C,EAgGc0C,EA9FxC13H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DiL,EAAK,gCAGRK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC01E,QAAM,EAACx1E,UAAQ,EAAC9uB,KAAO,UAAS8uH,GAAeC,KAAYxqC,cAAc,eACjFxqF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BAA2BiJ,IAAI,QAC5CpJ,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,QAAQiJ,IAAI,QAAQ4rH,EAAQG,aAC5Cn1H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,wBACb60H,EAAQr/D,QAAQ,IAAEq/D,EAAQmB,WAAW,KAAGnB,EAAQC,SAAS,IAAED,EAAQI,eAEtEp1H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAY60H,EAAQoB,GAAG,MAAIE,GAAYtB,MAI1D8C,GACC93H,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,2BACV8F,KAAK,OACL0M,QAAM,EACN43F,QAAM,EACN1pG,QAASk2H,GAERp3H,EAAK,2BAwEXm4H,IAjEwBC,EAiEgBF,EA/DzC73H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DiL,EAAK,kBAGPo4H,EAAcrxH,KAuBrB,SAAuBsxH,GACrB,MAAMhD,EAAUM,EAAO0C,GAEvB,OACEh4H,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKmuH,EAAQ9uB,KACbvzF,QAAM,EACN43F,QAAM,EACNr2D,eAAgB,CAAC,CACfn0C,MAAO,YACPkG,KAAM,OACNK,aAAa,EACbiuC,QAASA,KACPuhF,EAA4Bd,EAAQ9uB,KAAK,IAG7CjgG,KAAO,UAAS8uH,GAAeC,KAC/BxqC,cAAc,cACd3pF,QAASA,KAAQy2H,EAAuBtC,EAAQ9uB,KAAK,GAErDlmG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BAA2BiJ,IAAI,QAC5CpJ,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAAQuhH,EAAAA,GAAAA,IAAoB/hH,EAA2B,IAArBq1H,EAAQiB,aAC1Dj2H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAAS60H,EAAQG,aACjCn1H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,wBACb60H,EAAQr/D,QAAQ,IAAEq/D,EAAQmB,WAAW,KAAGnB,EAAQC,SAAS,IAAED,EAAQI,eAEtEp1H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAY60H,EAAQoB,GAAG,IAAEE,GAAYtB,KAI7D,MA9CIh1H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DiL,EAAK,8BAGRK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oCAAoCR,EAAK,kBACtDK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,cACLC,QAAS82H,EACT52H,SAAU22H,EACV52H,SAAUi3H,KA2CbM,GACC93H,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQu4H,EACRr4H,QAASu4H,EACTnvH,KAAMlI,EAAK,sBACXi2B,aAAcj2B,EAAK,wBACnBk2B,eAAgBwhG,EAChBvhG,sBAAoB,EACpBmiG,oBAAkB,IAGtBj4H,EAAAA,GAAA7K,cAAC4gI,GAAqB,CAACx3H,OAAQgkD,EAAa2jD,KAAM+wB,EAAmBx4H,QAAS84H,KA9ElF,IAA6BQ,EAhCC/C,CA+GtB,KC9PV,GAAgF,WCqGhF,IAAe12H,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAqB,CAACC,EAAM2D,KAA2B,IAAzB,KAAE6gG,GAAM7gG,EACxD,MAAM2vH,EAAU9uB,EAAOxkG,EAAOw2H,kBAAkB5C,OAAOpvB,QAAQxxG,EAG/D,MAAO,CACLsgI,UACAnzE,IAJUmzE,EAAUtzH,EAAOo3B,MAAMC,KAAKi8F,EAAQ9vE,YAASxwD,EAKxD,GAPiB+M,EAzEqC7H,IAKnD,IALoD,OACxD2E,EAAM,QACNy2H,EAAO,IACPnzE,EAAG,QACHpjD,GACD7E,EACC,MAAM,0BAAEu+H,IAA8Bv5H,EAAAA,EAAAA,MAChCe,GAAOC,EAAAA,EAAAA,KAEP61H,GAAmBn1F,EAAAA,GAAAA,GAAiB00F,GAAS,GAC7CoD,GAAe93F,EAAAA,GAAAA,GAAiBuhB,GAAK,GAErCi0E,GAA8Bv0H,EAAAA,EAAAA,KAAY,KAC9C42H,EAA0B,CAAEjyB,KAAM8uB,EAAS9uB,OAC3CznG,GAAS,GACR,CAACA,EAASu2H,EAASmD,IAEtB,GAAK1C,EAqBL,OACEz1H,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJs8B,OAjBAv8B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yBAAyBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAChEsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAAC6E,OAAK,EAAC5E,MAAM,cAActD,KAAK,UAAUmI,UAAW7F,EAAK,SAAUkB,QAASpC,GAClFuB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAeR,EAAK,qBACnCK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,SACNE,QAASi1H,EACT31H,WAAW+I,EAAAA,GAAAA,GAAe,sBD3DwN,aC6DjPvJ,EAAK,yBAQVpB,OAAQA,EACR0jE,gBAAc,EACdxjE,QAASA,EACT0B,UDxEiB,YC0EjBH,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL9lB,UD3EmC,WC4EnC+lB,KAAMkyG,EACN/6H,KAAK,UAEN+6H,GAAgBp4H,EAAAA,GAAA7K,cAACkpD,GAAAA,EAAa,CAACl+C,UD/EwB,WC+EC+lB,KAAMkyG,IAC/Dp4H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACb+kH,GAAkBxwE,QAGrBjlD,EAAAA,GAAA7K,cAAA,MAAIgL,UDpFuF,YCqFzFH,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,8BACVK,EAAAA,GAAA7K,cAAA,UACGsgI,GAAkB4C,SAGrBr4H,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,sBACVK,EAAAA,GAAA7K,cAAA,UAAKsgI,GAAkBW,IAEvBp2H,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,4BACVK,EAAAA,GAAA7K,cAAA,UAAKsgI,GAAkBY,SAEzBr2H,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,IAAc/Q,EAAK,mCAC3B,KCjGZ,IAAgB,OAAS,WAAW,aAAa,WAAW,UAAY,WAAW,SAAW,YC4J9F,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAE4zH,EAAM,cAAEoB,GAAkBh1H,EAAOw2H,kBACzC,MAAO,CACL5C,SACAoB,gBACD,GANej1H,EA5HsC7H,IAKpD,IALqD,SACzD8S,EAAQ,OACR4oH,EAAM,cACNoB,EAAa,QACb9lE,GACDh3D,EACC,MAAM,0BACJu+H,EAAyB,8BACzBG,IACE15H,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MACNk3H,EAAiCC,EAA+BC,IAAkCnzH,EAAAA,EAAAA,MAClG00H,EAAmBC,IAAwBz5H,EAAAA,EAAAA,OAC3CwjD,EAAappB,EAAWC,IAAcv1B,EAAAA,EAAAA,KAEvC40H,GAA2Bl3H,EAAAA,EAAAA,KAAa2kG,IAC5CiyB,EAA0B,CAAEjyB,QAAO,GAClC,CAACiyB,IAEEO,GAAyBn3H,EAAAA,EAAAA,KAAY,KACzCy1H,IACAsB,GAA+B,GAC9B,CAACtB,EAAgCsB,IAE9BhB,GAAyB/1H,EAAAA,EAAAA,KAAa2kG,IAC1CsyB,EAAqBtyB,GACrB/sE,GAAW,GACV,CAACA,IAEEw/F,GAA0Bp3H,EAAAA,EAAAA,KAAY,KAC1Ci3H,OAAqB9jI,GACrB0kC,GAAY,GACX,CAACA,IAcJ,IAAwB2+F,EA6CxB,IAxDA76H,EAAAA,EAAAA,KAAU,KACHw5H,EAAcljI,QACjBo9D,GACF,GACC,CAACA,EAAS8lE,KAEbv5G,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAgDL8lE,EAAcljI,OAEnB,OACEwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,2BACV8F,KAAK,OACL0M,QAAM,EACN43F,QAAM,EACN1pG,QAASk2H,GAERp3H,EAAK,oCAERK,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,4BAA6BwH,GAAOkoH,YAC9Dj5H,EAAK,gCA5DUo4H,EA+DJrB,EA7DhB12H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DiL,EAAK,qBAGPo4H,EAAcrxH,KAKrB,SAAuBsxH,GACrB,MAAMhD,EAAUM,EAAO0C,GACjBn2E,GAAM1e,EAAAA,EAAAA,MAAYrK,MAAMC,KAAKi8F,EAAQ9vE,OAE3C,OACEllD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKmuH,EAAQ9uB,KACbvzF,QAAM,EACN43F,QAAM,EACNr2D,eAAgB,CAAC,CACfn0C,MAAO,YACPkG,KAAM,OACNK,aAAa,EACbiuC,QAASA,KACPkkF,EAAyBzD,EAAQ9uB,KAAK,IAI1CrlG,QAASA,IAAMy2H,EAAuBtC,EAAQ9uB,OAE9ClmG,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAAC9lB,UAAWuQ,GAAOjd,OAAQyyB,KAAM27B,EAAKxkD,KAAK,SAClD2C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BAA2BiJ,IAAI,QAC5CpJ,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAAQuhH,EAAAA,GAAAA,IAAoB/hH,EAA2B,IAArBq1H,EAAQiB,aACzDp0E,GAAO7hD,EAAAA,GAAA7K,cAACkpD,GAAAA,EAAa,CAACl+C,UAAWuQ,GAAO3Q,MAAOmmB,KAAM27B,IACtD7hD,EAAAA,GAAA7K,cAAA,QAAMgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAY,QAAS,QAASwH,GAAOukH,WAClED,EAAQ/vE,OAAO,KAAG+vE,EAAQqD,QAAQ,KAAGrD,EAAQC,UAEhDj1H,EAAAA,GAAA7K,cAAA,QAAMgL,WAAW+I,EAAAA,GAAAA,GAAe,WAAYwH,GAAOoU,WAAYkwG,EAAQoB,GAAG,IAAEpB,EAAQqB,SAI5F,MAqBIr2H,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQu4H,EACRr4H,QAASu4H,EACTj3H,MAAOJ,EAAK,mCACZkI,KAAMlI,EAAK,yBACXk2B,eAAgB6iG,EAChB5iG,sBAAoB,IAEtB91B,EAAAA,GAAA7K,cAAC0jI,GAAqB,CAACt6H,OAAQgkD,EAAa2jD,KAAMqyB,EAAmB95H,QAASk6H,IAC1E,KC1DV,IAAer6H,EAAAA,EAAAA,KApEsB1E,IAM/B,IANgC,WACpCq1F,EAAU,OACV17E,EAAM,UACNpT,EAAS,oBACTgvF,EAAmB,QACnBtuF,GACDjH,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEP29F,EAAetO,GAAYne,WAAW,GAEtCgoD,GAAkB35H,EAAAA,EAAAA,IAAgB,KAClCo+F,GAAc18F,EAAQ08F,EAAa,IAGzC,GAAKtO,GAAYne,SAqCjB,OACE9wE,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,WAAW+I,EAAAA,GAAAA,GAAe,iBAAkB,iCAAkC/I,GAC9E5H,MAAQ,WAAUwgI,EAAAA,SAClBhkG,UAAWwoE,EACX18F,QAASi4H,GAtCb,WACE,GAAK7pC,EACL,OAAIA,EAAWI,eAAiBkO,EAE5Bv9F,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL8E,UAAWypF,EAAWlvF,MACtBY,MAAM,cACNqjB,MAAOrkB,EAAKqkB,OAEZhkB,EAAAA,GAAA7K,cAACyoG,GAAe,CACd3O,WAAYA,EACZ5xF,KAAM27H,EAAAA,IACNzlH,OAAQA,EACR47E,oBAAqBA,KAMzBnvF,EAAAA,GAAA7K,cAACokG,GAAa,CACZ1pB,QAAS0tB,EACTlgG,KAAM27H,EAAAA,IACNj5H,MAAOkvF,EAAWlvF,MAClBwT,OAAQA,EACR47E,oBAAqBA,EACrBgC,eAAa,EACb/+D,sBAAoB,EACpBu/D,cAAUj9F,GAIlB,CASKukI,GACDj5H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SAAS8uF,EAAWlvF,OACnCC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YAAYR,EAAK,2BAA4BsvF,EAAW3pE,MAAO,OAEvE,ICKf,IAAehnB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,KACFkhD,EAAAA,GAAAA,IAAKlhD,EAAO+kC,SAASg3E,MAAO,CAC7B,6BAEFyb,kBAAmBx3H,EAAOu4E,aAAaygB,MAAMC,OAC7Cd,gBAAiBn4F,EAAOovE,SAAS8oB,SACjCu/B,uBAAuBt+B,EAAAA,EAAAA,KAA4Bn5F,MARrCD,EA/DmC7H,IAOjD,IAPkD,SACtD8S,EAAQ,kBACRwsH,EAAiB,gBACjBr/B,EAAe,yBACfu/B,EAAwB,sBACxBD,EAAqB,QACrBvoE,GACDh3D,EACC,MAAM,eAAE0hF,EAAc,iBAAE6/B,IAAqBv8G,EAAAA,EAAAA,MACvCe,GAAOC,EAAAA,EAAAA,KAGPy5H,GAAqBt9H,EAAAA,EAAAA,IAAuB,OAC1C0xF,QAASoB,IAAiCd,EAAAA,GAAAA,IAAwB,CAAEC,QAASqrC,KAErFl8G,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAM0oE,GAAwB/3H,EAAAA,EAAAA,KAAasuE,IACzCyL,EAAe,CACbjB,eAAgBxK,EAAQwK,gBACxB,GACD,CAACiB,IAEEi+C,GAAiCh4H,EAAAA,EAAAA,KAAakoF,IAClD0xB,EAAiB,CAAEie,yBAA0B3vC,GAAW,GACvD,CAAC0xB,IAEEqe,GAAkB/+H,EAAAA,EAAAA,KAAQ,IAC9By+H,GAAqB3mF,OAAOwK,QAAO6F,EAAAA,GAAAA,IAAKi3C,EAAiBq/B,KACxD,CAACA,EAAmBr/B,IAEvB,OACE75F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACZq5H,GACCx5H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,wBACZs7B,QAASm+F,EACT7zE,QAASg0E,IAEXv5H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,OAAOiH,IAAKiyH,GACxBG,EAAgB9yH,KAAKuoF,GACpBjvF,EAAAA,GAAA7K,cAACskI,GAAc,CACb5yH,IAAKooF,EAAWr4F,GAChBq4F,WAAYA,EACZE,oBAAqBN,EACrBhuF,QAASy4H,EACT/lH,QAAS4lH,OAIfn5H,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,SAC/C+c,EAAAA,GAAAA,GAAWxmB,EAAK,gBAAiB,CAAC,YAIrC,KCoEV,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQkhD,EAAAA,GAAAA,IAAKlhD,EAAO+kC,SAASg3E,MAAO,CACjC,+BACA,iCACA,2BACA,6BACA,+BACA,iCACA,2BACA,6BACA,8BACA,gCACA,0BACA,4BACA,2BAfch8G,EA5HmC7H,IAgBjD,IAhBkD,SACtD8S,EAAQ,QACRkkD,EAAO,6BACP8oE,EAA4B,+BAC5BC,EAA8B,yBAC9BC,EAAwB,2BACxBC,EAA0B,6BAC1BC,EAA4B,+BAC5BC,EAA8B,yBAC9BC,EAAwB,2BACxBC,EAA0B,4BAC1BC,EAA2B,8BAC3BC,EAA6B,wBAC7BC,EAAuB,0BACvBC,EAAyB,sBACzBC,GACD1gI,EACC,MAAM,iBAAEuhH,IAAqBv8G,EAAAA,EAAAA,MAEvBe,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAM2pE,GAAyBh5H,EAAAA,EAAAA,KAAahC,GACnCI,EAAK,4BAA6BA,EAAK,cAAe8yC,OAAO+nF,EAAAA,IAAgCj7H,IAAS,OAC5G,CAACI,IAEE86H,GAAuBl5H,EAAAA,EAAAA,KAAahC,IACxC47G,EAAiB,CAAEmf,sBAAuBE,EAAAA,IAAgCj7H,IAAS,GAClF,CAAC47G,IAmBJ,SAASuf,EACP36H,EACA8G,EACA8zH,EACAC,EACAC,EACAC,GAEA,OACE96H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYqL,GAE3EC,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,iCACZs7B,QAAS0/F,EAGTp1E,QAAUq6B,GAAcu7B,EAAiB,CAAE,CAAE,cAAat0G,iBAAoB+4E,MAEhF5/E,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,qCACZs7B,QAAS2/F,EAETr1E,QAAUq6B,GAAcu7B,EAAiB,CAAE,CAAE,cAAat0G,mBAAsB+4E,MAElF5/E,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,mCACZs7B,QAAS4/F,EAETt1E,QAAUq6B,GAAcu7B,EAAiB,CAAE,CAAE,cAAat0G,aAAgB+4E,MAE5E5/E,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,iCACZs7B,QAAS6/F,EAETv1E,QAAUq6B,GAAcu7B,EAAiB,CAAE,CAAE,cAAat0G,eAAkB+4E,MAGrE,SAAR/4E,GAvDP,WACE,MAAMtH,EAAQi7H,EAAAA,IAAgCtsG,QAAQosG,GAEtD,OACEt6H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,QACbH,EAAAA,GAAA7K,cAACyd,GAAAA,EAAW,CACV9S,MAAOH,EAAK,2BACZsgB,IAAK,EACLT,IAAK,EACLjgB,OAAkB,IAAXA,EAAeA,EAAQ,EAC9Bw7H,YAAaR,EACbh6H,SAAUk6H,IAIlB,CAwCyBO,GAGzB,CAEA,OACEh7H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACZu6H,EACC/6H,EAAK,2BACL,QACA+5H,EACAC,EACAC,EACAC,GAEDa,EACC/6H,EAAK,2BACL,QACAm6H,EACAC,EACAC,EACAC,GAEDS,EACC,sBACA,OACAR,EACAC,EACAC,EACAC,GAEE,KC3JV,IAAgB,KAAO,WAAW,KAAO,YCqBnCY,GAAsC,CAC1C,KAAM,MAAO,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KACzD,MAAO,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MACzD,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,KAC1D,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MACzD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KACvD,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,MACvD,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KACxD,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KACvD,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,MACxD,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,KAC1D,KAAM,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,MAAO,MAC1D,MAAO,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KACzD,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,KAC1D,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,KAC1D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAC7D,MAAO,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,MAC5D,KAAM,KAAM,MAAO,MAGfC,GAAsBvf,EAAAA,IAAgChsF,QAAQhwB,GAClEs7H,GAAoCpkI,SAAS8I,KAyF/C,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,eACJy5H,GACEz5H,EAAO+kC,SAASg3E,MAEpB,MAAO,CACL0d,iBACD,GARe15H,EA/EsC7H,IAIpD,IAJqD,SACzD8S,EAAQ,eACRyuH,EAAc,QACdvqE,GACDh3D,EACC,MAAM,iBAAEuhH,IAAqBv8G,EAAAA,EAAAA,MAGvBw8H,GADOx7H,EAAAA,EAAAA,KACS2pD,MAAQ,MACvB8xE,EAAkBC,IAAuBv8H,EAAAA,EAAAA,IAAmB,KAC5Dq3B,EAAaC,IAAkBt3B,EAAAA,EAAAA,IAAiB,IAEjDw8H,GAA0C9gI,EAAAA,EAAAA,KAAQ,KACtD,MAAM6F,EAAU46H,GAAoBx0H,KAAK40G,IAOhC,CACLA,WACAM,eARsB,IAAIC,KAAKC,aAAa,CAACsf,GAAW,CAAEhoI,KAAM,aAC3B2oH,GAAGT,GAQxCU,aANoB,IAAIH,KAAKC,aAAa,CAACR,GAAW,CAAEloH,KAAM,aAC7B2oH,GAAGT,OAOrC3rF,OAAOhyB,SAAS+I,KAAIrB,IAAA,IAAC,SAAEi2G,EAAQ,eAAEM,EAAc,aAAEI,GAAc32G,EAAA,MAAM,CACtEvF,MAAO87G,EACPr8B,SAAUy8B,EACVz8G,MAAO+7G,EACR,IAED,IAAKllF,EAAY2kC,OAAQ,CACvB,MAAMygE,EAAwBl7H,EAAQolC,MAAM1K,GAAWA,EAAOz7B,QAAU67H,IAClEK,EAAkBn7H,EAAQqvB,QAAQqL,GAAWA,EAAOz7B,QAAU67H,IACpE,OAAOI,EAAwB,CAACA,KAA0BC,GAAmBn7H,CAC/E,CAEA,OAAOA,GAASqvB,QAAQqL,GAAWA,EAAOl7B,MAAMm+B,cAAcpnC,SAASu/B,EAAY6H,gBAAe,GACjG,CAACm9F,EAAUhlG,KAEd4B,EAAAA,GAAAA,IAAsBrxB,IAAkC,IAAhCsxB,EAAcyjG,GAAa/0H,EACjD,GAAIsxB,IAAiBvrB,GAAYgvH,GAAch2F,MAAM1K,GAAWA,IAAWogG,IAAW,OACtF,MAAO56H,IAAY6uH,EAAAA,GAAAA,IAAUkM,GAAsBvgG,GAAWmgG,EAAetkI,SAASmkC,EAAOz7B,SAC7F+7H,EAAoB,IAAI96H,EAASkG,KAAKs0B,GAAWA,EAAOz7B,SAAQ,GAC/D,CAACmN,EAAUyuH,EAAgBE,EAAiB7nI,OAAQ4nI,EAAUG,IAEjE,MAAM9iD,GAAet5E,EAAAA,EAAAA,IAAiBwhF,IACpC26C,EAAoB36C,GACpBw6B,EAAiB,CACfggB,eAAgBx6C,GAChB,IAQJ,OALAxjE,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOwf,KAAM,qCAC1ClwB,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAO9O,OACpC5B,EAAAA,GAAA7K,cAAC4rF,GAAU,CACT5gF,UAAWuQ,GAAOswE,OAClBtoC,MAAO6iF,EACPp9C,eAAgBk9C,EAChBp8C,uBAAwBxG,EACxB3hD,YAAaV,EACbiB,eAAgBhB,EAChBY,cAAY,EACZK,eAAa,EACbJ,oBAAkB,EAClBM,cAAc,WACdR,cAAc,wBAGd,KCwFV,IAAe14B,EAAAA,EAAAA,KAtLuB1E,IAIhC,IAJiC,OACrCwF,EAAM,UACNkqC,EAAS,eACTqyF,GACD/hI,EACC,MAAM,iBACJq6B,EAAgB,eAChB2nG,EAAc,mBACdC,EAAkB,cAClBC,EAAa,kBACbC,IACEn9H,EAAAA,EAAAA,MACEe,GAAOC,EAAAA,EAAAA,MACNo8H,EAAoBC,IAAyBl9H,EAAAA,EAAAA,MAE9Cm9H,GAAezhI,EAAAA,EAAAA,KAAQ,IAAM6uC,EAAU5iC,KAAIrB,IAAA,IAAC,SAAE82H,GAAU92H,EAAA,OAAK82H,CAAQ,KAAG,CAAC7yF,IACzE8yF,GAAmB5zG,EAAAA,EAAAA,GAAsB0zG,IAExC9tE,EAAOo/D,IAAYzuH,EAAAA,EAAAA,IAAoB,CAC5Cs9H,iBAAkBH,EAClBI,mBAAoBJ,EACpBvO,kBAAcj5H,KAIhBwI,EAAAA,EAAAA,KAAU,KACJk/H,IAAqBF,GACvB1O,EAAS,CACP6O,iBAAkBH,EAClBI,mBAAoBJ,EACpBvO,kBAAcj5H,GAElB,GACC,CAAC0nI,EAAkBF,IAEtB,MAAMK,GAAqBh7H,EAAAA,EAAAA,KAAahC,KACtCk9G,EAAAA,GAAAA,IAAqB,IAAGl9G,KACxB00B,EAAiB,CACf9/B,QAASwL,EAAK,mBACd,GACD,CAACA,EAAMs0B,IAEJuoG,GAAsBj7H,EAAAA,EAAAA,KAAasK,IACnCA,EAAK4wH,WACPd,EAAe9vH,EAAKswH,UAEpBF,EAAsBpwH,EACxB,GACC,CAAC8vH,IAEEe,GAA6Bn7H,EAAAA,EAAAA,KAAY,KAC7C06H,OAAsBvnI,EAAU,GAC/B,IAEGioI,GAAuBp7H,EAAAA,EAAAA,KAAY,KAClCy6H,IAID58H,EACFy8H,EAAmB,CACjBz8H,SACA+8H,SAAUH,EAAmBG,SAC7BzvH,UAAWsvH,EAAmBtvH,WAGhCkvH,EAAe,CACbO,SAAUH,EAAmBG,SAC7BzvH,UAAWsvH,EAAmBtvH,WAGlCgwH,IAA4B,GAC3B,CAACt9H,EAAQs9H,EAA4Bb,EAAoBD,EAAgBI,IAEtE3zD,GAAa9mE,EAAAA,EAAAA,KAAY,CAAC4sH,EAAuCv3H,KACrE,MAAM0sB,EAAQnd,KAAKZ,MAAM4oH,EAAYryG,EA7Ed,IA8EjB5kB,EAAQk3D,EAAMiuE,kBAAkBnuG,QAAQt3B,IAAiB,EACzD0lI,EAAqBluE,EAAMiuE,kBAAkB1sG,QAAQwsG,GAAaA,IAAavlI,IAEhF0lI,IAAuB58G,EAAAA,GAAAA,IAAUxoB,EAAQosB,EAAO,EAAG44G,EAAa1oI,UAIrE8oI,EAAmBt9C,OAAO9nF,EAAQosB,EAAO,EAAG1sB,GAC5C42H,GAAUtxH,IAAO,IACZA,EACHyxH,aAAcz2H,EACdolI,yBACC,GACF,CAACluE,EAAMiuE,iBAAkBH,EAAa1oI,SAEnC46H,GAAgB7sH,EAAAA,EAAAA,KAAY,KAChCisH,GAAUtxH,IACJkD,EACF28H,EAAkB,CAChB38H,SACAkqC,UAAWptC,EAAQogI,qBAGrBR,EAAc,CAAExyF,UAAWptC,EAAQogI,qBAG9B,IACFpgI,EACHmgI,iBAAkBngI,EAAQogI,mBAC1B3O,kBAAcj5H,KAEhB,GACD,CAAC0K,EAAQ28H,EAAmBD,IAE/B,OACE97H,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UClJiB,YDmJpBH,EAAAA,GAAA7K,cAAA,MAAIgL,UCnJoC,WDmJViJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACrDiL,EAAK,2BAERK,EAAAA,GAAA7K,cAAA,OAAKgL,UCtJ2F,WDsJtD5H,MAAQ,WAtH/B,GAsH0C+wC,EAAU91C,YACpE81C,EAAU5iC,KAAI,CAACk2H,EAAc3jF,KAC5B,MAAMu1E,EAAYpgE,EAAMu/D,eAAiB10E,EACnCw1E,EAzHS,IAyHKrgE,EAAMiuE,kBAAkBnuG,QAAQ0uG,EAAaT,WAAa,GACxEjmH,EA1HS,IA0HFk4C,EAAMkuE,oBAAoBpuG,QAAQ0uG,EAAaT,WAAa,GACnEr3G,EAAW83G,EAAaH,WAC1B,qBACCG,EAAalwH,SAAW,uBAAyB,2BAEtD,OACE1M,EAAAA,GAAA7K,cAACu5H,GAAAA,EAAS,CACR7nH,IAAK+1H,EAAaT,SAClBvlI,GAAIgmI,EAAaT,SACjB7rH,OAAQ+3D,EACRsmD,UAAWP,EACX71H,MAAQ,QAAOi2H,EAAYC,EAAav4G,OACxC04G,WAAcjvH,EAAKqkB,MAAQ,OAAS,SAAxB,UACZrnB,YAAaigI,EAAalwH,UAE1B1M,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAK+1H,EAAaT,SAClBh8H,WAAW+I,EAAAA,GAAAA,GAAe,yBC3K8E,YD4KxGqhG,QAAM,EACNC,cAAc,OACdvkG,KAAM22H,EAAalwH,SAAW,OAAS,cACvCooB,WAAS,EACTof,eAAgB,CACd,CACEK,QAASA,KACPgoF,EAAmBK,EAAaT,SAAS,EAE3Cp8H,MAAOJ,EAAK,QACZsG,KAAM,SAIVpF,QAASA,KACP27H,EAAoBI,EAAa,GAGnC58H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAAQ,IAAEy8H,EAAaT,UACvCn8H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAYR,EAAKmlB,KAEzB,KAIlB9kB,EAAAA,GAAA7K,cAAA,KAAGgL,UCrM8D,WDqM/BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACzDiL,EAAK,+BAGVK,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQZ,QAAQq+H,GAChBv9H,QAASi+H,EACT38H,MAAOJ,EAAKq8H,GAAoBtvH,SAAW,gCAAkC,+BAC7E7E,KAAMlI,EAAKq8H,GAAoBtvH,SAAW,+BAAiC,8BAC3EkpB,aAAcj2B,EAAKq8H,GAAoBtvH,SACnC,+BACA,8BACJmpB,eAAgB8mG,EAChB7mG,sBAAuBkmG,GAAoBtvH,WAE5C,I,gBE3LP,MAAMmwH,GAAoB,sBAEpBC,IAA+Bp+G,EAAAA,GAAAA,KAAUgxC,GAAOA,KAAM,KAAK,GA4FjE,IAAepxD,EAAAA,EAAAA,KA1FqB1E,IAO9B,IAP+B,gBACnCmjI,EAAe,OACfC,EAAM,UACNl2G,EAAS,oBACTm2G,EAAmB,gBACnBC,EAAe,SACf38H,GACD3G,EACC,MAAM,cAAEujI,EAAa,gBAAEC,IAAoBx+H,EAAAA,EAAAA,OACpCu9H,EAAUkB,IAAet+H,EAAAA,EAAAA,IAASg+H,GAAmB,IAEtDp9H,GAAOC,EAAAA,EAAAA,KACP09H,EAAaN,EAAS,SAAW,WACjCl9H,EAAiBH,EAATq9H,EAAc,oBAA4B,YAElDO,GAA8B/0G,EAAAA,EAAAA,GAAsBy0G,GACpDO,EAA+BT,IAAoBZ,EACpDc,GAAuBM,OAA+B7oI,EACrD+oI,EAAatB,GAAYY,IAAoBZ,GAAYe,IAAoBf,GAE5EuB,EAAiBC,IAAiBljI,EAAAA,EAAAA,KAAQ,IAC1C0hI,EAAS3oI,OAIV2oI,EAAS3oI,OAASoqI,GAAAA,GACb,MAAClpI,EAAWiL,EAAM,GAAE29H,kBAEzBnB,EAAS3oI,OAASqqI,GAAAA,GACb,MAACnpI,EAAWiL,EAAM,GAAE29H,iBAExBQ,GAAAA,GAAeC,KAAK5B,QAIYznI,IAAjC8oI,GAA8CC,EACzC,GAIF,CACLD,EAA+B79H,EAAM,GAAE29H,aAAuBx9H,QAASpL,GACtC,IAAjC8oI,EAAyC79H,EAAM,GAAE29H,eAAqB5oI,GAV/D,MAACA,EAAWiL,EAAM,GAAE29H,aAVpB,IAsBR,CAACnB,EAAUqB,EAA8BC,EAAY99H,EAAM29H,EAAYx9H,KAE1E5C,EAAAA,EAAAA,KAAU,KACRmgI,EAAYN,GAAmB,GAAG,GACjC,CAACC,EAAQD,IAEZ,MAAMiB,GAAuBz8H,EAAAA,EAAAA,KAAa9B,IACxC,MAAMF,EAAQE,EAAEC,OAAOH,MAAMw7D,OAE7B,GAAIiiE,IAAWz9H,EAAM2rF,MAAM2xC,IAKzB,YAJKt9H,EAAM/L,SACT6pI,EAAY,IACZ98H,IAAW,MAIf,MAAM09H,EAAc1+H,EAAMoqD,QAAQkzE,GAAmB,IAErDQ,EAAYY,IAEoB,KAAhBA,IAA4BC,EAAAA,GAAAA,IAAgBD,GAAa,MAGzE19H,IAAW09H,GAEXnB,IAA6B,KACvBmB,IAAgBlB,IACJC,EAASI,EAAkBD,GACnC,CAAEhB,SAAU8B,GACpB,IACA,GACD,CAACjB,EAAQI,EAAiBD,EAAeJ,EAAiBx8H,IAE7D,OACEP,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAQ,GAAEy9H,EAAS3iE,EAAAA,IAAkB,KAAK8hE,IAC1C57H,SAAUy9H,EACVl+H,MAAO29H,EAAa99H,EAAK,YAAcG,EACvCmiD,MAAO07E,EACPQ,QAAST,EACTU,SAAUt3G,EACVuU,2BAAyB,GACzB,I,gBCjEN,MAAMo0B,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAO,GAE7C2uE,GAA2B,iCAkPjC,IAAe//H,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,cAAE8kB,GAAkB9kB,GACpB,SACJqF,EAAQ,oBAAEk2H,EAAmB,gBAAEC,EAAiBj7E,MAAOq8E,IACrDv8H,EAAAA,EAAAA,KAAeL,GAAQ68H,aAAe,CAAC,EACrC/5E,EAAch+B,GAAgBme,EAAAA,EAAAA,KAAWjjC,EAAQ8kB,QAAiB9xB,EAElE8pI,GAAetW,EAAAA,GAAAA,GAAmBxmH,EAAQ,eAEhD,IAAK8iD,EACH,MAAO,CACLz9C,WACAm2H,kBACAD,sBACAqB,oBACAE,gBAIJ,MACElzE,UAAWmzE,EACXjzE,SAAUkzE,EAAe,UACzBp1F,GACEkb,EACEm6E,EAAsBn4G,GAAgBurC,EAAAA,EAAAA,KAAmBrwD,EAAQ8kB,QAAiB9xB,EAGxF,MAAO,CACLkqI,mBAHwBC,EAAAA,EAAAA,KAAkBr6E,GAI1Ci6E,mBACAC,kBACAI,WAAYH,GAAqBI,IACjCh4H,WACAk2H,sBACAC,kBACAoB,oBACAE,eACAl1F,YACD,GAvCe7nC,EAhPmC7H,IAajD,IAbkD,SACtD8S,EAAQ,kBACRkyH,EAAiB,iBACjBH,EAAgB,gBAChBC,EAAe,WACfI,EAAU,SACV/3H,EAAQ,gBACRm2H,EAAe,kBACfoB,EAAiB,oBACjBrB,EAAmB,aACnBuB,EAAY,UACZl1F,EAAS,QACTsnB,GACDh3D,EACC,MAAM,gBACJolI,EAAe,cACfC,IACErgI,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,KAEPs/H,GAAwBzkI,EAAAA,EAAAA,KAAQ,IAAM6uC,GAAW5D,MAAKrgC,IAAA,IAAC,WAAEo3H,GAAYp3H,EAAA,OAAKo3H,CAAU,KAAG,CAACnzF,IACxFyzF,EAAkBmC,GAAuB/C,UAAY,IACpDgD,EAAmBC,IAAwBrgI,EAAAA,EAAAA,KAAS,IACpDsgI,EAAwBC,IAA6BvgI,EAAAA,EAAAA,KAAS,IAC9DkjD,EAAOs9E,IAAYxgI,EAAAA,EAAAA,OAEnBjL,EAAO0rI,IAAYzgI,EAAAA,EAAAA,OACnBusD,EAAWC,IAAgBxsD,EAAAA,EAAAA,IAAS0/H,GAAoB,KACxDjzE,EAAUC,IAAe1sD,EAAAA,EAAAA,IAAS2/H,GAAmB,KACrDK,EAAKU,IAAU1gI,EAAAA,EAAAA,IAAS+/H,GAAc,KACtCY,EAAkBC,IAAuB5gI,EAAAA,EAAAA,IAAyBg+H,GAEnE6C,GAAuB7kI,EAAAA,EAAAA,GAAS6jI,GAAmB,EAAO5jI,EAAAA,GAAeC,SAEzE6rB,EAAY/f,IAAa84H,EAAAA,GAAoBC,WAC7CC,GAAuC,IAArBL,EAElBnC,GAA8B/0G,EAAAA,EAAAA,GAAsBy0G,GACpDO,EAA+BP,GAAuBM,EACtDyC,EAA8B12F,GAAaA,EAAU91C,OAAS,EAE9DysI,GAAoBxlI,EAAAA,EAAAA,KAAQ,KAC5BslI,IAIGpiI,QAAQ7J,IAAUurI,GAA2BF,IAAsD,IAAjC3B,IACxE,CAACuC,EAAiBjsI,EAAOurI,EAAwBF,EAAmB3B,KAEvErgH,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,KAKV1zD,EAAAA,EAAAA,KAAU,KACRuyD,IAAa,KACXuvE,GAAiB,GACjB,GACD,CAACA,KAEJ9hI,EAAAA,EAAAA,KAAU,KACRsiI,OAAS9qI,EAAU,GAClB,CAACkrI,KAEJ1iI,EAAAA,EAAAA,KAAU,KACRquD,EAAakzE,GAAoB,IACjChzE,EAAYizE,GAAmB,IAC/Be,EAAOX,GAAc,GAAG,GACvB,CAACL,EAAkBC,EAAiBI,KAEvC5hI,EAAAA,EAAAA,KAAU,KACRyiI,EAAoB5C,GAAmB,GAAG,GACzC,CAACA,KAEJ7/H,EAAAA,EAAAA,KAAU,KACJ6J,IAAa84H,EAAAA,GAAoBK,WACnCZ,GAA0B,GAC1BF,GAAqB,GACrBG,OAAS7qI,GACX,GACC,CAACqS,IAEJ,MAAMo5H,GAAoB5+H,EAAAA,EAAAA,KAAa6+H,IACrCZ,EAASY,EAAS,GACjB,IAEGn0E,GAAwB1qD,EAAAA,EAAAA,KAAa9B,IACzC8rD,EAAa9rD,EAAEC,OAAOH,OACtB+/H,GAA0B,EAAK,GAC9B,IAEGlzE,GAAuB7qD,EAAAA,EAAAA,KAAa9B,IACxCgsD,EAAYhsD,EAAEC,OAAOH,OACrB+/H,GAA0B,EAAK,GAC9B,IAEGe,GAAkB9+H,EAAAA,EAAAA,KAAa9B,IACnCggI,EAAOhgI,EAAEC,OAAOH,OAChB+/H,GAA0B,EAAK,GAC9B,IAEGtB,IAAuBz8H,EAAAA,EAAAA,KAAahC,IACxCogI,EAAoBpgI,GACpB6/H,EAAqBrC,IAAoBx9H,EAAM,GAC9C,CAACw9H,IAEEuD,IAAoB/+H,EAAAA,EAAAA,KAAY,KACpC,MAAMg/H,EAAmBj1E,EAAUyP,OAC7BylE,EAAkBh1E,EAASuP,OAC3B0lE,EAAa1B,EAAIhkE,OAElB2kE,IAEAa,EAAiB/sI,OAKtByrI,EAAc,CACZnrI,WACIurI,GAA0B,CAC5B/zE,UAAWi1E,EACX/0E,SAAUg1E,EACVzB,IAAK0B,MAEHtB,GAAqB,CACvBhD,SAAUuD,KAZZH,EAASlB,IAcT,GACD,CACDvqI,EACAw3D,EAAWE,EAAUuzE,EAAKM,EAC1BK,EAAkBP,EAClBF,IAkBF,OACEj/H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4CACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uCACbH,EAAAA,GAAA7K,cAACurI,GAAAA,EAAc,CACbd,qBAAsBA,EACtBr/H,SAAU4/H,EACVpgI,MAAM,0BACNqT,SAAU0T,IAEZ9mB,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAO+rD,EACP/qD,SAAU0rD,EACVnsD,MAAOH,EAAK,aACZyT,SAAU0T,EACVm7B,MAAOA,IAAUo8E,GAA2Bp8E,OAAQvtD,IAEtDsL,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAOisD,EACPjrD,SAAU6rD,EACVtsD,MAAOH,EAAK,YACZyT,SAAU0T,IAEZ9mB,EAAAA,GAAA7K,cAAC+1G,GAAAA,EAAQ,CACP3rG,MAAOw/H,EACPx+H,SAAU8/H,EACVvgI,MAAOH,EAAK,WACZyT,SAAU0T,EACVgpD,UAAW0uD,EACXpzB,mBAAoBozB,GAAgBA,EAAeO,EAAIvrI,QAAQ+jF,gBAAa7iF,IAG9EsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,IAChEyxB,EAAAA,GAAAA,GAAWxmB,EAAK,0BAA2B,CAAC,KAAM,sBAIvDK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,aAEhFK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACwrI,GAAa,CACZ5D,gBAAiBA,EACjBj2G,UAAWA,EACXm2G,oBAAqBA,EACrBC,gBAAiBA,EACjB38H,SAAUy9H,MAIbM,IAAsBsC,EAAAA,KAjE/B,WACE,MAAMC,EAAoB,GAAExmE,EAAAA,MAAkBymE,EAAAA,MAE9C,OACE9gI,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC/DiL,EAAK,mCACJgqD,QAAQ,SAAU,mBAClBijB,MAAM,KACNlmE,KAAKizC,GACU,kBAANA,EAAwB35C,EAAAA,GAAA7K,cAAC2yG,GAAAA,EAAQ,CAACv9F,IAAKs2H,EAAkBh5H,KAAO,IAAGi5H,EAAAA,QAA0BnnF,IAI/G,CAoD0DonF,GAClD/gI,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,IAChEyxB,EAAAA,GAAAA,GAAWxmB,EAAK,gBAAiB,CAAC,KAAM,qBAE1C+/H,GACC1/H,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAChEiL,EAAK,qBAAqBK,EAAAA,GAAA7K,cAAA,WAC3B6K,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,iBAAiBk6D,EAAAA,IAAiBqlE,KAKvDM,GACChgI,EAAAA,GAAA7K,cAAC6rI,GAAe,CACd13F,UAAWA,EACXqyF,eAAgBgE,KAKtB3/H,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAAS0nG,EACTp/H,QAASy/H,GACTltH,SAAU0T,EACVthB,UAAW7F,EAAK,SAEfmnB,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGb,K,4BClQV,MA6IA,IAAe7B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CACLu/H,yBAA0Bv/H,EAAO+kC,SAASg3E,MAAMwjB,yBAChDC,yBAA0Bx/H,EAAO+kC,SAASg3E,MAAMyjB,yBAChDC,uBAAwBz/H,EAAO+kC,SAASg3E,MAAM0jB,uBAC9CC,2BAA4B1/H,EAAO+kC,SAASg3E,MAAM2jB,8BANpC3/H,EA7IoC7H,IAOlD,IAPmD,SACvD8S,EAAQ,QACRkkD,EAAO,yBACPqwE,EAAwB,yBACxBC,EAAwB,uBACxBC,EAAsB,2BACtBC,GACDxnI,EACC,MAAM,gBAAEwhF,EAAe,iBAAE+/B,EAAgB,YAAEkmB,IAAgBziI,EAAAA,EAAAA,MAGrD0iI,GAAgBvlI,EAAAA,EAAAA,IAAuB,OACtCwlI,EAAuBC,IAA4BziI,EAAAA,EAAAA,KAAS,GAE7DY,GAAOC,EAAAA,EAAAA,MAEN6hI,EAAqBC,IAA0B3iI,EAAAA,EAAAA,KAAS,IAC/D7B,EAAAA,EAAAA,KAAU,KACRM,OAAOmkI,UAAUC,yBAAyB5qD,KAAK0qD,EAAuB,GACrE,KAEHvkH,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAMixE,GAAoB1iI,EAAAA,EAAAA,IAAgB,KACxC,MAAM2iI,EAAO,IAAIC,KAAK,EAACC,EAAAA,GAAAA,OAAiBC,EAAAA,IAAoB,CAAE7uI,KAAM,eAC9DmX,EAAM23H,IAAIC,gBAAgBL,IAChCz7H,EAAAA,GAAAA,GAASkE,EAAK03H,EAAAA,IAAmB,IAG7BG,GAAkC7gI,EAAAA,EAAAA,KAAaq+E,IACnDpiF,OAAOmkI,UAAUD,uBAAuB9hD,EAAU,GACjD,IAEGyiD,GAAoBljI,EAAAA,EAAAA,IAAiBM,IACzC4hI,EAAY,CAAEiB,OAAQ7iI,EAAEsW,QAASwsH,OAAQ9iI,EAAEwW,SAAU,IAGjDusH,GAAwBrjI,EAAAA,EAAAA,IAAgB,KAC5Ci8E,EAAgB,CAAEe,WAAW,GAAO,IAGhCsmD,GAAatjI,EAAAA,EAAAA,IAAgB,KACjC,MAAM+hC,EAASogG,EAAcplI,QACxBglC,IAEDwhG,EAAAA,GAAAA,GAAYxhG,KACdsgG,GAAyB,GAEzB/jI,YAAW,KACT+jI,GAAyB,EAAM,GAC9B,MACL,IAGF,OACExhI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAAC2/F,GAAAA,EAAuB,CACtBpkB,OAAQikB,GAAAA,EAAeguC,aACvBtlI,KAAM,IACN8C,UAAU,oBACVwjC,gBAAc,EACdktC,QAAQ,IAEV7wE,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAAQzJ,EAAK,qCAEjEK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPh0B,QAAS2hI,EACTv8H,KAAK,cAELjG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SAAQ,0BAEzBH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPh0B,QAASwhI,EACTp8H,KAAK,gBACLmN,UAAWwvH,EAAAA,IAEX5iI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SAAQ,eAEzBH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPztB,IAAKk6H,EACLzgI,QAAS4hI,EACTx8H,KAAK,UACLmN,UAAWyvH,EAAAA,GACXtqI,MAAOgpI,EAAwB,qBAAuB,IAEtDvhI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SAAQ,yBAGzBH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAM,uBACNm7B,QAASt9B,QAAQujI,GAEjB37E,QAASA,IAAM41D,EAAiB,CAAE+lB,0BAA2BA,MAG/DlhI,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAM,uBACNsT,UAAW8tH,EACXjmG,QAASt9B,QAAQsjI,GAEjB17E,QAASA,IAAM41D,EAAiB,CAAE8lB,0BAA2BA,MAG/DjhI,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,uBACZs7B,QAASt9B,QAAQwjI,GAEjB57E,QAASA,IAAM41D,EAAiB,CAAEgmB,wBAAyBA,MAG7DnhI,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAM,gCACNm7B,QAASt9B,QAAQyjI,GAEjB77E,QAASA,IAAM41D,EAAiB,CAAEimB,4BAA6BA,MAGhE0B,EAAAA,IACC9iI,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAM,qBACNm7B,QAASt9B,QAAQ8jI,GACjBl8E,QAAS68E,IAIbpiI,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPh0B,QAASghI,EACT57H,KAAK,OAELjG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SAAQ,kBAGvB,K,4BC/HV,MAAM4iI,GAAsC,CAAC,CAC3CjjI,MAAO,UACPP,MAAO,OACN,CACDO,MAAO,UACPP,MAAO,QA4JT,IAAejB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,MAAEitD,EAAK,qBAAEq0E,GAAyBthI,EAAO+kC,SAASg3E,MAExD,MAAO,KACF76D,EAAAA,GAAAA,IAAKlhD,EAAO+kC,SAASg3E,MAAO,CAC7B,kBACA,iBACA,sBACA,qBACA,qBACA,eAEF9uD,QACAq0E,uBACD,GAfevhI,EAzJ+B7H,IAS7C,IAT8C,SAClD8S,EAAQ,eACRujH,EAAc,QACdr/D,EAAO,gBACPqyE,EAAe,oBACfC,EAAmB,WACnBC,EAAU,MACVx0E,EAAK,qBACLq0E,GACDppI,EACC,MAAM,iBACJuhH,IACEv8G,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MAEP,SAAEkE,IAAaC,EAAAA,EAAAA,MACfq/H,EAAiBt/H,IAAagG,EAAAA,IAAUD,EAAAA,IAExCw5H,EAAyC,CAAC,CAC9CvjI,MAAOH,EAAK,8BACZJ,MAAO,SACN,CACDO,MAAOH,EAAK,6BACZJ,MAAO,QACN,CACDO,MAAOH,EAAK,+BACZJ,MAAO,SAGH+jI,EAAuBF,OAOzB1uI,EAP0C,CAC5C,CAAE6K,MAAO,QAASO,MAAOH,EAAK,2BAA4B4/E,SAAU,6BACpE,CACEhgF,MAAO,aACPO,MAAOH,EAAK4kD,EAAAA,IAAaz6C,EAAAA,GAAS,6BAA+B,+BACjEy1E,SAAU,sBAIRgkD,GAA8BhiI,EAAAA,EAAAA,KAAaymE,IAC/Cn0E,SAASomD,gBAAgB1hD,MAAM6oC,YAC7B,uBAAyB,GAAEj7B,KAAKqZ,IAAIwoD,EAASl+D,EAAAA,GAAS,GAAK,SAE7DjW,SAASomD,gBAAgB1hD,MAAM6oC,YAAY,wBAA0B,GAAEj7B,KAAKoI,MAAgB,OAAVy5D,QAClFn0E,SAASomD,gBAAgB1hD,MAAM6oC,YAAY,sBAAwB,GAAE4mC,OACrEn0E,SAASomD,gBAAgBupF,aAAa,yBAA0Bx7D,EAAQuP,YAExE4jC,EAAiB,CAAE8nB,gBAAiBj7D,GAAU,GAC7C,CAACmzC,IAEEsoB,GAA8BliI,EAAAA,EAAAA,KAAahC,IAC/C,MAAMmkI,EAAqB,SAAVnkI,GAAmBokI,EAAAA,GAAAA,KAAmBpkI,EAEvD47G,EAAiB,CAAExsD,MAAO+0E,IAC1BvoB,EAAiB,CAAE6nB,qBAAgC,SAAVzjI,GAAmB,GAC3D,CAAC47G,IAEEyoB,GAAyBriI,EAAAA,EAAAA,KAAasiI,IAC1C1oB,EAAiB,CAAEgoB,WAAYU,IAC/B1oB,EAAiB,CAAE2oB,0BAA0B,KAE7CC,EAAAA,GAAAA,IAAcF,EAA4B,GACzC,CAAC1oB,IAEE6oB,GAA+BziI,EAAAA,EAAAA,KAAa0iI,IAChD9oB,EAAiB,CAAE+nB,oBAAqBe,GAA+C,GACtF,CAAC9oB,KAEG+oB,EAAmBC,IAAwBplI,EAAAA,EAAAA,KAAS,IAC3D7B,EAAAA,EAAAA,KAAU,KACRM,OAAOmkI,UAAUyC,uBAAuBptD,KAAKmtD,EAAqB,GACjE,IAEH,MAAME,GAAgC9iI,EAAAA,EAAAA,KAAaq+E,IACjDpiF,OAAOmkI,UAAUwC,qBAAqBvkD,EAAU,GAC/C,IAOH,OALAziE,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,aAEhFK,EAAAA,GAAA7K,cAACyd,GAAAA,EAAW,CACV9S,MAAOH,EAAK,YACZsgB,IAAK,GACLT,IAAK,GACLjgB,MAAO0jI,EACP1iI,SAAUgjI,IAGZvjI,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,QACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBiU,wBAE7C3kI,EAAK,mBAGPmjI,EAAAA,IAAeyB,EAAAA,IACdvkI,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,iCACZs7B,QAASt9B,QAAQumI,GACjB3+E,QAAS8+E,KAKfrkI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DiL,EAAK,UAERK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,QACLC,QAAS+iI,EACT7iI,SAAUwiI,EAAuB,OAASr0E,EAC1CpuD,SAAUkjI,KAIdzjI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAW,eAG1EsL,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,aACLC,QAASyiI,GACTviI,SAAU2iI,EACV5iI,SAAUqjI,KAIbN,GACCtjI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,uBAEhFK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,yBACLC,QAASgjI,EACT/iI,SAAUyjI,EACVxjI,SAAU0iI,KAIZ,K,4BCxKV,MAsFA,IAAe5kI,EAAAA,EAAAA,KAtFqB1E,IAK9B,IAL+B,UACnC4qI,EAAS,MACT71E,EAAK,WACL4iC,EAAU,QACV1wF,GACDjH,EACC,MAAM,KAAEggE,EAAI,SAAE/lE,GAAa2wI,EACrBC,EAAkB,YAAW5wI,EAAS+C,KACtC6E,EAAe5H,EAASsH,eACxBA,GAAiBJ,EAAAA,EAAAA,GAAU,GAAE0pI,YAC7B36F,GAAWC,EAAAA,GAAAA,GAAcl2C,EAAS++B,WAAW/2B,QAAS8B,QAAQxC,IAAiB,IAC/E,qBAAEub,IAAyBE,EAAAA,GAAAA,GAC/BjZ,QAAQxC,GAAkBM,QAC1B/G,OACAA,EACA,QAEIgwI,GAAe3oI,EAAAA,EAAAA,KAAO,IACrB4oI,EAAeC,IAAoB7lI,EAAAA,EAAAA,KAAS,IAEjD3D,UAAWypI,EAAS,aAAEvpI,IACpBC,EAAAA,EAAAA,GAAyBkpI,GAAiBE,GACxCG,GAA2D,KAAzCt8G,EAAAA,EAAAA,GAAsBm8G,IACtCnuH,aAAcC,EAAqBC,qBAAsBC,IAAsBC,EAAAA,GAAAA,GACpF+tH,IAAkBE,GAAcjrE,IAASmrE,EAAAA,QAC1CrwI,EACAowI,EACA,QAGIE,GAAcjpI,EAAAA,EAAAA,MACpBipI,EAAY9oI,QAAUyyD,EAEtB,MAAM0sD,GAAe95G,EAAAA,EAAAA,KAAY,KAC/B,WACE,MAAM0jI,QAAaC,EAAAA,EAAAA,IAAUL,SACvBM,GAASC,KAAKC,EAAAA,IAAsBL,EAAY9oI,QAAU+oI,GAChEpkI,EAAQ+4D,EACT,EAJD,EAII,GACH,CAACirE,EAAWhkI,EAAS+4D,KAExB18D,EAAAA,EAAAA,KAAU,KAEJ2nI,GAAaH,EAAaxoI,UAC5Bm/G,IACAqpB,EAAaxoI,SAAU,EACzB,GACC,CAAC2oI,EAAWxpB,IAEf,MAAMpkG,GAAc1V,EAAAA,EAAAA,KAAY,KAC1BsjI,EACFxpB,KAEAqpB,EAAaxoI,SAAU,EACvB0oI,GAAkBU,IAAeA,IACnC,GACC,CAACT,EAAWxpB,IAETl7G,GAAY+I,EAAAA,GAAAA,GAChB,gBACAqoF,GAAc,YAGhB,OACEvxF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWA,EAAWU,QAASoW,GAClCjX,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACbH,EAAAA,GAAA7K,cAAA,UACEiS,IAAK0iC,EACL3pC,UAAU,cAEZH,EAAAA,GAAA7K,cAAA,OACEQ,IAAKwF,GAAkBM,EACvB0E,WAAW+I,EAAAA,GAAAA,GAAe,aAAcwN,GACxCiE,IAAI,GACJnlB,WAAW,IAEZihB,GACCzW,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,oBAAqByN,IAClD3W,EAAAA,GAAA7K,cAAC2R,GAAAA,EAAe,CAACC,SAAUzL,EAAcuF,QAASoW,MAIpD,ICxEJw4C,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAO,GAkInD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAMitD,GAAQyD,EAAAA,EAAAA,KAAY1wD,IACpB,WAAE6jI,EAAU,UAAEC,GAAc9jI,EAAO+kC,SAASg/F,OAAO92E,IAAU,CAAC,GAC9D,iBAAE+2E,GAAqBhkI,EAAO+kC,SAEpC,MAAO,CACL8+F,aACAC,YACAE,mBACA/2E,QACD,GAXeltD,EAhIyC7H,IAQvD,IARwD,SAC5D8S,EAAQ,eACRujH,EAAc,QACdr/D,EAAO,WACP20E,EAAU,UACVC,EAAS,iBACTE,EAAgB,MAChB/2E,GACD/0D,EACC,MAAM,eACJ+rI,EAAc,gBACdC,EAAe,iBACfC,IACEjnI,EAAAA,EAAAA,MAEEknI,GAAW/pI,EAAAA,EAAAA,MACjB+pI,EAAS5pI,QAAUyyD,GAGnBzxD,EAAAA,EAAAA,KAAU,KACRuyD,IAAa,KACXk2E,GAAgB,GAChB,GACD,CAACA,IAEJ,MAAMI,GAAmBxkI,EAAAA,EAAAA,KAAa9B,IACpC,MAAM,MAAEgiD,GAAUhiD,EAAEC,OAEdsmI,GAAiBC,EAAAA,EAAAA,IAAcxkF,GACjCukF,GAAgBxyI,QAClBoyI,EAAgBI,EAAe,GACjC,GACC,CAACJ,IAEEM,GAAwB3kI,EAAAA,EAAAA,KAAY,MACxC4kI,EAAAA,GAAAA,GAvCoB,aAuCmBJ,GAAkB,EAAK,GAC7D,CAACA,IAEEK,GAAiB7kI,EAAAA,EAAAA,KAAY,KACjC0uH,EAAeI,EAAAA,GAAgBgW,2BAA2B,GACzD,CAACpW,IAEEqW,GAAuB/kI,EAAAA,EAAAA,KAAY,KACvCskI,EAAiB,CACfl3E,QACA42E,gBAAY7wI,EACZkiE,qBAAiBliE,EACjB8wI,WAAW,EACXe,aAAwB,SAAV53E,EAAmB63E,EAAAA,IAA2BC,EAAAA,KAC5D,GACD,CAACZ,EAAkBl3E,IAEhB+3E,GAAwBnlI,EAAAA,EAAAA,KAAaq4D,IACzCisE,EAAiB,CAAEl3E,MAAOm3E,EAAS5pI,QAAUqpI,WAAY3rE,IACzD,MAAM+sE,EAAmBjB,GAAoBA,EAAiBhgG,MAAM8+F,GAAcA,EAAU5qE,OAASA,IACjG+sE,GAAkB9yI,SAAS++B,YAC7Bg0G,EAAAA,GAAAA,IAAgBD,EAAiB9yI,SAAS++B,UAAU/2B,SACjDm7E,MAAMr2E,IACL,MAAM4lI,GAAeM,EAAAA,GAAAA,IAAgBlmI,GAC/BmmI,EAAY,KAAGC,EAAAA,GAAAA,IAAQpmI,KAC7BklI,EAAiB,CAAEl3E,MAAOm3E,EAAS5pI,QAAU06D,gBAAiBkwE,EAAUP,gBAAe,GAE7F,GACC,CAACb,EAAkBG,IAEhBmB,GAA4BzlI,EAAAA,EAAAA,KAAa9B,IAC7ComI,EAAiB,CAAEl3E,MAAOm3E,EAAS5pI,QAAUspI,UAAW/lI,EAAEC,OAAOu7B,SAAU,GAC1E,CAAC4qG,IAEElmI,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAMq2E,EAAcvB,IAAmB,IAAMA,EAAiB,GAAG9rE,OAASmrE,EAAAA,GAE1E,OACE/kI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4DACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,aACL9F,UAAU,OACViT,SAAU6zH,EACVpmI,QAASqlI,GAERvmI,EAAK,gBAGRK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,WACL9F,UAAU,OACVU,QAASulI,GAERzmI,EAAK,aAGRK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,WAAWpF,QAASylI,GAChC3mI,EAAK,yBAGRK,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,qBACZs7B,QAASt9B,QAAQ6nI,GACjBjlI,SAAUymI,KAIbtB,EACC1lI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACZulI,EAAiBh/H,KAAK89H,GACrBxkI,EAAAA,GAAA7K,cAAC+xI,GAAa,CACZrgI,IAAK29H,EAAU5qE,KACf4qE,UAAWA,EACX71E,MAAOA,EACP4iC,WAAYg0C,IAAef,EAAU5qE,KACrC/4D,QAAS6lI,OAKf1mI,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAEN,KCxHJsoF,IAAcC,EAAAA,GAAAA,KAAQC,EAAAA,GAAAA,IAAQ,WAC9BC,GAAoB,CACxB,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WA4MzD,SAASC,GAAcC,EAA+BC,GACpD,MAAO,CACLC,cAAe,CACbvhI,KAAKZ,MAAOiiI,EAAI,IAAOC,EAAME,UAAUxrI,MAAQ,IAC/CgK,KAAKZ,OAAO,EAAIiiI,EAAI,KAAOC,EAAME,UAAUnrI,OAAS,KAEtDorI,YAAazhI,KAAKZ,MAAMiiI,EAAI,IAAMC,EAAMI,QAAQ1rI,MAAQ,IAE5D,CAEA,SAAS2rI,GAAaziI,EAEpBoiI,GAC0B,IAF1B,cAAEC,EAAa,YAAEE,GAA+DviI,EAGhF,MAAO,CACLuiI,GAAeH,EAAMI,QAAQ1rI,MAAQ,GACrCurI,EAAc,IAAMD,EAAME,UAAUxrI,MAAQ,GAC5C,EAAIurI,EAAc,IAAMD,EAAME,UAAUnrI,OAAS,GAErD,CA4EA,UAAe8B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAMitD,GAAQyD,EAAAA,EAAAA,KAAY1wD,IACpB,gBAAEk1D,GAAoBl1D,EAAO+kC,SAASg/F,OAAO92E,IAAU,CAAC,EAC9D,MAAO,CACLiI,kBACAjI,QACD,GAPeltD,EAxSyC7H,IAKvD,IALwD,SAC5D8S,EAAQ,QACRkkD,EAAO,MACPjC,EAAK,gBACLiI,GACDh9D,EACC,MAAM,iBAAEisI,IAAqBjnI,EAAAA,EAAAA,MAEvBknI,GAAW/pI,EAAAA,EAAAA,MACjB+pI,EAAS5pI,QAAUyyD,EAEnB,MAAMnzC,GAAezf,EAAAA,EAAAA,IAAuB,MAEtCgsI,GAAiBhsI,EAAAA,EAAAA,IAAuB,MAExCisI,GAAejsI,EAAAA,EAAAA,IAAuB,MACtCksI,GAAgBlsI,EAAAA,EAAAA,KAAO,IAEtByrI,EAAKU,IAAUnpI,EAAAA,EAAAA,IAiLxB,SAAuB63D,GACrB,OAAOA,GAAmBA,EAAgB6tD,WAAW,MACjD2iB,EAAAA,GAAAA,KAAQC,EAAAA,GAAAA,IAAQzwE,EAAgBjN,QAAQ,IAAK,MAC7Cw9E,EACN,CArLiCgB,CAAcvxE,IAEvCwxE,GAASrsI,EAAAA,EAAAA,IAAOyrI,IACtBtqI,EAAAA,EAAAA,KAAU,KACRkrI,EAAOlsI,QAAUsrI,CAAG,GACnB,CAACA,IAEJ,MAAOnjE,EAAYgkE,EAAgBC,IAAoBzkI,EAAAA,EAAAA,MAChD0kI,EAAUC,IAAezpI,EAAAA,EAAAA,IAAS,KAClC0pI,EAAUC,IAAe3pI,EAAAA,EAAAA,IAAS,IAEnC4pI,GAAW5sI,EAAAA,EAAAA,MACX6sI,GAAc7sI,EAAAA,EAAAA,OAGpBmB,EAAAA,EAAAA,KAAU,KAER,MAAMyqI,EAAY,CAChBkB,WAAYd,EAAe7rI,QAAS2sI,eACjCjmF,EAAAA,GAAAA,IAAKmlF,EAAe7rI,QAASmT,wBAAyB,CAAC,MAAO,QAAS,YAEtEw4H,EAAU,CACdgB,WAAYb,EAAa9rI,QAAS2sI,eAC/BjmF,EAAAA,GAAAA,IAAKolF,EAAa9rI,QAASmT,wBAAyB,CAAC,WAK1D,SAASy5H,EAAgBrpI,GACvB,MAAMioI,EAAgB,CACpBvhI,KAAK8Z,IAAI9Z,KAAKqZ,IAAI,EAAG/f,EAAE+P,MAASm4H,EAAUkB,YAAalB,EAAUxrI,MAAQ,GACzEgK,KAAK8Z,IAAI9Z,KAAKqZ,IAAI,EAAG/f,EAAEqe,MAAS6pH,EAAUzxH,IAAMsF,EAAatf,QAASnF,WAAY4wI,EAAUnrI,OAAS,KAGjG,YAAEorI,GAAgBL,GAAca,EAAOlsI,QAASysI,EAASzsI,SAK/D,OAHAgsI,EAAOJ,GAAc,CAAEJ,gBAAeE,eAAee,EAASzsI,UAC9DmsI,KAEO,CACT,CAWA,SAASU,EAActpI,GACrB,MAAM,cAAEioI,GAAkBH,GAAca,EAAOlsI,QAASysI,EAASzsI,SAC3D0rI,EAAczhI,KAAK8Z,IAAI9Z,KAAKqZ,IAAI,EAAG/f,EAAE+P,MAASq4H,EAAQgB,YAAahB,EAAQ1rI,MAAQ,GAKzF,OAHA+rI,EAAOJ,GAAc,CAAEJ,gBAAeE,eAAee,EAASzsI,UAC9DmsI,KAEO,CACT,CAjCAM,EAASzsI,QAAU,CAAEyrI,YAAWE,YAgBhC33H,EAAAA,GAAAA,IAAc63H,EAAe7rI,QAAU,CACrCiU,UAAW24H,EACXx4H,OAAQw4H,EACRz4H,UAAWi4H,EACXznI,QAASynI,EACTU,wBAAyB,kCACzBC,YAAY,KAad/4H,EAAAA,GAAAA,IAAc83H,EAAa9rI,QAAU,CACnCiU,UAAW44H,EACXz4H,OAAQy4H,EACR14H,UAAWi4H,EACXznI,QAASynI,EACTU,wBAAyB,kCACzBC,YAAY,GACZ,GACD,CAACZ,EAAgBC,IAEpB,MAAM,cAAEZ,EAAgB,CAAC,EAAG,GAAE,YAAEE,EAAc,GAAMe,EAASzsI,QAAUqrI,GAAcC,EAAKmB,EAASzsI,SAAW,CAAC,EACzGgtI,GAAMnC,EAAAA,GAAAA,KAAQoC,EAAAA,GAAAA,IAAQ3B,IACtB4B,EAAM5B,EAAI,GACV6B,GAAStC,EAAAA,GAAAA,KAAQoC,EAAAA,GAAAA,IAAQ,CAACC,EAAK,EAAG,MAGxClsI,EAAAA,EAAAA,KAAU,KACR,MAAMosI,GAAMH,EAAAA,GAAAA,IAAQ3B,GACd7mI,EAAS,KAAGomI,EAAAA,GAAAA,IAAQuC,KAK1B,GAHAd,EAAYc,EAAIjwH,KAAK,OACrBqvH,EAAY/nI,IAEPsnI,EAAc/rI,QAAS,CAC1B,MAAMqqI,GAAeM,EAAAA,GAAAA,IAAgByC,GACrCzD,EAAiB,CACfl3E,MAAOm3E,EAAS5pI,QAChBqpI,gBAAY7wI,EACZkiE,gBAAiBj2D,EACjB4lI,gBAEJ,CACA0B,EAAc/rI,SAAU,CAAK,GAC5B,CAACsrI,EAAK3B,KAGT3oI,EAAAA,EAAAA,KAAU,MA2GZ,SACEd,EACAgtI,EACAR,EACAD,GAEA,IAAIY,EACAC,EACAh6G,EAECo5G,EAAY1sI,SAAYysI,EAASzsI,SAWpCqtI,EAAIZ,EAASzsI,QAAQyrI,UAAUxrI,MAC/BqtI,EAAIb,EAASzsI,QAAQyrI,UAAUnrI,OAC/BgzB,EAAMo5G,EAAY1sI,UAXlBqtI,EAAIntI,EAAO+kC,YACXqoG,EAAIptI,EAAOpF,aACXw4B,EAAMpzB,EAAOG,WAAW,MAExBH,EAAOD,MAAQotI,EACfntI,EAAOI,OAASgtI,EAEhBZ,EAAY1sI,QAAUszB,GAOxB,MAAMi6G,EAAUj6G,EAAKk6G,gBAAgBH,EAAGC,GAClCG,EAASF,EAAQ59H,KACjB+9H,GAAMT,EAAAA,GAAAA,IAAQ,CAACC,EAAK,EAAG,IAE7B,IAAIlyI,EAAQ,EAEZ,IAAK,IAAI4kB,EAAI,EAAGA,EAAI0tH,EAAG1tH,IAAK,CAC1B,MAAM+tH,EAAO,EAAI/tH,GAAK0tH,EAAI,GACpBM,EAAK,CAAC,IAAMD,EAAM,IAAMA,EAAM,IAAMA,GACpCE,EAAK,CAACH,EAAI,GAAKC,EAAMD,EAAI,GAAKC,EAAMD,EAAI,GAAKC,GACnD,IAAK,IAAIhuH,EAAI,EAAGA,EAAI0tH,EAAG1tH,IAAK,CAC1B,MAAMmuH,EAAOnuH,GAAK0tH,EAAI,GACtBI,EAAOzyI,KAAW4yI,EAAG,IAAMC,EAAG,GAAKD,EAAG,IAAME,EAC5CL,EAAOzyI,KAAW4yI,EAAG,IAAMC,EAAG,GAAKD,EAAG,IAAME,EAC5CL,EAAOzyI,KAAW4yI,EAAG,IAAMC,EAAG,GAAKD,EAAG,IAAME,EAC5CL,EAAOzyI,KAAW,GACpB,CACF,CAEAs4B,EAAKy6G,aAAaR,EAAS,EAAG,EAChC,CAxJIS,CAAUnC,EAAe7rI,QAAS5D,WAAiC8wI,EAAKR,EAAaD,EAAS,GAC7F,CAACS,KAGJlsI,EAAAA,EAAAA,KAAU,MAsJZ,SAAiBd,GACf,MAAMmtI,EAAIntI,EAAO+kC,YAEjB/kC,EAAOD,MAAQotI,EACfntI,EAAOI,OAFG,EAGV,MAAMgzB,EAAMpzB,EAAOG,WAAW,MAExBktI,EAAUj6G,EAAIk6G,gBAAgBH,EAL1B,GAMJI,EAASF,EAAQ59H,KAEvB,IAAI3U,EAAQ,EAEZ,IAAK,IAAI2kB,EAAI,EAAGA,EAAI0tH,EAAG1tH,IAAK,CAC1B,MAAMutH,EAAMvtH,GAAK0tH,EAAI,GACfD,GAAMH,EAAAA,GAAAA,IAAQ,CAACC,EAAK,EAAG,IAE7BO,EAAOzyI,KAAWoyI,EAAI,GACtBK,EAAOzyI,KAAWoyI,EAAI,GACtBK,EAAOzyI,KAAWoyI,EAAI,GAEtBK,EAAOzyI,KAAW,GACpB,CAEAs4B,EAAIy6G,aAAaR,EAAS,EAAG,EAC/B,CA7KIU,CAAQnC,EAAa9rI,QAAS5D,WAAgC,GAC7D,IAEH,MAAM8xI,GAAkB7oI,EAAAA,EAAAA,KAAa9B,IACnC,MAAM4qI,EAAW5qI,EAAE2X,cAAc7X,MAAMoqD,QAAQ,WAAY,IAAI7X,MAAM,EAAG,IAExE,GAAIu4F,EAASn/C,MAAM,mCAAoC,CACrD,MAAMo+C,EAAMe,EAASz9D,MAAM,KAAKlmE,KAAK4jI,GAAYtyH,OAAOsyH,EAAQvvE,UAChEmtE,GAAOd,EAAAA,GAAAA,IAAQkC,GACjB,CAEA7pI,EAAE2X,cAAc7X,MAAQ8qI,CAAQ,GAC/B,IAEGE,GAAkBhpI,EAAAA,EAAAA,KAAa9B,IACnC,MAAM+qI,EAAW/qI,EAAE2X,cAAc7X,MAAMoqD,QAAQ,gBAAiB,IAAI7X,MAAM,EAAG,GAEzE04F,EAASt/C,MAAM,uBACjBg9C,GAAOd,EAAAA,GAAAA,KAAQC,EAAAA,GAAAA,IAAQmD,EAAS7gF,QAAQ,IAAK,OAG/ClqD,EAAE2X,cAAc7X,MAAQirI,CAAQ,GAC/B,IAEGC,GAA6BlpI,EAAAA,EAAAA,KAAa9B,IAC9CyoI,GAAOd,EAAAA,GAAAA,KAAQC,EAAAA,GAAAA,IAAQ5nI,EAAE2X,cAAcszH,QAAQ/pI,MAAOgpD,QAAQ,IAAK,MAAM,GACxE,IAEGxpD,GAAY+I,EAAAA,GAAAA,GAChB,gEACAm7D,GAAc,eAQhB,OALAlnD,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,EAAcrb,UAAWA,GACjCH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAA,OAAKiS,IAAK2gI,EAAgB5nI,UAAU,gBAClCH,EAAAA,GAAA7K,cAAA,eACA6K,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,SACV5H,MAAQ,wBAAuBmvI,EAAc,SAASA,EAAc,6BAA6BwB,QAGrGlpI,EAAAA,GAAA7K,cAAA,OAAKiS,IAAK4gI,EAAc7nI,UAAU,cAChCH,EAAAA,GAAA7K,cAAA,eACA6K,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,SACV5H,MAAQ,yBAAwBqvI,4BAAsCyB,QAG1ErpI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SACbH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CAAClB,MAAOkpI,EAAU3oI,MAAM,MAAMS,SAAUgqI,IAClDvqI,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CAAClB,MAAOgpI,EAAUzoI,MAAM,MAAMS,SAAU6pI,MAGtDpqI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qBACZmnI,GAAkB5gI,KAAK/F,GACtBX,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAe,mBAAoBvI,IAAW,IAAGuoI,IAAQ,cAAWx0I,GAC/E,aAAYiM,EACZpI,MAAQ,qBAAoBoI,KAC5BE,QAAS4pI,OAIX,KCgEV,IAAensI,EAAAA,EAAAA,KA5RsB1E,IAK/B,IALgC,cACpCm2H,EAAa,eACb4a,EAAc,QACd/5E,EAAO,eACPq/D,GACDr2H,EACC,MAAM,QACJgxI,EAAO,0BACPx9D,IACExuE,EAAAA,EAAAA,OAEE,SAAEkF,IAAaC,EAAAA,EAAAA,OACd8mI,EAAqBC,IAA0B/rI,EAAAA,EAAAA,KAAS,GAEzDgsI,ECnCO,SAAuBv0D,EAAgB7M,GACpD,MAAMqhE,GAAmBjvI,EAAAA,EAAAA,IAAO,GAC1Be,GAAaf,EAAAA,EAAAA,MAkBnB,OAjBoBwF,EAAAA,EAAAA,KAAY,KAE9B,GADAypI,EAAiB9uI,UD+BoB,IC9BjC8uI,EAAiB9uI,QAGnB,OAFA8uI,EAAiB9uI,QAAU,OAC3BytE,IAIE7sE,EAAWZ,SACbe,aAAaH,EAAWZ,SAG1BY,EAAWZ,QAAUuB,YAAW,KAC9ButI,EAAiB9uI,QAAU,CAAC,GAlBZ,IAmBD,GAChB,CDiBoC,ECjB3BytE,GAGd,CDc2BshE,CAAc,GAAG,KACxChb,EAAeI,EAAAA,GAAgBsS,aAAa,IAGxCuI,GAA0B3pI,EAAAA,EAAAA,KAAY,KAC1CupI,GAAuB,EAAK,GAC3B,IAEGK,GAA2B5pI,EAAAA,EAAAA,KAAY,KAC3CupI,GAAuB,EAAM,GAC5B,IAEGM,GAA+B7pI,EAAAA,EAAAA,KAAY,KAC1CopI,GAELv9D,EAA0B,CAAEK,SAAUk9D,GAAiB,GACtD,CAACA,EAAgBv9D,IAEdi+D,GAAuB9pI,EAAAA,EAAAA,KAAY,KACvC4pI,IACAP,EAAQ,CAAEU,cAAc,GAAO,GAC9B,CAACH,EAA0BP,IAExBW,GAAsE9wI,EAAAA,EAAAA,KAAQ,IAC3E4K,IAAA,IAAC,UAAEC,EAAS,OAAE/G,GAAQ8G,EAAA,OAC3BrF,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLoN,QAAS7O,EACTzG,KAAK,UACLsD,MAAM,cACNR,UAAW5B,EAAS,SAAW,GAC/BsC,QAASyE,EACTE,UAAU,gBAEVxF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mBACN,GAEV,CAAC2D,IAEE8pD,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,KA8Mb,OACE7tD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACNE,QAAS+vD,EACTprD,UAAWooD,EAAQ,mBAEnB5tD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BArNnB,WACE,OAAQ4vH,GACN,KAAKM,EAAAA,GAAgBmb,YACnB,OAAOxrI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,6BACtB,KAAKyiE,EAAAA,GAAgBob,QACnB,OAAOzrI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,YACtB,KAAKyiE,EAAAA,GAAgBqb,cACnB,OAAO1rI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,qBACtB,KAAKyiE,EAAAA,GAAgBxzC,YACnB,OAAO78E,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,UACtB,KAAKyiE,EAAAA,GAAgBsb,cACnB,OAAO3rI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,kBACtB,KAAKyiE,EAAAA,GAAgBub,YACnB,OAAO5rI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,iBACtB,KAAKyiE,EAAAA,GAAgB0D,QACnB,OAAO/zH,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,oBACtB,KAAKyiE,EAAAA,GAAgBwb,SACnB,OAAO7rI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,aACtB,KAAKyiE,EAAAA,GAAgByb,eACnB,OAAO9rI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,mBACtB,KAAKyiE,EAAAA,GAAgB0b,SACnB,OAAO/rI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,iBACtB,KAAKyiE,EAAAA,GAAgBsS,aACnB,OAAO3iI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,8BAEtB,KAAKyiE,EAAAA,GAAgBiU,sBACnB,OAAOtkI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,mBACtB,KAAKyiE,EAAAA,GAAgBgW,2BACnB,OAAOrmI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,aAEtB,KAAKyiE,EAAAA,GAAgB2b,mBACnB,OAAOhsI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,iBACtB,KAAKyiE,EAAAA,GAAgB4b,gBACnB,OAAOjsI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,oBACtB,KAAKyiE,EAAAA,GAAgB6b,oBACnB,OAAOlsI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,yBACtB,KAAKyiE,EAAAA,GAAgB8b,WACnB,OAAOnsI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,eACtB,KAAKyiE,EAAAA,GAAgB+b,gBACnB,OAAOpsI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,oBACtB,KAAKyiE,EAAAA,GAAgBgc,aACnB,OAAOrsI,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,iBACnB,KAAK0wH,EAAAA,GAAgBic,kBACnB,OAAOtsI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,oBACtB,KAAKyiE,EAAAA,GAAgBkc,qBACnB,OAAOvsI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,yBACtB,KAAKyiE,EAAAA,GAAgBmc,gBACnB,OAAOxsI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,oBACtB,KAAKyiE,EAAAA,GAAgBoc,kBACnB,OAAOzsI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,2BACtB,KAAKyiE,EAAAA,GAAgBqc,iBACnB,OAAO1sI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,UAEtB,KAAKyiE,EAAAA,GAAgBsc,+BACrB,KAAKtc,EAAAA,GAAgBuc,mCACrB,KAAKvc,EAAAA,GAAgBwc,0BACrB,KAAKxc,EAAAA,GAAgByc,iCACnB,OAAO9sI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,oBAEtB,KAAKyiE,EAAAA,GAAgB0c,8BACrB,KAAK1c,EAAAA,GAAgB2c,kCACrB,KAAK3c,EAAAA,GAAgB4c,yBACrB,KAAK5c,EAAAA,GAAgB6c,gCACnB,OAAOltI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,mBAEtB,KAAKyiE,EAAAA,GAAgB8c,kCACrB,KAAK9c,EAAAA,GAAgB+c,+BACrB,KAAK/c,EAAAA,GAAgBgd,4BACrB,KAAKhd,EAAAA,GAAgBid,iCACrB,KAAKjd,EAAAA,GAAgBkd,oCACrB,KAAKld,EAAAA,GAAgBmd,gCACrB,KAAKnd,EAAAA,GAAgBod,+BACnB,OAAOztI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,gBAEtB,KAAKyiE,EAAAA,GAAgBqd,iCACrB,KAAKrd,EAAAA,GAAgBsd,8BACrB,KAAKtd,EAAAA,GAAgBud,2BACrB,KAAKvd,EAAAA,GAAgBwd,gCACrB,KAAKxd,EAAAA,GAAgByd,mCACrB,KAAKzd,EAAAA,GAAgB0d,+BACrB,KAAK1d,EAAAA,GAAgB2d,8BACnB,OAAOhuI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,eAEtB,KAAKyiE,EAAAA,GAAgB4d,YACnB,OAAOjuI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,+BAEtB,KAAKyiE,EAAAA,GAAgB6d,eACnB,OAAOluI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,kBACtB,KAAKyiE,EAAAA,GAAgB8d,eACnB,OAAOnuI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,qBACtB,KAAKyiE,EAAAA,GAAgB+d,oBACnB,OAAOpuI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,iBAEtB,KAAKyiE,EAAAA,GAAgBge,cACrB,KAAKhe,EAAAA,GAAgBie,aACnB,OAAOtuI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,wBACtB,KAAKyiE,EAAAA,GAAgBke,iBACrB,KAAKle,EAAAA,GAAgBme,uBACrB,KAAKne,EAAAA,GAAgBoe,2BACnB,OAAOzuI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,+BACtB,KAAKyiE,EAAAA,GAAgBqe,wBACnB,OAAO1uI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,0BACtB,KAAKyiE,EAAAA,GAAgBse,qBACrB,KAAKte,EAAAA,GAAgBue,wBACnB,OAAO5uI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,iBACtB,KAAKyiE,EAAAA,GAAgBwe,sBACrB,KAAKxe,EAAAA,GAAgBye,mBACnB,OAAO9uI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,uBACtB,KAAKyiE,EAAAA,GAAgB0e,0BACrB,KAAK1e,EAAAA,GAAgB2e,uBACnB,OAAOhvI,EAAAA,GAAA7K,cAAA,UAAI,uBACb,KAAKk7H,EAAAA,GAAgB4e,qBACnB,OAAOjvI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,mCACtB,KAAKyiE,EAAAA,GAAgB6e,2BACrB,KAAK7e,EAAAA,GAAgB8e,aACrB,KAAK9e,EAAAA,GAAgB+e,kCACnB,OAAOpvI,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,+BAEtB,KAAKyiE,EAAAA,GAAgB2D,iBACrB,KAAK3D,EAAAA,GAAgB+D,gBACrB,KAAK/D,EAAAA,GAAgB8C,oBACrB,KAAK9C,EAAAA,GAAgBgD,2BACrB,KAAKhD,EAAAA,GAAgBkD,wBACnB,OAAOvzH,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,aAEtB,KAAKyiE,EAAAA,GAAgBsC,gBACnB,OAAO3yH,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,qCAEtB,KAAKyiE,EAAAA,GAAgBqC,8BACrB,KAAKrC,EAAAA,GAAgBsD,0BACnB,OAAO3zH,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,oCAEtB,KAAKyiE,EAAAA,GAAgBwD,8BACnB,OAAO7zH,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,mDAEtB,KAAKyiE,EAAAA,GAAgBoB,QACnB,OAAOzxH,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,YACtB,KAAKyiE,EAAAA,GAAgBC,oBACnB,OAAOtwH,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,cACtB,KAAKyiE,EAAAA,GAAgBV,aACnB,OAAO3vH,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,2BACtB,KAAKyiE,EAAAA,GAAgBE,kBACrB,KAAKF,EAAAA,GAAgBG,8BACrB,KAAKH,EAAAA,GAAgBI,yBACnB,OACEzwH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wBACbH,EAAAA,GAAA7K,cAAA,UAAKy4D,EAAQ,eACZjwD,QAAQgtI,IACP3qI,EAAAA,GAAA7K,cAACoR,GAAAA,EAAY,CACXpG,UAAU,qBACVqG,QAAS+kI,EACT9kI,UAAU,SAEVzG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASK,aAAW,EAACzF,QAASuqI,GAC1Cx9E,EAAQ,aAMrB,KAAKyiE,EAAAA,GAAgBK,qBACrB,KAAKL,EAAAA,GAAgBc,iCACrB,KAAKd,EAAAA,GAAgBM,qBACrB,KAAKN,EAAAA,GAAgBgB,iCACnB,OACErxH,EAAAA,GAAA7K,cAAA,UACGy4D,EACCmiE,IAAkBM,EAAAA,GAAgBK,sBAC3BX,IAAkBM,EAAAA,GAAgBc,iCACrC,gBAAkB,kBAI9B,QACE,OACEnxH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wBAEbH,EAAAA,GAAA7K,cAAA,MAAI0L,QAASkqI,GACVn9E,EAAQ,aAGX5tD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLoN,QAAS7O,EACTzG,KAAK,UACLsD,MAAM,cAENE,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBmb,aAC9ChmI,UAAWooD,EAAQ,6BAEnB5tD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oBAEfH,EAAAA,GAAA7K,cAACoR,GAAAA,EAAY,CACXpG,UAAU,qBACVqG,QAAS+kI,EACT9kI,UAAU,SAEVzG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASpF,QAASqqI,GAA0Bt9E,EAAQ,kBAK/E,CAaKlxB,GACD18B,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQssI,EACRpsI,QAAS0sI,EACTtjI,KAAM+lD,EAAQ,mBACdh4B,aAAcg4B,EAAQ,0BACtB/3B,eAAgBw1G,EAChBv1G,sBAAoB,IAElB,IE5HV,IAAex3B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,SACJ05H,EAAQ,aAAEiU,EAAY,kBAAEC,EAAiB,eAAEnU,GACzCz5H,EAAO+kC,SAASg3E,MACd8xB,EAAY7tI,EAAO+kC,SAAS8oG,UAIlC,MAAO,CACLn9G,sBAH2B0B,EAAAA,EAAAA,KAA2BpyB,GAItD6tI,YACAnU,WACAiU,eACAC,oBACAnU,iBACD,GAhBe15H,EAlJgC7H,IAU9C,IAV+C,SACnD8S,EAAQ,qBACR0lB,EAAoB,UACpBm9G,EAAS,SACTnU,EAAQ,aACRiU,EAAY,kBACZC,EAAiB,eACjBnU,EAAc,eACdlL,EAAc,QACdr/D,GACDh3D,EACC,MAAM,cACJ41I,EAAa,iBACbr0B,EAAgB,iBAChBjnF,IACEt1B,EAAAA,EAAAA,OAEG6wI,EAAkBC,IAAuB3wI,EAAAA,EAAAA,IAAiBq8H,IAC1Dt0G,EAAW6oH,EAAeC,IAAmB/rI,EAAAA,EAAAA,KAE9CgsI,EAA2Bz9G,GAAwBk9G,EAEnD3vI,GAAOC,EAAAA,EAAAA,MAEb1C,EAAAA,EAAAA,KAAU,KACHqyI,GAAW/7I,QACdg8I,GACF,GACC,CAACD,IAEJ,MAAM92D,GAAet5E,EAAAA,EAAAA,IAAiBm8G,IACpCo0B,EAAoBp0B,GACpBq0B,KAEKG,EAAAA,GAAAA,IAAex0B,GAAsB,KACxCs0B,IAEAz0B,EAAiB,CAAEigB,SAAU9f,GAAuB,GACpD,IAGEh7G,GAAU7F,EAAAA,EAAAA,KAAQ,KACtB,IAAK80I,EAAW,OAChB,MAAMQ,GAAmBvyI,OAAOwyI,UAAU5U,UAAY,MAAMn9F,cACtDgyG,EAAgBF,EAAgBG,OAAO,EAAG,GAEhD,OAAOX,EAAU7oI,KAAIrB,IAAA,IAAC,SAAEi2G,EAAQ,WAAE60B,EAAU,KAAE9vI,GAAMgF,EAAA,MAAM,CACxD9F,MAAO+7G,EACPx7G,MAAOqwI,EACP5wD,SAAUl/E,EACVymB,UAAWw0F,IAAam0B,GAAoB3oH,EAC7C,IAA8BkwB,MAAMC,IAC5B84F,GAAoB94F,EAAE13C,QAAUwwI,GAAmB94F,EAAE13C,QAAU0wI,EAAsB,GAAJ,GACxF,GACD,CAACnpH,EAAWyoH,EAAWE,IAEpBW,GAA8BjxI,EAAAA,EAAAA,IAAiBsqF,IACnD0xB,EAAiB,CAAEk0B,aAAc5lD,GAAW,IAGxC4mD,GAAmClxI,EAAAA,EAAAA,IAAiBsqF,IACxD0xB,EAAiB,CAAEm0B,kBAAmB7lD,GAAW,IAG7C6mD,GAAkCnxI,EAAAA,EAAAA,IAAgB,KACjDizB,GACH8B,EAAiB,CACfQ,eAAgB,gBAEpB,IAGI67G,GAAqB91I,EAAAA,EAAAA,KAAQ,KACjC,GAAK+1I,EAAAA,IAA6BrV,EAAe3nI,OAIjD,OAA8B,IAA1B2nI,EAAe3nI,OACK,IAAIqoH,KAAKC,aAAa,CAACsf,GAAW,CAAEhoI,KAAM,aAC3C2oH,GAAGof,EAAe,IAGlCx7H,EAAK,YAAaw7H,EAAe3nI,OAAO,GAC9C,CAAC2nI,EAAgBx7H,EAAMy7H,IAEpBqV,GAAwBtxI,EAAAA,EAAAA,IAAgB,KAC5C8wH,EAAeI,EAAAA,GAAgByb,eAAe,IAQhD,OALA3uH,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oDACZqwI,EAAAA,IACCxwI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,uBACZs7B,QAASo0G,EACT9pF,QAAS6qF,IAEXpwI,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,2BACZs7B,QAAS40G,EACTz8H,UAAWgf,EACX27E,UAAY37E,OAAgC19B,EAAT,OACnCs5G,aAAcsiC,EACd/qF,QAAS8qF,KAEThB,GAAgBQ,IAChB7vI,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACN1pG,QAAS4vI,GAER9wI,EAAK,kBACNK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,gCAAgCowI,IAGpDvwI,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,uCACVR,EAAK,kCAIZK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sCACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,wBACXR,EAAK,mCAEPW,EACCN,EAAAA,GAAA7K,cAAC4rF,GAAU,CACTroC,MAAOp4C,EACP89E,cAAeqxD,EACf5xD,qBAAmB,EACnBqB,sBAAuBzG,EACvBjhD,cAAc,QACdr3B,UAAU,oBAGZH,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,OAGR,K,wCCxIV,MAgNA,IAAevgD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,cAAE8kB,GAAkB9kB,EACpBgvI,GAAsBC,EAAAA,EAAAA,IAAuCjvI,GAC7DkvI,EAAelvI,EAAO4mF,OAAOuoD,QAC7BC,EAAqBnzI,QAAQ+D,EAAO4mF,OAAOyoD,SAASC,KAAKC,aAAaz9I,QAE5E,MAAO,CACL09I,aAAcxvI,EAAO2zH,eAAeqB,cAAcljI,OAClDgzB,gBACA8lE,gBAAgBC,EAAAA,EAAAA,KAA+B7qF,GAC/CgvI,sBACAE,eACAE,qBACD,GAdervI,EAhN4B7H,IAU1C,IAV2C,SAC/C8S,EAAQ,cACR8Z,EAAa,aACb0qH,EAAY,cACZ5kD,EAAa,oBACbokD,EAAmB,aACnBE,EAAY,mBACZE,EAAkB,eAClB7gB,EAAc,QACdr/D,GACDh3D,EACC,MAAM,sBACJsuB,EAAqB,iBACrBgM,EAAgB,gBAChBi9G,EAAe,QACf/oH,EAAO,wBACPgpH,EAAuB,sBACvBC,IACEzyI,EAAAA,EAAAA,OAEG0yI,EAAqBC,EAAmBC,IAAsB3tI,EAAAA,EAAAA,IAAQ,GAEvElE,GAAOkuD,EAAAA,GAAAA,KACPD,GAAUhuD,EAAAA,EAAAA,MAEhB1C,EAAAA,EAAAA,KAAU,KACJspB,GACF0B,EAAsB,CAAE1pB,OAAQgoB,EAAeirH,WAAW,GAC5D,GACC,CAACjrH,KAEJrJ,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAM8gF,GAAoBvyI,EAAAA,EAAAA,IAAgB,KACxCgyI,IACAK,GAAoB,IAGtB,OACExxI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mCACZqmB,GACCxmB,EAAAA,GAAA7K,cAACw8I,GAAAA,EAAW,CACVnzI,OAAQgoB,EACRorH,aAAcj0I,QAAQ+O,GACtByqB,eAAa,IAGhB3Q,GACCxmB,EAAAA,GAAA7K,cAAC08I,GAAAA,EAAS,CACRC,aAActrH,EACdurH,cAAY,KAIlB/xI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,WACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBob,UAE7C79E,EAAQ,2CAEX5tD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,aACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB4d,cAE7CrgF,EAAQ,+BAEX5tD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,SACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBsb,gBAE7C/9E,EAAQ,kBAEX5tD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,OACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBub,cAE7Ch+E,EAAQ,iBAEX5tD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,OACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB0D,UAE7CnmE,EAAQ,oBAEX5tD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,SACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBoB,UAE7C7jE,EAAQ,YAEX5tD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,kBACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB6d,iBAE7CtgF,EAAQ,iBACRsjF,EAAe,GAAMlxI,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,gCAAgC+wI,IAExElxI,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,WACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBwb,WAE7Cj+E,EAAQ,YACT5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,gCAAgCytD,EAAQokF,WAE1DhyI,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,WACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB0b,WAE7Cn+E,EAAQ,kBAGb5tD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACZmsF,GACCtsF,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPG,YAAah1B,EAAAA,GAAA7K,cAACq/H,GAAAA,EAAQ,CAACr0H,UAAU,0BAA0B/M,KAAK,UAAUiK,KAAK,QAC/EktG,QAAM,EAEN1pG,QAASA,IAAMqzB,KAEd05B,EAAQ,oBAGZkjF,GACC9wI,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPG,YAAah1B,EAAAA,GAAA7K,cAACq/H,GAAAA,EAAQ,CAACr0H,UAAU,0BAA0B/M,KAAK,OAAOiK,KAAK,QAC5EktG,QAAM,EAEN1pG,QAASA,IAAMwwI,EAAsB,CAAC,IAErCzjF,EAAQ,qBACRjwD,QAAQizI,IACP5wI,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,iCACb8xI,EAAAA,GAAAA,IAAkBtyI,EAAMixI,KAKhCF,GACC1wI,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,OACLskG,QAAM,EAEN1pG,QAASA,IAAMuwI,KAEdxjF,EAAQ,eAIf5tD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,cACLskG,QAAM,EACN1pG,QAAS0wI,GAER3jF,EAAQ,iBAEX5tD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,OACLskG,QAAM,EAEN1pG,QAASA,IAAMunB,EAAQ,CAAE7d,IAAK2nI,EAAAA,OAE7BtkF,EAAQ,gBAEX5tD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,iBACLskG,QAAM,EAEN1pG,QAASA,IAAMunB,EAAQ,CAAE7d,IAAK4nI,EAAAA,OAE7BvkF,EAAQ,mBAGb5tD,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ+yI,EACR17G,aAAcg4B,EAAQ,uBACtB7tD,MAAO6tD,EAAQ,gBACf/lD,KAAM+lD,EAAQ,yBACd/3B,eAAgB67G,EAChBjzI,QAAS+yI,IAEP,K,4BCjNV,MA0NA,IAAelzI,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CACL0wI,6BAA8Bz0I,QAAQ+D,EAAO+kC,SAASg3E,MAAM20B,8BAC5DC,8BAA+B10I,QAAQ+D,EAAO+kC,SAASg3E,MAAM40B,+BAC7DC,sBAAuB30I,QAAQ+D,EAAO+kC,SAASg3E,MAAM60B,uBACrDC,uBAAwB50I,QAAQ+D,EAAO+kC,SAASg3E,MAAM80B,wBACtDC,0BAA2B70I,QAAQ+D,EAAO+kC,SAASg3E,MAAM+0B,2BACzDC,2BAA4B90I,QAAQ+D,EAAO+kC,SAASg3E,MAAMg1B,4BAC1DC,8BAA+B/0I,QAAQ+D,EAAO+kC,SAASg3E,MAAMi1B,+BAC7DC,oBAAqBjxI,EAAO+kC,SAASg3E,MAAMk1B,oBAC3CC,qBAAsBlxI,EAAO+kC,SAASg3E,MAAMm1B,qBAC5CC,wBAAyBnxI,EAAO+kC,SAASg3E,MAAMo1B,2BAZjCpxI,EA1NqC7H,IAanD,IAboD,SACxD8S,EAAQ,QACRkkD,EAAO,6BACPwhF,EAA4B,8BAC5BC,EAA6B,sBAC7BC,EAAqB,uBACrBC,EAAsB,0BACtBC,EAAyB,2BACzBC,EAA0B,8BAC1BC,EAA6B,qBAC7BE,EAAoB,oBACpBD,EAAmB,wBACnBE,GACDj5I,EACC,MAAM,yBACJk5I,EAAwB,gCACxBC,EAA+B,2BAC/BC,EAA0B,8BAC1BC,IACEr0I,EAAAA,EAAAA,OAEJ1B,EAAAA,EAAAA,KAAU,KACR41I,GAA0B,GACzB,CAACA,IAEJ,MAAMI,GAAeC,EAAAA,GAAAA,GAAgB,KAAK,GAEpCC,GAA4BC,EAAAA,GAAAA,MAC5BC,EAAmCF,KAA8BG,EAAAA,GAAAA,MAEjEC,GAAuBjyI,EAAAA,EAAAA,KAAY,CACvC9B,EACAg0I,EACAC,KAEA,MAAMC,EAA+B,YAAbF,GACnBrB,IACc,UAAbqB,EAAuBnB,EAAwBE,GAC/CoB,EAAyC,YAAbH,EAC9BpB,EACc,UAAboB,EAAuBlB,EAAyBE,EAErDO,EAA2B,CACzBS,cACgB,WAAZC,GAAwB,CAAE3/B,UAAWt0G,EAAEC,OAAOu7B,QAAS44G,mBAAoBD,MAC/D,iBAAZF,GAA8B,CAAEG,mBAAoBp0I,EAAEC,OAAOu7B,QAAS84E,SAAU4/B,IACpF,GACD,CACDlB,EAA4BD,EAC5BD,EAAwBD,EACxBD,EAA+BD,EAC/BY,IAGIc,GAA+BvyI,EAAAA,EAAAA,KAAa9B,IAChD,MAAM89D,EAAY99D,EAAEC,OAAOu7B,QAC3Bg4G,EAA8B,CAC5BN,oBAAqBp1E,MAChBA,GAAa,CAAEq1E,sBAAsB,IAC1C,GACD,CAACK,IAEEc,GAAgCxyI,EAAAA,EAAAA,KAAa9B,IACjDwzI,EAA8B,CAC5BL,qBAAsBnzI,EAAEC,OAAOu7B,SAC/B,GACD,CAACg4G,IAEEe,GAAwCzyI,EAAAA,EAAAA,KAAa9B,IACzD+zI,EAAqB/zI,EAAG,UAAW,SAAS,GAC3C,CAAC+zI,IAEES,GAAkC1yI,EAAAA,EAAAA,KAAa9B,IACnD+zI,EAAqB/zI,EAAG,UAAW,eAAe,GACjD,CAAC+zI,IAEEU,GAAkC3yI,EAAAA,EAAAA,KAAa9B,IACnD+zI,EAAqB/zI,EAAG,QAAS,SAAS,GACzC,CAAC+zI,IAEEW,GAA4B5yI,EAAAA,EAAAA,KAAa9B,IAC7C+zI,EAAqB/zI,EAAG,QAAS,eAAe,GAC/C,CAAC+zI,IAEEY,GAAoC7yI,EAAAA,EAAAA,KAAa9B,IACrD+zI,EAAqB/zI,EAAG,YAAa,SAAS,GAC7C,CAAC+zI,IAEEa,GAA8B9yI,EAAAA,EAAAA,KAAa9B,IAC/C+zI,EAAqB/zI,EAAG,YAAa,eAAe,GACnD,CAAC+zI,IAEEc,GAAkC/yI,EAAAA,EAAAA,KAAa9B,IACnDszI,EAAgC,CAC9Bh/B,UAAWt0G,EAAEC,OAAOu7B,SACpB,GACD,CAAC83G,IAEEv7H,GAAqBjW,EAAAA,EAAAA,KAAa4P,IACtC8hI,EAA8B,CAC5BJ,wBAAyB1hI,IAE3B+hI,GAAa,KAAMqB,EAAAA,GAAAA,SAAgB7/I,EAAWyc,IAAQ,GACrD,CAAC+hI,EAAcD,IAEZtzI,GAAOC,EAAAA,EAAAA,KAOb,OALAud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAW,qBAG1EsL,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAM,oBAENy/E,SAAU5/E,EAAKgzI,EAAsB,gCAAkC,kCACvE13G,QAAS03G,EACTv/H,UAAWggI,EACX7yI,SAAUuzI,IAEZ9zI,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAM,wBACNsT,UAAWu/H,IAAwBW,EAEnC/zD,SAAU+zD,EAAmC3zI,EAAKizI,EAAuB,gCAAkC,kCAAoC,gBAC/I33G,QAAS23G,EACTryI,SAAUwzI,IAEZ/zI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wBACbH,EAAAA,GAAA7K,cAACyd,GAAAA,EAAW,CACV9S,MAAM,QACNmgB,IAAK,EACLT,IAAK,GACLpM,UAAWggI,EACX7zI,MAAOszI,EACPtyI,SAAUiX,MAIhBxX,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DiL,EAAK,6BAGRK,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,gCAEZ4/E,SAAU5/E,EAAKyyI,EAA+B,gCAAkC,kCAChFn3G,QAASm3G,EACT7xI,SAAUyzI,IAEZh0I,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,kBACZyT,UAAWg/H,EAEX7yD,SAAU5/E,EAAK0yI,EAAgC,gCAAkC,kCACjFp3G,QAASo3G,EACT9xI,SAAU0zI,KAIdj0I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,iBAEhFK,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,0BACZ4/E,SAAU5/E,EAAK2yI,EAAwB,gCAAkC,kCACzEr3G,QAASq3G,EACT/xI,SAAU2zI,IAEZl0I,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,kBACZyT,UAAWk/H,EACX/yD,SAAU5/E,EAAK4yI,EAAyB,gCAAkC,kCAC1Et3G,QAASs3G,EACThyI,SAAU4zI,KAIdn0I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,mBAEhFK,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,4BAEZ4/E,SAAU5/E,EAAK6yI,EAA4B,gCAAkC,kCAC7Ev3G,QAASu3G,EACTjyI,SAAU6zI,IAEZp0I,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,kBACZyT,UAAWo/H,EAEXjzD,SAAU5/E,EAAK8yI,EAA6B,gCAAkC,kCAC9Ex3G,QAASw3G,EACTlyI,SAAU8zI,KAIdr0I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAYiL,EAAK,eAEhFK,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,iBACZs7B,QAASy3G,EACTnyI,SAAU+zI,KAGV,K,4BCjNV,MAAME,GAA0B,CAC9B,eACA,gBACA,iBAGIC,GAAiC,CACrC,eACA,SACA,iBAGIC,GAA4C,CAChD,CAAC,gCAAiC,CAChC,CAAE7tI,IAAK,kBAAmB/G,MAAO,oBACjC,CAAE+G,IAAK,2BAA4B/G,MAAO,6BAC1C,CAAE+G,IAAK,wBAAyB/G,MAAO,2BACvC,CAAE+G,IAAK,4BAA6B/G,MAAO,+BAC3C,CAAE+G,IAAK,wBAAyB/G,MAAO,0BACvC,CAAE+G,IAAK,kBAAmB/G,MAAO,oBAAqBsT,UAAWuhI,EAAAA,IACjE,CAAE9tI,IAAK,wBAAyB/G,MAAO,0BACvC,CAAE+G,IAAK,aAAc/G,MAAO,0BAE9B,CAAC,qBAAsB,CACrB,CAAE+G,IAAK,gBAAiB/G,MAAO,wBAC/B,CAAE+G,IAAK,uBAAwB/G,MAAO,0BACtC,CAAE+G,IAAK,kBAAmB/G,MAAO,oBACjC,CAAE+G,IAAK,iBAAkB/G,MAAO,2CAElC,CAAC,gBAAiB,CAChB,CAAE+G,IAAK,eAAgB/G,MAAO,eAC9B,CAAE+G,IAAK,iBAAkB/G,MAAO,oBAqJpC,IAAexB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACjC,CACLkzI,qBAAqBC,EAAAA,EAAAA,KAA0BnzI,MAF/BD,EAjJpB,SAA4B7H,GAIF,IAJG,SAC3B8S,EAAQ,oBACRkoI,EAAmB,QACnBhkF,GACsBh3D,EACtB,MAAM,iBACJuhH,EAAgB,0BAChB25B,IACEl2I,EAAAA,EAAAA,OAEJue,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAMjxD,GAAOC,EAAAA,EAAAA,MACNm1I,EAAuBC,IAA4Bj2I,EAAAA,EAAAA,IAAkC,CAAC,GAEvFk2I,GAAuBx6I,EAAAA,EAAAA,KAAQ,IAC5Bi6I,GAAoBxiG,QAAO,CAAC8K,EAAG33C,EAAenO,KAAU,IAAtB,CAAEoJ,GAAQ+E,EAGjD,OAFA23C,EAAI9lD,GAASoJ,EAAQ8gG,OAAMz6F,IAAA,IAAC,IAAEE,GAAKF,EAAA,OAAKiuI,EAAoB/tI,EAAI,IAEzDm2C,CAAG,GACT,CAAC,IACH,CAAC43F,IAEEM,GAAsBz6I,EAAAA,EAAAA,KAAQ,KAC9B06I,EAAAA,GAAAA,GAAaP,EAAqBQ,GAAAA,IAC7BC,EAAAA,KAELF,EAAAA,GAAAA,GAAaP,EAAqBU,GAAAA,IAC7BC,EAAAA,KAELJ,EAAAA,GAAAA,GAAaP,EAAqBY,GAAAA,IAC7BC,EAAAA,IAGFC,EAAAA,KACN,CAACd,IACEe,EAAwBT,IAAwBQ,EAAAA,IAClDjB,GACAD,GAEEoB,GAAsBr0I,EAAAA,EAAAA,KAAY,CAAC9B,EAAqBvI,KAC5DuI,EAAE0Y,iBACF,MAAM09H,EAAe79H,OAAO9gB,GAE5B89I,GAA0B3kF,IAAI,IACzBA,EACH,CAACwlF,IAAgBxlF,EAAKwlF,MACrB,GACF,IAEGC,GAA6Bv0I,EAAAA,EAAAA,KAAaw0I,IAC9C,MAAMC,EAAcD,IAAaR,EAAAA,IAC7BD,GAAAA,GACCS,IAAaN,EAAAA,IAAsBD,GAAAA,GAAgCJ,GAAAA,GAExEj6B,EAAiB,CAAE86B,eAAgBF,IACnCjB,EAA0BkB,EAAY,GACrC,CAAC76B,IAEE+6B,GAA4B30I,EAAAA,EAAAA,KAAa9B,IAC7C,MAAM,KAAEY,EAAI,QAAE46B,GAAYx7B,EAAEC,OACtBy2I,EAAoBzB,GAAoBhvG,MAAK/jC,IAAA,IAAEy0I,GAAYz0I,EAAA,OAAKy0I,IAAgB/1I,CAAI,IAC1F,IAAK81I,EACH,OAGF,MAAME,EAAcF,EAAkB,GAAGjkG,QAAO,CAAC8K,EAAG95B,KAAc,IAAZ,IAAErc,GAAKqc,EAE3D,OADA85B,EAAIn2C,GAAOo0B,EACJ+hB,CAAG,GACT,CAAC,GAEJ83F,EAA0BuB,EAAY,GACrC,IAEGC,GAAuB/0I,EAAAA,EAAAA,KAAa9B,IACxC,MAAM,KAAEY,EAAI,QAAE46B,GAAYx7B,EAAEC,OAE5Bo1I,EAA0B,CAAE,CAACz0I,GAA6B46B,GAAU,GACnE,IAEH,OACEj7B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAW,mBAG1EsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,4BAA4BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAAW,yCAI9EsL,EAAAA,GAAA7K,cAACyd,GAAAA,EAAW,CACVtS,QAASq1I,EACTp2I,MAAO21I,IAAwBQ,EAAAA,IAAyBD,EAAAA,IAAsBP,EAC9E30I,SAAUu1I,KAId91I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,6DACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAI,QAAO,gCAE/CsrI,GAAoBhuI,KAAI,CAAA6vI,EAAyBr/I,KAAU,IAAjCk/I,EAAa91I,GAAQi2I,EAC9C,OACEv2I,EAAAA,GAAA7K,cAAA,OACE0R,IAAKuvI,EACLj2I,UAAU,6BAEVH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,0BACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAM+1I,EACN72I,MAAOrI,EAAMqgF,WACbt8C,QAASg6G,EAAqB/9I,GAC9B4I,MAAOH,EAAKy2I,GACZroC,UAAWgnC,EAAsB79I,GAAS,KAAO,OACjDqJ,SAAU21I,EACVloC,aAAc4nC,KAGjBj4I,QAAQo3I,EAAsB79I,KAC7B8I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mCACZG,EAAQoG,KAAI8vI,IAA8B,IAA7B,IAAE3vI,EAAG,MAAE/G,EAAK,SAAEsT,GAAUojI,EACpC,GAAY,eAAR3vI,GAAyBg8H,EAAAA,GAC7B,OACE7iI,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPz+C,IAAKA,EACLxG,KAAMwG,EACNo0B,QAAS25G,EAAoB/tI,GAC7B/G,MAAOH,EAAKG,GACZsT,SAAUA,EACV7S,SAAU+1I,GACV,KAKN,KAMlB,KCmLA,IAAeh4I,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MACE+kC,UACEg3E,OAAO,YACLg5B,EAAW,mBAAEC,EAAkB,mBAAEC,EAAkB,kCAAEC,EAAiC,sBACtFC,EAAqB,uCAAEpiB,GACxB,QACDp7F,GACD,QACD0b,EACA69E,UAAU,YACRkkB,GACD,UACDryG,GACE/iC,EAEJ,MAAO,CACL0wB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GACjD+0I,cACAK,YAAan5I,QAAQm5I,GACrBC,aAAchiG,EAAQiiG,WACtBC,aAAcv1I,EAAOw2H,kBAAkBxB,cAAcljI,OACrDkjJ,qBACAQ,6BAA8Bv5I,QAAQ8mC,GAAWyyG,8BACjDN,oCACAD,qBACAliB,yCACAp7F,UACAw9G,wBACAM,gBAAgBC,EAAAA,EAAAA,KAAqB11I,GACtC,GA/BeD,EAtW+B7H,IAiB7C,IAjB8C,SAClD8S,EAAQ,qBACR0lB,EAAoB,YACpBqkH,EAAW,YACXK,EAAW,aACXC,EAAY,aACZE,EAAY,mBACZP,EAAkB,mBAClBC,EAAkB,6BAClBO,EAA4B,kCAC5BN,EAAiC,uCACjCniB,EAAsC,sBACtCoiB,EAAqB,eACrBM,EAAc,QACd99G,EAAO,eACP42F,EAAc,QACdr/D,GACDh3D,EACC,MAAM,oBACJy9I,EAAmB,iBACnBC,EAAgB,oBAChBC,EAAmB,sBACnBC,EAAqB,0BACrBC,EAAyB,4BACzB7/B,EAA2B,sBAC3B8/B,EAAqB,iBACrBv8B,IACEv8G,EAAAA,EAAAA,OAEJ1B,EAAAA,EAAAA,KAAU,KACRo6I,IACAD,IACAE,IACAG,GAAuB,GACtB,KAEHx6I,EAAAA,EAAAA,KAAU,KACJwP,GACF+qI,GACF,GACC,CAAC/qI,EAAU+qI,IAEd,MAAM7pF,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,MAEb1wC,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAM+mF,GAA6Bp2I,EAAAA,EAAAA,KAAag8D,IAC9Cq6C,EAA4B,CAC1Bg/B,kCAAmCr5E,GACnC,GACD,CAACq6C,IAEEggC,GAA0Br2I,EAAAA,EAAAA,KAAaq+E,IAC3Cu7B,EAAiB,CACf07B,sBAAuBj3D,GACvB,GACD,IAEGi4D,GAA8Bt2I,EAAAA,EAAAA,KAAaq+E,IAC/C43D,EAAsB53D,EAAU,GAC/B,CAAC43D,IAEJ,SAASM,EAAmBpE,GAC1B,IAAKA,EAAS,OAAO9lF,EAAQ,WAE7B,MAAM,WAAEh1B,EAAU,mBAAEm/G,EAAkB,YAAEC,GAAgBtE,EAGlDuE,EAAuC,cAAfr/G,EACxBs/G,EAF8B,UAAhBF,IAEyBC,EAEvCE,EAAazE,EAAQ0E,aAAa5kJ,OAASkgJ,EAAQz5G,aAAazmC,OAChE6kJ,EAAa3E,EAAQ4E,aAAa9kJ,OAASkgJ,EAAQ35G,aAAavmC,OAChE+kJ,EAAQ,GACVJ,GAAYI,EAAMvyI,KAAM,IAAGmyI,KAC3BE,IAAeJ,GAAuBM,EAAMvyI,KAAM,IAAGqyI,KAEzD,MAGMG,EAAkB,CAHCN,EAAuBv4I,EAAK,oBAAsB,GACvDA,EAAK84I,YAAYF,IAEmB5oH,OAAOhyB,SAAS0b,KAAK,KAC7E,GAAI6+H,IAAyBD,EAAuB,OAAOO,EAE3D,GAAIT,EACF,OAAOnqF,EAAQ4qF,EAAkB,qBAAuB,kBAG1D,OAAQ5/G,GACN,IAAK,YACH,MAAQ,GAAEg1B,EAAQ,mBAAmB4qF,IAEvC,IAAK,WACH,MAAQ,GAAE5qF,EAAQ,kBAAkB4qF,IAEtC,IAAK,SACH,MAAQ,GAAE5qF,EAAQ,gBAAgB4qF,IAIxC,CAEA,OACEx4I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,cACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB+d,sBAE7CxgF,EAAQ,gBACT5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,gCAAgC42I,GAAgB,KAEjEI,GACCn3I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,MACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EACb6mB,EAAczmB,EAAAA,GAAgB+D,gBAAkB/D,EAAAA,GAAgB2D,mBAGlEh0H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,aACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5BwkD,EAAQkpF,EAAc,aAAe,kBAK9C92I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,OACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EACbwmB,EAAcpmB,EAAAA,GAAgBie,aAAeje,EAAAA,GAAgBge,gBAG/DruI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,wBACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5BwkD,EAAQ6oF,EAAc,aAAe,kBAI3CQ,EAAe,GACdj3I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,MACLskG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB8d,iBAE7CvgF,EAAQ,+BACT5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,gCAAgC82I,KAKtDj3I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GAAYk5D,EAAQ,iBAEtF5tD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB2b,qBAE9ChsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,sBACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQuyB,gBAIlC5rD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB4b,kBAE9CjsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,kBACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQq/G,aAIlC14I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB6b,sBAE9ClsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,6BACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQs/G,iBAIlC34I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB8b,aAE9CnsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,eACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQ0lG,QAIlC/+H,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB+b,kBAE9CpsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,oBACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQu/G,aAIlC54I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBgc,eAE9CrsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,iBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQwqD,UAIlC7jF,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBic,oBAE9CtsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,yBACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQw/G,aAIlC74I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBqc,mBAE9C1sI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,iBACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQy/G,cAIlC94I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNwuC,oBAAkB,EAClB/jG,aAAc5iB,GAAwBpyB,EAAAA,GAAA7K,cAACq/H,GAAAA,EAAQ,CAACn3H,KAAK,MAAMjK,KAAK,YAChE+M,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBkc,uBAE9CvsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,8BACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQ2/G,kBAIlCh5I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNv1D,aAAc5iB,GAAwBpyB,EAAAA,GAAA7K,cAACq/H,GAAAA,EAAQ,CAACn3H,KAAK,MAAMjK,KAAK,YAChE+M,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBmc,kBAE9CxsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,yBACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAEzBwkD,EADH6mE,EACW,oCACA,mBAIlBz0H,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNpqG,UAAU,UAEVU,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBoc,oBAE9CzsI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,gBACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B0uI,EAAmBz+G,EAAQ4/G,gBAMnCtC,GACC32I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GAC/Dk5D,EAAQ,iCAEX5tD,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAO8tD,EAAQ,4CACf2xB,SAAU3xB,EAAQ,gCAClB3yB,QAASt9B,QAAQ+4I,GACjBtjI,UAAWujI,EACXpxF,QAASsyF,KAKdX,GACCl3I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GAC/Dk5D,EAAQ,4BAEX5tD,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAO8tD,EAAQ,kBACf2xB,SAAU3xB,EAAQ,sBAClB3yB,QAASt9B,QAAQi5I,GACjBrxF,QAASoyF,KAKf33I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GAC/Dk5D,EAAQ,+BAEX5tD,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAO8tD,EAAQ,gCACf3yB,QAASt9B,QAAQk5I,GACjBtxF,QAASqyF,KAGT,KCpTV,IAAet5I,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MACEo3B,OACEC,KAAM/C,GAER+e,SACE4K,IAAKu5F,GACN,YACDrgH,EAAW,cACXrS,GACE9kB,EAEJ,MAAO,CACLs0B,YACAkjH,aACA3iH,WAAYsC,GAAaT,QACzB+gH,iBAAiBp3I,EAAAA,EAAAA,KAAeL,GAAQ03I,WAAWC,aACnD7yH,gBACD,GAnBe/kB,EAxD8B7H,IAQ5C,IAR6C,UACjDo8B,EAAS,WACTkjH,EAAU,WACV3iH,EAAU,gBACV4iH,EAAe,cACf3yH,EAAa,OACbjoB,EAAM,QACNE,GACD7E,EACC,MAAM,mBACJ0/I,EAAkB,UAClBxlG,IACEl1C,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MACNy4C,EAAQqH,IAAa3gD,EAAAA,EAAAA,IAAS,KAErC7B,EAAAA,EAAAA,KAAU,KACRo8I,EAAmB,CAAEljG,MAAOiC,GAAS,GACpC,CAACA,EAAQihG,IAEZ,MAAMj2D,GAAqB5oF,EAAAA,EAAAA,KAAQ,KACjC,MAAM8+I,GAAsB/iH,EAAAA,GAAAA,IAAO,IAC7BD,GAAc,MACd4iH,GAAmB,IACvBxpH,QAAQ6pH,GACDA,IAAchzH,IAAkB0yH,EAAWriJ,SAAS2iJ,MAG7D,OAAO/iH,EAAAA,EAAAA,KAAkB8iH,EAAqBvjH,EAAWqiB,GACtDrB,MAAK,CAACyiG,EAASC,KACd,MAAMpuF,GAAYxvB,EAAAA,EAAAA,KAAgB9F,EAAUyjH,KAAa,GACnDE,GAAa79G,EAAAA,EAAAA,KAAgB9F,EAAU0jH,KAAc,GAE3D,OAAOpuF,EAAUsuF,cAAcD,EAAW,GAC1C,GACH,CAACT,EAAY3iH,EAAY/P,EAAe6xB,EAAQ8gG,EAAiBnjH,IAE9D6jH,GAAmBt4I,EAAAA,EAAAA,KAAasuB,IACpCikB,EAAU,CAAEjkB,WACZpxB,GAAS,GACR,CAACA,IAEJ,OACEuB,EAAAA,GAAA7K,cAACirD,GAAgB,CACf7hD,OAAQA,EACR08C,cAAeooC,EACfnoC,kBAAmBv7C,EAAK,0BACxB04C,OAAQA,EACR+C,eAAgBsE,EAChBrE,mBAAoBw+F,EACpBp7I,QAASA,GACT,KCoEN,IAAeH,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MACEi7C,OACE5jB,KAAM+gH,GAERhhH,OACEC,KAAMghH,GAERhlG,SAAS,IACP4K,GAEFkL,aACEC,WAAYF,IAEZlpD,EAEJ,MAAO,CACLo4I,aACAC,aACAb,WAAYv5F,EACZiL,gBACD,GAtBenpD,EApH2C7H,IAOzD,IAP0D,SAC9D8S,EAAQ,QACRkkD,EAAO,WACPkpF,EAAU,WACVC,EAAU,WACVb,EAAU,cACVtuF,GACDhxD,EACC,MAAM,YAAEi6C,IAAgBj1C,EAAAA,EAAAA,MAElBe,GAAOC,EAAAA,EAAAA,MACNo6I,EAAsBC,EAAoBC,IAAuBr2I,EAAAA,EAAAA,KAClEs2I,GAAqB54I,EAAAA,EAAAA,KAAasuB,IACtCgkB,EAAY,CAAEhkB,UAAS,GACtB,CAACgkB,KAEJ12B,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAMwpF,GAAuB3/I,EAAAA,EAAAA,KAAQ,IAC5By+I,EAAWhnG,QAAO,CAAC8K,EAAKntB,KAC7B,MACM6U,GADYljC,EAAAA,EAAAA,KAASquB,GACFkqH,EAAWlqH,QAAUn7B,EACxC2lJ,EAAe31G,IAASA,EAAKknB,cAAe0uF,EAAAA,EAAAA,KAAgB51G,GAMlE,OAJI21G,IACFr9F,EAAIntB,GAAUwqH,GAGTr9F,CAAG,GACT,CAAC,IACH,CAACk8F,EAAYa,IA6ChB,OACE/5I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BACbH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,6CAA6CiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACjFiL,EAAK,sBAIVK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BACZ+4I,GAAY1lJ,OACXwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACZ+4I,EAAYxyI,KAAI,CAAC8yI,EAAWvgG,IAvDzC,SAAuBugG,EAAmBvgG,EAAWgD,GACnD,MAAMzL,GAAYhvC,EAAAA,EAAAA,KAASg4I,GACrB90G,EAAOq1G,EAAWP,GAClB9zH,EAAOo0H,EAAWN,GAClBtzH,EAAOwe,GAAQhf,EAEfvlB,GAAY+I,EAAAA,GAAAA,GAChB,wDACAsnC,EAAY,UAAY,SAGpB+pG,EAAmBH,EAAqBZ,GAE9C,OACEx5I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAM,WAAU2yI,IAChBr5I,UAAWA,EACXwS,QAAM,EACN43F,QAAM,EACNr2D,eAAgB,CAAC,CACfn0C,MAAO,UACPkG,KAAM,SACNsuC,QAASA,KACP4lG,EAAmBX,EAAU,IAGjCjhJ,MAAQ,SA6B6D,EA7BpC0gD,GAAK8/E,EAAAA,UAEtC/4H,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL5oB,KAAK,SACL6oB,KAAMA,IAERlmB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAeiJ,IAAI,QAC/B8c,GAAQlmB,EAAAA,GAAA7K,cAACkpD,GAAAA,EAAa,CAACn4B,KAAMA,IAC7Bwe,GAAMknB,aACL5rD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gBAAgBiJ,IAAI,SAAQ+iD,EAAAA,GAAAA,IAA0BvB,EAAelmB,EAAKknB,cAE1F2uF,GAAqBv6I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBAAmBiJ,IAAI,QAAO,IAAEmxI,IAI7E,CAc+CC,CAAchB,EAAWvgG,MAE5DigG,IAAeA,EAAW1lJ,OAC5BwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,aAAaiJ,IAAI,QAAQzJ,EAAK,cAE7CK,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,CAACh4C,IAAI,cAKnB7G,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,SAAO,EACPp4B,UAAU,oBACVU,QAASo5I,EACTz0I,UAAW7F,EAAK,iBAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mBAEfH,EAAAA,GAAA7K,cAACslJ,GAAc,CACbl8I,OAAQy7I,EACRv7I,QAASy7I,IAEP,KC/IH,SAASQ,GAAcC,GAC5B,OAAQA,GACN,KAAKtqB,EAAAA,GAAgB2b,mBACrB,KAAK3b,EAAAA,GAAgB8c,kCACrB,KAAK9c,EAAAA,GAAgBqd,iCACnB,MAAO,cACT,KAAKrd,EAAAA,GAAgB4b,gBACrB,KAAK5b,EAAAA,GAAgBsc,+BACrB,KAAKtc,EAAAA,GAAgB0c,8BACnB,MAAO,WACT,KAAK1c,EAAAA,GAAgB6b,oBACrB,KAAK7b,EAAAA,GAAgBuc,mCACrB,KAAKvc,EAAAA,GAAgB2c,kCACnB,MAAO,eACT,KAAK3c,EAAAA,GAAgB8b,WACrB,KAAK9b,EAAAA,GAAgBwc,0BACrB,KAAKxc,EAAAA,GAAgB4c,yBACnB,MAAO,MACT,KAAK5c,EAAAA,GAAgB+b,gBACrB,KAAK/b,EAAAA,GAAgB+c,+BACrB,KAAK/c,EAAAA,GAAgBsd,8BACnB,MAAO,WACT,KAAKtd,EAAAA,GAAgBgc,aACrB,KAAKhc,EAAAA,GAAgBgd,4BACrB,KAAKhd,EAAAA,GAAgBud,2BACnB,MAAO,QACT,KAAKvd,EAAAA,GAAgBic,kBACrB,KAAKjc,EAAAA,GAAgBid,iCACrB,KAAKjd,EAAAA,GAAgBwd,gCACnB,MAAO,WACT,KAAKxd,EAAAA,GAAgBkc,qBACrB,KAAKlc,EAAAA,GAAgBkd,oCACrB,KAAKld,EAAAA,GAAgByd,mCACnB,MAAO,gBACT,KAAKzd,EAAAA,GAAgBoc,kBACrB,KAAKpc,EAAAA,GAAgByc,iCACrB,KAAKzc,EAAAA,GAAgB6c,gCACnB,MAAO,aACT,KAAK7c,EAAAA,GAAgBqc,iBACrB,KAAKrc,EAAAA,GAAgBmd,gCACrB,KAAKnd,EAAAA,GAAgB0d,+BACnB,MAAO,YACT,KAAK1d,EAAAA,GAAgBuqB,gBACrB,KAAKvqB,EAAAA,GAAgBod,+BACrB,KAAKpd,EAAAA,GAAgB2d,8BACnB,MAAO,WACT,KAAK3d,EAAAA,GAAgBwqB,kBACnB,MAAO,aAIb,CC9BA,MAmDA,IAAev8I,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CACL0wB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GACjDu2G,oBAAqBt6G,SAAQm9I,EAAAA,EAAAA,KAA0Bp5I,OAJzCD,EAnDY7H,IAEH,IAFI,qBAC/Bw4B,EAAoB,oBAAE6lF,EAAmB,WAAEr/E,GACrBh/B,EACtB,MAAM,4BAAEg+G,EAA2B,iBAAE1jF,IAAqBt1B,EAAAA,EAAAA,MACpDe,GAAOC,EAAAA,EAAAA,KACPm7I,EAAqC,WAAfniH,GAA0C,aAAfA,EAEjDoiH,GAAkC77I,EAAAA,EAAAA,IACrCo+D,GAAcq6C,EAA4B,CAAEK,oBAAqB16C,MAG9Dg3D,GAAyBp1H,EAAAA,EAAAA,IAAgB,KAC7C+0B,EAAiB,CACfQ,eAAgB,aAChB,IAGJ,OACE10B,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG0iH,GACC/6I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,gBACZs7B,QAASg9E,EACT1yD,QAASy1F,IAEXh7I,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mCAAmCiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,IACvEyxB,EAAAA,GAAAA,GAAWxmB,EAAK,oBAAqB,CAAC,SAI7CK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPG,YAAah1B,EAAAA,GAAA7K,cAACq/H,GAAAA,EAAQ,CAACr0H,UAAU,0BAA0B/M,KAAK,UAAUiK,KAAK,QAC/EwD,QAAS0zH,GAEe50H,EAAvByyB,EAA4B,mCAA2C,2BAE1EpyB,EAAAA,GAAA7K,cAAA,KACEgL,UAAU,gDACViJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAGtBiL,EADHyyB,EACQ,uCACA,gCAGZ,K,gBCtEP,MC0GA,IAAe9zB,EAAAA,EAAAA,KAnFyC1E,IAIlD,IAJmD,cACvD4sB,EAAa,uBACby0H,EAAsB,yBACtBC,GACDthJ,EACC,MAAM,aACJuhJ,EAAY,mBAAEC,EAAkB,mBAAEh6I,EAAkB,iBAAE6yB,IACpDr1B,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MAENy7I,EAAgCC,EAA8BC,IAAiC13I,EAAAA,EAAAA,IAAQ,GAGxGwnD,GAAWtvD,EAAAA,EAAAA,IAAyB,OAE1CmB,EAAAA,EAAAA,KAAU,KACH+9I,GACHE,EAAa,CAAEtrH,OAAQrJ,GACzB,GACC,CAACy0H,EAAwBz0H,EAAe20H,IAE3C,MAAMK,GAAmBj6I,EAAAA,EAAAA,KAAaugI,IACpCsZ,EAAmB,CACjBtZ,OACA2Z,YAAY,IAEdxnH,EAAiB,CACf9/B,QAASwL,EAAK,4CACd,GACD,CAACA,EAAMs0B,EAAkBmnH,IAEtBM,GAAsBn6I,EAAAA,EAAAA,KAAY,KACtCg6I,IACAn6I,EAAmB,CAAEtN,MAAOonJ,GAA4B,GACvD,CAACK,EAA+Bn6I,EAAoB85I,IAEjDS,GAAyBp6I,EAAAA,EAAAA,KAAY,KACzC8pD,EAASnvD,SAAS0/I,OAAO,GACxB,IAEH,OACE57I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNtkG,KAAK,aACLpF,QAAS86I,GAET37I,EAAAA,GAAA7K,cAAC0mJ,GAAAA,EAAY,CACXt7I,SAAUi7I,EACVnwF,SAAUA,IAEX1rD,EAAKu7I,EACF,yCACA,wCAELA,GACCl7I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNv1E,YAAah1B,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAACnyB,MAAOonJ,EAA0B79I,KAAK,OAAO8C,UDlFhB,aCmFlDU,QAASy6I,EACTh1I,aAAW,GAEV3G,EAAKu7I,EAAyBjhJ,QAC3B,yCACA,0CACJ+F,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ88I,EACR58I,QAAS88I,EACT1zI,KAAMlI,EAAK,8BACXi2B,aAAcj2B,EAAK,UACnBk2B,eAAgB6lH,EAChB5lH,sBAAoB,KAI1B91B,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mCAAmCiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACvEiL,EAAK,yCAEJ,ICNV,SAASm8I,GAAiBz2I,GAUvB,IAVwB,OACzBs1I,EAAM,QACNthH,EAAO,eACP42F,EAAc,kBACd8rB,GAMD12I,EACC,MAAM,qBAAEyyG,IAAyBl5G,EAAAA,EAAAA,MAC3BgvD,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,KAEPmuF,GAAoBvhJ,EAAAA,EAAAA,KAAQ,KAChC,MAAMwhJ,EAAYtB,IAAWtqB,EAAAA,GAAgBwqB,kBACvCv6I,EAAU,CACd,CAAEf,MAAO,YAAaO,MAAO8tD,EAAQ,iBACrC,CACEruD,MAAO,WACPO,MAAOi8I,EACL/7I,EAAAA,GAAA7K,cAAC0/H,GAAmB,CAAC/0H,MAAO8tD,EAAQ,iBAEpCA,EAAQ,eAEVwS,OAAQ27E,IAeZ,OAXIE,GACF37I,EAAQ0F,KAAK,CACXzG,MAAO,SACPO,MAAOi8I,EACL/7I,EAAAA,GAAA7K,cAAC0/H,GAAmB,CAAC/0H,MAAO8tD,EAAQ,eAEpCA,EAAQ,aAEVwS,OAAQ27E,IAGLz7I,CAAO,GACb,CAACstD,EAAS+sF,EAAQoB,IAEfG,GAAwBzhJ,EAAAA,EAAAA,KAAQ,IAChCkgJ,IAAWtqB,EAAAA,GAAgBwqB,kBACtB,CACLsB,kBAAkB,EAClBC,mBAAmB,GAIhB,CACLD,iBAA0C,WAAxB9iH,GAAST,WAC3BwjH,kBAA2C,cAAxB/iH,GAAST,aAE7B,CAACS,EAASshH,IAEPxiC,EAAauiC,GAAcC,GAE3B55C,GAAkBtmG,EAAAA,EAAAA,KAAQ,KAC9B,OAAQkgJ,GACN,KAAKtqB,EAAAA,GAAgBgc,aACnB,OAAO1sI,EAAK,oBACd,KAAK0wH,EAAAA,GAAgB4b,gBACnB,OAAOr+E,EAAQ,cACjB,KAAKyiE,EAAAA,GAAgBwqB,kBACnB,OAA6CjtF,EAAd,cAAxBv0B,GAAST,WAAqC,mBAA8B,qBAErF,KAAKy3F,EAAAA,GAAgBkc,qBACnB,OAAO3+E,EAAQ,4BACjB,QACE,OACJ,GACC,CAACA,EAASjuD,EAAMg7I,EAAQthH,IAErBgjH,GAAa5hJ,EAAAA,EAAAA,KAAQ,KACzB,OAAQkgJ,GACN,KAAKtqB,EAAAA,GAAgB2b,mBACnB,OAAOp+E,EAAQ,qBACjB,KAAKyiE,EAAAA,GAAgBwqB,kBACnB,OAAOjtF,EAAQ,sBACjB,KAAKyiE,EAAAA,GAAgB4b,gBACnB,OAAOr+E,EAAQ,iBACjB,KAAKyiE,EAAAA,GAAgB6b,oBACnB,OAAOt+E,EAAQ,4BACjB,KAAKyiE,EAAAA,GAAgB8b,WACnB,OAAOv+E,EAAQ,mBACjB,KAAKyiE,EAAAA,GAAgB+b,gBACnB,OAAOx+E,EAAQ,wBACjB,KAAKyiE,EAAAA,GAAgBgc,aACnB,OAAO1sI,EAAK,qBACd,KAAK0wH,EAAAA,GAAgBic,kBACnB,OAAO1+E,EAAQ,wBACjB,KAAKyiE,EAAAA,GAAgBkc,qBACnB,OAAO3+E,EAAQ,6BACjB,KAAKyiE,EAAAA,GAAgBoc,kBACnB,OAAO7+E,EAAQ,eACjB,KAAKyiE,EAAAA,GAAgBqc,iBACnB,OAAO9+E,EAAQ,gBACjB,KAAKyiE,EAAAA,GAAgBuqB,gBACnB,OAAOhtF,EAAQ,cACjB,QACE,OACJ,GACC,CAACA,EAASjuD,EAAMg7I,IAEb2B,GAAkBn9I,EAAAA,EAAAA,IACtB,CAACi5B,EAAoBynB,EAAoBk4F,EAA8BC,KACrE,MAAMuE,EAAenkH,GAAS5kC,QAAU,EAClCgpJ,EAAe38F,GAASrsD,QAAU,EAClCipJ,EAA8B,UAAhBzE,EAGpB,IAFiBuE,IAAgBC,IAEfC,EAChB,OAA4B7uF,EAArBmqF,EAA6B,iBAA4B,qBAC3D,GAAIA,EACT,OAAOnqF,EAAQ,sBAGjB,MAAM8uF,EAAkBH,EAAe,EAAI3uF,EAAQ,QAAS2uF,QAAgB7nJ,EACtEioJ,EAAkBH,EAAe,EAAI5uF,EAAQ,QAAS4uF,QAAgB9nJ,EAK5E,MAAO,CAHkB+nJ,EAAc98I,EAAK,oBAAsB,GAC9CA,EAAK84I,YAAY,CAACiE,EAAiBC,GAAiBhtH,OAAOhyB,WAExCgyB,OAAOhyB,SAAS0b,KAAK,IAAI,IAI9DujI,GAAgBniJ,EAAAA,EAAAA,KAAQ,IACrB6hJ,EACLjjH,GAASU,aACTV,GAASi/G,aACTj/G,GAAS0+G,mBACT1+G,GAAS2+G,cAEV,CAAC3+G,IAEEwjH,GAAcpiJ,EAAAA,EAAAA,KAAQ,IACnB6hJ,EAAgBjjH,GAASY,aAAcZ,GAAS++G,eACtD,CAAC/+G,IAEE8B,GAAyB55B,EAAAA,EAAAA,KAAahC,IAC1Cu4G,EAAqB,CACnBK,WAAYA,EACZv/E,WAAYr5B,GACZ,GACD,CAAC44G,IAEE2kC,EAAwB,MAC5B,OAAQnC,GACN,KAAKtqB,EAAAA,GAAgB2b,mBACnB,OAAO3b,EAAAA,GAAgB8c,kCACzB,KAAK9c,EAAAA,GAAgB4b,gBACnB,OAAO5b,EAAAA,GAAgBsc,+BACzB,KAAKtc,EAAAA,GAAgB6b,oBACnB,OAAO7b,EAAAA,GAAgBuc,mCACzB,KAAKvc,EAAAA,GAAgB8b,WACnB,OAAO9b,EAAAA,GAAgBwc,0BACzB,KAAKxc,EAAAA,GAAgB+b,gBACnB,OAAO/b,EAAAA,GAAgB+c,+BACzB,KAAK/c,EAAAA,GAAgBgc,aACnB,OAAOhc,EAAAA,GAAgBgd,4BACzB,KAAKhd,EAAAA,GAAgBic,kBACnB,OAAOjc,EAAAA,GAAgBid,iCACzB,KAAKjd,EAAAA,GAAgBqc,iBACnB,OAAOrc,EAAAA,GAAgBmd,gCACzB,KAAKnd,EAAAA,GAAgBuqB,gBACnB,OAAOvqB,EAAAA,GAAgBod,+BACzB,KAAKpd,EAAAA,GAAgBkc,qBACnB,OAAOlc,EAAAA,GAAgBkd,oCACzB,QACE,OAAOld,EAAAA,GAAgByc,iCAE5B,EAzB6B,GA2BxBiQ,EAAuB,MAC3B,OAAQpC,GACN,KAAKtqB,EAAAA,GAAgB2b,mBACnB,OAAO3b,EAAAA,GAAgBqd,iCACzB,KAAKrd,EAAAA,GAAgB4b,gBACnB,OAAO5b,EAAAA,GAAgB0c,8BACzB,KAAK1c,EAAAA,GAAgB6b,oBACnB,OAAO7b,EAAAA,GAAgB2c,kCACzB,KAAK3c,EAAAA,GAAgB8b,WACnB,OAAO9b,EAAAA,GAAgB4c,yBACzB,KAAK5c,EAAAA,GAAgB+b,gBACnB,OAAO/b,EAAAA,GAAgBsd,8BACzB,KAAKtd,EAAAA,GAAgBgc,aACnB,OAAOhc,EAAAA,GAAgBud,2BACzB,KAAKvd,EAAAA,GAAgBic,kBACnB,OAAOjc,EAAAA,GAAgBwd,gCACzB,KAAKxd,EAAAA,GAAgBqc,iBACnB,OAAOrc,EAAAA,GAAgB0d,+BACzB,KAAK1d,EAAAA,GAAgBuqB,gBACnB,OAAOvqB,EAAAA,GAAgB2d,8BACzB,KAAK3d,EAAAA,GAAgBkc,qBACnB,OAAOlc,EAAAA,GAAgByd,mCACzB,QACE,OAAOzd,EAAAA,GAAgB6c,gCAE5B,EAzB4B,GA2B7B,OACEltI,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GAAY2nJ,GAC9Er8I,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAO,cAAa83G,IACpB73G,QAAS07I,EACTz7I,SAAU46B,EACV36B,SAAU64B,GAAST,aAEpBmoE,GACC/gG,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mCAAmCiJ,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GAAYqsG,KAG3Fg7C,IAAsBG,EAAsBE,mBAAqBF,EAAsBC,mBACvFn8I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GAC/Dk5D,EAAQ,sBAEVsuF,EAAsBE,mBACrBp8I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNtkG,KAAK,WAELpF,QAASA,KACPovH,EAAe6sB,EAAsB,GAGvC98I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4BACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,gBACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAYy8I,KAIjCV,EAAsBC,kBACrBn8I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EACNtkG,KAAK,cAELpF,QAASA,KACPovH,EAAe8sB,EAAqB,GAGtC/8I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4BACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASytD,EAAQ,eACjC5tD,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAY08I,MAMrCd,GAAqB/7I,EAAAA,GAAA7K,cAAC2/H,GAAiB,MAG9C,CAEA,UAAex2H,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA6B,IAC9Bq2I,EACAC,GAFG,OAAEtC,GAAQh0I,EAIjB,MAAM,cACJ6f,EACAigB,UAAU,QAAEpN,IACV33B,EAEEi9H,GAAsB5sE,EAAAA,EAAAA,KAAmBrwD,EAAQ8kB,GAEvD,OAAQm0H,GACN,KAAKtqB,EAAAA,GAAgB2b,mBACnBgR,EAAiB3jH,EAAQuyB,YACzBqxF,EAAmB5jH,EAAQ6jH,WAC3B,MAEF,KAAK7sB,EAAAA,GAAgB4b,gBACnB+Q,EAAiB3jH,EAAQq/G,SACzB,MAEF,KAAKroB,EAAAA,GAAgB6b,oBACnB8Q,EAAiB3jH,EAAQs/G,aACzB,MAEF,KAAKtoB,EAAAA,GAAgB8b,WACnB6Q,EAAiB3jH,EAAQ0lG,IACzB,MAEF,KAAK1O,EAAAA,GAAgB+b,gBACnB4Q,EAAiB3jH,EAAQu/G,SACzB,MAEF,KAAKvoB,EAAAA,GAAgBgc,aACnB2Q,EAAiB3jH,EAAQwqD,MACzB,MAEF,KAAKwsC,EAAAA,GAAgBuqB,gBACrB,KAAKvqB,EAAAA,GAAgBqc,iBACnBsQ,EAAiB3jH,EAAQy/G,UACzBmE,EAAmB5jH,EAAQ8jH,SAC3B,MAEF,KAAK9sB,EAAAA,GAAgBic,kBACnB0Q,EAAiB3jH,EAAQw/G,SACzB,MAEF,KAAKxoB,EAAAA,GAAgBkc,qBACnByQ,EAAiB3jH,EAAQ2/G,cACzB,MAEF,KAAK3oB,EAAAA,GAAgBoc,kBACnBuQ,EAAiB3jH,EAAQ4/G,WAI7B,OAAK+D,EAQE,CACLA,iBACAC,mBACAz2H,cAAeA,EACfy0H,uBAAwBt9I,QAAQghI,GAChCuc,yBAA0Bvc,GAAqB35G,cAC/C+2H,kBAAmBpB,IAAWtqB,EAAAA,GAAgBkc,wBAAyBz4G,EAAAA,EAAAA,KAA2BpyB,IAb3F,CACL8kB,cAAeA,EACfy0H,uBAAwBt9I,QAAQghI,GAChCuc,yBAA0Bvc,GAAqB35G,cAWlD,GAxEevjB,EA9TyC7H,IAWvD,IAXwD,OAC5D+gJ,EAAM,SACNjuI,EAAQ,eACRswI,EAAc,iBACdC,EAAgB,cAChBz2H,EAAa,uBACby0H,EAAsB,yBACtBC,EAAwB,kBACxBa,EAAiB,eACjB9rB,EAAc,QACdr/D,GACDh3D,GACCujB,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAMwsF,GAAkB3iJ,EAAAA,EAAAA,KAAQ,KAC9B,OAAQkgJ,GACN,KAAKtqB,EAAAA,GAAgBqc,iBACnB,OAAOrc,EAAAA,GAAgBuqB,gBACzB,KAAKvqB,EAAAA,GAAgB2b,mBACnB,MAAsC,WAA/BgR,GAAgBpkH,WAA0By3F,EAAAA,GAAgBwqB,uBAAoBnmJ,EAEvF,QACE,OACJ,GACC,CAACsoJ,EAAgBrC,IAEpB,OACE36I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACbH,EAAAA,GAAA7K,cAAC2mJ,GAAiB,CAChBnB,OAAQA,EACRthH,QAAS2jH,EACT/sB,eAAgBA,EAChB8rB,kBAAmBA,IAEpBpB,IAAWtqB,EAAAA,GAAgB6b,qBAAsD,cAA/B8Q,GAAgBpkH,YACjE54B,EAAAA,GAAA7K,cAACkoJ,GAAiC,CAChC72H,cAAeA,EACfy0H,uBAAwBA,EACxBC,yBAA0BA,IAG7BP,IAAWtqB,EAAAA,GAAgB4b,iBAC1BjsI,EAAAA,GAAA7K,cAACmoJ,GAAuB,CAAC1kH,WAAYokH,GAAgBpkH,aAEtDwkH,GACCp9I,EAAAA,GAAA7K,cAAC2mJ,GAAiB,CAChBnB,OAAQyC,EACR/jH,QAAS4jH,EACThtB,eAAgBA,IAGhB,KCpDJstB,GAAmB,CAACC,GAAAA,IAsK1B,SAASC,GAA0B/7I,EAAqBi5I,GACtD,MAAM,QAAEthH,GAAY33B,EAAO+kC,SAC3B,OAAQk0G,GACN,KAAKtqB,EAAAA,GAAgB8c,kCACrB,KAAK9c,EAAAA,GAAgBqd,iCACnB,OAAOr0G,EAAQuyB,YACjB,KAAKykE,EAAAA,GAAgBsc,+BACrB,KAAKtc,EAAAA,GAAgB0c,8BACnB,OAAO1zG,EAAQq/G,SACjB,KAAKroB,EAAAA,GAAgBuc,mCACrB,KAAKvc,EAAAA,GAAgB2c,kCACnB,OAAO3zG,EAAQs/G,aACjB,KAAKtoB,EAAAA,GAAgBwc,0BACrB,KAAKxc,EAAAA,GAAgB4c,yBACnB,OAAO5zG,EAAQ0lG,IACjB,KAAK1O,EAAAA,GAAgB+c,+BACrB,KAAK/c,EAAAA,GAAgBsd,8BACnB,OAAOt0G,EAAQu/G,SACjB,KAAKvoB,EAAAA,GAAgBgd,4BACrB,KAAKhd,EAAAA,GAAgBud,2BACnB,OAAOv0G,EAAQwqD,MACjB,KAAKwsC,EAAAA,GAAgBmd,gCACrB,KAAKnd,EAAAA,GAAgB0d,+BACnB,OAAO10G,EAAQy/G,UACjB,KAAKzoB,EAAAA,GAAgBod,+BACrB,KAAKpd,EAAAA,GAAgB2d,8BACnB,OAAO30G,EAAQ8jH,SACjB,KAAK9sB,EAAAA,GAAgBid,iCACrB,KAAKjd,EAAAA,GAAgBwd,gCACnB,OAAOx0G,EAAQw/G,SACjB,KAAKxoB,EAAAA,GAAgBkd,oCACrB,KAAKld,EAAAA,GAAgByd,mCACnB,OAAOz0G,EAAQ2/G,cACjB,KAAK3oB,EAAAA,GAAgB6c,gCACrB,KAAK7c,EAAAA,GAAgByc,iCACnB,OAAOzzG,EAAQ4/G,WAIrB,CAEA,UAAe36I,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEs1I,GAAQt1I,EACjB,MAAO,CACLmhB,cAAe9kB,EAAO8kB,cACtBigB,SAAUg3G,GAA0B/7I,EAAQi5I,GAC7C,GALel5I,EA7MsD7H,IAUpE,IAVqE,YACzE8jJ,EAAW,oBACXC,EAAmB,qBACnBC,EAAoB,OACpBjD,EAAM,SACNjuI,EAAQ,cACR8Z,EAAa,SACbigB,EAAQ,eACRwpF,EAAc,QACdr/D,GACDh3D,EACC,MAAM,mBAAEikJ,IAAuBj/I,EAAAA,EAAAA,MAEzBgvD,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,KAEPiwF,GAAoCrjJ,EAAAA,EAAAA,KAAQ,KACzC,CACLsjJ,cAAc,EACd3qJ,KAAM,OACN2M,MAAOJ,EAAK,oBACZq+I,WAAY,OACZC,gBAAgB,EAChBC,YAAa,KAEd,CAACv+I,IAEEw+I,GAAmB1jJ,EAAAA,EAAAA,KAAQ,IACxB,CAACqjJ,IACP,CAACA,IAEEM,GAAqB3jJ,EAAAA,EAAAA,KAAQ,IAC5BgsC,EAIDi3G,EACK,IAAIj3G,EAAS1M,gBAAiB0M,EAAS6xG,cAEvC,IAAI7xG,EAASxM,gBAAiBwM,EAAS2xG,cANvC,IAQR,CAACsF,EAAaj3G,IACX43G,GAAwB5jJ,EAAAA,EAAAA,KAAQ,IAC/BgsC,EAGDA,EAASsxG,mBAA6B,CAACyF,GAAAA,GAAoBpqJ,MAClC,UAAzBqzC,EAASuxG,aAA2B0F,EAAsB,CAACI,EAAe1qJ,MACvE,GAJE,IAKR,CAACqzC,EAAUi3G,EAAaI,KACpB1nH,EAAaC,IAAkBt3B,EAAAA,EAAAA,IAAiB,KAChD24B,EAAeC,IAAoB54B,EAAAA,EAAAA,KAAkB,IACrD64B,EAAuBC,IAA4B94B,EAAAA,EAAAA,IAAmBq/I,IACtEE,EAA0BC,IAA+Bx/I,EAAAA,EAAAA,IAA2Bs/I,IAG3FnhJ,EAAAA,EAAAA,KAAU,KACHwP,IACHmrB,EAAyBumH,GACzBG,EAA4BF,GAC9B,GACC,CAAC3xI,EAAU2xI,EAAuBD,IAErC,MAAMp1B,GAAsBC,EAAAA,GAAAA,IAA8BrE,EAAAA,KACpDsE,GAA2BD,EAAAA,GAAAA,IAA8BE,EAAAA,KACzD7yF,GAAe77B,EAAAA,EAAAA,KAAQ,KAE3B,MAAMiiD,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAC9B/C,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KAE9B8mB,GAAUrpB,EAAAA,GAAAA,IAAO,IAAIwyF,GAAuB,MAAOE,GAA4B,KAClFv5F,QAAQvwB,IACP,MAAMsmB,EAAOg3B,EAAUt9C,GACjBslC,EAAO1O,EAAU52B,GACjB8/B,EAAYwF,IAAQob,EAAAA,EAAAA,KAAcpb,GAClC/e,EAAYD,IAAQE,EAAAA,EAAAA,KAAcF,GACxC,OAAOtmB,IAAWonB,GAAiBpnB,IAAWo/I,EAAAA,MAAkC74H,IAAcuZ,CAAS,IAGrGu/G,GAAgBx+F,EAAAA,EAAAA,KAAkB2N,EAAS/N,EAASnD,EAAWtmB,GAGrE,OAAIA,EAAoBqoH,GAEjBjoH,EAAAA,GAAAA,IAAO,IACT4nH,MACAn+F,EAAAA,EAAAA,KAAkB2N,EAAS/N,EAASnD,EAAWtmB,IAClD,GACD,CAAC4yF,EAAqBE,EAA0Bk1B,EAAoBxwF,EAASx3B,EAAa5P,IAEvFk4H,GAAiCn9I,EAAAA,EAAAA,KAAahC,IAClDg/I,EAA4Bh/I,GAC5Bo4B,GAAiB,EAAK,GACrB,IAEGO,GAAiC32B,EAAAA,EAAAA,KAAahC,IAClDs4B,EAAyBt4B,GACzBo4B,GAAiB,EAAK,GACrB,IAEGQ,GAAe52B,EAAAA,EAAAA,KAAY,KAC/Bs8I,EAAmB,CACjB1lC,WAAYuiC,GAAcC,GAC1B+C,YAAa//I,QAAQ+/I,GACrBiB,WAAY/mH,EACZgnH,iBAAkBN,EAAyBznJ,SAAS2mJ,GAAAA,GAAoBpqJ,YAASsB,EACjFsjJ,YAAe4F,EACVU,EAAyBznJ,SAASinJ,EAAe1qJ,MAAQ,QAAU,WADjC,SAIzC68H,EAAeI,EAAAA,GAAgB0D,QAAQ,GACtC,CACD2pB,EACAE,EACAU,EACA1mH,EACAq4F,EACA0qB,EACAmD,IAcF,OAXA3gI,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAUR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wBACbH,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTmzF,WARA8zB,EAA4BJ,GAC5BK,GAAwBF,EAAoBS,OAAhD,EAQIxnH,QAASL,GAAgB,GACzBL,YAAa2B,EACbkyF,mBAAoBw0B,EACpBxnH,YAAaV,EACbW,kBAAiC62B,EAAd8vF,EAAsB,yBAAoC,yBAC7E3zB,uBAAuB,mBACvB/yF,cAAc,0BACdC,cAAY,EACZG,oBAAqBc,EACrB+xF,2BAA4By0B,EAC5BrnH,eAAgBhB,EAChBiB,eAAa,EACbE,cAAc,WACdN,oBAAkB,EAClBK,YAAU,IAGZv3B,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASb,EACT72B,QAASs3B,EACT3yB,UAAyBooD,EAAd8vF,EAAsB,cAAyB,eAE1D19I,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEX,KCzIV,IAAe7B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAEm9I,EAAM,UAAElrG,GAAcjyC,EAE9B,MAAO,CACLgyC,mBAAoBC,EAAUD,mBAC9BorG,iBAAkBD,GAAQE,gBAC3B,GAPet9I,EA7CqC7H,IAKnD,IALoD,SACxD8S,EAAQ,mBACRgnC,EAAkB,iBAClBorG,EAAgB,QAChBluF,GACDh3D,EACC,MAAM,mBAAEolJ,IAAuBpgJ,EAAAA,EAAAA,OAE/Bue,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAMtwD,GAAU7F,EAAAA,EAAAA,KAAQ,KACrBi5C,GAAsB,IAAI/jB,QAAQ2kE,IAAuBA,EAAkBiI,aACzE71F,KAAK4tF,IAAiB,CACrBx0F,MACEE,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAC8/C,GAAAA,EAAmB,CAACzR,SAAU8wD,EAAkB9wD,SAAUkQ,mBAAoBA,IAC9E4gD,EAAkBv0F,OAGvBR,MAAO+0F,EAAkB9wD,SAASy7G,cAErC,CAACvrG,IAEE+kC,GAAel3E,EAAAA,EAAAA,KAAaiiC,IAChCw7G,EAAmB,CACjBx7G,SAAU,CAAEpwC,KAAM,QAAS6rJ,SAAUz7G,IACrC,GACD,CAACw7G,IAEJ,OACEh/I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wEACbH,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,0BACLC,QAASA,EACTE,SAAUs+I,EACVv+I,SAAUk4E,EACVymE,UAAQ,IAEN,KCjCJ1rG,GAAwB,IAAM7qC,EAAAA,EA0IpC,IAAerK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,KACFkhD,EAAAA,GAAAA,IAAKlhD,EAAO+kC,SAASg3E,MAAO,CAC7B,wBACA,gCAEF0hC,YAAaz9I,EAAOovE,SAAS4pB,MAAMC,OACnCu+B,kBAAmBx3H,EAAOu4E,aAAaygB,MAAMC,OAC7Cd,gBAAiBn4F,EAAOovE,SAAS8oB,SACjCmlD,gBAAiBr9I,EAAOm9I,QAAQE,gBAChCrrG,mBAAoBhyC,EAAOiyC,UAAUD,mBACrCylF,uBAAuBt+B,EAAAA,EAAAA,KAA4Bn5F,MAZrCD,EAtHgC7H,IAY9C,IAZ+C,SACnD8S,EAAQ,YACRyyI,EAAW,kBACXjmB,EAAiB,gBACjBr/B,EAAe,gBACfklD,EAAe,sBACfK,EAAqB,4BACrBC,EAA2B,mBAC3B3rG,EAAkB,sBAClBylF,EAAqB,QACrBvoE,EAAO,eACPq/D,GACDr2H,EACC,MAAM,iBACJuhH,EAAgB,eAChB7/B,IACE18E,EAAAA,EAAAA,MACEe,GAAOC,EAAAA,EAAAA,KAGPy5H,GAAqBt9H,EAAAA,EAAAA,IAAuB,OAC1C0xF,QAASoB,IAAiCd,EAAAA,GAAAA,IAAwB,CAAEC,QAASqrC,IAE/EC,GAAwB/3H,EAAAA,EAAAA,KAAasuE,IACzCyL,EAAe,CACbjB,eAAgBxK,EAAQwK,gBACxB,GACD,CAACiB,IAEEgkE,GAAqC/9I,EAAAA,EAAAA,KAAakoF,IACtD0xB,EAAiB,CAAEkkC,4BAA6B51D,GAAW,GAC1D,CAAC0xB,IAEEokC,GAA8Bh+I,EAAAA,EAAAA,KAAakoF,IAC/C0xB,EAAiB,CAAEikC,sBAAuB31D,GAAW,GACpD,CAAC0xB,IAEEqkC,GAAc/kJ,EAAAA,EAAAA,KAAQ,IAC1B0kJ,GAAe5sG,OAAOwK,QAAO6F,EAAAA,GAAAA,IAAKi3C,EAAiBslD,KAClD,CAACA,EAAatlD,IAOjB,OALA18E,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,mBACZs7B,QAASmkH,EACT75F,QAASg6F,IAEXv/I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP01E,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBxzC,aAC9C52E,KAAK,SAEJtG,EAAK,0BACLu5H,GAAqBl5H,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,gCAAgC+4H,EAAkB1lI,SAEzFurJ,GACC/+I,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,0BACVoqG,QAAM,EAEN1pG,QAASA,IAAMovH,EAAeI,EAAAA,GAAgBqb,gBAE9C1rI,EAAAA,GAAA7K,cAAC8/C,GAAAA,EAAmB,CAClBzR,SAAUu7G,EACV5+I,UAAU,2BACV9C,KAAMm2C,GACNE,mBAAoBA,IAEtB1zC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SAASR,EAAK,uBAInCK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DiL,EAAK,uCAERK,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,sCACZs7B,QAASokH,EACT95F,QAAS+5F,IAEXt/I,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAC/CzJ,EAAK,4CAGT6/I,GACCx/I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DiL,EAAK,+BAERK,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKiyH,GACPmmB,EAAY94I,KAAKuoF,GAChBjvF,EAAAA,GAAA7K,cAACskI,GAAc,CACb5yH,IAAKooF,EAAWr4F,GAChBq4F,WAAYA,EACZE,oBAAqBN,EACrBhuF,QAASy4H,EACT/lH,QAAS4lH,OAIfn5H,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,SAC/C+c,EAAAA,GAAAA,GAAWxmB,EAAK,mBAAoB,CAAC,YAIxC,KC5GV,IAAerB,EAAAA,EAAAA,KAnCoC1E,IAE7C,IAF8C,SAClD8S,EAAQ,QAAEkkD,EAAO,eAAEq/D,GACpBr2H,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEPqX,GAAc1V,EAAAA,EAAAA,KAAY,KAC9B0uH,EAAeI,EAAAA,GAAgB0D,QAAQ,GACtC,CAAC9D,IAOJ,OALA9yG,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAACu3H,GAAAA,EAAY,CACXrvH,KAAMoiJ,EAAAA,IACN/uE,OAAQikB,GAAAA,EAAe29B,gBACvBnyH,UAAU,0BAGZH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAC/CzJ,EAAK,wCAIVK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACG,QAASoW,GAActX,EAAK,+CAElC,I,gBClBV,MAsEA,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACjC,CACLg+I,eAAeC,EAAAA,EAAAA,KAAoBj+I,EAAQ,MAC3Ck+I,WAAYl+I,EAAOm+I,cAAcC,0BAHjBr+I,EApEsC7H,IASpD,IATqD,cACzD8lJ,EAAa,WACbE,EAAU,UACV94H,EAAS,MACTm7B,EAAK,WACLinD,EAAU,SACVliD,EAAQ,SACRt6C,EAAQ,QACRkkD,GACDh3D,EAEC,MAAMyxD,GAAWtvD,EAAAA,EAAAA,IAAyB,OACpC,SAAE+H,IAAaC,EAAAA,EAAAA,MACfg8I,EAAsBj8I,EAAW,IAAM,KAEtCvE,EAAOygJ,IAAYjhJ,EAAAA,EAAAA,IAAiB,KAE3C7B,EAAAA,EAAAA,KAAU,KACHqL,EAAAA,IACH9K,YAAW,KACT4tD,EAASnvD,QAAS8vD,OAAO,GACxB+zF,EACL,GACC,CAACA,IAEJ,MAAMpgJ,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAMqvF,GAAoB1+I,EAAAA,EAAAA,KAAa9B,IACjCwiD,GAASinD,GACXA,IAGF,MAAMzf,EAAWhqF,EAAEC,OAAOH,MAAMuyC,MAAM,EAAG8tG,GAErCn2D,EAASj2F,SAAWosJ,GACtB54F,EAASyiC,GAGXu2D,EAASv2D,GACThqF,EAAEC,OAAOH,MAAQkqF,CAAQ,GACxB,CAACyf,EAAY02C,EAAY39F,EAAO+E,IAEnC,OACEhnD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAAC+qJ,GAAAA,EAAuB,CAACrwE,QAAS6vE,EAAeriJ,KApDvC,IAoDwD8C,UAAU,2BAG9EH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAOA,EACP6H,IAAKikD,EACLhB,UAAU,UACVvqD,MAAOH,EAAK,iBACZsiD,MAAOA,EACP1hD,SAAU0/I,IAEXn5H,GAAa9mB,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,OAEpB,KCzBV,IAAevgD,EAAAA,EAAAA,KApD4B1E,IAErC,IAFsC,SAC1C8S,EAAQ,QAAEkkD,EAAO,eAAEq/D,GACpBr2H,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAOb,OALAud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAAC2/F,GAAAA,EAAuB,CACtBpkB,OAAQikB,GAAAA,EAAe49B,KACvBC,WAAYC,GACZp1H,KAAM,IACN8C,UAAU,0BAGZH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,SAC/C+c,EAAAA,GAAAA,GAAWxmB,EAAK,uBAAwB,CAAC,SAI9CK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,OAELpF,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB6e,6BAE7CvvI,EAAK,mBAERK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,eAELpF,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB8e,eAE7CxvI,EAAK,oBAERK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,QAELpF,QAASA,IAAMovH,EAAeI,EAAAA,GAAgB+e,oCAE7CzvI,EAAK,sBAGN,ICkGV,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAqB,CAACC,EAAM2D,KAAe,IAAb,KAAEY,GAAMZ,EACxD,MAAO,CACLq6I,eAAeC,EAAAA,EAAAA,KAAoBj+I,EAAiB,UAATuE,EAAmB,KAAO,MACtE,GAHiBxE,EA/H0C7H,IAWxD,IAXyD,cAC7D8lJ,EAAa,KACbtsJ,EAAO,OAAM,UACb0zB,EAAS,MACTm7B,EAAK,YACLvD,EAAW,cACXyhG,EAAa,WACbj3C,EAAU,SACVliD,EAAQ,SACRt6C,EAAQ,QACRkkD,GACDh3D,EAEC,MAAMyxD,GAAWtvD,EAAAA,EAAAA,IAAyB,OACpC,SAAE+H,IAAaC,EAAAA,EAAAA,MAEfg8I,EAAsBj8I,EAAW,IAAM,KACtCvE,EAAOygJ,IAAYjhJ,EAAAA,EAAAA,IAAiB,KACpCqhJ,EAAgBC,EAAoBC,IAAwBz8I,EAAAA,EAAAA,IAAQ,IAE3E3G,EAAAA,EAAAA,KAAU,KACHqL,EAAAA,IACH9K,YAAW,KACT4tD,EAASnvD,QAAS8vD,OAAO,GACxB+zF,EACL,GACC,CAACA,IAEJ,MAAME,GAAoB1+I,EAAAA,EAAAA,KAAa9B,IACjCwiD,GAASinD,GACXA,IAGF82C,EAASvgJ,EAAEC,OAAOH,MAAM,GACvB,CAAC2pG,EAAYjnD,IAYVs+F,GAAah/I,EAAAA,EAAAA,KAAY,KAC7BylD,GAAU,GACT,CAACA,IAEEw5F,GAAoBj/I,EAAAA,EAAAA,KAAY,KACpC++I,IACAt5F,GAAU,GACT,CAACA,EAAUs5F,IAER3gJ,GAAOC,EAAAA,EAAAA,KAOb,OALAud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAAC+qJ,GAAAA,EAAuB,CAACrwE,QAAS6vE,EAAeriJ,KAnEvC,IAmEwD8C,UAAU,2BAG9EH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAA,QAAMvB,OAAO,GAAGozD,SAjCAvnD,IACpBA,EAAE0Y,iBAEGkzC,EAASnvD,SAId8qD,EAASznD,EAAM,GA2BTS,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR2G,IAAKikD,EACL9rD,MAAOA,EACP8qD,UAAWj3D,EACX0M,MAAO4+C,EACPuD,MAAOA,EACP1hD,SAAU0/I,IAGX1gJ,EACCS,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACtN,KAAK,SAAS0zB,UAAWA,EAAWnU,QAAM,GAAEhT,EAAK,aAEzDK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLE,QAAM,EACNkmB,UAAWA,EACXnU,QAAM,EACN9R,QAASs/I,EAAgBE,EAAqBE,GAE7C5gJ,EAAK,mBAIXwgJ,GACCngJ,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UAAU,SACV5B,OAAQ6hJ,EACRrgJ,MAAOJ,EAAK,wBACZlB,QAAS6hJ,IAERn6H,EAAAA,GAAAA,GAAWxmB,EAAK,4BAA6B,CAAC,KAAM,oBACrDK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,SACNgS,QAAM,EACN/R,QAAM,EACNT,UAAU,wBACVU,QAAS2/I,GAER7gJ,EAAK,kBAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,UACNgS,QAAM,EACN/R,QAAM,EACNT,UAAU,wBACVU,QAASy/I,GAER3gJ,EAAK,cAMZ,KCjHV,IAAerB,EAAAA,EAAAA,KAhC0B1E,IAEnC,IAFoC,SACxC8S,EAAQ,QAAEkkD,EAAO,QAAE9kB,GACpBlyC,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAOb,OALAud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAIR5wD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qCACbH,EAAAA,GAAA7K,cAAC2/F,GAAAA,EAAuB,CACtBpkB,OAAQikB,GAAAA,EAAe49B,KACvBC,WAAYC,GACZp1H,KAAM,IACN8C,UAAU,0BAGZH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iCAAiCiJ,IAAI,QAC/CzJ,EAAK,+BAIVK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACG,QAASirC,GAAUnsC,EAAK,kCAE9B,ICqWV,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IAAM,IAAuBA,EAAOm+I,iBADnBp+I,EAvX6B7H,IAY3C,IAZ4C,cAChDm2H,EAAa,YACbC,EAAW,MACX5hE,EAAK,KACL+6C,EAAI,UACJriF,EAAS,MACTm7B,EAAK,uBACL69F,EAAsB,SACtB13B,EAAQ,SACR17G,EAAQ,eACRujH,EAAc,QACdr/D,GACDh3D,EACC,MAAM,eACJ6mJ,EAAc,cACdC,EAAa,gBACbC,EAAe,oBACfC,EAAmB,sBACnBC,EAAqB,cACrBC,IACEliJ,EAAAA,EAAAA,OAEJ1B,EAAAA,EAAAA,KAAU,KACJ4iJ,IACE/vB,IAAkBM,EAAAA,GAAgBwe,sBACpC5e,EAAeI,EAAAA,GAAgB0e,2BACtBhf,IAAkBM,EAAAA,GAAgBye,oBAC3C7e,EAAeI,EAAAA,GAAgB2e,wBAEnC,GACC,CAACjf,EAAeE,EAAgB6vB,IAEnC,MAAM5sB,GAAoB3xH,EAAAA,EAAAA,KAAY,KACpC6mH,EAAS,CAAEh1H,KAAM,UACjB68H,EAAeI,EAAAA,GAAgBke,iBAAiB,GAC/C,CAACnmB,EAAU6H,IAERmD,GAAoB7xH,EAAAA,EAAAA,KAAahC,IACrC6oH,EAAS,CAAEh1H,KAAM,cAAe40H,QAASzoH,IACzC0wH,EAAeI,EAAAA,GAAgBqe,wBAAwB,GACtD,CAACtmB,EAAU6H,IAERqD,GAA2B/xH,EAAAA,EAAAA,KAAY,KAC3C0uH,EAAeI,EAAAA,GAAgBse,qBAAqB,GACnD,CAAC1e,IAEE8wB,GAAwBx/I,EAAAA,EAAAA,KAAahC,IACzC6oH,EAAS,CAAEh1H,KAAM,UAAW40H,QAASzoH,IACrC0wH,EAAeI,EAAAA,GAAgBwe,sBAAsB,GACpD,CAACzmB,EAAU6H,IAER+wB,GAAyBz/I,EAAAA,EAAAA,KAAahC,IAC1C6oH,EAAS,CAAEh1H,KAAM,WAAY40H,QAASzoH,IACtCkhJ,EAAe,IACVryF,EACH05D,MAAOvoH,EACPupG,UAAWA,KACTmnB,EAAeI,EAAAA,GAAgB4e,qBAAqB,GAEtD,GACD,CAAC7mB,EAAU6H,EAAgB7hE,EAAOqyF,IAE/BjtB,GAA8BjyH,EAAAA,EAAAA,KAAahC,IAC/C6oH,EAAS,CAAEh1H,KAAM,qBAAsB40H,QAASzoH,IAChDmhJ,EAAc,CACZ73C,gBAAiBtpG,EACjBupG,UAAWA,KACTmnB,EAAeI,EAAAA,GAAgBme,uBAAuB,GAExD,GACD,CAACkS,EAAet4B,EAAU6H,IAEvB2D,GAA0BryH,EAAAA,EAAAA,KAAahC,IAC3C6oH,EAAS,CAAEh1H,KAAM,cAAe40H,QAASzoH,IACzC0wH,EAAeI,EAAAA,GAAgBoe,2BAA2B,GACzD,CAACrmB,EAAU6H,IAERgxB,GAA8B1/I,EAAAA,EAAAA,KAAY,KAC9C0uH,EAAeI,EAAAA,GAAgBue,wBAAwB,GACtD,CAAC3e,IAEEixB,GAA2B3/I,EAAAA,EAAAA,KAAahC,IAC5C6oH,EAAS,CAAEh1H,KAAM,UAAW40H,QAASzoH,IACrCkhJ,EAAe,IACVryF,EACH+6C,KAAM5pG,EACNupG,UAAWA,KACTmnB,EAAeI,EAAAA,GAAgB4e,qBAAqB,GAEtD,GACD,CAAC7mB,EAAU6H,EAAgB7hE,EAAOqyF,IAE/B3sB,GAAgBvyH,EAAAA,EAAAA,KAAahC,IACjCuhJ,EAAc,CACZj4C,gBAAiBtpG,EACjBupG,UAAWA,KACTmnB,EAAeI,EAAAA,GAAgB0D,QAAQ,GAEzC,GACD,CAAC+sB,EAAe7wB,IAEbkxB,GAAqC5/I,EAAAA,EAAAA,KAAahC,IACtD6oH,EAAS,CAAEh1H,KAAM,qBAAsB40H,QAASzoH,IAChDmhJ,EAAc,CACZ73C,gBAAiBtpG,EACjBupG,UAAWA,KACTmnB,EAAeI,EAAAA,GAAgBye,mBAAmB,GAEpD,GACD,CAAC4R,EAAet4B,EAAU6H,IAEvBmxB,GAAsB7/I,EAAAA,EAAAA,KAAahC,IACvC6oH,EAAS,CAAEh1H,KAAM,WAAY40H,QAASzoH,IACtCqhJ,EAAoB,IACfxyF,EACH05D,MAAOvoH,EACPupG,UAAWA,KACTmnB,EAAeI,EAAAA,GAAgB4e,qBAAqB,GAEtD,GACD,CAAC7mB,EAAU6H,EAAgB7hE,EAAOwyF,IAE/BS,GAAkB9/I,EAAAA,EAAAA,KAAagoD,IACnCs3F,EAAsB,CAAEt3F,QAAO,GAC9B,CAACs3F,IAEElhJ,GAAOC,EAAAA,EAAAA,KAEb,OAAQmwH,GACN,KAAKM,EAAAA,GAAgBge,cACnB,OACEruI,EAAAA,GAAA7K,cAACmsJ,GAAkB,CACjBx1G,QAASonF,EACTxmH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBke,iBAChBle,EAAAA,GAAgBqe,wBAChBre,EAAAA,GAAgBse,qBAChBte,EAAAA,GAAgBwe,sBAChBxe,EAAAA,GAAgB0e,0BAChB1e,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBke,iBACnB,OACEvuI,EAAAA,GAAA7K,cAACosJ,GAAqB,CACpB7iG,YAAa/+C,EAAK,uBAClB0pD,YAAa1pD,EAAK,YAClBqnD,SAAUosE,EACV1mH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBqe,wBAChBre,EAAAA,GAAgBse,qBAChBte,EAAAA,GAAgBwe,sBAChBxe,EAAAA,GAAgB0e,0BAChB1e,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBqe,wBACnB,OACE1uI,EAAAA,GAAA7K,cAACosJ,GAAqB,CACpBxvB,iBAAkB3jE,EAAMw6C,SACxBlqD,YAAa/+C,EAAK,yBAClB0pD,YAAa1pD,EAAK,YAClBqnD,SAAUssE,EACV5mH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBse,qBAChBte,EAAAA,GAAgBwe,sBAChBxe,EAAAA,GAAgB0e,0BAChB1e,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBse,qBACnB,OACE3uI,EAAAA,GAAA7K,cAACqsJ,GAA0B,CACzBv7I,KAAK,OACLy4C,YAAa/+C,EAAK,2BAClBqnD,SAAU+5F,EACVr0I,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBwe,sBAChBxe,EAAAA,GAAgB0e,0BAChB1e,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBwe,sBACnB,OACE7uI,EAAAA,GAAA7K,cAACqsJ,GAA0B,CACzBv7I,KAAK,QACL7S,KAAK,QACL0zB,UAAWA,EACXm7B,MAAOA,EACPinD,WAAYy3C,EACZjiG,YAAa/+C,EAAK,sBAClBwgJ,eAAa,EACbn5F,SAAUg6F,EACVt0I,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgB0e,0BAChB1e,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgB0e,0BACnB,OACE/uI,EAAAA,GAAA7K,cAACssJ,GAAsB,CACrB36H,UAAWA,EACXm7B,MAAOA,EACPinD,WAAYy3C,EACZ35F,SAAUq6F,EACV30I,SAAUA,GAAYsjH,IAAgBK,EAAAA,GAAgB4e,qBACtDr+E,QAASA,IAIf,KAAKy/D,EAAAA,GAAgB4e,qBACnB,OACEjvI,EAAAA,GAAA7K,cAACusJ,GAA4B,CAC3BzxB,eAAgBA,EAChBvjH,SAAUA,EACVkkD,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBie,aACnB,OACEtuI,EAAAA,GAAA7K,cAACwsJ,GAAoB,CACnB1xB,eAAgBA,EAChBvjH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgB6e,2BAChB7e,EAAAA,GAAgBme,uBAChBne,EAAAA,GAAgBoe,2BAChBpe,EAAAA,GAAgBue,wBAChBve,EAAAA,GAAgB8e,aAChB9e,EAAAA,GAAgB+e,kCAChB/e,EAAAA,GAAgBye,mBAChBze,EAAAA,GAAgB2e,uBAChB3e,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgB6e,2BACnB,OACElvI,EAAAA,GAAA7K,cAACosJ,GAAqB,CACpBz6H,UAAWA,EACXm7B,MAAOA,EACPinD,WAAYy3C,EACZx3C,KAAMA,EACNniD,SAAUwsE,EACV9mH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBme,uBAChBne,EAAAA,GAAgBoe,2BAChBpe,EAAAA,GAAgBue,wBAChBve,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBme,uBACnB,OACExuI,EAAAA,GAAA7K,cAACosJ,GAAqB,CACpB7iG,YAAa/+C,EAAK,+BAClBqnD,SAAU4sE,EACVlnH,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBoe,2BAChBpe,EAAAA,GAAgBue,wBAChBve,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBoe,2BACnB,OACEzuI,EAAAA,GAAA7K,cAACosJ,GAAqB,CACpBxvB,iBAAkB3jE,EAAMw6C,SACxBlqD,YAAa/+C,EAAK,yBAClBqnD,SAAUi6F,EACVv0I,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBue,wBAChBve,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBue,wBACnB,OACE5uI,EAAAA,GAAA7K,cAACqsJ,GAA0B,CACzB16H,UAAWA,EACXm7B,MAAOA,EACPinD,WAAYy3C,EACZ16I,KAAK,OACLy4C,YAAa/+C,EAAK,2BAClBqnD,SAAUk6F,EACVx0I,SAAUA,GAAYsjH,IAAgBK,EAAAA,GAAgB4e,qBACtDr+E,QAASA,IAIf,KAAKy/D,EAAAA,GAAgB8e,aACnB,OACEnvI,EAAAA,GAAA7K,cAACosJ,GAAqB,CACpBz6H,UAAWA,EACXm7B,MAAOA,EACPinD,WAAYy3C,EACZx3C,KAAMA,EACNniD,SAAU8sE,EACVpnH,SAAUA,EACVkkD,QAASA,IAIf,KAAKy/D,EAAAA,GAAgB+e,kCACnB,OACEpvI,EAAAA,GAAA7K,cAACosJ,GAAqB,CACpBz6H,UAAWA,EACXm7B,MAAOA,EACPinD,WAAYy3C,EACZx3C,KAAMA,EACNniD,SAAUm6F,EACVz0I,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgBye,mBAChBze,EAAAA,GAAgB2e,uBAChB3e,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgBye,mBACnB,OACE9uI,EAAAA,GAAA7K,cAACqsJ,GAA0B,CACzBv7I,KAAK,QACL7S,KAAK,QACLsrD,YAAa/+C,EAAK,sBAClBqnD,SAAUo6F,EACV10I,SAAUA,GAAY,CACpB2jH,EAAAA,GAAgB2e,uBAChB3e,EAAAA,GAAgB4e,sBAChBp4I,SAASm5H,GACXp/D,QAASA,IAIf,KAAKy/D,EAAAA,GAAgB2e,uBACnB,OACEhvI,EAAAA,GAAA7K,cAACssJ,GAAsB,CACrB36H,UAAWA,EACXm7B,MAAOA,EACPinD,WAAYy3C,EACZ35F,SAAUq6F,EACV30I,SAAUA,GAAYsjH,IAAgBK,EAAAA,GAAgB4e,qBACtDr+E,QAASA,IAIf,QACE,OACJ,KCvWIgxF,GAA0BrvG,OAAO4K,KAAKkzE,EAAAA,IAAiB78H,OAAS,EAGhEquJ,GAAiB,CACrBxxB,EAAAA,GAAgBge,cAChBhe,EAAAA,GAAgBke,iBAChBle,EAAAA,GAAgBqe,wBAChBre,EAAAA,GAAgBse,qBAChBte,EAAAA,GAAgBwe,sBAChBxe,EAAAA,GAAgB0e,0BAChB1e,EAAAA,GAAgB4e,qBAChB5e,EAAAA,GAAgBie,aAChBje,EAAAA,GAAgB6e,2BAChB7e,EAAAA,GAAgBme,uBAChBne,EAAAA,GAAgBoe,2BAChBpe,EAAAA,GAAgBue,wBAChBve,EAAAA,GAAgB8e,aAChB9e,EAAAA,GAAgB+e,kCAChB/e,EAAAA,GAAgBye,mBAChBze,EAAAA,GAAgB2e,wBAGZ8S,GAAmB,CACvBzxB,EAAAA,GAAgB2D,iBAChB3D,EAAAA,GAAgB+D,iBAGZ2tB,GAAkB,CACtB1xB,EAAAA,GAAgBoB,QAChBpB,EAAAA,GAAgBC,oBAChBD,EAAAA,GAAgBE,kBAChBF,EAAAA,GAAgBG,8BAChBH,EAAAA,GAAgBI,yBAChBJ,EAAAA,GAAgBK,qBAChBL,EAAAA,GAAgBc,iCAChBd,EAAAA,GAAgBM,qBAChBN,EAAAA,GAAgBgB,iCAChBhB,EAAAA,GAAgBV,cAGZqyB,GAAkB,CACtB3xB,EAAAA,GAAgB+d,oBAChB/d,EAAAA,GAAgB8d,gBAGZ8T,GAA+B,CACnC5xB,EAAAA,GAAgB8c,kCAChB9c,EAAAA,GAAgBqd,kCAGZwU,GAAkC,CACtC7xB,EAAAA,GAAgBsc,+BAChBtc,EAAAA,GAAgB0c,+BAGZoV,GAAgC,CACpC9xB,EAAAA,GAAgBuc,mCAChBvc,EAAAA,GAAgB2c,mCAGZoV,GAAsB,CAC1B/xB,EAAAA,GAAgBwc,0BAChBxc,EAAAA,GAAgB4c,0BAGZoV,GAA2B,CAC/BhyB,EAAAA,GAAgB+c,+BAChB/c,EAAAA,GAAgBsd,+BAGZ2U,GAAwB,CAC5BjyB,EAAAA,GAAgBgd,4BAChBhd,EAAAA,GAAgBud,4BAGZ2U,GAA6B,CACjClyB,EAAAA,GAAgBmd,gCAChBnd,EAAAA,GAAgB0d,gCAGZyU,GAA4B,CAChCnyB,EAAAA,GAAgBod,+BAChBpd,EAAAA,GAAgB2d,+BAGZyU,GAA6B,CACjCpyB,EAAAA,GAAgBid,iCAChBjd,EAAAA,GAAgBwd,iCAGZ6U,GAAiC,CACrCryB,EAAAA,GAAgBkd,oCAChBld,EAAAA,GAAgByd,oCAGZ6U,GAA8B,CAClCtyB,EAAAA,GAAgByc,iCAChBzc,EAAAA,GAAgB6c,iCA6XlB,IAAe5uI,EAAAA,EAAAA,KAhXgB1E,IAQzB,IAR0B,SAC9B8S,EAAQ,cACRqjH,EAAa,aACb6yB,EAAY,gBACZC,EAAe,eACf5yB,EAAc,QACdr/D,EAAO,qBACPkyF,GACDlpJ,EACC,MAAM,0BAAEmpJ,IAA8BnkJ,EAAAA,EAAAA,OAE/BokJ,EAAYC,I5DtGZC,EAAAA,GAAAA,GAAWn7B,GAAcF,K4DuGzBs7B,EAAiBC,IAAsBrkJ,EAAAA,EAAAA,IAAiB,IAEzDqxH,GAAcjxH,EAAAA,EAAAA,IAAiBkkJ,IACnC,MAAMC,GAAiBvhJ,EAAAA,EAAAA,MAAeohC,EAAAA,EAAAA,OAAa2rF,mBAAmBw0B,eAElEvzB,IAAkBM,EAAAA,GAAgBV,cACpCozB,KAG4B,IAA1BM,QAAsD3uJ,IAAnB4uJ,IAAiCA,EACtE1yF,GAAQ,IAKRm/D,IAAkBM,EAAAA,GAAgBC,qBAC/BP,IAAkBM,EAAAA,GAAgBE,mBAClCR,IAAkBM,EAAAA,GAAgBG,+BAClCT,IAAkBM,EAAAA,GAAgBI,0BAErChzH,YAAW,KACTolJ,EAAgB,CAAEzvJ,KAAM,SAAU,GA9Id,KAmJtB28H,IAAkBM,EAAAA,GAAgBK,sBAC/BX,IAAkBM,EAAAA,GAAgBM,qBAUvC//D,IAR4B,WAAtBgyF,EAAaz6B,KACf8H,EAAeI,EAAAA,GAAgBC,qBAE/BL,EAAeI,EAAAA,GAAgBE,mBAK1B,IA8RX,SAASgzB,EACPC,EACAC,EACAC,EACA50H,GAEA,OACE9uB,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACwuJ,GAAc,CACb5zB,cAAeA,EACfn/D,QAASw/D,EACTH,eAAgBA,EAChB0a,eAAgBiY,EAAan1E,WAvSrC,SAAqC+1E,EAAyBI,GAC5D,MAAMC,EAA+C,CACnD,CAACxzB,EAAAA,GAAgB2b,oBAAqBiW,GAA6BprJ,SAAS+sJ,GAC5E,CAACvzB,EAAAA,GAAgB4b,iBAAkBiW,GAAgCrrJ,SAAS+sJ,GAC5E,CAACvzB,EAAAA,GAAgB6b,qBAAsBiW,GAA8BtrJ,SAAS+sJ,GAC9E,CAACvzB,EAAAA,GAAgB8b,YAAaiW,GAAoBvrJ,SAAS+sJ,GAC3D,CAACvzB,EAAAA,GAAgB+b,iBAAkBiW,GAAyBxrJ,SAAS+sJ,GACrE,CAACvzB,EAAAA,GAAgBgc,cAAeiW,GAAsBzrJ,SAAS+sJ,GAC/D,CAACvzB,EAAAA,GAAgBqc,kBAAmB6V,GAA2B1rJ,SAAS+sJ,GACxE,CAACvzB,EAAAA,GAAgBuqB,iBAAkB4H,GAA0B3rJ,SAAS+sJ,GACtE,CAACvzB,EAAAA,GAAgBic,mBAAoBmW,GAA2B5rJ,SAAS+sJ,GACzE,CAACvzB,EAAAA,GAAgBkc,sBAAuBmW,GAA+B7rJ,SAAS+sJ,GAChF,CAACvzB,EAAAA,GAAgBoc,mBAAoBkW,GAA4B9rJ,SAAS+sJ,IAGtEE,EAAgBjC,GAAehrJ,SAAS+sJ,GACxCG,EAAmBjC,GAAiBjrJ,SAAS+sJ,GAC7CI,EAAkBjC,GAAgBlrJ,SAAS+sJ,GAC3CK,EAAkBjC,GAAgBnrJ,SAAS+sJ,IAC5CE,GACAC,GACAxxG,OAAO4K,KAAK0mG,GAAqBn9I,IAAIsR,QAAQnhB,SAAS+sJ,IACtDrxG,OAAOwK,OAAO8mG,GAAqBhtJ,UAAS,GAEjD,OAAQk5H,GACN,KAAKM,EAAAA,GAAgB6zB,KACnB,OACElkJ,EAAAA,GAAA7K,cAACgvJ,GAAY,CAACl0B,eAAgBA,EAAgBvjH,SAAUA,EAAUkkD,QAASw/D,IAE/E,KAAKC,EAAAA,GAAgBmb,YACnB,OACExrI,EAAAA,GAAA7K,cAACivJ,GAAmB,CAClB13I,SAAUA,GAAY82I,EACtB5yF,QAASw/D,IAGf,KAAKC,EAAAA,GAAgBob,QACnB,OACEzrI,EAAAA,GAAA7K,cAACkvJ,GAAe,CACdp0B,eAAgBA,EAChBvjH,SAAU82I,GACLI,IAAiBvzB,EAAAA,GAAgBgW,4BACjCud,IAAiBvzB,EAAAA,GAAgBiU,uBACjCsf,IAAiBvzB,EAAAA,GAAgBqb,eACjCkY,IAAiBvzB,EAAAA,GAAgBxzC,aACjConE,GAAmBD,EACxBpzF,QAASw/D,IAGf,KAAKC,EAAAA,GAAgBqb,cACnB,OACE1rI,EAAAA,GAAA7K,cAACmvJ,GAAqB,CAAC53I,SAAU82I,EAAgB5yF,QAASw/D,IAE9D,KAAKC,EAAAA,GAAgBxzC,YACnB,OACE78E,EAAAA,GAAA7K,cAACovJ,GAAmB,CAAC73I,SAAU82I,EAAgB5yF,QAASw/D,IAE5D,KAAKC,EAAAA,GAAgBsb,cACnB,OACE3rI,EAAAA,GAAA7K,cAACqvJ,GAAqB,CAAC93I,SAAU82I,EAAgB5yF,QAASw/D,IAE9D,KAAKC,EAAAA,GAAgBub,YACnB,OACE5rI,EAAAA,GAAA7K,cAACsvJ,GAAmB,CAAC/3I,SAAU82I,EAAgB5yF,QAASw/D,IAE5D,KAAKC,EAAAA,GAAgB0D,QACnB,OACE/zH,EAAAA,GAAA7K,cAACuvJ,GAAe,CACdz0B,eAAgBA,EAChBvjH,SAAU82I,GAAkBS,EAC5BrzF,QAASw/D,IAGf,KAAKC,EAAAA,GAAgBwb,SACnB,OACE7rI,EAAAA,GAAA7K,cAACwvJ,GAAgB,CACfj4I,SAAU82I,GAAkBI,IAAiBvzB,EAAAA,GAAgByb,eAC7Dl7E,QAASw/D,EACTH,eAAgBA,IAGtB,KAAKI,EAAAA,GAAgByb,eACnB,OACE9rI,EAAAA,GAAA7K,cAACyvJ,GAAsB,CAACl4I,SAAU82I,EAAgB5yF,QAASw/D,IAE/D,KAAKC,EAAAA,GAAgB0b,SACnB,OACE/rI,EAAAA,GAAA7K,cAAC0vJ,GAAgB,CAACn4I,SAAU82I,EAAgB5yF,QAASw/D,EAAaH,eAAgBA,IAEtF,KAAKI,EAAAA,GAAgBsS,aACnB,OACE3iI,EAAAA,GAAA7K,cAAC2vJ,GAAoB,CAACp4I,SAAU82I,EAAgB5yF,QAASw/D,IAE7D,KAAKC,EAAAA,GAAgBiU,sBACnB,OACEtkI,EAAAA,GAAA7K,cAAC4vJ,GAAyB,CACxB90B,eAAgBA,EAChBvjH,SAAU82I,GAAkBI,IAAiBvzB,EAAAA,GAAgBgW,2BAC7Dz1E,QAASw/D,IAGf,KAAKC,EAAAA,GAAgBgW,2BACnB,OACErmI,EAAAA,GAAA7K,cAAC6vJ,GAA8B,CAC7Bt4I,SAAU82I,EACV5yF,QAASw/D,IAGf,KAAKC,EAAAA,GAAgB6d,eACnB,OACEluI,EAAAA,GAAA7K,cAAC8vJ,GAAsB,CACrBv4I,SAAU82I,EACV5yF,QAASw/D,IAGf,KAAKC,EAAAA,GAAgB8d,eACnB,OACEnuI,EAAAA,GAAA7K,cAAC+vJ,GAAsB,CACrBx4I,SAAU82I,EACV5yF,QAASw/D,IAGf,KAAKC,EAAAA,GAAgB+d,oBACnB,OACEpuI,EAAAA,GAAA7K,cAACgwJ,GAA2B,CAC1Bz4I,SAAU82I,EACV5yF,QAASw/D,IAGf,KAAKC,EAAAA,GAAgB2b,mBACrB,KAAK3b,EAAAA,GAAgB4b,gBACrB,KAAK5b,EAAAA,GAAgB6b,oBACrB,KAAK7b,EAAAA,GAAgB8b,WACrB,KAAK9b,EAAAA,GAAgB+b,gBACrB,KAAK/b,EAAAA,GAAgBgc,aACrB,KAAKhc,EAAAA,GAAgBqc,iBACrB,KAAKrc,EAAAA,GAAgBic,kBACrB,KAAKjc,EAAAA,GAAgBkc,qBACrB,KAAKlc,EAAAA,GAAgBoc,kBACnB,OACEzsI,EAAAA,GAAA7K,cAACiwJ,GAAyB,CACxBzK,OAAQ5qB,EACRE,eAAgBA,EAChBvjH,SAAU82I,GAAkBK,EAAoB9zB,GAChDn/D,QAASw/D,IAIf,KAAKC,EAAAA,GAAgB8c,kCACrB,KAAK9c,EAAAA,GAAgBsc,+BACrB,KAAKtc,EAAAA,GAAgBuc,mCACrB,KAAKvc,EAAAA,GAAgBwc,0BACrB,KAAKxc,EAAAA,GAAgB+c,+BACrB,KAAK/c,EAAAA,GAAgBgd,4BACrB,KAAKhd,EAAAA,GAAgBmd,gCACrB,KAAKnd,EAAAA,GAAgBod,+BACrB,KAAKpd,EAAAA,GAAgBid,iCACrB,KAAKjd,EAAAA,GAAgBkd,oCACrB,KAAKld,EAAAA,GAAgByc,iCACnB,OACE9sI,EAAAA,GAAA7K,cAACkwJ,GAAsC,CACrC3H,aAAW,EACXC,oBAAqB5tB,IAAkBM,EAAAA,GAAgByc,iCACvD8Q,qBAAsB7tB,IAAkBM,EAAAA,GAAgBgd,4BACxDsN,OAAQ5qB,EACRE,eAAgBA,EAChBvjH,SAAU82I,GAAkBK,EAAoB9zB,GAChDn/D,QAASw/D,IAIf,KAAKC,EAAAA,GAAgBqd,iCACrB,KAAKrd,EAAAA,GAAgB0c,8BACrB,KAAK1c,EAAAA,GAAgB2c,kCACrB,KAAK3c,EAAAA,GAAgB4c,yBACrB,KAAK5c,EAAAA,GAAgBsd,8BACrB,KAAKtd,EAAAA,GAAgBud,2BACrB,KAAKvd,EAAAA,GAAgB0d,+BACrB,KAAK1d,EAAAA,GAAgB2d,8BACrB,KAAK3d,EAAAA,GAAgBwd,gCACrB,KAAKxd,EAAAA,GAAgByd,mCACrB,KAAKzd,EAAAA,GAAgB6c,gCACnB,OACEltI,EAAAA,GAAA7K,cAACkwJ,GAAsC,CACrC1K,OAAQ5qB,EACRE,eAAgBA,EAChBvjH,SAAU82I,EACV5yF,QAASw/D,IAIf,KAAKC,EAAAA,GAAgBmc,gBACnB,OACExsI,EAAAA,GAAA7K,cAACq3I,GAAe,CACd9/H,SAAU82I,EACV5yF,QAASw/D,IAIf,KAAKC,EAAAA,GAAgBoB,QACrB,KAAKpB,EAAAA,GAAgBC,oBACrB,KAAKD,EAAAA,GAAgBE,kBACrB,KAAKF,EAAAA,GAAgBG,8BACrB,KAAKH,EAAAA,GAAgBI,yBACrB,KAAKJ,EAAAA,GAAgBK,qBACrB,KAAKL,EAAAA,GAAgBc,iCACrB,KAAKd,EAAAA,GAAgBM,qBACrB,KAAKN,EAAAA,GAAgBgB,iCACrB,KAAKhB,EAAAA,GAAgBV,aACnB,OACE3vH,EAAAA,GAAA7K,cAACmwJ,GAAe,CACdv1B,cAAeA,EACfC,YAAa4zB,EACbx1F,MAAOw0F,EACPx6B,SAAUy6B,EACVn2I,SAAU82I,EACVvzB,eAAgBA,EAChBr/D,QAASw/D,IAIf,KAAKC,EAAAA,GAAgBge,cACrB,KAAKhe,EAAAA,GAAgBke,iBACrB,KAAKle,EAAAA,GAAgBqe,wBACrB,KAAKre,EAAAA,GAAgBse,qBACrB,KAAKte,EAAAA,GAAgBwe,sBACrB,KAAKxe,EAAAA,GAAgB0e,0BACrB,KAAK1e,EAAAA,GAAgB4e,qBACrB,KAAK5e,EAAAA,GAAgBie,aACrB,KAAKje,EAAAA,GAAgB6e,2BACrB,KAAK7e,EAAAA,GAAgBme,uBACrB,KAAKne,EAAAA,GAAgBoe,2BACrB,KAAKpe,EAAAA,GAAgBue,wBACrB,KAAKve,EAAAA,GAAgB8e,aACrB,KAAK9e,EAAAA,GAAgB+e,kCACrB,KAAK/e,EAAAA,GAAgBye,mBACrB,KAAKze,EAAAA,GAAgB2e,uBACnB,OACEhvI,EAAAA,GAAA7K,cAACowJ,GAAa,CACZx1B,cAAeA,EACf3hE,MAAO40F,EACP56B,SAAU66B,EACVjzB,YAAa4zB,EACbl3I,SAAU82I,EACVvzB,eAAgBA,EAChBr/D,QAASw/D,IAIf,KAAKC,EAAAA,GAAgB2D,iBACrB,KAAK3D,EAAAA,GAAgB8C,oBACrB,KAAK9C,EAAAA,GAAgBgD,2BACrB,KAAKhD,EAAAA,GAAgBqC,8BACrB,KAAKrC,EAAAA,GAAgBsD,0BACrB,KAAKtD,EAAAA,GAAgBwD,8BACrB,KAAKxD,EAAAA,GAAgBkD,wBACrB,KAAKlD,EAAAA,GAAgB+D,gBACrB,KAAK/D,EAAAA,GAAgBsC,gBACnB,OACE3yH,EAAAA,GAAA7K,cAACqwJ,GAAgB,CACfz1B,cAAeA,EACf6C,SAAUuwB,EACVtwB,cAAeuwB,EACfpzB,YAAa4zB,EACbl3I,SAAU82I,EACVvzB,eAAgBA,EAChBr/D,QAASw/D,IAIf,KAAKC,EAAAA,GAAgB4d,YACnB,OACEjuI,EAAAA,GAAA7K,cAACswJ,GAAmB,CAClB/4I,SAAU82I,EACV5yF,QAASw/D,IAIf,QACE,OAEN,CAgBOs1B,CAA4BlC,EAAgB10H,GAGnD,CAEA,OACE9uB,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTj4B,GAAG,WACHyJ,KAAMyiJ,EAAuB,OAAS6C,EAAAA,GACtC72H,UAAWihG,EACX1I,YAAau6B,GACbgE,YAAU,EACVC,kBAAgB,GAEftC,EACU,ICxZjB,IAAejlJ,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAQ02B,QAAS7B,GAAe70B,EAAOm3B,aAAe,CAAC,GAC/CE,KAAM/C,EAAWitD,aAAc6iE,GAAqBpkJ,EAAOo3B,MAEnE,MAAO,CACL9C,YACA8vH,mBACAvvH,aACD,GATe90B,EA5E2B7H,IAOzC,IAP0C,SAC9C8S,EAAQ,OACRijB,EAAM,UACNqG,EAAS,iBACT8vH,EAAgB,WAChBvvH,EAAU,QACVq6B,GACDh3D,EACC,MAAM,SACJklC,EAAQ,qBACRinH,IACEnnJ,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MACP,SAAEkE,IAAaC,EAAAA,EAAAA,OAErBoZ,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAM35C,GAAc1V,EAAAA,EAAAA,KAAa3K,IAC/BkoC,EAAS,CAAEloC,KAAImqH,sBAAsB,GAAO,GAC3C,CAACjiF,IAEEogB,GAAUzkD,EAAAA,EAAAA,KAAQ,KACtB,IAAK87B,EACH,OAGF,MAAMyuF,GAAcvuF,EAAAA,EAAAA,KAAkBF,EAAYP,EAAWrG,GAE7D,OAAOwzD,EAAAA,EAAAA,KAAY6hC,EAAahvF,EAAW8vH,EAAiB,GAC3D,CAACvvH,EAAY5G,EAAQqG,EAAW8vH,KAE5BpqG,EAAaC,IAAWC,EAAAA,GAAAA,QAAkBlnD,EAAWwqD,EAASvhD,QAAQgyB,IAE7E,OACE3vB,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CAACC,MAAOgD,EAAa/C,WAAYgD,EAASx7C,UAAU,2BAChEu7C,GAAaloD,OACZkoD,EAAYh1C,KAAK9P,GACfoJ,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKjQ,EACLuJ,UAAU,wCAEVU,QAASA,IAAMoW,EAAYrgB,IAE3BoJ,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQj5B,EACRugC,eAAa,EACbuiF,WAAW,QACX9qE,WAAS,EACT2xE,kBAAmBxwF,EAAAA,GAAkBI,SACrCxd,QAAS7O,OAIb43C,IAAgBA,EAAYloD,OAC9BwM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,aAAa0G,IAAI,aAAauC,IAAI,QAC5CumB,EAAOn8B,OAAS,mCAAqC,0BAGxDwM,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,CAACh4C,IAAI,YAEf7G,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBzxB,IAAI,qBACJ0xB,SAAO,EACP13B,QAASklJ,EACTvgJ,UAAW7F,EAAK,qBAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,+BAEA,KCyBrB,IAAe7B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAQ02B,QAAS+gH,GAAoBz3I,EAAOm3B,aAAe,CAAC,GAG1Dud,MAAOhgB,EAAW,eAClBy5B,EAAc,cACd4zD,EAAa,aACbC,IACE3hH,EAAAA,EAAAA,KAAeL,GAAQiuD,cACnB9e,QAAS8yE,GAAkBF,GAAiB,CAAC,GAC7C5yE,QAASk0E,GAAiBrB,GAAgB,CAAC,EAEnD,MAAO,CACLy1B,kBACA/iH,cACA4vH,YAAan2F,GAAgBlT,MAC7BgnE,gBACAoB,eACD,GAnBetjH,EAhG4B7H,IAY1C,IAZ2C,UAC/C+rB,EAAS,SACTjZ,EAAQ,kBACRg2E,EAAiB,gBACjBy2D,EAAe,YACf/iH,EAAW,YACX4vH,EAAW,aACXjhC,EAAY,cACZpB,EAAa,0BACbsiC,EAAyB,WACzBC,EAAU,QACVt1F,GACDh3D,EACC,MAAM,qBACJusJ,IACEvnJ,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAMwuB,GAAqB79E,EAAAA,EAAAA,KAAa60C,IACtC+vG,EAAqB,CAAE/vG,SAAQ,GAC9B,IAEG9f,GAAe77B,EAAAA,EAAAA,KAAQ,KAE3B,MAAMu7B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KAC9BqtH,EAAkBjN,GAAkB1iH,EAAAA,EAAAA,KAAkB0iH,EAAiBnjH,EAAWI,GAAe,GAEvG,OAAO4pB,EAAAA,GAAAA,IACLxpB,EAAAA,GAAAA,IAAO,IACF4vH,KACCrhC,GAAgB,MAChBpB,GAAiB,KACpBh0F,QAAQ6pH,IACT,MAAM90G,EAAO1O,EAAUwjH,GAEvB,OAAO90G,IAASA,EAAKiZ,SAAWjZ,EAAK2hH,uBAAwB/iE,EAAAA,EAAAA,KAAU5+C,GAAM,KAE/E,EACAg+C,EACD,GACA,CAACy2D,EAAiB/iH,EAAa2uF,EAAcpB,EAAejhC,IAEzD4jE,GAAiB/kJ,EAAAA,EAAAA,KAAY,KACjC4kJ,EAAqB,CAAE/vG,MAAO,KAC9B8vG,GAAY,GACX,CAACA,IAEJ,OACElmJ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACNE,QAAS+vD,EACTprD,UAAU,uBAEVxF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BAEfH,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,qBAEZK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wBACbH,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTC,QAASL,EACTL,YAAaysD,EACb5rD,YAAaV,EACbW,kBAAmBp3B,EAAK,iBACxBq3B,cAAc,0BACdlQ,UAAWk/H,EACX/uH,cAAY,EACZK,eAAa,EACbC,YAAU,EACVC,cAAc,WACdN,oBAAkB,EAClBE,oBAAqB6uH,EACrB5uH,eAAgB+nD,IAGlBp/E,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,SAAO,EACP13B,QAASylJ,EACT9gJ,UAAWmgB,EAAY,2BAA6B,0BAEpD3lB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,4BAGb,KC+FV,IAAe7B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MACEqF,SAAUw/I,EACVtkG,MAAOukG,IACLzkJ,EAAAA,EAAAA,KAAeL,GAAQ+kJ,cAAgB,CAAC,EAE5C,MAAO,CACLF,mBACAC,gBACAE,aAAchlJ,EAAOm9I,QAAQ6H,aAC9B,GAXejlJ,EAtL6B7H,IAQ3C,IAR4C,UAChD+rB,EAAS,SACTjZ,EAAQ,UACRs2E,EAAS,aACT0jE,EAAY,iBACZH,EAAgB,cAChBC,EAAa,QACb51F,GACDh3D,EACC,MAAM,gBACJ+sJ,EAAe,cACfC,IACEhoJ,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAO7wD,EAAO8mJ,IAAY9nJ,EAAAA,EAAAA,IAAS,KAC5BqnG,EAAO0gD,IAAY/nJ,EAAAA,EAAAA,IAAS,KAC5BjL,EAAO0rI,IAAYzgI,EAAAA,EAAAA,OACnBkjD,EAAOs9E,IAAYxgI,EAAAA,EAAAA,MAEpBgoJ,EAAsB,4BACtBC,EAAyB,+BAGzBlgI,EAAYy/H,IAAqBU,EAAAA,GAAqBnnB,YAE5D5iI,EAAAA,EAAAA,KAAU,KACR,GAAIyoB,EACF,OAEF,IAAKq9D,EAAUxvF,QAAUwvF,EAAUxvF,OAtCI,EAwCrC,YADAqzJ,EAAS,IAGX,MAAMnlJ,GAASyhC,EAAAA,EAAAA,MACTnN,EAAYt0B,EAAOo3B,MAAMC,KACzBmuH,EAAmB,CAACxlJ,EAAO8kB,iBAAmBw8D,GACjDt8E,KAAKmpB,IAAWsxB,EAAAA,EAAAA,KAAuBnrB,EAAUnG,MACjDF,OAAOhyB,SACJwpJ,EAAoBD,EAAiBp1G,MAAM,GAAI,GAAGz4B,KAAK,MACzD1Z,EAAK,uCACLunJ,EAAiBA,EAAiB1zJ,OAAS,GAC/CqzJ,EAASM,EAAkB,GAC1B,CAACxhI,EAAWq9D,EAAWrjF,IAE1B,MAAMynJ,GAAoB7lJ,EAAAA,EAAAA,KAAa9B,IACrC,MAAM,MAAEF,GAAUE,EAAE2X,cACdqyE,EAAWlqF,EAAMoqD,QAAQ,OAAQ,IAEvCk9F,EAASp9D,GAELA,IAAalqF,IACfE,EAAE2X,cAAc7X,MAAQkqF,EAC1B,GACC,IAEGjqF,GAA0B+B,EAAAA,EAAAA,KAAa9B,IAC3CqnJ,EAASrnJ,EAAE2X,cAAc7X,MAAM,GAC9B,IAEG8nJ,GAAoB9lJ,EAAAA,EAAAA,KAAY,KAC/BxB,EAAMvM,OAKPkzJ,GAAgB1jE,EAAUxvF,QAAUkzJ,EACtCnnB,EA7C0B,oDAiD5BonB,EAAgB,CACd5mJ,QACAjM,QACAkvF,cAZAu8C,EAASwnB,EAaT,GACD,CAAChnJ,EAAOijF,EAAW0jE,EAAcC,EAAiB7yJ,IAE/CwzJ,GAAsB/lJ,EAAAA,EAAAA,KAAY,KACjCxB,EAAMvM,OAKXozJ,EAAc,CACZ7mJ,QACAqmG,QACAtyG,QACAkvF,cARAu8C,EAASynB,EAST,GACD,CAACjnJ,EAAO6mJ,EAAexgD,EAAOtyG,EAAOkvF,EAAWgkE,KAEnD9pJ,EAAAA,EAAAA,KAAU,KACJqpJ,IAAqBU,EAAAA,GAAqB/mB,UAC5CtvE,GAAQ,EACV,GACC,CAAC21F,EAAkB31F,IAEtB,MAAM22F,EAAiBf,GAAiB7mJ,EAAK6mJ,KAC3CvkG,IAAU8kG,GAAuB9kG,IAAU+kG,EACvC/kG,OACAvtD,GAGN,OACEsL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cAENE,QAASA,IAAM+vD,IACfprD,UAAU,8BAEVxF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BAEfH,EAAAA,GAAA7K,cAAA,UAAKwK,EAAKgmB,EAAY,aAAe,cAEvC3lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,wBACbH,EAAAA,GAAA7K,cAACurI,GAAAA,EAAc,CACbngI,SAAUi/H,EACVz/H,MAAOJ,EAAK,cAEdK,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAOQ,EACPQ,SAAU6mJ,EACVtnJ,MAAOH,EAAKgmB,EAAY,mBAAqB,aAC7Cs8B,MAAOA,IAAU8kG,GAAuB9kG,IAAU+kG,EAAyB/kG,OAAQvtD,IAEpFixB,GACC3lB,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAO6mG,EACP7lG,SAAUf,EACVM,MAAOH,EAAK,oCAEdK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,QAAQR,EAAK,qBAI7B4nJ,GACCvnJ,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,SAASonJ,GAGvBvkE,EAAUxvF,OAAS,GAClBwM,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,wBAAwBR,EAAK,6BAA8BqjF,EAAUxvF,OAAQ,MAE3FwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mCACZ6iF,EAAUt8E,KAAK9P,GACdoJ,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAACE,UAAQ,EAAC50B,UAAU,uBAC3BH,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CAAC1lB,OAAQj5B,UAQrCoJ,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAA0B,IAAjBx4B,EAAMvM,OACfqN,QAAS8kB,EAAY2hI,EAAsBD,EAC3Cj0I,SAAU0T,EACVthB,UAAWmgB,EAAYhmB,EAAK,8BAAgC,gBAE3DmnB,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,2BAGb,KCnMJqnJ,GAAej1G,OAAO4K,KAAKsqG,EAAAA,IAAmBj0J,OAAS,EAsD7D,IAAe8K,EAAAA,EAAAA,KApDe1E,IAMxB,IANyB,SAC7B8S,EAAQ,UACRiZ,GAAY,EAAK,QACjB5f,EAAO,gBACP2hJ,EAAe,QACf92F,GACDh3D,EACC,MAAO+tJ,EAAkBC,IAAuB7oJ,EAAAA,EAAAA,IAAmB,IAE7DunJ,GAAiB/kJ,EAAAA,EAAAA,KAAY,KACjCmmJ,EAAgB/hI,EAAY8hI,EAAAA,GAAkBI,gBAAkBJ,EAAAA,GAAkBK,cAAc,GAC/F,CAACniI,EAAW+hI,IAEf,OACE1nJ,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTj4B,GAAG,UACHyJ,KAAMslJ,EAAAA,GACNt+B,YAAamgC,GACb14H,UAAW/oB,IAETgiJ,IACA,OAAQhiJ,GACN,KAAK0hJ,EAAAA,GAAkBO,gBACvB,KAAKP,EAAAA,GAAkBQ,cACrB,OACEjoJ,EAAAA,GAAA7K,cAAC+yJ,GAAY,CACXviI,UAAWA,EACXjZ,SAAUA,EACVg2E,kBAAmBilE,EACnB1B,0BAA2B2B,EAC3B1B,WAAYI,EACZ11F,QAASA,IAGf,KAAK62F,EAAAA,GAAkBI,gBACvB,KAAKJ,EAAAA,GAAkBK,cACrB,OACE9nJ,EAAAA,GAAA7K,cAACgzJ,GAAY,CACXxiI,UAAWA,EACXjZ,SAAUq7I,GAAgBr7I,EAC1Bs2E,UAAW2kE,EACX/2F,QAASA,IAGf,QACE,OACJ,GAES,I,wFC9BjB,MAkHA,IAAetyD,EAAAA,EAAAA,KAlHqB1E,IAU9B,IAV+B,SACnC8S,EAAQ,iBACR07I,EAAgB,gBAChBC,EAAe,mBACfC,EAAkB,QAClB13F,EAAO,cACP23F,EAAa,uBACbC,EAAsB,0BACtBC,EAAyB,gBACzB5F,GACDjpJ,EACC,MAAM,sBAAE8uJ,IAA0B9pJ,EAAAA,EAAAA,MAC5Be,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQwzC,IAGV,MAAM+3F,GAA8BxpJ,EAAAA,EAAAA,IAAgB,KAClDupJ,EAAsB,CAAErgJ,UAAU,GAAQ,KAGtC,uCACJugJ,EAAsC,gCACtCC,IACEC,EAAAA,GAAAA,GAAsCV,IAGxC5xI,aAAcuyI,EACdryI,qBAAsBsyI,IACpBpyI,EAAAA,GAAAA,IAA6BwxI,IAE3B,uBACJa,EAAsB,6BAAEC,EAA4B,+BACpDC,EAA8B,mBAAEC,IAC9BC,EAAAA,GAAAA,GAAoBjB,GAClBkB,EAAsBlB,GAAoBgB,GAG9C5yI,aAAc+yI,EACd7yI,qBAAsB8yI,EACtB/8D,UAAWg9D,IACT7yI,EAAAA,GAAAA,GACF0xI,OAAoB5zJ,OAAWA,EAAW,IAAI,EAAOsmB,GAAAA,GAAqBoP,EAAAA,KAG5E,OACEpqB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAe,eAAgBqgJ,GAA2B,uBACvE5pJ,EAAKqkB,OAAShkB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBAC9BH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cACNE,QAAS+vD,EACTprD,UAAU,sBACVrF,WAAW+I,EAAAA,GAAAA,GACTvJ,EAAKqkB,OAAS,MACdslI,GAAuB3pJ,EAAKqkB,OAAS,gBACrC4kI,EAAuC1sJ,SAAWyD,EAAKqkB,OAAS,sBAElE4uB,gBAAiBi2G,GAEjB7oJ,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BAEd4oJ,GAAqB/oJ,EAAAA,GAAA7K,cAAA,MAAIgL,UAAW6oJ,GAAkBrpJ,EAAK,kBAC5DK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yBACbH,EAAAA,GAAA7K,cAACu0J,GAAAA,EAAY,CAACC,SAAO,EAACvxD,YAAU,KAEjCiwD,EAAgBhgJ,UACfrI,EAAAA,GAAA7K,cAACoR,GAAAA,EAAY,CACXpG,UAAU,2BACVsG,UAAU,QACVmsC,gBAAiBjzC,EAAKqkB,MAAQ6kI,OAAkCn0J,GAEhEsL,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,oBAAoBpF,QAAS8nJ,GACzChpJ,EAAK,kCAKdK,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACT,oBACAqgJ,GAA2B,oBAC3BC,IAGDD,GACCvpJ,EAAAA,GAAA7K,cAAC66B,GAAAA,EAAW,CAACooE,YAAU,EAACj4F,UAAU,qBAAqBssF,UAAWg9D,IAEpEzpJ,EAAAA,GAAA7K,cAACg7B,GAAAA,EAAQ,CACPy5H,WAAW,WACXl9I,SAAUA,EACV07I,iBAAkBkB,EAClBd,uBAAwBA,EACxBC,0BAA2BA,EAC3B5F,gBAAiBA,EACjBwF,gBAAiBA,KAGpBY,GACCjpJ,EAAAA,GAAA7K,cAAC00J,GAAAA,EAAU,CACTtrJ,OAAQ6pJ,EACRG,cAAeA,EACfuB,qBAAsBX,EACtBzqJ,oBAAqBwqJ,IAGrB,IC3CV,IAAe5qJ,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAQq3B,KAAMg0F,EAAa9mF,WAAY8jH,GAAqBroJ,EAAOw9G,YAEnE,MAAO,CACL6N,cACAg9B,mBACD,GAPetoJ,EA7E+B7H,IAO7C,IAP8C,OAClD2E,EAAM,OACNa,EAAM,YACN2tH,EAAW,iBACXg9B,EAAgB,QAChBtrJ,EAAO,oBACPC,GACD9E,EACC,MAAM,gBAAEowJ,IAAoBprJ,EAAAA,EAAAA,MAEtBe,GAAOC,EAAAA,EAAAA,KAEPqqJ,GAA2BxvJ,EAAAA,EAAAA,KAAQ,IAClCsyH,EAIEx6E,OAAO4K,KAAK4vE,GAAa76E,QAAO,CAACpmC,EAAQ2hE,KAC9C,MAAM,gBAAE+7C,EAAe,cAAEuF,GAAkBhC,EAAY/0G,OAAOy1D,IAK9D,OAJI+7C,EAAgB3yH,SAASuI,IAAW2vH,GAAel4H,SAASuI,KAC9D0M,EAAO9F,KAAKynE,GAGP3hE,CAAM,GACZ,IAVM,IAWR,CAAC1M,EAAQ2tH,KAELm9B,EAAmBC,IAAwBprJ,EAAAA,EAAAA,IAAmBkrJ,GAE/DvkD,GAAUjrG,EAAAA,EAAAA,KAAQ,IACfsvJ,GAAkBp6H,QAAQ89C,GAAaA,IAAam3C,EAAAA,MAAel+G,KAAK+mE,IAAQ,CACrF3tE,MAAOitH,EAAcA,EAAYt/C,GAAU1tE,MAAQ,GACnDR,MAAOkzC,OAAOg7B,QACT,IACN,CAACs8E,EAAkBh9B,IAEhB50F,GAAe52B,EAAAA,EAAAA,KAAY,KAC/B,MAAM6oJ,EAAcH,EAAyBt6H,QAAQ/4B,IAAQszJ,EAAkBrzJ,SAASD,KAAK8P,IAAIsR,QAC3FqyI,EAAWH,EAAkBv6H,QAAQ/4B,IAAQqzJ,EAAyBpzJ,SAASD,KAAK8P,IAAIsR,QAE9FgyI,EAAgB,CAAE5qJ,SAAQgrJ,cAAaC,aACvC5rJ,GAAS,GACR,CAACW,EAAQ4qJ,EAAiBC,EAA0BxrJ,EAASyrJ,IAEhE,GAAKn9B,GAAgBg9B,EAIrB,OACE/pJ,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASA,EACTC,oBAAqBA,EACrBwB,QAASi4B,EACTh4B,WAAW+I,EAAAA,GAAAA,GCpFgC,WDoFJ,UACvCyrB,iBCrFyB,WDsFzB50B,MAAOJ,EAAK,gBAEZK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GCxF6C,WDwFjB,kBAC1ClJ,EAAAA,GAAA7K,cAAC49G,GAAAA,EAAa,CACZzyG,QAASolG,EACTllG,SAAU0pJ,EACV3pJ,SAAU4pJ,KAGdnqJ,EAAAA,GAAA7K,cAAA,OAAKgL,UC/F4E,YDgG/EH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,UAAUR,UAAU,wBAAwBS,QAAM,EAACC,QAASs3B,GACvEx4B,EAAK,gBAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASpC,GAAUkB,EAAK,aAGvE,KE5F8B,IAUrC2qJ,GAAY,SAAZA,GAAY,OAAZA,EAAY,eAAZA,EAAY,kBAAZA,EAAY,mBAAZA,EAAY,eAAZA,EAAY,mBAAZA,EAAY,aAAZA,CAAY,EAAZA,IAAY,IASjB,MA6DA,IAAehsJ,EAAAA,EAAAA,KA7DqB1E,IAM9B,IAN+B,OACnC2E,EAAM,OACNa,EAAM,QACN0/C,EAAO,QACPrgD,EAAO,oBACPC,GACD9E,EACC,MAAO2wJ,EAAiBC,IAAsBzrJ,EAAAA,EAAAA,IAASurJ,GAAaG,UAC9D,qBAAEC,EAAoB,sBAAEC,IAA0B/rJ,EAAAA,EAAAA,MAElDe,GAAOC,EAAAA,EAAAA,KAEPgrJ,GAAiBnwJ,EAAAA,EAAAA,KAAQ,IAAM,CACnC,CAAEqF,MAAOH,EAAK,gBAAiB,GAAIJ,MAAO+qJ,GAAaO,SACvD,CAAE/qJ,MAAOH,EAAK,gBAAiB,GAAIJ,MAAO+qJ,GAAaQ,WACvD,CAAEhrJ,MAAOH,EAAK,gBAAiB,GAAIJ,MAAO+qJ,GAAaS,YACvD,CAAEjrJ,MAAOH,EAAK,eAAgB,GAAIJ,MAAO+qJ,GAAaU,QACtD,CAAElrJ,MAAOH,EAAK,eAAgB,GAAIJ,MAAO+qJ,GAAaW,WACtD,CAAEnrJ,MAAOH,EAAK,mBAAoBJ,MAAO+qJ,GAAaG,WACrD,CAAC9qJ,IAEEw4B,GAAe52B,EAAAA,EAAAA,KAAY,KAC/B,IAAI2pJ,EAEFA,EADEX,IAAoBD,GAAaG,QACvBhlG,EAAAA,IAEAt/C,KAAKoI,MAAMgQ,KAAKC,MAAQ,KAAQxG,OAAOuyI,GAEjDzrG,EACF6rG,EAAsB,CAAEvrJ,SAAQ0/C,UAASosG,cAEzCR,EAAqB,CAAEtrJ,SAAQ8rJ,cAEjCzsJ,GAAS,GACR,CAACW,EAAQmrJ,EAAiB9rJ,EAASqgD,IAEtC,OACE9+C,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACRE,QAASA,EACTC,oBAAqBA,EACrBwB,QAASi4B,EACTh4B,UAAU,SACVJ,MAAOJ,EAAK,kBAEZK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,UACLC,QAASsqJ,EACTpqJ,SAAU+pJ,EACVhqJ,SAAUiqJ,IAEZxqJ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,UAAUR,UAAU,wBAAwBS,QAAM,EAACC,QAASs3B,GACvEx4B,EAAK,gBAERK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASpC,GAAUkB,EAAK,YAErE,I,gBCnFZ,MAAMwrJ,GAAMt3J,SAASsB,cAAc,OAC7Bi2J,GAAyB,IAAI9sE,IAAI,CACrC+sE,EAAAA,GAAsBC,KACtBD,EAAAA,GAAsBE,OACtBF,EAAAA,GAAsBG,UACtBH,EAAAA,GAAsBI,OACtBJ,EAAAA,GAAsBK,QACtBL,EAAAA,GAAsBxuE,cAGjB,SAAS8uE,GAA4BC,GAC1C,MAAMC,EAMR,SAA4BD,GAC1B,MAAME,EAAkBF,EAAMG,gBAC9BZ,GAAIr1J,YAAYg2J,GAEhB,MAAMD,EAgBR,SAAgCD,EAAcC,GAC5C,MAAMv1J,EAAYs1J,EAAMI,wBACxB,GAAI11J,EAAU21J,WAAaC,KAAKC,cAAiB71J,EAAsBlB,UAAU62B,SAAS,gBACxF,OAAO4/H,EAET,IAAIO,EAAiBR,EAAMI,wBAAwBl1J,cACnD,KAAOs1J,IAAmBA,EAAeh3J,UAAU62B,SAAS,iBAAiB,CAC3E,MAAMogI,EAAMD,EAAepuH,QAAQC,cAC7BquH,EAAaF,EAAe1hB,QAAQ4hB,WAC1CT,EAAQ,IAAGQ,KAAOC,EAAc,qBAAoBA,KAAgB,MAAMT,MAASQ,KACnFD,EAAiBA,EAAet1J,aAClC,CAEA,OAAO+0J,CACT,CA9BeU,CAAuBX,EAAOT,GAAIqB,WAG/C,OAFArB,GAAIqB,UAAY,GAETX,EACJliG,QAAQ,eAAgB,MACxBA,QAAQ,WAAY,KACpBA,QAAQ,WAAY,IACzB,CAjBe8iG,CAAmBb,GAGhC,OAgBF,SAA+B/jJ,GAC7B,IAAKA,EAAKy1E,SAAU,OAAOz1E,EAE3B,MAAMy1E,EAAWz1E,EAAKy1E,SAAS3tD,QAAQ+8H,GAAWtB,GAAuBxsE,IAAI8tE,EAAOt5J,QACpF,MAAO,IAAKyU,EAAMy1E,SAAUA,EAAS9pF,OAAS8pF,OAAW5oF,EAC3D,CArBSi4J,EAFeC,EAAAA,GAAAA,IAAyBf,GAAM,GAAO,GAG9D,C,oDCXA,MAQA,GAR4C3uC,IAC1C,MAAM,OAAE3+G,GAAW2+G,EACb2vC,GAAkBC,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,mBAAoBzuJ,GAG3E,OAAOsuJ,EAAkB7sJ,EAAAA,GAAA7K,cAAC03J,EAAoB3vC,QAAYxoH,CAAS,E,uCC4HrE,SAASu4J,GAAaC,GACpB,OAAIA,EACK,4BAEF,uBACT,C,gBC9IA,SAAuB,WAAvB,GAA8D,WC+B9D,IAAe5uJ,EAAAA,EAAAA,KAff,SAA6B1E,GAEhB,IAFiB,QAC5BzF,GACSyF,EACT,MAAM+F,GAAOC,EAAAA,EAAAA,MACP,SAAEutJ,GAAah5J,EACfw1C,GAAwBwjH,EAE9B,OACEntJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,aAAa9F,UAAWuQ,IACpCi5B,EAAuB3pC,EAAAA,GAAA7K,cAACk5C,GAAAA,EAAQ,CAACluC,UAAWuQ,KAAsB/S,QAAQwvJ,IACtExtJ,EAAK,yCAAyCk1C,EAAAA,GAAAA,GAAiBl1C,EAAiB,IAAXwtJ,IAGhF,I,4BC0BA,UAAe7uJ,EAAAA,EAAAA,KAlCf,SAAyB1E,GAEZ,IAFa,QACxBzF,EAAO,qBAAEi5J,EAAoB,gBAAEC,EAAe,iBAAEC,GACvC1zJ,EACT,MAAM,+BAAE2zJ,IAAmC3uJ,EAAAA,GAAAA,MACrCe,GAAOC,EAAAA,EAAAA,MACP,SAAE4tJ,GAAar5J,EACfw1C,EAAuB0jH,IAAoBG,IAAaJ,EAO9D,OACEptJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,eAAe9F,UAAWuQ,IACvC1Q,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CAACxuB,KAAK,OAAOyuB,UAAW6a,EAAuB,EAAI,EAAGxpC,UFpCe,YEqC7EwpC,EAAuB3pC,EAAAA,GAAA7K,cAACk5C,GAAAA,EAAQ,CAACluC,UAAWuQ,KAC3C1Q,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG16B,QAAQ6vJ,IAAa7tJ,EAAK,YAAYk1C,EAAAA,GAAAA,GAAiBl1C,EAAiB,IAAX6tJ,KAC5DA,GAAYJ,GACZptJ,EAAAA,GAAA7K,cAAA,WACGwK,EAAK,UACNK,EAAAA,GAAA7K,cAAA,QAAMgL,UF3CkB,WE2CKU,QAdnB4sJ,KACtBH,IACAC,EAA+B,CAAEnuJ,OAAQjL,EAAQiL,OAAQs4G,YAAY,GAAO,GAa7D/3G,EAAK,sBASxB,ICqcA,IAAerB,EAAAA,EAAAA,KAtX0B1E,IAmFnC,IAnFoC,qBACxC8zJ,EAAoB,mBACpBh6G,EAAkB,aAClB6mD,EAAY,oBACZa,EAAmB,OACnB78F,EAAM,QACNpK,EAAO,KACPw5J,EAAI,MACJx7H,EAAK,UACLqe,EAAS,qBACTpe,EAAoB,iBACpBw7H,EAAgB,mBAChB1yD,EAAkB,eAClB2yD,EAAc,OACdnjF,EAAM,WACNojF,EAAU,WACVC,EAAU,cACVC,EAAa,cACb1hE,EAAa,SACb2hE,EAAQ,SACRC,EAAQ,QACRC,EAAO,UACPC,EAAS,OACTC,EAAM,SACNC,EAAQ,UACR1rJ,EAAS,WACTkgC,EAAU,UACV6kE,EAAS,eACT4mD,EAAc,iBACdC,EAAgB,QAChBC,EAAO,YACPplH,EAAW,UACXqlH,EAAS,YACTp7H,EAAW,WACXq7H,EAAU,UACVC,EAAS,aACTC,EAAY,aACZxf,EAAY,gBACZyf,EAAe,kBACfC,EAAiB,cACjBtqJ,EAAa,kBACbuqJ,EAAiB,cACjBC,EAAa,sBACbC,GAAqB,oBACrBC,GAAmB,kBACnBC,GAAiB,eACjBC,GAAc,gBACd71B,GAAe,sBACfL,GAAqB,kBACrBm2B,GAAiB,qBACjBlC,GAAoB,gBACpBC,GAAe,QACfkC,GAAO,aACPC,GAAY,OACZC,GAAM,MACNC,GAAK,QACLz7C,GAAO,UACPxwG,GAAS,SACTojC,GAAQ,cACR8oH,GAAa,SACbrsJ,GAAQ,gBACRssJ,GAAe,SACfz5H,GAAQ,OACR05H,GAAM,aACNC,GAAY,QACZrxJ,GAAO,oBACPC,GAAmB,WACnBqxJ,GAAU,aACVC,GAAY,WACZC,GAAU,UACVC,GAAS,aACTC,GAAY,YACZC,GAAW,aACXC,GAAY,eACZC,GAAc,iBACdC,GAAgB,mBAChBC,GAAkB,wBAClBC,GAAuB,eACvBC,GAAc,qBACdC,GAAoB,YACpBC,GAAW,eACXC,GAAc,iBACdC,IACDl3J,EACC,MAAM,iBACJq6B,GAAgB,eAAEqnD,GAAc,oBAAEy1E,GAAmB,aAAE11E,KACrDz8E,EAAAA,EAAAA,MAEE2kE,IAAUxnE,EAAAA,EAAAA,IAAuB,MAEjCi1J,IAAgBj1J,EAAAA,EAAAA,IAAuB,MACvC4D,IAAOC,EAAAA,EAAAA,KAEPqxJ,GAAgB9B,OADD3+G,IAAco9G,GAE7B5/G,GAAY,aAAc75C,GAAYA,EAAQ65C,SAC9CmpE,GAAchjH,EAAQgjH,aAErB+5C,GAAgBC,KAAattJ,EAAAA,EAAAA,MAC7B0I,GAAS6kJ,GAAaC,KAAiBxtJ,EAAAA,EAAAA,MACxC,SAAEC,GAAQ,UAAEwtJ,KAAcvtJ,EAAAA,EAAAA,MAC1BwtJ,IAAmB92J,EAAAA,EAAAA,KAAQ,IAAO08G,GAAc5kE,OAAO4K,KAAKg6D,IAAa3jH,OAAS,GAAI,CAAC2jH,KAEvFq6C,IAAkBryJ,EAAAA,EAAAA,IAAgB,KACtC80B,GAAiB,CACf9/B,QAASwL,GAAK,uBAEhBlB,IAAS,KAGXvB,EAAAA,EAAAA,KAAU,KACJqB,GAAU2yJ,KAAmBxD,GAC/BjvJ,IACF,GACC,CAACA,GAASF,EAAQmvJ,EAAsBwD,MAE3Ch0J,EAAAA,EAAAA,KAAU,KACJs8H,IAAiBhmI,QACnBgmI,GAAgB9yH,KAAK+qJ,GACZp2E,GAAa,CAClBhB,eAAgB,CACdzjF,GAAI66J,EAAe76J,GACnBqhG,WAAYw5D,EAAex5D,eAInC,GACC,CAACuhC,GAAiBu3B,KAErB,MAAMW,IAA4BvyJ,EAAAA,EAAAA,IAAgB,KAC3Cq6H,KAC0B,IAA3BA,GAAgBhmI,OAClB8nF,GAAe,CACbjB,eAAgB,CACdzO,UAAW4tD,GAAgB,GAAG5tD,aAIlCmlF,GAAoB,CAClBp2D,OAAQ6+B,GAAgB9yH,KAAKnJ,GAAQA,EAAI3G,OAG7C6H,KAAS,IAGLkzJ,GJrPD,SACLx9J,EACAy9J,EACAxrJ,EACAqoJ,EACAoD,EACA9B,EACAW,EACAV,GAEA,MAAM1vJ,EAAwB,GACxBuH,GAAOiqJ,EAAAA,EAAAA,KAAe39J,GACtBL,GAAQi+J,EAAAA,EAAAA,KAAgB59J,MACvB69J,EAAAA,EAAAA,KAAuB79J,QAA6CO,GAAlCu9J,EAAAA,EAAAA,KAAuB99J,IAC1DwuD,GAAUuvG,EAAAA,EAAAA,KAAkB/9J,GAC5Bq8F,EAAY18F,GAAQq+J,EAAAA,EAAAA,KAAkBr+J,EAAO,aAAUY,EACvD09J,EAAmB3D,GAAW36J,IAAU08F,IAAa6hE,EAAAA,EAAAA,KAAqBv+J,KAC3Ew+J,GAAAA,KAA6B/tH,EAAAA,GAC5BguH,EAAY/0J,OAAOg1J,eAezB,GAbIJ,GACF9xJ,EAAQ0F,KAAK,CACXlG,MAAO,yBACPmG,KAAM,aACNsuC,QAASA,KACPk+G,QAAQC,QAAQliE,EAAYmiE,GAAAA,GAAkBniE,EAAWx1F,EAAAA,GAAeC,SAAWnH,EAAO4H,SACvFs7E,KAAK47E,GAAAA,IAERf,KAAe,IAKjBpD,GAAWroJ,EACb9F,EAAQ0F,KAAK,CACXlG,MAAO,wBACPmG,KAAM,OACNsuC,QAASA,MACPkoE,EAAAA,GAAAA,IAAoBr2G,GAEpByrJ,KAAe,SAGd,GAAIpD,GAAW5mJ,EAAM,CAE1B,MAAMqlJ,EAAevvJ,QACnB40J,GAAWM,YAAYC,YACnBP,EAAUM,WAAWC,WAA2Bn8J,QAAQ,4BACD,KAAxD47J,EAAUh7E,WAAW5tB,QAAQ,kBAAmB,KAoDzD,SAAkCx1D,GAChC,MAAMo+J,EAAY/0J,OAAOg1J,eACnBO,EAAuBR,GAAWM,YAAYC,WAC9CE,EAAyBD,GAAqBp8J,QAAwB,8BAC5E,OAAOY,EAAAA,EAAAA,KAAiBpD,EAAQyC,MAAQo8J,GAAwBp8J,EAClE,CAxDSq8J,CAAyB9+J,IAG9BmM,EAAQ0F,KAAK,CACXlG,MAAOmtJ,GAAaC,GACpBjnJ,KAAM,OACNsuC,QAASA,KACP,MAAMlnB,GAAa6lI,EAAAA,GAAAA,KACnB,GAAI7lI,GAAY75B,QAAUk9J,EACxBA,EAAerjI,QACV,GAAI6/H,EACTr5J,SAASs/J,YAAY,YAChB,CACL,MAAMC,GAAgBl5I,EAAAA,EAAAA,GACpB,CAAE/lB,UAASk/J,oBAAoB,IAE7BD,IACFE,EAAAA,GAAAA,GACEF,EAAc/5I,KAAK,KACnBk6I,EAAAA,GAAAA,IAA2Bp/J,EAASy9J,GAG1C,CAEAC,KAAe,GAGrB,CAsBA,OApBI9B,GACFzvJ,EAAQ0F,KAAK,CACXlG,MAAO,gCACPmG,KAAM,OACNsuC,QAASw7G,IAITptG,GAAWqtG,GACb1vJ,EAAQ0F,KAAK,CACXlG,MAAO,yBACPmG,KAAM,OACNsuC,QAASA,KACPy7G,IAEA6B,KAAe,IAKdvxJ,CACT,CIkJsBkzJ,CAClBr/J,GACAs/J,EAAAA,EAAAA,KAAuB,CAAE9F,OAAMx7H,UAC/B27H,EACAW,EACA+C,GACAnoH,EAAc0mH,QAAar7J,EAC3Bg8J,GACAV,IAGIxsF,IAAoBrkE,EAAAA,EAAAA,IAAgB,IACjCtL,SAASsC,cAAe,gEAA+DhC,EAAQyC,UAGlG6sE,IAAiBtkE,EAAAA,EAAAA,IAAgB,IAAMtL,SAASsC,cAAc,6CAE9DutE,IAAiBvkE,EAAAA,EAAAA,IAAgB,IAAMtL,SAASsC,cAAc,iCAE9Dw8F,IAAYxzF,EAAAA,EAAAA,IAAgB,KAChC,MAAMu0J,EAA0B5vJ,IAC1BjQ,SAASsC,cAA2B,yBAA0Ba,cAAiB,EAC/E28J,EAAe9/J,SAASw4B,eAAe,gBACvCunI,EAA4B55G,iBAAiB25G,GAE7CE,EADoB15G,WAAWy5G,EAA0B15G,iBAAiB,kCACjC,EAE/C,MAAO,CACL45G,cAhLkB,GAiLlBC,gBAAkBlgK,SAASsC,cAA2B,iBAAmBa,aACzEg9J,eAAgBH,EAAoBH,EACpC7gE,6BAA8By+D,GAC9B2C,eAAgBhD,IAAiBntJ,GAnLH,MAmL4C6E,EAAAA,OAAMjU,EACjF,KAGHwI,EAAAA,EAAAA,KAAU,KACHqB,EAKLd,YAAW,KACT2zJ,IAAa,GA7LQ,KAwLrBC,IAMoB,GACrB,CAAC9yJ,EAAQ6yJ,GAAaC,MAEzBn0J,EAAAA,EAAAA,KAAU,IACDkhC,GAAiB4yH,GAAc90J,QAAS,oBAC9C,CAACqC,IAEJ,MAAM21J,IAAkC/0J,EAAAA,EAAAA,IAAiBoT,IACvDo+I,GAAsBp+I,GACtB4+I,IAAW,IAGb,OACEnxJ,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACH5L,IAAKm8D,GACLhlE,OAAQA,EACRmsE,OAAQA,EACRlH,kBAAmBA,GACnBC,eAAgBA,GAChBC,eAAgBA,GAChBivB,UAAWA,GACXwhE,eAAa,EACbh0J,WAAW+I,EAAAA,GAAAA,GACT,qBAAsB,QAAS+nJ,IAAiB,kBAElDxyJ,QAASA,GACTC,oBAAqBA,IAEpBuyJ,IACCjxJ,EAAAA,GAAA7K,cAACi/J,GAAAA,EAAgB,CACfxG,iBAAkBA,EAClBrzD,aAAcA,EACd85D,sBAAuB3gH,EACvB0nD,oBAAqBA,EACrBk5D,iBAAkBngK,EAAQw/C,WAAWmlE,QACrC+0C,eAAgBA,EAChB0C,iBAAkBA,GAClBC,mBAAoBA,GACpBC,wBAAyBA,GACzBv1D,mBAAoBA,EACpB1qD,UAAWA,EACXjkC,QAASA,GACT+/E,cAAeA,EACfl6D,qBAAsBA,EACtBk9H,kBAAmBA,GACnBn2B,sBAAuBA,GACvBo7B,WAAYL,GACZz1J,QAASA,GACT0B,WAAW+I,EAAAA,GAAAA,GAAegoJ,IAAkB,6BAIhDlxJ,EAAAA,GAAA7K,cAAA,OACEiS,IAAK4pJ,GACL7wJ,WAAW+I,EAAAA,GAAAA,GACT,4DACAgoJ,IAAkB,mCAEpB9nJ,IAAKzJ,GAAKqkB,MAAQ,WAAQtvB,GAEzBq5J,GAAc/tJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,eAAepF,QAASgvJ,IAASlwJ,GAAK,wBACnEquJ,GACChuJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAASivJ,IAAenwJ,GAAK,4BAExDsuJ,GACCjuJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,QAAQpF,QAAS0uJ,IAC7B5vJ,GAAKuuJ,EAAW,8BAAgC,WAGnDE,GAAazwJ,QAAQqxJ,GAAmBwF,gBACxCx0J,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,UAAUpF,QAAS2uJ,IAC/B7vJ,GAAK,kCAAmCqvJ,EAAmBwF,cAAe,MAG9ErG,GAAWnuJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,OAAOpF,QAAS4uJ,IAAS9vJ,GAAK,SACxD4uJ,GACCvuJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAAS8uJ,IAAgBhwJ,GAAK,mBAEzD6uJ,GACCxuJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAAS+uJ,IAAkBjwJ,GAAK,iCAE3D0vI,GAAgBrvI,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAAS+vJ,IAAcjxJ,GAAK,qBACtEmvJ,GAAmB9uJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAASgwJ,IAAiBlxJ,GAAK,uBAC5EovJ,GACC/uJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,MAAMpF,QAASiwJ,IAAmBnxJ,GAAK,6BAEvDgyJ,GAAYjrJ,KAAKs0B,GAChBh7B,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPC,IAAKm0B,EAAOl7B,MACZmG,KAAM+0B,EAAO/0B,KACbpF,QAASm6B,EAAOuZ,QAChBkgH,+BAA6B,GAC7B90J,GAAKq7B,EAAOl7B,UAGfuuJ,GAAUruJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,MAAMpF,QAAS6uJ,IAAQ/vJ,GAAK,cACrD2uJ,GAAYtuJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,QAAQpF,QAASozG,IAAUt0G,GAAK,gBAC3DgvJ,GAAc3uJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,OAAOpF,QAASqvJ,IAAYvwJ,GAAK,yBAC9DivJ,GAAa5uJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASpF,QAASsvJ,IAAexwJ,GAAK,sBAClEkvJ,GAAgB7uJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,OAAOpF,QAASuvJ,IAAczwJ,GAAK,mBAClE2zB,GACCtzB,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAASovJ,IAChBtwJ,GAAhB8E,EAAqB,8BAAsC,uBAG/Dq+B,GAAc9iC,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,UAAUpF,QAAS4C,IAAY9D,GAAK,YACjE+uJ,GAAa1uJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASpF,QAASs1B,IAAWx2B,GAAK,kBAC9DgoG,GAAa3nG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,OAAOpF,QAASyC,IAAW3D,GAAK,2BAC5DiD,GAAa5C,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACN,aAAW,EAACL,KAAK,SAASpF,QAASgmC,IAAWlnC,GAAK,WAC1E0vJ,IACCrvJ,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACu/J,GAAAA,EAAa,CAACr3J,KAAK,WAClBm8H,IACAx5H,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACk5C,GAAAA,EAAQ,CAACsmH,QAAM,EAACx0J,UAAU,qBAC3BH,EAAAA,GAAA7K,cAACk5C,GAAAA,EAAQ,CAACsmH,QAAM,EAACx0J,UAAU,sBAG9Bq5H,IAA8C,IAA3BA,GAAgBhmI,QAClCwM,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACguJ,UAAQ,EAAC/zJ,QAAS6wJ,GAA2BvxJ,UAAU,2BAC9DgmB,EAAAA,GAAAA,GAAWxmB,GAAK,2BAA4B65H,GAAgB,GAAGz5H,OAAQ,CAAC,kBAAmB,WAG/Fy5H,IAAmBA,GAAgBhmI,OAAS,GAC3CwM,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACguJ,UAAQ,EAAC/zJ,QAAS6wJ,GAA2BvxJ,UAAU,2BAC9DgmB,EAAAA,GAAAA,GAAWxmB,GAAK,4BAA6B65H,GAAgBhmI,QAAS,CAAC,uBAK9Ey7J,GAAiBC,KACjBlvJ,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACu/J,GAAAA,EAAa,CAACr3J,KAAMgyJ,GAAiB,OAAS,UAC/CrvJ,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAMipJ,GAAwB,gBAAkB,QAChDruJ,QAASquJ,GAAwBoB,GAAiBD,GAClDj9I,UAAW87I,KAA0BqC,IAErCvxJ,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,6CACdH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,oCAAoCiJ,IAAKzJ,GAAKqkB,MAAQ,WAAQtvB,GAC3Ew6J,IAAyB/6J,EAAQqkH,UAAUlzF,MAC1C2pI,GAAiBsC,GACb5xJ,GACA,yCACA,CAACxL,EAAQqkH,SAASlzF,MAAOisI,KAEzB5xJ,GAAK,4BAA6BxL,EAAQqkH,SAASlzF,MAAO,KAEzC,IAArBisI,IAA0BnC,IACtBjpI,EAAAA,GAAAA,IACA3kB,EAAAA,EAAAA,KAAS4tJ,GAAkB,GAAGx4J,KAC1BklC,EAAAA,EAAAA,KAAgBszH,GAAkB,IACjCA,GAAkB,GAAervJ,OAEtCwxJ,GACI5xJ,GAAK,+BAAgC4xJ,GAAkB,KACvD5xJ,GAAK,qCAKnBK,EAAAA,GAAA7K,cAACsuC,GAAAA,EAAU,CAACtjC,UAAU,UAAU9C,KAAK,QAAQqmC,MAAO0rH,QAIxD/B,IAAmBD,IAAwBp/G,KAC3ChuC,EAAAA,GAAA7K,cAACu/J,GAAAA,EAAa,CAACr3J,KAAMgyJ,GAAiB,OAAS,WAE/ChC,IAAmBD,KACnBptJ,EAAAA,GAAA7K,cAAC0/J,GAAgB,CACfxH,gBAAiBA,GACjBD,qBAAsBA,GACtBj5J,QAASA,EACTm5J,iBAAkB7uJ,KAGrBuvC,IACChuC,EAAAA,GAAA7K,cAAC2/J,GAAoB,CACnB3gK,QAASA,KAIV,ICrWLo+J,GAAY/0J,OAAOg1J,eA8iBzB,IAAel0J,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM60I,KAAiE,IAA/D,QAAEpiJ,EAAO,gBAAEgP,EAAe,iBAAE4xJ,GAAkBxe,EACrD,MAAM,SAAEl0I,IAAaD,EAAAA,EAAAA,KAAyBV,IAAW,CAAC,GAEpD,YAAE84F,EAAW,aAAED,EAAY,mBAAE7mD,GAAuBhyC,EAAOiyC,UAE3DnxC,GAAkBC,EAAAA,EAAAA,KAAsBf,GACxCgkB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQvN,EAAQiL,QAClCoxC,EAAY9qB,IAAQlkB,EAAAA,EAAAA,KAASkkB,EAAK9uB,IAClCgsF,EAAgBpyC,OAAyD97C,GAA7CmuF,EAAAA,EAAAA,KAAmBnhF,EAAQvN,EAAQiL,SAE/D,gBACJ41J,EAAe,qBAAEC,EAAoB,mBAAEC,EAAkB,kBAAEC,GACzDzzJ,EAAO+iC,WAAa,CAAC,EAEnBopH,EAAiBjrE,GAAcirE,gBAAkBqH,GAEjD,UACJE,EAAS,iBACTC,EAAgB,OAChBhH,EAAM,SACNC,EAAQ,UACR1rJ,EAAS,UACT+kG,EAAS,QACTwmD,EAAO,WACPrrH,EAAU,eACVyrH,EAAc,iBACdC,EAAgB,QAChBC,EAAO,YACPplH,EAAW,UACXqlH,EAAS,YACTp7H,EAAW,WACXq7H,EAAU,UACVC,EAAS,aACTC,GACGxsJ,IAAYS,EAAAA,EAAAA,KAAgCpB,EAAQvN,EAASkO,IAAc,CAAC,EAE3E07C,EAAavN,GAAYwN,EAAAA,EAAAA,KAAiBt8C,EAAQgkB,EAAK9uB,SAAMlC,EAC7Dk7G,GAAQC,EAAAA,EAAAA,KAAa17G,GACrBmhK,GAAkBC,EAAAA,EAAAA,KAAsB7zJ,EAAQvN,GAChDk5J,EAAkB1vJ,QACtB6yC,GACGo/D,IACC0lD,GACDH,GACAhhK,EAAQgxB,KAAO5G,KAAKC,MAAQ,IAAO22I,IAClCp3G,GAAYy3G,sBACO,cAApBryJ,GAECiqJ,EAAuBzvJ,QAC3B0vJ,GAAmB78G,IAAawN,EAAAA,EAAAA,KAAiBt8C,EAAQgkB,EAAK9uB,KAAK6+J,0BAE/Dl8H,EAA+B,WAApBp2B,EACXuyJ,EAAkC,cAApBvyJ,EACdwiB,EAAYD,IAAQE,EAAAA,EAAAA,KAAcF,GAElCiwI,EAAatzJ,IAAYuzJ,EAAAA,EAAAA,KAAiBl0J,EAAQvN,EAAQiL,OAAQiD,GAClEwzJ,EAAkBl4J,QAAQg4J,IAAeA,GAAYG,gBAAkBH,GAAYI,eACnF94G,EAAQ56C,GAAWigH,EAAAA,EAAAA,KAAY5gH,EAAQvN,EAAQiL,OAAQiD,QAAY3N,EAEnEshK,EAActwI,KAASuwI,EAAAA,EAAAA,KAAkBvwI,EAAM,YAAak9D,GAE5DszE,KAAiBxwI,IAAQrjB,KAAW66C,EAAAA,EAAAA,KAAiBx3B,EAAMu3B,EAAO44G,EAAiBjzE,IACrFozE,EAEE/3J,GAAUk4J,EAAAA,EAAAA,KAAehiK,GACzBiiK,GAASC,EAAAA,EAAAA,KAAcliK,GACvB86J,EAAgBtxJ,SAASM,GAC1BynB,IACC4vI,GACDL,GACAD,IACAlvI,EAAAA,EAAAA,KAAYJ,IACZkqF,IACC8lD,GACDhwI,EAAK4wI,cACL5wI,EAAK4wI,cAAgBrB,GACrB9gK,EAAQgxB,KAAO5G,KAAKC,MAAQ,IAAOw2I,GAClCuB,IAAWC,EAAAA,EAAAA,KAAgBriK,GAC3B+6J,IAAyBjxJ,IAAY0nB,IAAc+vI,IAAgBa,KAAa/lH,GAAar8C,EAAQw/C,aACrG8iH,EAAAA,EAAAA,KAAkBtiK,EAAQw/C,YAAcx/C,EAAQw/C,UAAU+iH,WAC1Dp0J,IAAcC,EAAAA,EAAAA,KAAyBb,EAAQvN,GAC/CwiK,GAAgBh5J,QAAQxJ,EAAQ4R,QAAQ48C,SACxCvwB,IAAuB0B,EAAAA,EAAAA,KAA2BpyB,GAElDk1J,IAAsBC,EAAAA,EAAAA,KAA6Bn1J,EAAQvN,GAC3D2iK,GAA6BF,IAAqBlwJ,KAAKnJ,IAAQ68E,EAAAA,EAAAA,KAAiB14E,EAAQnE,KACxFi8H,GAAkBs9B,IAA4B11D,MAAqBzjG,SACrEm5J,QAA6BpiK,EAE3BqiK,IAA6Bh8C,EAAAA,EAAAA,KAA0Cr5G,EAAQvN,EAAQiL,OAAQjL,EAAQyC,IACvGogK,GAAiBD,GACnBp5J,SAAQs5J,EAAAA,EAAAA,KAA0Bv1J,EAAQvN,EAAQiL,OAAQ23J,IAA4B5iK,EAAQyC,KAAKiR,WACnGnT,EACE26I,IAAgB2nB,KAAkBE,EAAAA,EAAAA,KAA0Bx1J,EAAQvN,EAAS4gK,GAC7EoC,IAAmBn8C,EAAAA,EAAAA,KAAuCt5G,EAAQvN,EAAQiL,QAE1EkwJ,IAAoB5oI,EAAAA,EAAAA,KAAqBhlB,EAAQvN,EAAQiL,QAEzDuuJ,IAAOyJ,EAAAA,EAAAA,KAAsB11J,EAAQvN,GACrCkjK,GAAYljK,EAAQ4R,QAAQsxJ,UAC5BllI,GAAQklI,IAAY1+H,EAAAA,EAAAA,KAAgBj3B,EAAQ21J,GAAU74J,OAAQ64J,GAAUzgK,SAAMlC,EAEpF,MAAO,CACL2N,WACAqjB,OACAguB,qBACA6mD,eACAa,oBAAqBZ,EACrB46D,YACAztD,YACAomD,WAAY2H,EACZ1H,cAAe0H,EACfzH,UAAW10H,IAAam8H,GAAeL,EACvChH,QAASqH,GAAerH,EACxBC,UAAWoH,GAAepH,EAC1B1rJ,YACAurJ,SAAU50H,GAAY40H,EACtBrrH,YAAa4yH,GAAe5yH,EAC5ByrH,gBAAiBmH,GAAenH,EAChCC,kBAAmBkH,GAAelH,EAClCC,QAAUkI,KAAmBr0J,IAAemsJ,EAC5CplH,aAAcqsH,GAAersH,EAC7BqlH,YACAp7H,aAAchxB,IAAegxB,EAC7Bq7H,YAAarsJ,IAAeqsJ,EAC5BC,YACAC,cAAe6G,GAAe7G,EAC9BrsJ,kBACAysJ,gBACA5B,kBACAD,uBACAQ,iBAAkBloI,GAAM4xI,iBAAc5iK,EAAYkuF,GAAcgrE,iBAChEC,iBACAr9G,YACApe,wBACAmlI,YAAa55J,QAAQilF,GACrBssE,yBACAC,sBAAsBlxJ,GAAYs4J,IAC5Bb,GAAehwI,GAAM9uB,KAAO4nJ,EAAAA,KAAkC4X,GACpE9pE,eAAgBl6D,MAAyBm6D,EAAAA,EAAAA,KAA+B7qF,GACxEk1J,uBACAp9B,mBACAg+B,wBAAwBC,EAAAA,EAAAA,KAA6B/1J,EAAQvN,EAAQiL,QACrEiwI,gBACAyf,gBAAiBkI,KAAmBG,GACpCpI,kBAAmBiI,KAAmBG,GACtCO,oBAAqBV,GACrB79B,uBAAuBt+B,EAAAA,EAAAA,KAA4Bn5F,GACnDgsJ,sBAAsBiK,EAAAA,EAAAA,KAA2Bj2J,GACjD4tJ,qBACA3pI,YACAuwI,iBACAh7D,mBAAoBtY,GAAcuY,wBAClCwyD,QACAx7H,SACD,GA5Je1wB,EA5iBoC7H,IA6DlD,IA7DmD,SACvDyI,EAAQ,mBACRqxC,EAAkB,aAClB6mD,EAAY,oBACZa,EAAmB,OACnB78F,EAAM,gBACN4E,EAAe,QACfhP,EAAO,oBACPyiK,EAAmB,gBACnBp9B,EAAe,MACfxpB,EAAK,KACL29C,EAAI,MACJx7H,EAAK,OACLu4C,EAAM,WACNojF,EAAU,UACVsH,EAAS,WACTrH,EAAU,YACVwJ,EAAW,cACXvJ,EAAa,SACbC,EAAQ,OACRI,EAAM,kBACNW,EAAiB,SACjBV,EAAQ,UACR1rJ,EAAS,sBACTssJ,EAAqB,KACrBxpI,EAAI,UACJiiF,EAAS,oBACTwnD,EAAmB,QACnBhB,EAAO,iBACPP,EAAgB,eAChBC,EAAc,UACdr9G,EAAS,qBACTpe,EAAoB,WACpB0Q,EAAU,cACVwpD,EAAa,eACbiiE,EAAc,iBACdC,EAAgB,QAChBC,EAAO,YACPplH,EAAW,UACXqlH,EAAS,YACTp7H,EAAW,WACXq7H,EAAU,UACVC,EAAS,aACTC,EAAY,sBACZ11B,EAAqB,gBACrBk0B,EAAe,qBACfD,GAAoB,gBACpB5qJ,GAAe,UACf4rJ,GAAS,cACTa,GAAa,uBACbuI,GAAsB,aACtBnoB,GAAY,oBACZqoB,GAAmB,gBACnB5I,GAAe,kBACfC,GAAiB,qBACjBrB,GAAoB,kBACpB4B,GAAiB,eACjB4G,GAAc,mBACdh7D,GAAkB,QAClBz8F,GAAO,oBACPC,IACD9E,EACC,MAAM,WACJ8oH,GAAU,qBACVk1C,GAAoB,aACpBC,GAAY,WACZnkD,GAAU,gBACV1rF,GAAe,cACf8vI,GAAa,YACbC,GAAW,cACXC,GAAa,uBACbC,GAAsB,sBACtBC,GAAqB,kBACrBC,GAAiB,cACjBn0J,GAAa,oBACbC,GAAmB,WACnBm0J,GAAU,gBACVC,GAAe,qBACfC,GAAoB,aACpBv4D,GAAY,aACZ0Y,GAAY,kBACZ8/C,GAAiB,QACjBC,GAAO,aACPn9E,GAAY,eACZo9E,GAAc,UACdC,GAAS,eACTC,GAAc,0BACd19C,GAAyB,oBACzB29C,GAAmB,sBACnBC,GAAqB,0BACrBC,GAAyB,iBACzB5kI,GAAgB,mBAChB6kI,GAAkB,gBAClBC,GAAe,uBACf30J,GAAsB,qBACtB40J,GAAoB,sBACpBC,GAAqB,eACrBzuD,KACE7rG,EAAAA,EAAAA,MAEEe,IAAOC,EAAAA,EAAAA,MACLwH,IAAKoU,KAAiB29I,EAAAA,GAAAA,GAAkB,CAC9C56J,SACAG,uBACAyB,WAAW,KAENu3C,GAAY0hH,KAAiBr6J,EAAAA,EAAAA,KAAS,IACtCs6J,GAAgBC,KAAqBv6J,EAAAA,EAAAA,KAAS,IAC9Cw6J,GAAuBC,GAAqBC,KAAwB51J,EAAAA,EAAAA,MACpE61J,GAAmBC,KAAwB56J,EAAAA,EAAAA,KAAS,IACpD66J,GAAiBC,KAAYC,EAAAA,GAAAA,GAAYtC,GAAwB/4J,GAAStK,EAAQgxB,MAGnFkqI,QAAyC36J,IAAxBkiK,GAAqCj5J,QAAQi5J,EAAoBpjK,SAExF0J,EAAAA,EAAAA,KAAU,KACJ+xJ,IAAiB1wJ,GACnB65J,GAAW,CAAEh5J,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAC1D,GACC,CAACwhK,GAAY75J,EAAQpK,EAAQiL,OAAQjL,EAAQyC,GAAIq4J,MAEpD/xJ,EAAAA,EAAAA,KAAU,KACJmwJ,GAAmB9uJ,GACrBw6J,GAAmB,CAAE35J,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAClE,GACC,CAACy2J,EAAiB9uJ,EAAQpK,EAAQiL,OAAQjL,EAAQyC,GAAIzC,EAAQq5J,YAEjEtwJ,EAAAA,EAAAA,KAAU,KACJgyJ,GAAyB3wJ,GAC3Bk6G,GAAa,CAAEr5G,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAC5D,GACC,CAACs4J,EAAuB3wJ,EAAQk6G,GAActkH,EAAQiL,OAAQjL,EAAQyC,MAEzEsG,EAAAA,EAAAA,KAAU,KACJ05J,GAAqBpjK,QAAUgmI,GAAiBhmI,SAAWojK,EAAoBpjK,QACjFojK,EAAoBlsJ,SAASnN,IAC3B89E,GAAa,CAAEhB,eAAgB98E,GAAM,GAEzC,GACC,CAACq5J,EAAqBp9B,EAAiBn+C,MAE1Cn+E,EAAAA,EAAAA,KAAU,KACHq6J,GAAgB/mH,IAAajyC,GAChCwhG,GAAa,CAAE3gG,OAAQjL,EAAQiL,QACjC,GACC,CAACm4J,EAAah5J,EAAQiyC,EAAWuvD,GAAc5rG,EAAQiL,SAE1D,MAAMgwJ,IAAoB30J,EAAAA,EAAAA,KAAQ,KAEhC,MAAMiiD,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAC9B/C,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KACpC,GAAI5kC,EAAQw/C,WAAW2mD,iBAAiB9mG,OAAQ,CAC9C,MAAMumK,EAAiB,IAAIz7E,IAAInqF,EAAQw/C,WAAW2mD,iBAAiB5zF,KACjErB,IAAA,IAAC,OAAE7G,GAAQ6G,EAAA,OAAK2wB,EAAUx3B,IAAWk+C,EAAUl+C,EAAO,KAGxD,OAAOu6C,MAAMnqC,KAAKmrJ,GAAgBpqI,OAAOhyB,SAASm0C,MAAM,EAAGkoH,EAAAA,IAC7D,CAEA,GAAK7lK,EAAQgjH,YAIb,OAAO5kE,OAAO4K,KAAKhpD,EAAQgjH,aAAarlE,MAAM,EAAGkoH,EAAAA,KAC9CtzJ,KAAK9P,GAAOo/B,EAAUp/B,IAAO8lD,EAAU9lD,KACvC+4B,OAAOhyB,QAAQ,GACjB,CAACxJ,EAAQw/C,WAAW2mD,gBAAiBnmG,EAAQgjH,cAE1C1yG,IAAgBhK,EAAAA,EAAAA,KAAQ,KAC5B,GAAIu1G,EACF,OAAOA,EAAMsC,SAASlW,MAAM69D,IAC1B,MAAMC,GAAoB97C,EAAAA,EAAAA,KAA4B67C,GACtD,QAAKC,IACEx1J,EAAAA,EAAAA,KAAiBlC,GAAiB03J,EAAkB,IAI/D,MAAMA,GAAoB97C,EAAAA,EAAAA,KAA4BjqH,GACtD,QAAK+lK,IACEx1J,EAAAA,EAAAA,KAAiBlC,GAAiB03J,EAAkB,GAC1D,CAAC13J,GAAiBwtG,EAAO77G,IAEtBgmK,GAAiBlM,GAAYsE,IAAWznE,WAAaynE,GAAU6H,WAAW,QAAK1lK,GAErFwI,EAAAA,EAAAA,KAAU,KACR,GAAIw6J,GAEF,YADAiC,IAAqB,GASvB,IAL8BQ,IACxBA,GAAeE,YAChB18J,QAAQxJ,EAAQ4R,QAAQ8B,MAAMA,QCpVhC,SAAuC+jJ,GAC5C,MAAM0O,EAAW1O,EAAMI,wBACjB3tH,EAAKi8H,EAASrO,WAAaC,KAAKqO,UAClCD,EAASxH,WACTwH,EAEJ,OAAO38J,QAAQ0gC,EAAG1nC,QAAQ,8CACnBgH,QAAQ0gC,EAAG1nC,QAAQ,sBAAwBgH,QAAQ0gC,EAAG1nC,QAAQ,aACvE,CD6US6jK,CAA8BL,IAIjC,YADAR,IAAqB,GAIvB,MAAMc,EAAgB9O,GAA4BwO,IAElDR,GACEc,EAAc5yJ,KAAKkzD,OAAOvnE,OAAS,GAChCW,EAAQ4R,QAAQ8B,KAAMA,KAAMhR,SAAS4jK,EAAc5yJ,MACvD,GACA,CACDsyJ,GAAgBA,IAAgBE,UAAWF,IAAgBO,YAAaP,IAAgBQ,UACxFjD,GAAqBvjK,EAAQ4R,QAAQ8B,OAGvC,MAAM+yJ,IAAYz7J,EAAAA,EAAAA,IAAgB,KAChCi6J,IAAc,GACd36J,IAAS,IAGLo8J,IAAe17J,EAAAA,EAAAA,IAAgB,KACnCi6J,IAAc,GACdwB,KACAv2J,GAAuB,CAAEuB,WAAgC,cAApBzC,EAAiC6sG,QAAO77G,WAAU,IAGnF2mK,IAAgB37J,EAAAA,EAAAA,IAAgB,KACpCm6J,IAAkB,GAClB76J,IAAS,IAGLs8J,IAAc57J,EAAAA,EAAAA,IAAgB,KAClC,MAAM67J,EAAYtB,IAAqBS,GAAiBxO,GAA4BwO,SAAkBzlK,EACjGwhK,GAGH0B,GAAqB,CACnBqD,aAAc9mK,EAAQyC,GACtBokK,YACAE,mBAAexmK,IALjBojK,GAAc,CAAE1qI,WAAYj5B,EAAQiL,OAAQwM,UAAWzX,EAAQyC,GAAIokK,cAQrEJ,IAAW,IAGPO,IAAmBh8J,EAAAA,EAAAA,IAAgB,KACvCujH,GAAW,CACTtjH,OAAQjL,EAAQiL,OAChBiD,SAAUlO,EAAQyC,KAEpBgkK,IAAW,IAGPQ,IAAaj8J,EAAAA,EAAAA,IAAgB,KACjC04J,GAAa,CAAEjsJ,UAAWzX,EAAQyC,KAClCgkK,IAAW,IAGPS,IAAYl8J,EAAAA,EAAAA,IAAgB,KAChCi6J,IAAc,GACdE,IAAkB,EAAK,IAGnBgC,IAAcn8J,EAAAA,EAAAA,IAAgB,KAClCu0G,GAAW,CAAEt0G,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,GAAIg9G,SAAS,IACrEgnD,IAAW,IAGPztI,IAAgBhuB,EAAAA,EAAAA,IAAgB,KAEpC,GADAy7J,KACI5qD,GAAOsC,SAAU,CACnB,MAAMjlF,EAAa2iF,EAAMsC,SAAS5rG,KAAIC,IAAA,IAAC,GAAE/P,GAAI+P,EAAA,OAAK/P,CAAE,IACpDoxB,GAAgB,CAAEoF,WAAYj5B,EAAQiL,OAAQiuB,cAChD,MACErF,GAAgB,CAAEoF,WAAYj5B,EAAQiL,OAAQiuB,WAAY,CAACl5B,EAAQyC,KACrE,IAGI2kK,IAAoBp8J,EAAAA,EAAAA,IAAgB,KACxCy7J,KACA7C,GAAY,CAAEloF,QAAS17E,EAAQ4R,QAAQ8pE,SAAW,IAG9C2rF,IAAsBr8J,EAAAA,EAAAA,IAAgB,KAC1Cy7J,KACA5C,GAAc,CAAEnoF,QAAS17E,EAAQ4R,QAAQ8pE,SAAW,IAGhD4rF,IAAmBt8J,EAAAA,EAAAA,IAAgB,KACvCy7J,KACAnC,GAAe,CAAEr5J,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAAK,IAG7D8kK,IAAkBv8J,EAAAA,EAAAA,IAAgB,KACtCy7J,KACAlC,GAAU,CAAEt5J,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAAK,IAGxD+kK,IAAsBx8J,EAAAA,EAAAA,IAAgB,KAC1C,MAAMhM,EAAS68G,GAAOsC,SAClB,CACA1mG,UAAWzX,EAAQyC,GACnBglK,gBAAiB5rD,EAAMsC,SAAS5rG,KAAI/E,IAAA,IAAC,GAAE/K,GAAI+K,EAAA,OAAK/K,CAAE,IAClDilK,WAAW,GAEX,CAAEjwJ,UAAWzX,EAAQyC,GAAIilK,WAAW,GAExC5D,GAAuB9kK,GACvBynK,IAAW,IAGPkB,IAA6B38J,EAAAA,EAAAA,IAAgB,KACjD+4J,GAAsB,CAAE94J,OAAQjL,EAAQiL,OAAQxI,GAAIzC,EAAQyC,KAC5DgkK,IAAW,IAGPmB,IAA0B58J,EAAAA,EAAAA,IAAiB68J,IAC/C7D,GAAkB,CAChB/4J,OAAQjL,EAAQiL,OAChBwM,UAAWzX,EAAQyC,GACnBolK,gBAEFv9J,IAAS,IAGLw9J,IAAqB98J,EAAAA,EAAAA,IAAgB,KACzCi6J,IAAc,GACdQ,GAAgBmC,GAAwB,IAGpCG,IAAwB/8J,EAAAA,EAAAA,IAAgB,KAC5Cy7J,KACAvC,GAAgB,CAAEj5J,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAAK,IAG9DulK,IAA6Bh9J,EAAAA,EAAAA,IAAgB,KACjDy7J,KACAtC,GAAqB,CAAEl5J,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,IAAK,IAGnEwlK,IAAqBj9J,EAAAA,EAAAA,IAAiBkuB,IAC1CkrI,GAAkB,CAAElrI,eACpButI,IAAW,IAGPyB,IAAiBl9J,EAAAA,EAAAA,IAAgB,KACrC65J,GAAgB,CACd55J,OAAQjL,EAAQiL,OAChBwM,UAAWzX,EAAQyC,GACnB0lK,oBAAqBj6J,IAAa4sC,EAAAA,GAClCstH,sBAAsB,IAExB3B,IAAW,IAGP4B,IAAmBr9J,EAAAA,EAAAA,IAAgB,MACvCs9G,EAAAA,GAAAA,IAAoBtoH,EAAQ4R,QAAQ48C,QAASiJ,aAC7CgvG,IAAW,IAGPh2J,IAAsBzF,EAAAA,EAAAA,IAAgB,MACzC6wG,GAAOsC,UAAY,CAACn+G,IAAUuW,SAASuvJ,IACtC,MAAMC,GAAoB97C,EAAAA,EAAAA,KAA4B67C,GACjDC,IAEDz1J,GACFR,GAAoB,CAAE5Q,MAAO6mK,IAE7Bl2J,GAAc,CAAE3Q,MAAO6mK,EAAmBr1J,cAAeo1J,IAC3D,IAEFW,IAAW,IAGP6B,IAAgBt9J,EAAAA,EAAAA,IAAgB,KACpC,MAAMpL,GAAQ+tH,EAAAA,EAAAA,KAAgB3tH,GAC9BqkK,GAAQ,CAAEkE,IAAK3oK,IACf6mK,IAAW,IAGP+B,IAAuBx9J,EAAAA,EAAAA,IAAiBqkC,IACxC8rH,KAAsBl9H,EACxB8B,GAAiB,CACfQ,eAAgB,eAGlBikI,GAAe,CACbv5J,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,GAAI4sC,WAAUo5H,mBAAmB,IAGhFhC,IAAW,IAGPiC,IAAyB19J,EAAAA,EAAAA,IAAgB,KAC7C85J,GAAqB,CACnB75J,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,GAAI0uB,MAAO,IAExDs1I,IAAW,IAGPkC,IAA8B39J,EAAAA,EAAAA,IAAgB,KAClD+5J,GAAsB,CACpB95J,OAAQjL,EAAQiL,OAChBwM,UAAWzX,EAAQyC,KAGrBgkK,IAAW,IAGPmC,IAA2B59J,EAAAA,EAAAA,IAAiBoT,IAChDumJ,GAA0B,CAAE15J,OAAQjL,EAAQiL,OAAQwM,UAAWzX,EAAQyC,GAAI2b,YAAW,IAGlFyqJ,IAAkB79J,EAAAA,EAAAA,IAAgB,KACtC87G,GAA0B,CACxB77G,OAAQjL,EAAQiL,OAChBxI,GAAIzC,EAAQyC,KAEdgkK,IAAW,IAGPqC,IAAqB99J,EAAAA,EAAAA,IAAgB,KACzCy5J,GAAoB,CAClBx5J,OAAQjL,EAAQiL,OAChBxI,GAAIzC,EAAQyC,KAEdgkK,IAAW,IAGPsC,IAAuB/9J,EAAAA,EAAAA,IAAgB,KAC3C05J,GAAsB,CACpBz5J,OAAQjL,EAAQiL,OAChBwM,UAAWzX,EAAQyC,KAErBgkK,IAAW,IAGPuC,IAAmB1iK,EAAAA,EAAAA,KAAQ,KAAOu1G,EAAQA,EAAMsC,SAAW,CAACn+G,IAAUuS,KAAIwc,IAAA,IAAC,GAAEtsB,GAAIssB,EAAA,OAAKtsB,CAAE,KAAG,CAACo5G,EAAO77G,IAEnG+K,IAAeC,EAAAA,EAAAA,IAAgB,KAC9BumB,IACL0zI,IAAc,GACd36J,KACAgsG,GAAe,CACbrrG,OAAQsmB,EAAK9uB,GAAIy2B,WAAY8vI,KAC7B,IAGJ,GAAI/H,EAGF,YAFAwF,KAKF,MAAMwC,GAAmB,IAAI7+I,KAG7B,OAFA6+I,GAAiBt0G,YAAYs0G,GAAiB11G,cAAgB,GAG5D1nD,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,GAAcrb,UAAU,wBAChCH,EAAAA,GAAA7K,cAACkoK,GAAkB,CACjB3P,qBAAsBA,GACtBh6G,mBAAoBA,EACpB6mD,aAAcA,EACda,oBAAqBA,EACrBF,mBAAoBA,GACpB/mG,QAASA,EACTq8C,UAAWA,EACXpe,qBAAsBA,EACtBk6D,cAAeA,EACf/tF,OAAQm5C,GACRk2G,iBAAkBA,EAClBC,eAAgBA,EAChBnjF,OAAQA,EACRojF,WAAYA,EACZoB,sBAAuBA,EACvBC,oBAAqBA,EACrBpB,WAAYA,EACZC,cAAeA,EACfC,SAAUA,EACVC,SAAUwL,GACV92J,UAAWA,EACXyrJ,OAAQA,EACR1mD,UAAWA,EACXqnD,kBAAmBA,EACnBV,SAAUA,EACVH,QAASA,EACTrrH,WAAYA,EACZyrH,eAAgBA,EAChBC,iBAAkBA,EAClBC,QAASA,EACTplH,YAAaA,EACbqlH,UAAWA,EACXp7H,YAAaA,EACbq7H,WAAYA,EACZC,UAAWA,EACXC,aAAcA,EACdI,cAAeA,GACf5f,aAAcA,GACdyf,gBAAiBA,GACjBC,kBAAmBA,GACnB51B,sBAAuBA,EACvBi0B,qBAAsBA,GACtBC,gBAAiBA,EACjBgC,eAAgBA,GAChB71B,gBAAiBA,EACjB/0H,cAAeA,GACf2qJ,kBAAmBA,GACnBE,kBAAmBA,GACnBlB,UAAWA,GACXT,KAAMA,EACNx7H,MAAOA,EACPq9H,aAAc2L,GACd5L,QAASwL,GACTtL,OAAQ2L,GACR1L,MAAO2L,GACPpnD,QAASqnD,GACT73J,UAAW0pB,GACX0Z,SAAUg0H,GACVv3J,SAAUpE,GACVywJ,cAAe4L,GACf3L,gBAAiB4L,GACjBrlI,SAAUwlI,GACV9L,OAAQiM,GACRhM,aAAcmM,GACdx9J,QAASm8J,GACT7K,WAAYsM,GACZ3L,eAAgB0L,GAChBpM,aAAcwM,GACdvM,WAAYrrJ,GACZsrJ,UAAWuM,GACXtM,aAAcsL,GACdrL,YAAaoJ,GACbnJ,aAAc6L,GACd3L,iBAAkBoM,GAClBnM,mBAAoBqM,GACpBpM,wBAAyBqM,GACzBxM,eAAgB6L,GAChBxL,qBAAsBoM,GACtBnM,YAAaoM,GACbnM,eAAgBoM,GAChBnM,iBAAkBoM,KAEpBl9J,EAAAA,GAAA7K,cAAC03J,GAAe,CACdtuJ,OAAQ86J,GACRztJ,UAAWzX,EAAQyC,GACnBwI,OAAQjL,EAAQiL,OAChBX,QAASq8J,KAEX96J,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQg7J,GACR96J,QAASg7J,GACT5xJ,KAAMlI,GAAK,0BACXi2B,aAAcj2B,GAAK,uBACnBk2B,eAAgB6lI,KAEjB1N,GAAiB6L,GACd,KE3bV,IAAev7J,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAAuD,IAArD,YAAE22J,EAAW,oBAAEC,GAAqB52J,EAC3C,MAAMxE,GAAqBC,EAAAA,EAAAA,KAAyBV,IAC9C,OAAEtC,EAAM,SAAEiD,GAAaF,GAAsB,CAAC,EAC9CujB,EAAOtmB,IAAUwlC,EAAAA,EAAAA,KAAWljC,EAAQtC,GACpCwjF,EAAexjF,GAASyjF,EAAAA,EAAAA,KAAmBnhF,EAAQtC,QAAU1K,EAC7D8oK,EAAc93I,GAAO+3I,EAAAA,EAAAA,KAA4B/3I,EAAMk9D,QAAgBluF,EACvEihK,EAAav2J,GAAUiD,GAAWuzJ,EAAAA,EAAAA,KAAiBl0J,EAAQtC,EAAQiD,QAAY3N,EAC/EmhK,EAAkBl4J,SAASg4J,GAAYG,gBAAkBH,GAAYI,eACrE94G,EAAQ79C,GAAUiD,GAAWigH,EAAAA,EAAAA,KAAY5gH,EAAQtC,EAAQiD,QAAY3N,EACrEgpK,EAAkB//J,QACtB+nB,GAAQrjB,IAAY66C,EAAAA,EAAAA,KAAiBx3B,EAAMu3B,EAAO44G,EAAiBjzE,IAC9D46E,GAAaE,iBAEdp/G,EAAkB3gD,QAAQyB,KAAWsnB,EAAAA,EAAAA,KAAqBhlB,EAAQtC,GAElEi7E,EAAiBijF,EAAcA,EAAYjjF,eAC7CkjF,EAAsB,CAAE3xF,UAAW2xF,QAAwB7oK,EAEzDu6F,EAAa5U,GAAiBD,EAAAA,EAAAA,KAAiB14E,EAAQ24E,QAAkB3lF,EAE/E,MAAO,CACL8iK,uBAAwB75J,QAAQyB,KAAWq4J,EAAAA,EAAAA,KAA6B/1J,EAAQtC,GAChFs+J,kBACAp/G,kBACAq/G,gBAAgBC,EAAAA,EAAAA,KAAqBl8J,GACrCutF,aACA78D,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GACjD29I,4BAA6B39I,EAAO+kC,SAASg3E,MAAM4hC,4BACnDl9I,qBACD,GA9BeV,EAlM+B7H,IAa7C,IAb8C,OAClD2E,EAAM,YACN++J,EAAW,oBACXC,EAAmB,WACnBtuE,EAAU,gBACVyuE,EAAe,uBACflG,EAAsB,eACtBmG,EAAc,gBACdr/G,EAAe,qBACflsB,EAAoB,4BACpBitH,EAA2B,mBAC3Bl9I,EAAkB,QAClB1D,GACD7E,EACC,MAAM,aACJyhF,EAAY,iBACZ8a,EAAgB,YAChB7zC,EAAW,iBACXruB,IACEr1B,EAAAA,EAAAA,MAGE4c,GAAezf,EAAAA,EAAAA,IAAuB,MAEtCqzF,GAAkBrzF,EAAAA,EAAAA,IAA0B,MAE5C4D,GAAOC,EAAAA,EAAAA,MAEP,SAAEkE,IAAaC,EAAAA,EAAAA,MAEf85J,GAAiBr1I,EAAAA,EAAAA,GAAsBymE,GACvC6uE,EAAsB7uE,GAAc4uE,EAEpCE,EAAUpgK,SAASmgK,GAAqB1lE,YAAc0lE,GAAqB3lE,eAC3EnB,EAAU8mE,GAAqB9mE,SAE9B4iE,EAAiBC,IAAYC,EAAAA,GAAAA,GAAYtC,IAE9CjkH,aAAcioD,EACdroD,cAAesoD,GACbxoD,MAGFw6C,QAAS0B,IACPpB,EAAAA,GAAAA,IAAwB,CAAEC,QAASxyE,EAAckzE,WA9CzB,IA8C4D/xF,YAAa4B,KAErGrB,EAAAA,EAAAA,KAAU,KACJqB,IAAWu/J,GAAqBhtF,UAClCuK,EAAa,CACXhB,eAAgBijF,EAAcA,EAAYjjF,eAAiB,CAAEzO,UAAW2xF,IAE5E,GACC,CAACh/J,EAAQ++J,EAAajiF,EAAckiF,EAAqBO,IAE5D,MAAMziD,GAAe95G,EAAAA,EAAAA,KAAY,CAACsuE,EAAqBkkC,EAAoBiqD,KACpE77J,IAGL0tE,EAAU,IACLA,EACHouF,qBAAqB,GAGnBN,GAAkBK,EACpBpE,GAAiBoC,IACf15G,EAAY,CACVO,YAAa1gD,EAAoB0tE,UAASkkC,WAAUioD,gBAEtDv9J,GAAS,KAGX6jD,EAAY,CACVO,YAAa1gD,EACb0tE,UACAkkC,WACAsrC,4BAA6BA,GAA+B0e,IAE9Dt/J,KACF,GACC,CAAC0D,EAAoBw7J,EAAgB/D,EAAiBn7J,EAAS4gJ,EAA6B0e,IAEzFv7D,GAAoBjhG,EAAAA,EAAAA,KAAY,KAChCu8J,IACF3nE,EAAiB,CAAEkB,aAAcymE,EAAoBlnK,KACrD6H,IACF,GACC,CAACA,EAASq/J,EAAqB3nE,IAE5BkmE,GAAiB96J,EAAAA,EAAAA,KAAY,KACjC,IAAKu8J,EAAqB,OAC1B,MAAM,UAAElyF,GAAckyF,EAChBI,EAASlnE,EAAU,WAAa,cAChCzsF,EAAO,GAAE8vD,EAAAA,MAAkB6jG,KAAUtyF,KAC3C6wC,EAAAA,GAAAA,IAAoBlyG,GACpB0pB,EAAiB,CACf9/B,QAASwL,EAAK,eACd,GACD,CAACq3F,EAASr3F,EAAMm+J,EAAqB7pI,IAclCwjB,GAAkEh9C,EAAAA,EAAAA,KAAQ,IACvE4K,IAAA,IAAC,UAAEC,EAAW/G,OAAQm5C,GAAYryC,EAAA,OACvCrF,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLoN,QAAS7O,EACTzG,KAAK,UACLsD,MAAM,cACNR,UAAWu3C,EAAa,SAAW,GACnC72C,QAASyE,EACTE,UAAU,gBAEVxF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mBACN,GAEV,CAAC2D,IAwBJ,OACE9D,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,WAAW+I,EAAAA,GAAAA,GAAe,kBAAmB8tF,GAAW,gBACxDz4F,OAAQA,EACRE,QAASA,EACT89B,OA3BJ,WACE,MAAMuF,GAAgB54B,EAAAA,GAAAA,GAAe,gBAAiBuyF,GAAuB,mBAE7E,OACEz7F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2hC,EAAe14B,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACvDsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAAC6E,OAAK,EAAC5E,MAAM,cAActD,KAAK,UAAUmI,UAAW7F,EAAK,SAAUkB,QAASpC,GAClFuB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACZ29J,GAAsB33I,EAAAA,GAAAA,GAAW23I,EAAoB/9J,MAAO,CAAC,QAAS,UAAYJ,EAAK,uBAE1FK,EAAAA,GAAA7K,cAACoR,GAAAA,EAAY,CACXpG,UAAU,2CACVqG,QAASixC,EACThxC,UAAU,SAEVzG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,OAAOpF,QAASw7J,GAAiB18J,EAAK,kBAI7D,CAOYw+J,IAEPL,GAAqBhtF,SACpB9wE,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,EAAcrb,UAAU,yBAAyBo4C,SAAUijD,GACnEx7F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yCACbH,EAAAA,GAAA7K,cAAA,UAAQiS,IAAKgoF,EAAiBjvF,UAAU,kBACvC29J,EAAoBhtF,SAASpqE,KAAKmpE,GACjC7vE,EAAAA,GAAA7K,cAACokG,GAAa,CACZ1pB,QAASA,EACTxyE,KAAM25F,EAAUonE,EAAAA,IAAmBC,EAAAA,IACnClvE,oBAAqBA,EACrBtuF,QAAS68J,IAAoB1mE,EAAUqkB,OAAe3mH,EACtDi9F,SAAU9hB,EACVvxB,gBAAiBA,EACjBlsB,qBAAsBA,EACtBg9D,gBAAiBA,QAKzBpvF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLrD,KAAK,UACLs6C,OAAK,EACLh3C,MAAOo9J,EAAU,SAAW,UAC5Bl9J,QAAS2hG,GAjFI87D,MACvB,IAAKR,EAAqB,OAAOn+J,EAAK,WAEtC,MAAMu+J,EAASlnE,EAAU,QAAU,UAEnC,OAAOr3F,EACLo+J,EAAW,qBAAoBG,SAAiB,kBAAiBA,SACjEJ,EAAoBx4I,MACpB,IACD,EA0EUg5I,MAKPt+J,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAETg7G,EACK,KC5PZ,IAAgB,KAAO,WAAW,KAAO,YCqFzC,IAAev7J,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CACLy3H,uBAAuBt+B,EAAAA,EAAAA,KAA4Bn5F,MAHrCD,EArDoC7H,IAIlD,IAJmD,kBACvDs/H,EAAiB,sBACjBC,EAAqB,QACrB16H,GACD7E,EACC,MAAM,eAAE0hF,IAAmB18E,EAAAA,EAAAA,MACrBe,GAAOC,EAAAA,EAAAA,KAEP45H,GAAkB/+H,EAAAA,EAAAA,KAAQ,IACvBy+H,GAAmBxyH,KAAK9P,IAAOusC,EAAAA,GAAAA,MAAY2tC,SAAS8oB,SAAShjG,MACnE,CAACsiI,IAGEqlC,GAAsBxiK,EAAAA,EAAAA,IAAuB,OAC3C0xF,QAASoB,IAAiCd,EAAAA,GAAAA,IAAwB,CACxEC,QAASuwE,EAAqB5hK,YAAa68H,IAGvCglC,GAAsBh2I,EAAAA,EAAAA,GAAsBgxG,GAC5CilC,EAA2BjlC,GAAmBglC,EAE9CE,GAAiBv/J,EAAAA,EAAAA,IAAiB0wE,IACtCyL,EAAe,CACbjB,eAAgBxK,EAAQwK,gBACxB,IAGJ,OACEr6E,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQZ,QAAQ67H,GAChBr5H,UAAWuQ,GAAOwf,KAClBzxB,QAASA,EACTwjE,gBAAc,EACdliE,MAAOJ,EAAK,+BAEZK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOiuJ,KAAM,iBAAkBv3J,IAAKm3J,EAAqBK,eAAa,GAClGH,GAA0B/3J,KAAK+qJ,GAE5BzxJ,EAAAA,GAAA7K,cAACskI,GAAc,CACb5yH,IAAK4qJ,EAAe76J,GACpBuJ,UAAWuQ,GAAOmuJ,QAClB5vE,WAAYwiE,EACZ5wJ,QAAS69J,EACTvvE,oBAAqBN,EACrBt7E,QAAS4lH,OAKX,K,gBCvBZ,MAAM2lC,GAAiE,CACrEr4H,SAAU,CACRxgC,KAAM,OACNnG,MAAO,eAETi/J,KAAM,CACJ94J,KAAM,OACNnG,MAAO,YAqpBX,IAAexB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAAuC,IAArC,OAAEvC,EAAM,SAAEiD,GAAUV,EAC3B,MAAM+jB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAChC,IAAKsmB,GAAQA,EAAKs5I,aAChB,MAAO,CAAC,EAEV,MAAMxuH,GAAYhvC,EAAAA,EAAAA,KAASkkB,EAAK9uB,IAC1B8tC,EAAO8L,GAAY7L,EAAAA,EAAAA,KAAWjjC,EAAQtC,QAAU1K,EAChDuqK,EAAgBv6H,IAAQw6H,EAAAA,EAAAA,KAAiBx6H,GACzCy6H,EAAe98J,IAAa4sC,EAAAA,GAC5BxoB,GAAiBC,EAAAA,EAAAA,KAAqBhlB,EAAQtC,IAC5CA,OAAQggK,EAAe/8J,SAAUg9J,IAAoBj9J,EAAAA,EAAAA,KAAyBV,IAAW,CAAC,EAC5F49J,EAAgBH,IAAiBz6H,KAAS9e,EAAAA,EAAAA,KAAcF,KAASI,EAAAA,EAAAA,KAAYJ,IAE7E6pF,GAAWC,EAAAA,EAAAA,KAAYpwG,QAAsC1K,GAA5B46G,EAAAA,EAAAA,KAAU5tG,EAAQtC,GACnD0yD,EAAethB,GAAYuhB,EAAAA,EAAAA,KAAmBrwD,EAAQtC,QAAU1K,EAChEkuF,EAAgBpyC,OAAiD97C,GAArCmuF,EAAAA,EAAAA,KAAmBnhF,EAAQtC,GACvD2tG,EAAWj7C,GAAgB8wB,EAC3B28E,GAAUC,EAAAA,EAAAA,KAAc99J,EAAQtC,GAEhC69C,GAAQqlE,EAAAA,EAAAA,KAAY5gH,EAAQtC,EAAQiD,GACpCo9J,EAAiB/5I,EAAK83B,UAC1B93B,EAAKgqF,aAAcumD,EAAAA,EAAAA,KAAkBvwI,EAAM,kBAAmBiqF,EAAAA,EAAAA,KAAiBjqF,EAAM,iBAEjFg6I,EAAeziH,IAAS0iH,EAAAA,EAAAA,KAAkBj6I,EAAMu3B,GAChD2iH,GAAYC,EAAAA,EAAAA,KAAgBn+J,EAAQtC,GAEpCiwI,GAAeywB,EAAAA,EAAAA,KAAuBp+J,EAAQtC,IAAW2tG,GAAUgzD,sBAGnEC,GADgBC,EAAAA,EAAAA,KAAiB7gK,EAAQiD,EAAUX,EAAO8kB,gBAC5Boe,EAAAA,EAAAA,KAAWljC,EAAQ+wC,OAAOpwC,SAAa3N,EAE3E,MAAO,CACLgxB,OACAtU,SAAS0tG,EAAAA,EAAAA,KAAkBp5F,GAAMq5F,EAAAA,EAAAA,KAAqBr9G,IAASs9G,EAAAA,EAAAA,KAAuBt9G,IACtF8uC,YACA0vH,QAASx6I,GAAM83B,UAAY2hH,EAC3B3hH,QAAS93B,GAAM83B,QACf2iH,kBAAmBz6I,GAAMy6I,kBACzBlB,gBACAmB,eAAeC,EAAAA,EAAAA,KAAiB36I,GAChC45I,gBACAC,UACAvyD,cAAervG,QAAQilF,GAAcqqB,cACrCqzD,YAAa/wD,EAAUz9C,GAAcG,SAASsuG,cAAW7rK,EACzD8rK,oBAAqBjxD,EAAUz9C,GAAcG,SAASwuG,sBAAmB/rK,EACzEgsK,iBAAiB3+J,EAAAA,EAAAA,KAAeL,GAAQg/J,iBACnCtB,IAAkBhgK,GAAUigK,IAAoBh9J,EACrDo9J,iBACAC,eACAE,YACAe,oBAAoBC,EAAAA,EAAAA,KAAyBl/J,GAC7C2tI,eACA9gB,UAAWz8D,GAAcy8D,UACzBsyC,MAAOljK,QAAQ4xG,GACf9oF,iBACAu5I,cACD,GAzDev+J,EAvlBmC7H,IAkDjD,IAlDkD,OACtDwF,EAAM,SACNiD,EAAQ,OACR9D,EAAM,iBACNuiK,EAAgB,OAChBp2F,EAAM,UACN/kD,EAAS,YACT26I,EAAW,oBACXE,EAAmB,iBACnBO,EAAgB,QAChBb,EAAO,QACP1iH,EAAO,kBACP2iH,EAAiB,gBACjBO,EAAe,YACfM,EAAW,aACXC,EAAY,cACZ3B,EAAa,UACb4B,EAAS,QACTC,EAAO,QACPC,EAAO,kBACPC,EAAiB,oBACjBC,EAAmB,cACnBC,EAAa,oBACbC,EAAmB,SACnBC,EAAQ,kBACRC,EAAiB,mBACjBC,EAAkB,KAClBj8I,EAAI,UACJ8qB,EAAS,QACTp/B,EAAO,cACPgvJ,EAAa,QACbb,EAAO,cACPvyD,EAAa,cACbiyD,EAAa,eACbQ,EAAc,aACdC,EAAY,UACZE,EAAS,mBACTe,EAAkB,aAClBtxB,EAAY,UACZ9gB,EAAS,MACTsyC,EAAK,eACLp6I,EAAc,YACdu5I,EAAW,kBACX4B,EAAiB,oBACjBC,EAAmB,mBACnBC,EAAkB,cAClBC,EAAa,kBACbC,EAAiB,QACjBvjK,GAAO,oBACPC,IACD9E,EACC,MAAM,qBACJ8wJ,GAAoB,uBACpBuX,GAAsB,eACtBC,GAAc,WACdC,GAAU,8BACVC,GAA6B,gBAC7BC,GAAe,eACfC,GAAc,qBACdC,GAAoB,4BACpBC,GAA2B,iBAC3BC,GAAgB,2BAChBC,GAA0B,oBAC1BC,GAAmB,cACnBC,GAAa,mBACbC,GAAkB,qBAClBC,GAAoB,mBACpBC,GAAkB,SAClBjkI,GAAQ,QACR1W,GAAO,iBACP46I,GAAgB,uBAChBC,GAAsB,UACtBnvH,GAAS,YACTD,GAAW,uBACXqvH,GAAsB,eACtBC,GAAc,eACd14D,KACE7rG,EAAAA,EAAAA,OAEE,SAAEkF,KAAaC,EAAAA,EAAAA,OACd2zC,GAAY0hH,KAAiBr6J,EAAAA,EAAAA,KAAS,IACtCqkK,GAAiBC,KAAsBtkK,EAAAA,EAAAA,KAAS,IAChD2E,GAAmB4/J,KAAwBvkK,EAAAA,EAAAA,KAAS,IACpDsgH,GAAiBkkD,KAAsBxkK,EAAAA,EAAAA,KAAS,IAChD+gH,GAAuBC,GAAqBC,KAAyBn8G,EAAAA,EAAAA,MACtE,EAAEgY,GAAC,EAAEC,IAAM4uD,GAEjB9zD,EAAAA,GAAAA,GAA4BrY,EAAQG,QAAqBhK,GAAW,GACpE,MAAM8uK,IAAuB7iI,EAAAA,GAAAA,KACzB+/H,IAAmBljH,SAAkB9oD,EA3FL,KA8F9B6qH,IAAiBpgH,EAAAA,EAAAA,IAAgB,KACrCokK,IAAmB,GACnB9kK,IAAS,IAGLS,IAAeC,EAAAA,EAAAA,IAAgB,KACnCi6J,IAAc,GACd3uD,GAAe,CAAErrG,SAAQiuB,WAAY,KACrC5uB,IAAS,IAGLo8J,IAAe17J,EAAAA,EAAAA,IAAgB,KACnCi6J,IAAc,GACdkK,IAAqB,EAAK,IAGtB1I,IAAYz7J,EAAAA,EAAAA,IAAgB,KAChCi6J,IAAc,GACd36J,IAAS,IAGLglK,IAAsBtkK,EAAAA,EAAAA,IAAgB,KAC1C0jK,GAAmB,CAAEzjK,SAAQiD,aAC7BghK,IAAoB1C,GACpB/F,IAAW,IAGPh3J,IAAmBzE,EAAAA,EAAAA,IAAgB,KACvCmkK,IAAqB,GACrB7kK,IAAS,IAGLilK,IAAiBvkK,EAAAA,EAAAA,IAAgB,KACrC+iK,GAAe,CAAEyB,QAAS,UAAW,IAGjCC,IAAmBzkK,EAAAA,EAAAA,IAAgB,KACvCgjK,GAAW,CAAE/iK,UAAS,IAGlBykK,IAAoB1kK,EAAAA,EAAAA,IAAgB,KACxCurJ,GAAqB,CAAEtrJ,SAAQgS,SAAS,IACxCwpJ,IAAW,IAGPkJ,IAAkB3kK,EAAAA,EAAAA,IAAgB,KACtC4gH,KACAwjD,IAAmB,GACnBnK,IAAc,EAAM,IAGhB2K,IAAyB5kK,EAAAA,EAAAA,IAAgB,KAC7C2jK,GAAqB,CAAE1jK,WACvBikK,IAAoB1C,GACpB/F,IAAW,IAGPoJ,IAAkB7kK,EAAAA,EAAAA,IAAgB,KACtC6jK,GAAiB,CAAEp+I,OAAO,IAC1By+I,IAAoB1C,GACpB/F,IAAW,IAGPqJ,IAAuB9kK,EAAAA,EAAAA,IAAgB,KAC3C4jK,GAAmB,CAAE3jK,SAAQ0/C,QAAS9mC,OAAO3V,KAC7CghK,IAAoB1C,GACpB/F,IAAW,IAGPsJ,IAA0B/kK,EAAAA,EAAAA,IAAgB,KAC9C2/B,GAAS,CAAEloC,QAAIlC,IACfwuK,GAAuB,CAAE9jK,SAAQm+D,WAAW,IAC5Cq9F,IAAW,IAGPuJ,IAA4BhlK,EAAAA,EAAAA,IAAgB,KAC5CwiK,EAEFU,GAAgB,CACdjjK,WAGFgjK,GAA8B,CAC5BhjK,WAGJw7J,IAAW,IAGPwJ,IAAwBjlK,EAAAA,EAAAA,IAAgB,KAC5CmjK,GAAe,CAAE1rK,GAAIwI,IACrBw7J,IAAW,IAGPyJ,IAAkBllK,EAAAA,EAAAA,IAAgB,KACtCyjK,GAAc,CAAE0B,UAAWllK,IAC3Bw7J,IAAW,IAGP2J,IAAwBplK,EAAAA,EAAAA,IAAgB,KAC5CojK,GAAqB,CAAE1yI,OAAQzwB,IAC/Bw7J,IAAW,IAGP4J,IAAkBrlK,EAAAA,EAAAA,IAAgB,KACtC2iK,IACAlH,IAAW,IAGP6J,IAAkBtlK,EAAAA,EAAAA,IAAgB,KACtCqjK,GAA4B,CAAE3yI,OAAQzwB,EAAQnF,SAAS,IACvD2gK,IAAW,IAGP8J,IAAavlK,EAAAA,EAAAA,IAAgB,KACjCqjK,GAA4B,CAAE3yI,OAAQzwB,IACtCw7J,IAAW,IAGPn/C,IAAet8G,EAAAA,EAAAA,IAAgB,KACnC4iK,IACAnH,IAAW,IAGP+J,IAAwBxlK,EAAAA,EAAAA,IAAgB,KAC5CsjK,KACAY,IAAoB1C,GACpB/F,IAAW,IAGPgK,IAA0BzlK,EAAAA,EAAAA,IAAgB,KAC9CujK,GAA2B,CAAEtjK,WAC7BikK,IAAoB1C,GACpB/F,IAAW,IAGPiK,IAAmB1lK,EAAAA,EAAAA,IAAgB,KACnCoiK,GACFoB,GAAoB,CAAEvjK,WACtBikK,IAAoB1C,IAEpBwC,GAAe,CAAE/jK,WAEnBw7J,IAAW,IAGPkK,IAA2B3lK,EAAAA,EAAAA,IAAgB,KAC/C8jK,GAAuB,CAAE7jK,SAAQm+D,WAAW,IAC5Cq9F,IAAW,IAGPmK,IAAuB5lK,EAAAA,EAAAA,IAAgB,KAC3C8iK,KACArH,IAAW,IAGPoK,IAAuB7lK,EAAAA,EAAAA,IAAgB,KAC3C6iK,IACApH,IAAW,IAGPqK,IAAc9lK,EAAAA,EAAAA,IAAgB,KAClC20C,GAAU,CAAEjkB,OAAQzwB,IACpBw7J,IAAW,IAGPsK,IAAgB/lK,EAAAA,EAAAA,IAAgB,KACpC00C,GAAY,CAAEhkB,OAAQzwB,IACtBw7J,IAAW,KAGb19J,EAAAA,EAAAA,IAAUkhC,GAAkB,IAE5B,MAAMz+B,IAAOC,EAAAA,EAAAA,KAEPulK,IAAa1qK,EAAAA,EAAAA,KAAQ,KACzB,MAAM2qK,EAAiB9E,GAAa55J,KAAIrB,IAAiB,IAAhB,QAAEs+J,GAASt+J,EAClD,MAAMggK,EAAMvG,GAAY6E,GACxB,GAAK0B,EAOL,OACErlK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPC,IAAK88J,EACL19J,KAAMo/J,EAAIp/J,KAEVpF,QAVgBoW,KAClBirJ,GAAe,CAAEyB,QAAU,IAAGA,MAC9B/I,IAAW,GAURj7J,GAAK0lK,EAAIvlK,OACD,IAITwlK,EAAoBhF,GAAalkE,MAAKz1F,IAAA,IAAC,QAAEg9J,GAASh9J,EAAA,MAAiB,YAAZg9J,CAAqB,IAmBlF,MAAO,IAAIyB,GAAkB,GAjBPvE,GACpB7gK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,iBAELpF,QAASA,KACHykK,IAAsB9E,EACxB0B,GAAe,CAAEyB,QAAS,aAE1Bv7I,GAAQ,CAAE7d,IAAKi2J,GAAuB7gK,GAAK,6BAE7Ci7J,IAAW,GAGZj7J,GAAK,sBAIsCgwB,OAAOhyB,QAAQ,GAC9D,CAAC2iK,EAAa3gK,GAAM6gK,EAAqBK,IAEtC0E,IAAc9qK,EAAAA,EAAAA,KAAQ,KAC1B,GAAKirB,EAEL,OACS/lB,GADLqgK,EACU,SAGVxvH,EACU,iBAGV4vH,EACU,0BAGVz6I,EACU,eAGF,mBAAmB,GAC9B,CAACy6I,EAAe16I,EAAMC,EAAW6qB,EAAWwvH,EAAargK,KAE5D,OACEK,EAAAA,GAAA7K,cAACopG,GAAAA,EAAM,KACLv+F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACHzU,OAAQm5C,GACRjxC,UAAU,QACVlO,MAAQ,SAAQsjB,aAAYC,QAC5Brd,QAASm8J,GACTwI,gBAAiBA,IAEhBt/J,IAAYo9J,GACXlhK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,SACLpF,QAAS46G,IAER97G,GAAK,WAGTohK,GAAoBtB,GACnBz/J,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,WACLpF,QAASkjK,IAERpkK,GAAK,2BAERK,EAAAA,GAAA7K,cAACu/J,GAAAA,EAAa,OAGjB8O,IACCxjK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,OACLpF,QAAS4iK,IAEE9jK,GAAVugK,EAAe,yBAAiC,2BAGpDN,IAAcF,GACb1/J,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,OACLpF,QAASmjK,IAERrkK,GAAK,SAGT+/J,GACC1/J,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,OACLpF,QAASojK,IAERtkK,GAAK,yBAGTmE,KAAai9J,GAAoBvjH,IAAY0iH,GAC5ClgK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,SACLpF,QAASqjK,IAERvkK,GAAK,6BAGTohK,GAAoBpjK,QAAQ6jK,IAC3BxhK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,OACLpF,QAASghK,GAEIliK,GAAZgmB,EAAiB,oBAA4B,kBAC9C3lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAeqhK,IAGjCT,IAAqBb,IAAYC,GAChCngK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,UACLpF,QAASmkK,IAERrlK,GAAK,+BAGTmhK,GAAoBE,GACnBhhK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,OACLpF,QAAS6iK,IAER/jK,GAAK,aAGTmhK,GAAoBG,GACnBjhK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAM0f,EAAY,UAAY,QAC9B9kB,QAAS2jK,IAER7kK,GAAKgmB,EAAY,qBAAuB,qBAG5Ci8I,IAAsBL,GACrBvhK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,gBACLpF,QAASgkK,IAERllK,GAAKgmB,EAAY,2BAA6B,2BAGlDs5I,GACCj/J,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,WACLpF,QAAS0jK,IAER5kK,GAAK,eAGTmE,IAAYq9J,GACXnhK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,QACLpF,QAAS6jK,IAER/kK,GAAK,SAGTwhK,GACCnhK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,iBACLpF,QAAS4jK,IAER9kK,GAAK,cAGTyhK,IAAYhwJ,EACXpR,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,SACLpF,QAASgjK,IAERlkK,GAAK,gBAINK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,OACLpF,QAASijK,IAERnkK,GAAK,aAAa,SAIvB+hK,GAAqBC,IACrB3hK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,aACLpF,QAASsjK,IAERxkK,GAAKgiK,EAAqB,gBAAkB,sBAGhD30D,GACChtG,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAM0f,EAAY,WAAa,UAC/B9kB,QAASujK,IAERzkK,GAAKgmB,EAAY,iBAAmB,8BAGvCo7I,GACA/gK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,SACLpF,QAASkkK,IAERplK,GAAK,yBAGT4hK,GACCvhK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,gBACLpF,QAASgkK,IAERllK,GAAK,WAGT0hK,GACCrhK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,QACLpF,QAAS8jK,IAERhlK,GAAK,eAGTgmB,GAAa27I,GACZthK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,cACLpF,QAAS+jK,IAERjlK,GAAK,2BAGT0vI,GACCrvI,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,WACLpF,QAASikK,IAERnlK,GAAK,0BAGT2/J,GACCt/J,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,OACLpF,QAAS3B,IAERS,GAAK,sBAGTwlK,GACA5F,GACCv/J,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,OACLpF,QAASwjK,IAER1kK,GAAK,qBAGTkhK,GACC7gK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAMsoH,EAAY,OAAS,YAC3B1tH,QAAS0tH,EAAYq1C,GAAmBqB,IAE3BtlK,GAAZ4uH,EAAiB,aAAqB,aAG1C/9E,IAAc/pB,IAAmBo6I,GAChC7gK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAMsoH,EAAY,OAAS,YAC3B1tH,QAAS0tH,EAAY22C,GAAgBD,IAExBtlK,GAAZ4uH,EAAiB,UAAkB,cAGvCkzC,GACCzhK,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACu/J,GAAAA,EAAa,MACd10J,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPN,aAAW,EACXL,KAAK,SACLpF,QAASg6J,IAER0K,MAKR7/I,GACC1lB,EAAAA,GAAA7K,cAACqwK,GAAAA,EAAe,CACdjnK,OAAQmF,GACRjF,QAASmF,GACT8hB,KAAMs6I,GAAet6I,EACrB+/I,cAAe9nK,QAAQqiK,KAG1BoB,GAAWthD,IAAyBp6F,GAAM9uB,IACzCoJ,EAAAA,GAAA7K,cAACsrH,GAAAA,EAAa,CACZliH,OAAQ8gH,GACR5gH,QAAS8gH,GACT7gH,oBAAqBshH,GACrB5gH,OAAQsmB,EAAK9uB,MAIZ,K,wCCltBb,UAAgB,KAAO,WAAW,OAAS,WAAW,KAAO,WAAW,OAAS,WAAW,KAAO,WAAW,SAAW,YCmFzH,IAAe0H,EAAAA,EAAAA,KArDY1E,IASX,IATY,SAC1B8S,EAAQ,QACRvY,EAAO,WACPy9G,EAAU,YACV8zD,EAAW,eACXC,EAAc,MACdvvH,EAAK,UACLj2C,EAAS,QACTU,GACSjH,EACT,MAAM+F,GAAOC,EAAAA,EAAAA,KACPgmK,EAAqBzxK,EAAQw+B,aAAakzI,eAE1C3/I,EAAOy/I,EAAiBD,EAAc9zD,EAEtCk0D,EAAaH,GAAiBI,EAAAA,EAAAA,KAAqBpmK,EAAMxL,EAAQiL,OAAQwyG,QAAcl9G,EAEvFuiB,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC0B,EAAQ1M,EAAQ,IAGlB,OACE6L,EAAAA,GAAA7K,cAAA,OACEsmC,KAAK,SACLD,SAAU,EACVr7B,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOwf,KAAMxjB,GAAYgE,GAAOkgC,OAAQzwC,GAClEU,QAASoW,GAETjX,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL9lB,UAAWuQ,GAAOjd,OAClByyB,KAAMA,EACNre,KAAM+9J,EACNvoK,KAAK,WAEP2C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOsY,MACrBhpB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOs1J,QACnB9/I,GAAQlmB,EAAAA,GAAA7K,cAACkpD,GAAAA,EAAa,CAACn4B,KAAMA,EAAMszF,iBAAe,KAAQosD,EAC5D5lK,EAAAA,GAAA7K,cAAC8wK,GAAAA,EAAe,CAAC9lK,UAAWuQ,GAAOw1J,KAAM/xK,QAASA,KAEpD6L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOoU,SAAU1b,IAAI,QAClC08J,GACC9lK,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,gBAAegmB,EAAAA,GAAAA,GAAW2/I,IAC1C9lK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAAQ,MAG5BH,EAAAA,GAAA7K,cAACgxK,GAAAA,EAAc,CAAChyK,QAASA,EAAS+nH,UAAW9lE,EAAOgwH,eAhDtC,QAmDd,IC/EV,IAAgB,KAAO,WAAW,OAAS,WAAW,OAAS,WAAW,OAAS,WAAW,MAAQ,WAAW,OAAS,WAAW,QAAU,WAAW,aAAe,WAAW,mBAAqB,WAAW,SAAW,WAAW,eAAiB,WAAW,QAAU,WAAW,YAAc,WAAW,UAAY,WAAW,UAAY,WAAW,KAAO,WAAW,WAAa,WAAW,eAAiB,WAAW,KAAO,WAAW,YAAc,WAAW,WAAa,WAAW,aAAe,WAAW,OAAS,WAAW,mBAAmB,WAAW,gBAAkB,WAAW,QAAU,WAAW,iBAAmB,WAAW,iBAAmB,WAAW,mBAAqB,WAAW,OAAS,YCoFxsBC,GAA4B,CAChCtoB,cAAc,EACdC,WAAY,iBACZsoB,SAAU,qBAINC,GAAyB,qBAEzBC,IAAwB9nJ,EAAAA,GAAAA,KAAUgxC,GAAOA,KAAM,KAAK,GA0qB1D,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAMS,GAAqBC,EAAAA,EAAAA,KAAyBV,GACpD,IAAKS,EACH,MAAO,CAAC,EAEV,MAAM,OAAE/C,EAAM,SAAEiD,GAAaF,EAEvBujB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAChC,IAAKsmB,EACH,MAAO,CAAC,EAGV,MAAM,eACJ+gJ,EAAc,SAAEC,EAAQ,QAAE5tD,EAAO,cAAE6tD,EAAa,UAAEC,EAAS,KAAExzK,IAC3DyzK,EAAAA,EAAAA,KAA0BnlK,IAAW,CAAC,GACpC,WAAEs1I,EAAU,SAAEtvH,EAAU0uB,MAAO0wH,GAAoBhuD,GAAW,CAAC,EAE/DtyF,EAAgB9kB,EAAO8kB,cACvB83B,GAAkB53B,EAAAA,EAAAA,KAAqBhlB,EAAQtC,GAC/CqmK,GAAgBxF,EAAAA,EAAAA,KAAiB7gK,EAAQiD,EAAUmkB,GAEnDugJ,EAAYzoH,IAAoBmnH,EAAgB/jK,EAAOslK,mBAAmBvpD,WAAQ/oH,EAExF,MAAO,CACLgxB,OACA+gJ,iBACAzvB,aACA30I,WACAqlB,WACAu/I,sBAAuBtpK,SAAQoE,EAAAA,EAAAA,KAAeL,GAAQ4oD,2BACtDy8G,YACAL,WACAt0I,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GACjD48C,kBACAqoH,gBACAO,eAAgBN,EAChBpgJ,gBACA2gJ,WAAY/zK,EACZ0zK,kBACD,GAxCerlK,EAxqBiB7H,IAiB/B,IAjBgC,SACpC8S,EAAQ,KACRgZ,EAAI,SACJrjB,EAAQ,eACRokK,EAAc,UACdM,EAAS,SACTL,EAAQ,WACR1vB,EAAU,gBACV8vB,EAAe,SACfp/I,EAAQ,sBACRu/I,EAAqB,qBACrB70I,EAAoB,gBACpBksB,EAAe,cACfqoH,EAAa,eACbO,EAAc,WACdC,EAAa,OAAM,cACnB3gJ,GACD5sB,EACC,MAAM,mBACJwtK,EAAkB,kBAClBC,EAAiB,oBACjBC,EAAmB,aACnB7iJ,EAAY,kBACZ8iJ,EAAiB,oBACjBC,EAAmB,iBACnBtzI,EAAgB,sBAChBuzI,IACE7oK,EAAAA,EAAAA,MAGEwI,GAAMrL,EAAAA,EAAAA,IAAuB,MAE7BsvD,GAAWtvD,EAAAA,EAAAA,IAAyB,MAEpCyf,GAAezf,EAAAA,EAAAA,IAAuB,MACtC2rK,GAAwB3rK,EAAAA,EAAAA,KAAO,IAE/B,SAAE+H,IAAaC,EAAAA,EAAAA,MACf6pD,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,MAENzX,EAAOC,IAAYt3C,EAAAA,EAAAA,IAAS0nK,GAAkB,KAC9CkB,EAAcC,IAAmB7oK,EAAAA,EAAAA,IAAS,GAC3C8oK,EAAgBngJ,GAAYigJ,EAAe,EAC3CG,EAAgBpgJ,GAAYigJ,EAAejgJ,EAASl0B,OAAS,GAE5Du0K,EAAeC,IAAoBjpK,EAAAA,EAAAA,KAAU2N,GAC9Cu7J,GAAiBlsK,EAAAA,EAAAA,MACjBmsK,IAA0BnsK,EAAAA,EAAAA,KAAO,IAEhCosK,GAAWC,GAAaC,KAAexkK,EAAAA,EAAAA,MACvCykK,GAAcC,KAAmBxpK,EAAAA,EAAAA,KAAS,IAC1C+nB,GAAWglF,KAAgB/sG,EAAAA,EAAAA,KAAS,IChJtC,SACLypK,EAAsC7+F,GAEtC,MAAM8+F,GAAqBtpK,EAAAA,EAAAA,IAAiB8hB,IACnBunJ,EAAKpnE,OAAOh6F,GAC1BA,EAAIlL,UAAYkL,EAAIlL,QAAQ+vB,SAAShL,EAAMvhB,WAGhCiqE,EAAS1oD,EAAM,KAGrC/jB,EAAAA,EAAAA,KAAU,KACRrJ,SAASiV,iBAAiB,QAAS2/J,GAC5B,KACL50K,SAASkV,oBAAoB,QAAS0/J,EAAmB,IAE1D,CAACA,GACN,CDuIEC,CAAgB,CAACthK,IANUjI,EAAAA,EAAAA,IAAiB8hB,IACtCinJ,GAAwBhsK,SAEvB+kB,EAAMvhB,OAAuB/I,QAAQ,WAC1C0xK,IAAa,KAIf,MAAMM,GAAsBhrK,QAASy4C,GAAS1uB,GAAaw/I,GACrD0B,GAAa1B,IAAmB9wH,EAChCyyH,GAAkBlrK,QAAQy4C,GAAS1uB,IAAaA,EAASl0B,SAAWszB,KAAc8hJ,IAGlFE,GAAqBp8J,IAAa47J,KAAiBxkK,KAAcqkK,IADrB,YAAfhB,GAA2C,aAAfA,IAE1DxpK,QACDgrK,IAJ0BE,IAAmBD,IAIG7B,GAG9CgC,GAAeprK,QAASy4C,IAAUwyH,IAAelC,GACjDsC,GAAsC,SAAf7B,GAAyBxpK,QAAQ+pB,GAAUl0B,QAElEu5B,IAAc5tB,EAAAA,EAAAA,IAAgB,KAClCooK,GAAmB,IAGf0B,IAAa9pK,EAAAA,EAAAA,IAAgB,MACjC8hC,EAAAA,EAAAA,KAAe,KACboqB,EAASnvD,SAAS8vD,OAAO,GACzB,IAGEk9G,IAAY/pK,EAAAA,EAAAA,IAAgB,KAChCksD,EAASnvD,SAASitK,MAAM,KAI1BjsK,EAAAA,EAAAA,KAAU,KACR,MAAM,eAAEksK,GAAmB5rK,OAC3B,IAAK4rK,EACH,OAGF,MAAMC,EAASx1K,SAASw4B,eAAe,QACjCzjB,EAAeA,KACnB,MAAM,cAAEg2G,GAAkB/qH,SAC1B,GAAI+qH,GAAkBA,IAAkBvzD,EAASnvD,QAAU,CACzD,MAAM,QAAEotK,EAAO,OAAE9sK,GAAW4sK,GAE5B79J,EAAAA,EAAAA,KAAgB,KACd89J,EAAO9wK,MAAMylB,UAAa,cAAasrJ,OACvCD,EAAO9wK,MAAMiE,OAAU,GAAEA,MACzB3I,SAASomD,gBAAgBljD,UAAYuyK,CAAO,GAEhD,MACE/9J,EAAAA,EAAAA,KAAgB,KACd89J,EAAO9wK,MAAMylB,UAAY,GACzBqrJ,EAAO9wK,MAAMiE,OAAS,EAAE,GAE5B,EAKF,OAFA4sK,EAAetgK,iBAAiB,SAAUF,GAEnC,KACLwgK,EAAergK,oBAAoB,SAAUH,EAAa,CAC3D,GACA,KAGH1L,EAAAA,EAAAA,KAAU,KACR0qK,GAAiB,EAAE,GAClB,CAACd,KAGJ/3J,EAAAA,EAAAA,KAAgB,KACTjF,EAAAA,IAELivC,MAAMnqC,KAAK/a,SAASsE,iBAAmC,UAAUuS,SAASwwB,IACxEA,EAAM9nB,SAAWzV,QAAQ+O,GAAYwuB,IAAUmwB,EAASnvD,QAAQ,GAChE,GACD,CAACwQ,KAGJxP,EAAAA,EAAAA,KAAU,KACHwP,GAOHs7J,GAAiB,GACjB/qK,aAAagrK,EAAe/rK,WAP5BmvD,EAASnvD,QAASitK,OAClBZ,IAAgB,GAChBX,EAAgB,GAChBvxH,EAAS,IACT4xH,EAAe/rK,QAAUsB,OAAOC,YAAW,IAAMuqK,GAAiB,IApJnD,KAwJjB,GACC,CAACt7J,KAEJxP,EAAAA,EAAAA,KAAU,KACHupK,GAAmB/gJ,GAAM9uB,KAC9By/C,EAASowH,GACTW,EAAmB,CAAEhoK,OAAQsmB,EAAK9uB,GAAIyL,WAAU+zD,OAAQ,CAAEqwG,oBAAgB/xK,KAC1Eo3G,IAAa,IAEby9D,EAAAA,EAAAA,KAAoB,KAClB,MAAMruI,EAAQmwB,EAASnvD,QAClBg/B,KACLoX,EAAAA,GAAAA,GAAqBpX,GAAO,GAAM,GAClCktI,KAAa,IACb,GACD,CAAC1iJ,GAAM9uB,GAAI6vK,EAAgBpkK,KAE9B21B,EAAAA,GAAAA,IAAsB3yB,IAAoB,IAAlB4yB,GAAa5yB,EAC/BqH,IAAaurB,IAAiBme,GAAS0wH,GACzCzwH,EAASywH,EACX,GACC,CAACp6J,EAAUo6J,EAAiB1wH,KAE/Bpe,EAAAA,GAAAA,IAAsBrxB,IAA0B,IAAxB6iK,GAAmB7iK,EACpC+F,GAAY88J,IAAuBvC,IACpCA,GACFiC,KACAb,MAEAY,KACF,GACC,CAAChC,EAAuBv6J,IAE3B,MAAM0jH,IAAcjxH,EAAAA,EAAAA,IAAgB,KAC7Bi3C,GAAO5iD,QAAWkzK,GAKvBrwH,EAAS,IACTy1D,IAAa,GACbu7D,IACA4B,MAPEl8I,IAOU,KAGd7vB,EAAAA,EAAAA,KAAU,IAAOwP,GAAW4gB,EAAAA,EAAAA,GAAsB8iG,SAAe17H,GAAY,CAACgY,EAAUqgB,KAExF,MAAM08I,IAAiBhvK,EAAAA,EAAAA,KAAQ,KAC7B,GAAKssK,EACL,OAAOx0H,OAAOwK,OAAOgqH,EAAU,GAC9B,CAACA,IAEE2C,GAAe/rK,QAAQ8rK,IAAgBj2K,QACvCm2K,GAAuBD,KAAiBt3I,GAE9Cl1B,EAAAA,EAAAA,KAAU,KACJohD,GAAmB5xC,GAAU+6J,GAAuB,GACvD,CAACnpH,EAAiB5xC,IAErB,MAAM+uG,IAAet8G,EAAAA,EAAAA,IAAgB,KACnC,MAAMC,EAASsmB,GAAM9uB,GAChBwI,GAILonK,IAAsB,KAChBkB,EAAsBxrK,SAC1BorK,EAAoB,CAAEloK,SAAQiD,WAAU+zC,SAAQ,GAChD,IAGEwzH,IAAoBzqK,EAAAA,EAAAA,IAAiB0qK,IAGzC,GAFAnC,EAAsBxrK,SAAU,EAE5B2tK,EAASplD,WAAW,OAASyiD,EAI/B,OAHAE,EAAmB,CAAEhoK,OAAQsmB,EAAM9uB,GAAIyL,WAAU+zD,OAAQ,CAAEwwG,WAAW,KACtEvwH,EAASwzH,EAAS/3H,MAAM,SACxB2pE,KAIFplE,EAASwzH,GAEJA,IACH/9D,IAAa,GACbu7D,IACAK,EAAsBxrK,SAAU,EAClC,KAGFgB,EAAAA,EAAAA,KAAU,KACJk5C,GACFqlE,IACF,GACC,CAACrlE,KAEJl5C,EAAAA,EAAAA,KAAU,KACR4uG,GAAanuG,QAAQgpK,GAAe,GACnC,CAACA,KAEJzpK,EAAAA,EAAAA,KAAU,KACHwqB,GAAUl0B,QACCk0B,EAASl0B,OAASm0K,EA/PA,GAiQhClsD,IACF,GACC,CAACksD,EAAcjgJ,GAAUl0B,UAE5B0J,EAAAA,EAAAA,KAAU,KACR,GAAKwP,EA4BL,OA1BAw7J,GAAwBhsK,SAAU,EAoBlCsB,OAAOsL,iBAAiB,WAAYkjD,GACpCxuD,OAAOsL,iBAAiB,UAAWkjD,GAEnCxuD,OAAOsL,iBAAiB,aAAcghK,GACtCtsK,OAAOsL,iBAAiB,YAAaghK,GAE9B,KACLA,IACAtsK,OAAOuL,oBAAoB,aAAc+gK,GACzCtsK,OAAOuL,oBAAoB,YAAa+gK,EAAgB,EA3B1D,SAAS99G,IACPX,EAASnvD,SAAS8vD,QAClBo8G,MAEA2B,EAAAA,GAAAA,KAAQ,KACN7B,GAAwBhsK,SAAU,CAAK,GAE3C,CAEA,SAAS4tK,IACPtsK,OAAOuL,oBAAoB,WAAYijD,GACvCxuD,OAAOuL,oBAAoB,UAAWijD,IAEtC+9G,EAAAA,GAAAA,KAAQ,KACN7B,GAAwBhsK,SAAU,CAAK,GAE3C,CAYC,GACA,CAACwQ,KAEJyQ,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ2P,KAGV,MAAO2uB,GAAaC,GAASM,GAAiB,IAAKL,EAAAA,GAAAA,GAAkB6/D,GAAc/zF,GAE7EsiJ,IAAkBvvK,EAAAA,EAAAA,KAAQ,KAC9B,IAAM27C,IAAUswH,IAAchrH,IAAaloD,OACzC,OAAOojC,GAAAA,EAET,MAAMl1B,GAASyhC,EAAAA,EAAAA,MAEf,OAAOuY,GAAYh1C,KAAKujK,IACtB,MAAO7qK,EAAQxI,IAAMinH,EAAAA,GAAAA,GAAqBosD,GACpC91K,GAAU8yB,EAAAA,EAAAA,KAAkBvlB,EAAQtC,EAAQxI,GAClD,IAAKzC,EACH,OAGF,MAAM+1K,EAAkB5rH,IAAmBkxD,EAAAA,EAAAA,KAAYpwG,IAAWA,IAAW+qK,EAAAA,KACzEC,EAAAA,EAAAA,KAAsB1oK,EAAQvN,QAAWO,EACvC2vB,GAAgBC,EAAAA,EAAAA,KAAa5iB,EAAQvN,GAK3C,MAAO,CACL81K,kBACA91K,UACAuxK,aAPkB9gI,EAAAA,EAAAA,KAAWljC,EAAQvN,EAAQiL,QAQ7CwyG,WANiBs4D,GAAkB7lJ,EAOpC,IACAsL,OAAOhyB,QAAQ,GACjB,CAACy4C,EAAOswH,EAAUhrH,GAAa4C,IAE5B+rH,IAAqBlrK,EAAAA,EAAAA,IAAiBhL,IAC1C,MAAM81K,GAAkBK,EAAAA,GAAAA,GAAmBn2K,GACrC+C,EAAQwwB,GAAUwG,QAAQ+7I,IAAoB,EAEpDrC,EADkB1wK,EAAQ+kD,IAGP,SAAfkrH,GACFoB,IAAgB,GAGlB9jJ,EAAa,CACXrlB,OAAQjL,EAAQiL,OAChBwM,UAAWzX,EAAQyC,GACnByL,SAAW6kK,OAA4BxyK,EAAX2N,IAG9BgmK,IAAa,IAGTkC,IAAyBprK,EAAAA,EAAAA,IAAgB,KAC7CopK,IAAiBl4G,IAAUA,IAC3B+3G,IAAa,IAGTlwJ,IAAgBqlC,EAAAA,GAAAA,GAA0B/hC,EAAcmtJ,IAAsBzxK,IAClF,MAAMszK,EAAcR,MAA6B,IAAX9yK,EAAe,EAAIA,GACrDszK,IACFH,GAAmBG,EAAYr2K,SAC/ByzK,EAAgB1wK,EAAQ+kD,IAC1B,GACE,IAAGsqH,MAA0B,GAE3BkE,IAAqBtrK,EAAAA,EAAAA,IAAiBi3D,IAC1CgxG,EAAmB,CAAEhoK,OAAQsmB,EAAM9uB,GAAIyL,WAAU+zD,WAEjDqlD,IAAc,IAGVivD,IAAoBvrK,EAAAA,EAAAA,IAAiBktJ,IACrCsd,GACFz1I,EAAiB,CACfQ,eAAgB,eAKpB+1I,GAAmB,CAAE/D,SAAUra,GAAM,IAGjCse,IAAuBxrK,EAAAA,EAAAA,IAAgB,KAC3CsrK,GAAmB,CAAE/D,cAAUhyK,GAAY,IAGvCk2K,IAAkBzrK,EAAAA,EAAAA,IAAgB,KAClC+nK,EACFuD,GAAmB,CAAE7D,WAAW,IAI9BF,GACFiE,IACF,IAGIE,IAAyB1rK,EAAAA,EAAAA,IAAiB/L,IAC9Cq3K,GAAmB,CAAEr3K,SACrBm1K,IAAgB,EAAK,IAGjBuC,IAAmB3rK,EAAAA,EAAAA,IAAgB,KACvC,GAAmB,SAAfgoK,IACJkB,KACAa,KACIxhJ,GAAU,CACZ,MAAMqjJ,EAAgBpD,EAAe,GAC9BvoK,EAAQwM,IAAaiyG,EAAAA,GAAAA,GAAqBn2F,EAASqjJ,IAC1DtmJ,EAAa,CAAErlB,SAAQwM,YAAWvJ,aAClCulK,EAAgBmD,EAClB,KAGIC,IAAmB7rK,EAAAA,EAAAA,IAAgB,KACvC,GAAmB,SAAfgoK,IACJkB,KACAa,KACIxhJ,GAAU,CACZ,MAAMqjJ,EAAgBpD,EAAe,GAC9BvoK,EAAQwM,IAAaiyG,EAAAA,GAAAA,GAAqBn2F,EAASqjJ,IAC1DtmJ,EAAa,CAAErlB,SAAQwM,YAAWvJ,aAClCulK,EAAgBmD,EAClB,KAGF,SAASE,GAAc73K,EAAwB83K,GAC7C,MAAM35E,GAAc25E,GAAY/D,IAAe/zK,EAC/C,OAAQA,GACN,IAAK,OACH,OACE4M,EAAAA,GAAA7K,cAACmqG,GAAAA,EAAkB,CACjBn/F,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOy2J,WAAY51E,GAAc7gF,GAAOy6J,cAClExzH,OAAK,EACLn5C,OAAQknB,GAAM9uB,GACdmJ,MAAO6tD,EAAQ,kBACf+jC,SAAS,OACT9wF,QAASqqK,EAAWN,GAAkBC,KAG5C,IAAK,UACH,OACE7qK,EAAAA,GAAA7K,cAACmqG,GAAAA,EAAkB,CACjBn/F,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOy2J,WAAY51E,GAAc7gF,GAAOy6J,cAClExzH,OAAK,EACLn5C,OAAQgoB,EACR2Q,eAAa,EACbp3B,MAAO6tD,EAAQ,oBACf+jC,SAAS,UACT9wF,QAASqqK,EAAWN,GAAkBC,KAG5C,IAAK,WACH,OACE7qK,EAAAA,GAAA7K,cAACmqG,GAAAA,EAAkB,CACjBn/F,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOy2J,WAAY51E,GAAc7gF,GAAOy6J,cAClExzH,OAAK,EACLivD,WAAYy/D,GACZtmK,MAAO6tD,EAAQ,qBACf+jC,SAAS,WACT9wF,QAASqqK,EAAWN,GAAkBC,KAKhD,CAEA,SAASO,KACP,OACEprK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAO26J,UAAWvC,IAAsBp4J,GAAO46J,kBAC1ExnK,GAAY9D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO66J,YACpC7B,KAAiBxC,GAChBlnK,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOq2J,WACNjjK,GAAY4M,GAAO86J,KACpB,iBAGD/B,GAAe/iK,KAAK2lJ,IACnB,MAAMof,GAAW7oI,EAAAA,EAAAA,KAAeypH,EAAI7oH,SAAUkjI,GAC9C,OACE1mK,EAAAA,GAAA7K,cAACu2K,GAAAA,EAAc,CACb1oI,YAAY,eACZn8B,KAAKg9B,EAAAA,EAAAA,KAAewoH,EAAI7oH,UACxBA,SAAU6oH,EAAI7oH,SACd6oH,IAAKA,EACLsf,WAAS,EACThvK,WAAYgtK,GACZ8B,SAAUA,EACV5qK,QAAS4qK,EAAWd,GAAuBD,IAC3C,KAKTxD,GACClnK,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOk7J,YAAa,iBAE7CX,GAAc,QACdA,GAAc,WACdA,GAAc,aAGlBtC,IACC3oK,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbrxC,IAAKoU,EACLrb,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOooG,QAAS,iBAC1CpgE,MAAOsxH,GACPr5G,iBAAkB,EAClBhY,WAAYgD,GACZ8C,UAAWvmC,IAEV2wJ,IACC7oK,EAAAA,GAAA7K,cAAA,QAAM0R,IAAI,UAAU1G,UAAWuQ,GAAOguC,aACnCkP,EAAQ,mBAAoBxX,IAGhCwyH,IACC5oK,EAAAA,GAAA7K,cAAA,QAAM0R,IAAI,YAAY1G,UAAWuQ,GAAOguC,aACrCkP,EAAQ,6BAGZo8G,IAAiBtjK,KAAI,CAAA/E,EAEnBs3C,KAAC,IAFmB,QACrB9kD,EAAO,WAAEy9G,EAAU,YAAE8zD,EAAW,gBAAEuE,GACnCtoK,EAAA,OACC3B,EAAAA,GAAA7K,cAAC02K,GAAkB,CACjBhlK,IAAKojK,EACL6B,eAAgB33K,EAAQgxB,KACxBhlB,UAAWomK,GACXnwH,MAAOA,EACPjiD,QAASA,EACTy9G,WAAYA,EACZ8zD,YAAaA,EACbC,eAAgBuB,EAChBx6J,SAAUi7J,EAAe1rH,KAAmBhD,EAC5Cp4C,QAASwpK,IACT,KAMd,CAEA,OACErqK,EAAAA,GAAA7K,cAAA,OACEyB,GAAG,eACHuJ,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOwf,KACPxjB,GAAYgE,GAAOkgC,QAClBlkC,GAAYq7J,GAAiB,kBAC9BI,IAAaz3J,GAAOq7J,QACpBjoK,GAAY4M,GAAOs7J,QAErB5kK,IAAKA,GAELpH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO6rB,SACnBz4B,GACA9D,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL9lB,UAAWuQ,GAAOjd,OAClByyB,KAAMR,EACNroB,KAAK,SACLihD,gBAAiBA,IAGrBt+C,EAAAA,GAAA7K,cAACijD,GAAAA,EAAW,CACVhxC,IAAKikD,EACL9rD,MAAO62C,EACPj2C,WAAW+I,EAAAA,GAAAA,GACTwH,GAAOwqB,MACP4tI,IAAsBp4J,GAAOu7J,aAC7BnD,KAAuBhlK,GAAY4M,GAAOw7J,oBAE5CC,UAAWroK,EACXgjB,UAAWA,GACXslJ,oBAAsB,IAAG17J,GAAOooG,YAAYytD,KAC5C8F,YAAarD,KAAyBllK,EACtCwoK,cAAetD,KAAyBllK,EACxC46C,YAA8BkP,EAAjBs5G,EAAyB,qBAAgC,UACtE7rI,2BAAyB,EACzB96B,SAAUqpK,GACV2C,iBAAkB3B,GAClBh6G,QAASw/D,GACTo8C,aAAc1oK,EACd2rC,QAAS24H,GACT2D,QAAS5D,GACTsE,UAAW3E,EAAgBgD,QAAmBp2K,EAC9Cg4K,YAAa7E,EAAgBmD,QAAmBt2K,GAEhDsL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOi8J,YACpBjG,GACC1mK,EAAAA,GAAA7K,cAACu2K,GAAAA,EAAc,CACb1oI,YAAY,oBACZ7iC,UAAWuQ,GAAOk8J,eAClBppI,SAAUkjI,EACVra,IAAK0a,GAAWljI,EAAAA,EAAAA,KAAe6iI,IAC/B7lK,QAAS8pK,KAGZzD,GAAkBlnK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOw1F,MAAM,OAEhDpiG,GAAYsnK,OAEdtnK,GACA9D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOm8J,OACrB7sK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cAENE,QAASA,IAAM2mK,EAAoB,CAAEhhH,YAAYsmH,EAAAA,GAAAA,IAAcvuJ,KAAKC,SACpEhZ,UAAWooD,EAAQ,eAEnB5tD,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,gBAKlByD,GAAYsnK,KACZtnK,GACC9D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOsrB,QACrBh8B,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLlI,KAAK,UACLsD,MAAM,cAENE,QAASA,IAAM2mK,EAAoB,CAAEhhH,YAAYsmH,EAAAA,GAAAA,IAAcvuJ,KAAKC,SACpEhZ,UAAWooD,EAAQ,eAEnB5tD,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,cAEbL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOq8J,SACpBhE,KACCrhJ,GAAUl0B,OACRo6D,EAAQ,KAAM,CAACznD,KAAKqZ,IAAImoJ,EAAe,EAAG,GAAI3wB,IAC5CtvH,IAAaA,EAASl0B,QACxBo6D,EAAQ,cAIE,SAAfu5G,GAAyBxpK,QAAQ+pB,GAAUl0B,SAC1CwM,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAWuQ,GAAOs8J,UAClB3vK,KAAK,UACLuD,QAAM,EACN+2C,OAAK,EACLs1H,mBAAiB,EACjBpsK,QAAS0pK,IAEO38G,EAAf06G,GAAuB,eAA0B,iBAGrDU,KAAyBF,IACxB9oK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOw8J,kBACrBltK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOy8J,kBAAmBrF,GAAiBp3J,GAAO08J,oBAC5E7nK,OAAK,EACLlI,KAAK,UACLsD,MAAM,YACNE,QAASiqK,GACTnnI,gBAAiBmkI,EACjBtiK,UAAW7F,EAAK,0BAEhBK,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,QAEbL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOy8J,kBAAmBtF,GAAiBn3J,GAAO08J,oBAC5E7nK,OAAK,EACLlI,KAAK,UACLsD,MAAM,YACNE,QAASmqK,GACTrnI,gBAAiBkkI,EACjBriK,UAAW7F,EAAK,0BAEhBK,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,YAMjB,K,4BEtrBV,MAAMm5F,GAAsB,IAAM7wF,EAAAA,EAwUlC,IAAerK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAM,SACJu0F,EAAQ,MACRc,EAAK,OACL2yE,EAAM,SACNC,EAAQ,OACRC,GACE7rK,EAAOovE,SAELxyB,GAAkB53B,EAAAA,EAAAA,KAAqBhlB,EAAQtC,GAC/CsmB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAC1BouK,GAAoBhsK,EAAAA,EAAAA,KAASpC,QAA+D1K,GAArDmuF,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAAS6vF,YAAYr4F,GAE7F,MAAO,CACL8uB,OACA+nJ,eAAgBF,GAAQz8F,SACxB48F,aAAcH,GAAQrzE,OACtByzE,eAAgBN,EAAOv8F,SACvBkkB,iBAAkBs4E,EAASx8F,SAC3B+oB,gBAAiBD,EACjBulD,YAAazkD,EAAMC,OACnBC,YAAYgzE,EAAAA,EAAAA,KAAyBlsK,GACrC48C,kBACAlsB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GACjD8rK,mBACD,GA1Be/rK,EAtU6B7H,IAsB3C,IAtB4C,KAChD8rB,EAAI,SACJrjB,EAAQ,UACRlC,EAAS,SACTkI,EAAQ,cACRmtF,EAAa,YACbrB,EAAW,gBACXupE,EAAe,eACfiQ,EAAc,iBACd34E,EAAgB,eAChBy4E,EAAc,aACdC,EAAY,YACZvuB,EAAW,gBACXtlD,EAAe,iBACf2zE,EAAgB,WAChB5yE,EAAU,gBACVt8C,EAAe,qBACflsB,EAAoB,eACpBqjE,EAAc,SACdpI,EAAQ,gBACRuI,EAAe,aACfi4E,GACDj0K,EACC,MAAM,mBACJk0K,EAAkB,iBAClBC,EAAgB,cAChB/V,EAAa,YACbD,EAAW,oBACXiW,IACEpvK,EAAAA,EAAAA,MAGE4c,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC0tB,GAAY1tB,EAAAA,EAAAA,IAAuB,MAEnCqzF,GAAkBrzF,EAAAA,EAAAA,IAA0B,OAGhDw3C,aAAcioD,EACdroD,cAAesoD,GACbxoD,KAEEg7H,GAAoBC,EAAAA,GAAAA,GAAqBxoJ,GAAM9uB,GAAIyL,GAEnDs5F,EAAU,GAAEtO,iBACZ,eACJE,EAAc,0BACdG,EAAyB,mCACzBkB,EAAkC,mCAClCL,EAAkC,6BAClCM,EAA4B,iBAC5BzU,GACEgT,GAA0B5xE,EAAciO,EAAWkyE,EAAQtzF,GAEzD1I,GAAOC,EAAAA,EAAAA,KAEPi8F,EAAiBl+F,QAAQwhJ,GAEzBrjD,GAAUrhG,EAAAA,EAAAA,KAAQ,KACtB,GAAIozK,GAAgBJ,EAAgB,CAClC,MAAMU,EAAiD,GAoBvD,OAnBIT,GAAcl6K,QAChB26K,EAAWnoK,KAAK,CACdpP,GAAI0hG,EAAAA,IACJL,WAAY,IACZl4F,MAAO,GACP+wE,SAAU48F,EACVpoJ,MAAOooJ,EAAal6K,OACpBwjG,SAAS,IAGTy2E,GAAgBj6K,QAClB26K,EAAWnoK,KAAK,CACdpP,GAAI2hG,EAAAA,IACJN,WAAY,IACZl4F,MAAOJ,EAAK,kBACZmxE,SAAU28F,EACVnoJ,MAAOmoJ,EAAej6K,SAGnB26K,CACT,CAEA,IAAKhvB,EACH,OAAOvoH,GAAAA,EAGT,MAAMmlE,EAAc,GAEhB/G,EAAiBxhG,QACnBuoG,EAAY/1F,KAAK,CACfpP,GAAIigG,EAAAA,IACJoB,WAAY,IACZl4F,MAAOJ,EAAK,oBACZmxE,SAAUkkB,EACV1vE,MAAO0vE,EAAiBxhG,SAIxBm6K,EAAen6K,QACjBuoG,EAAY/1F,KAAK,CACfpP,GAAI+/F,EAAAA,IACJsB,WAAY,IACZl4F,MAAOJ,EAAK,kBACZmxE,SAAU68F,EACVroJ,MAAOqoJ,EAAen6K,SAI1B,MAAMmpG,EAAa,IAAKwiD,GAAe,IACnCquB,GACF7wE,EAAWT,QAAQsxE,GAGrB,MAAMY,EAAsB77H,OAAOwK,QAAO2+C,EAAAA,GAAAA,IAAW7B,EAAiB8C,IAEtE,MAAO,IACFZ,KACAqyE,EACJ,GACA,CACDjvB,EACAtlD,EACA7E,EACA24E,EACAH,EACA7tK,EACA8tK,EACAI,EACAH,IAGI5wE,GAAkBriG,EAAAA,EAAAA,KAAQ,IAC9BohG,GAC4D,IAAzDC,EAAQnsE,QAAQpyB,GAAQA,EAAIuzE,UAAUt9E,SAAQA,QAChD,CAACsoG,EAASD,KAEb3+F,EAAAA,EAAAA,KAAU,KACHi3F,IACL25E,IACKpQ,GACLuQ,EAAkB,CAAE76K,KAAM,kBAAkB,GAC3C,CAACsqK,EAAiBvpE,EAAa25E,EAAoBG,IAEtD,MAAMjwD,GAAoBhhB,EAAAA,GAAAA,GAAkB,GAAI9P,EAAAA,KAC1CmhF,EAAuBxyE,GAAkBmiB,IAC3ClhB,IAAoB4gE,GAAmBmQ,IAE3CtiG,EAAAA,GAAAA,GAAoB9hD,GAAY4kJ,IAAyB5kJ,EAAUvtB,UAGnEgB,EAAAA,EAAAA,KAAU,KACR,IAAK2+F,EACH,OAGF,MAAMt/D,EAAS9S,EAAUvtB,QACzB,IAAKqgC,EACH,OAGF,MAAM2gE,EAAU3P,EAAiBiM,IAAuBj9D,EAAO4E,YAAc,EAAIq4D,GAAsB,IAEvGziB,EAAAA,GAAAA,GAAwBx6C,EAAQ2gE,EAAQ,GACvC,CAACrB,EAAgBtO,IAEpB,MAAM+gF,GAAsBnvK,EAAAA,EAAAA,IAAgB,CAAC0wE,EAAqBkkC,EAAoB4pD,KACpF/nE,EAAgB/lB,EAASkkC,EAAU4pD,GAAgB,GACnDoQ,EAAiB,CAAEl+F,WAAU,IAGzB0+F,IAAsBpvK,EAAAA,EAAAA,IAAiB0wE,IAC3CmoF,EAAc,CAAEnoF,WAAU,IAGtB2+F,IAAoBrvK,EAAAA,EAAAA,IAAiB0wE,IACzCkoF,EAAY,CAAEloF,WAAU,IAGpB4+F,IAAkBtvK,EAAAA,EAAAA,IAAgB,KACjCu+J,GACLuQ,EAAkB,CAAE76K,KAAM,iBAAkB,IAGxCs7K,IAA4BvvK,EAAAA,EAAAA,IAAiB0wE,IACjDm+F,EAAoB,CAAEn+F,WAAU,IAGlC,IAAKnqD,EAAM,OA+DX,MAAMoc,IAAgB54B,EAAAA,GAAAA,GxJ3UD,WwJ2U6B/I,GAElD,IAAKkuK,EACH,OACEruK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2hC,IACZ47H,GAAoBmQ,EAElB/wE,EACF98F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IAAwB/Q,EAAK,eAE7CK,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAJR7+C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IAAwB/Q,EAAK,oCAUrD,MAAM09F,IAAkBn0F,EAAAA,GAAAA,GACtBwH,GACA,gBACC+qF,GAAuB/qF,IAG1B,OACE1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2hC,KACX+rI,GACD7tK,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKqiB,EAAWtpB,UAAWk9F,IAC9Br9F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BACbH,EAAAA,GAAA7K,cAAA,UAAQiS,IAAKgoF,EAAiBjvF,UAAU,kBACvC27F,EAAQp1F,KAzFnB,SAAqBuoF,EAA8C/3F,GACjE,MAAMqmG,EAAetO,EAAWne,WAAW,GACrC5C,GAAkBhlE,EAAAA,GAAAA,GAAewH,GAAqBxZ,IAAUq2F,GxJhRoJ,YwJiRpNiQ,EAAmBtmG,EAAQumG,EAAAA,IAEjC,OAAIxO,EAAWr4F,KAAO+/F,EAAAA,KACjB1H,EAAWr4F,KAAOigG,EAAAA,KAClB5H,EAAWr4F,KAAO+3K,EAAAA,KAClB1/E,EAAWI,eACVkO,EAGFv9F,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLmG,IAAKooF,EAAWr4F,GAChBuJ,UAAW+tE,EACX1oE,UAAWypF,EAAWlvF,MACtBwF,OAAK,EACLuyC,MAAOm3C,EAAWr4F,KAAO+/F,EAAAA,KAAwB1H,EAAWr4F,KAAOigG,EAAAA,IACnEl2F,MAAM,cAENE,QAASA,IAAMu5E,EAAiBljF,IAE/B+3F,EAAWr4F,KAAO+/F,EAAAA,IACjB32F,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBACX8uF,EAAWr4F,KAAOigG,EAAAA,IACpB72F,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,uBACX8uF,EAAWr4F,KAAO+3K,EAAAA,IACpB3uK,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAACC,KAAMR,EAAMroB,KAAK,UAEzB2C,EAAAA,GAAA7K,cAACyoG,GAAe,CACd3O,WAAYA,EACZ17E,QAASqnF,IAAezG,EACxBhF,oBAAqBN,EACrBO,gBAAiBoO,EAAmBpO,OAAkB16F,EACtDylB,eAAa,KAOnBna,EAAAA,GAAA7K,cAACokG,GAAa,CACZ1yF,IAAKooF,EAAWr4F,GAChBi5E,QAAS0tB,EACTlgG,KAAM6xF,EAAAA,IACNnvF,MAAOkvF,EAAWlvF,MAClBI,UAAW+tE,EACX36D,QAASqnF,IAAezG,EACxBhF,oBAAqBN,EACrBsC,eAAa,EACb/+D,sBAAoB,EACpBg9D,gBAAiBoO,EAAmBpO,OAAkB16F,EACtDg9F,qBAAsB8D,EACtB30F,QAASu5E,EACTuX,SAAUz6F,EACVijB,eAAa,GAIrB,MAkCIna,EAAAA,GAAA7K,cAAA,OACEiS,IAAKoU,EACLjD,YAAak2J,GACbl2H,SAAUijD,EACVr7F,WACE+I,EAAAA,GAAAA,GACEwH,GACAnI,EAAAA,GAAe,eAAiB,iBAC/BslK,GAAgBn9J,KAIpBorF,EAAQp1F,KAAI,CAACuoF,EAAYh2C,IACxBj5C,EAAAA,GAAA7K,cAAC0oG,GAAU,CACTh3F,IAAKooF,EAAWr4F,GAChBq4F,WAAYA,EACZkF,YAAax2F,QAAQi9F,GAAczG,GACnCsB,eAAgBA,EAChBv+F,MAAO+hD,EACPo0C,SAAUsO,EACVxM,oBAAqBzB,EACrBkB,mCAAoCA,EACpCL,mCAAoCA,EACpCwG,aAAcxH,GAAkBt0C,EAAI,GAAKs0C,GAAkBt0C,EAAI,EAC/D+7C,iBAAkBA,EAClB12C,gBAAiBA,EACjBlsB,qBAAsBA,EACtBojE,cAAeA,EACfD,iBAAkBtG,EAAWr4F,KAAO42K,EACpC53E,gBAAiB04E,EACjBz4E,gBAAiB04E,GACjBz4E,cAAe04E,GACfz4E,sBAAuB24E,GACvBv0J,eAAa,EACb+6E,iBAAkBjG,EAAWr4F,KAAO0hG,EAAAA,SAItC,KCzPV,IAAeh6F,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA6B,IAA3B,OAAEvC,GAAQuC,EACjB,MAAM,mBAAE+xC,EAAkB,aAAE6mD,GAAiB74F,EAAOiyC,WAE9C,mBAAEuhH,GAAuBxzJ,EAAO+iC,WAAa,CAAC,GAC9C,iBAAEmpH,EAAgB,wBAAEzyD,IAA4BtY,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAAW,CAAC,EAE7F,MAAO,CACLwuJ,mBACAl6G,qBACA6mD,eACAszD,eAAgBqH,EAChBh6D,mBAAoBC,EACrB,GAbe15F,EAlGqC7H,IAWnD,IAXoD,YACxDu6F,EAAW,iBACXy5D,EAAgB,mBAChBl6G,EAAkB,aAClB6mD,EAAY,oBACZnF,EAAmB,mBACnB8F,EAAkB,QAClB/mG,EAAO,eACP05J,EAAc,iBACdn4D,EAAgB,kBAChBC,GACD/7F,EAEC,MAAMw1F,GAAkBrzF,EAAAA,EAAAA,IAA0B,MAE5Cq4F,GAAoBr4F,EAAAA,EAAAA,IAA0B,OAC5CI,MAAO6gB,IAAgBE,EAAAA,GAAAA,MACzB,cAAE0xJ,IAAkB7qK,EAAAA,EAAAA,MAEpBuwJ,EAAmBngK,GAASw/C,WAAWmlE,QAEvC+1D,EAA4BhhB,GAAkByG,GAChDA,EAAiB9gK,QAAUq6J,EAEzBwG,GAAwB55J,EAAAA,EAAAA,KAAQ,KACpC,GAAIo0K,EAA2B,CAC7B,MAAMl7H,EAAY2gH,EAAiB5tJ,KAAIrB,IAAA,IAAC,SAAEm+B,GAAUn+B,EAAA,OAAKm+B,CAAQ,IAIjE,OAHI03D,GACFvnD,EAAUuoD,QAAQ,CAAE9oG,KAAM,SAErBugD,CACT,CAEA,IAAKi6G,EACH,MAAO,GAGT,GAA8B,QAA1BA,EAAiBx6J,KAAgB,CACnC,MAAM07K,GAA0Cp7H,GAAsB,IAAIhtC,KAAIC,IAAA,IAAC,SAAE68B,GAAU78B,EAAA,OAAK68B,CAAQ,IAIxG,OAHI03D,GACF4zE,EAAgB5yE,QAAQ,CAAE9oG,KAAM,UAE3B27K,EAAAA,EAAAA,KAAcD,EAAiBv0E,EACxC,CAEA,MAAMu0E,EAAyClhB,EAAiBohB,QAKhE,OAJI9zE,GACF4zE,EAAgB5yE,QAAQ,CAAE9oG,KAAM,UAG3B27K,EAAAA,EAAAA,KAAcD,EAAiBv0E,EAAa,GAClD,CACD7mD,EAAoBk6G,EAAkBrzD,EAAcs0E,EAA2Bva,EAAkBp5D,IAG7F+zE,GAAex0K,EAAAA,EAAAA,KAAQ,KAC3B,MAAMy0K,EAAc/oK,KAAK8Z,IA5DD,MA4D2BtX,EAAAA,EAAKqU,GAClDmyJ,GAAYnyJ,EAhEK,IAIE,KACD,IA2D2ErU,EAAAA,EAC7F4hB,EAAiB2kJ,EAhEI,GAgEmCvmK,EAAAA,EAExDymK,EAAajpK,KAAKoI,OAAOgc,EAAiB4kJ,IApE9B,GAoE2DA,IACvE/vG,EAAYj5D,KAAK6nE,KAAKqmF,EAAsB7gK,OAAS47K,GAErDC,EAvEY,GAuEMjwG,GAA6BA,EAAY,GAAK+vG,EArE3C,GAqE+ExmK,EAAAA,EAAM,EAEhH,OAAOxC,KAAK8Z,IAtEa,GAsEctX,EAAAA,EAAK0mK,EAAgB,GAC3D,CAAChb,EAAsB7gK,OAAQwpB,IAElC,OACEhd,EAAAA,GAAA7K,cAAA,OAAKgL,UC3Hc,WD2HU5H,MAAQ,WAAU02K,OAC7CjvK,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GC5HsB,WD4HS0lK,EAAgB,eAAiB,kBAC9E5uK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gDACbH,EAAAA,GAAA7K,cAAA,UAAQiS,IAAKgoF,EAAiBjvF,UAAU,kBACxCH,EAAAA,GAAA7K,cAAA,UAAQiS,IAAKgtF,EAAmBj0F,UAAU,kBACzCk0J,EAAsB3tJ,KAAK88B,IAC1B,MAAM21D,GAAat1D,EAAAA,EAAAA,KAAeL,GAC5B+tD,EAAa4H,EAAa/D,GAAqBv+F,SAASsiG,QAAczkG,EAE5E,OACEsL,EAAAA,GAAA7K,cAACikG,GAAa,CACZvyF,IAAKsyF,EACL31D,SAAUA,EACV+tD,WAAYA,EACZ4C,YAAaA,EACbzgD,mBAAoBA,EACpB7yC,QAAS60F,EACTj9E,cAAek9E,EACfvG,gBAAiBA,EACjBgF,kBAAmBA,GACnB,MAKN,KEtFJk7E,GAA0B,OAAS3mK,EAAAA,EAqOzC,IAAerK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACxC,MAAM0sD,GAAQrsD,EAAAA,EAAAA,KAAeL,GACvB6tK,EAAsB7tK,EAAO6tK,qBAC7B,OACJnwK,EAAM,UAAEwM,EAAS,YAAE4jK,EAAW,QAAE95I,EAAO,SAAEnjB,EAAQ,cAAEk9J,EAAa,aAAE5B,GAChEz/G,EAAM7oB,gBAAkB,CAAC,EACvBpT,EAAQq9I,GAAe95I,GACzBiD,EAAAA,EAAAA,KAAgBj3B,EAAQ8tK,EAAa95I,QACrChhC,EACEgxB,EAAOtmB,GAASwlC,EAAAA,EAAAA,KAAWljC,EAAQtC,QAAU1K,EAC7CkuF,EAAexjF,GAASyjF,EAAAA,EAAAA,KAAmBnhF,EAAQtC,QAAU1K,EAC7DP,EAAUiL,GAAUwM,GAAYqb,EAAAA,EAAAA,KAAkBvlB,EAAQtC,EAAQwM,QAAalX,EAC/E8+G,GAAgBhyG,EAAAA,EAAAA,KAASpC,GAAUowK,GAAe,IAClDE,EAAmE,SAAzC9sF,GAAcgrE,kBAAkBx6J,MAC1D,mBAAE8hK,GAAuBxzJ,EAAO+iC,WAAa,CAAC,EAC9CkrI,EAAkE,QAAzC/sF,GAAcgrE,kBAAkBx6J,MAC1DwvF,GAAcgrE,kBAAkBgiB,iBAE/Btb,EAAmBngK,GAASw/C,WAAWmlE,QACvC+1D,EAA4BlxK,QAAQu3J,GAAsBZ,GAC3DA,EAAiB9gK,QAAU0hK,GAEhC,MAAO,CACL/gK,UACAg+B,QACA5f,WACAs9J,sBAAsBnqJ,GAAM4xI,aAAeoY,GAA2Bb,KACjEc,GAA0Bn8D,GAC/Bhe,eAAeuI,EAAAA,EAAAA,KAA+Br8F,GAC9C0wB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GACjD+tK,gBACA5B,eACAzuK,SACAmwK,sBACD,GAlCiB9tK,EAnO8B7H,IAY5C,IAZ6C,OACjD2E,EAAM,QACNpK,EAAO,MACPg+B,EAAK,SACL5f,EAAQ,cACRijF,EAAa,qBACbpjE,EAAoB,oBACpBy9I,EAAmB,cACnBJ,EAAa,OACbrwK,EAAM,aACNyuK,EAAY,oBACZ0B,GACD31K,EACC,MAAM,eACJ++J,EAAc,oBAAEmX,EAAmB,YAAExtH,EAAW,iBAAEruB,EAAgB,kBAAEmO,EAAiB,kBAAE2tI,EAAiB,wBACxGC,EAAuB,qBAAE/W,EAAoB,sBAAEC,IAC7Ct6J,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,KAEPqwK,GAAoB3vI,EAAAA,GAAAA,GAAiBnsC,GAASyC,IAAI,GAClDs5K,GAAiB5vI,EAAAA,GAAAA,GAAiBnsC,GAASiL,QAAQ,GACnD+wK,GAAsB7vI,EAAAA,GAAAA,GAAiBnO,GAAO3zB,QAAQ,GACtD4xK,GAAkB9vI,EAAAA,GAAAA,GAAiBnO,GAAOv7B,IAC1Cy5K,GAAiB/vI,EAAAA,GAAAA,GAAiB/tB,GAAU,GAE5CgxD,GAAUxnE,EAAAA,EAAAA,IAAuB,MACjCu0K,GAAoB71K,EAAAA,EAAAA,KAAQ,KAChC,GAAK41K,EAIL,OAAID,EACKC,EAGF,CACLx0J,EAAGw0J,EAAex0J,GAAKg0J,GAzCQ,IACG,IAyClC/zJ,EAAGu0J,EAAev0J,GAAK+zJ,GA1CgB,IACG,IA0C3C,GACA,CAACO,EAAiBC,EAAgBR,IAE/BnsG,GAAiBvkE,EAAAA,EAAAA,IAAgB,IAAMokE,EAAQrnE,UAC/Cy2F,GAAYxzF,EAAAA,EAAAA,IAAgB,KAAM,CACtCyzF,YAAY,EACZ29E,SAAUJ,EACVK,SAASthI,EAAAA,EAAAA,OAAiBq0B,EAAQrnE,UAC5BqnE,EAAQrnE,QAAQilC,YAAcmuI,IAA2B,IAAImB,KAC/D,MAGAC,GAA6BvxK,EAAAA,EAAAA,IAAiB0wE,IAClD,IAAKqgG,IAAmBD,EACtB,OAEF,MAAMzsI,EAAwBqsC,EAAQyiB,cAClC,CAAEl/F,KAAM,SAAU8mF,WAAYrK,EAAQj5E,IACtC,CAAExD,KAAM,QAAS6rJ,SAAUpvE,EAAQ8M,OAEvCg8E,EAAe,CACbv5J,OAAQ8wK,EAAgBtkK,UAAWqkK,EAAmBzsI,WAAUo5H,mBAAmB,IAErFkT,GAAqB,IAGjBnT,GAAuBx9J,EAAAA,EAAAA,IAAiBqkC,IACvC0sI,GAAmBD,IAIF,SAAlBzsI,EAASpwC,KACX6lK,EAAqB,CACnB75J,OAAQ8wK,EAAgBtkK,UAAWqkK,EAAmB3qJ,MAAO,IAG/DqzI,EAAe,CACbv5J,OAAQ8wK,EAAgBtkK,UAAWqkK,EAAmBzsI,WAAUo5H,mBAAmB,IAGvFkT,IAAqB,IAGjBa,GAA4BxxK,EAAAA,EAAAA,IAAiBqkC,IAC3B,SAAlBA,EAASpwC,OAEb8lK,EAAsB,CACpB95J,OAAQ8wK,EACRtkK,UAAWqkK,IAEbH,IAAqB,IAGjBc,GAA4BzxK,EAAAA,EAAAA,IAAiByC,IACjD,GAAI,SAAUA,GAAsB,SAAdA,EAAKxO,KAAiB,OAE5C,MAAMowC,EAAW,OAAQ5hC,EAAO,CAAExO,KAAM,SAAU8mF,WAAYt4E,EAAKhL,IAAgBgL,EAE7EiuE,EAAU,SAAUjuE,GAAsB,WAAdA,EAAKxO,MAAoB+vC,EAAAA,EAAAA,MAAY82C,aAAalhD,KAAKn3B,EAAKs4E,YAC1F,OAAQt4E,EAAOA,OAAOlN,EAE1B,GAAIm7E,IAAYA,EAAQuiB,SAAWhgE,EAYjC,OAXA6B,EAAiB,CACf9/B,QAASwL,EAAK,0BACd/L,OAAQ,CACNA,OAAQ,mBACRo0H,QAAS,CAAEtzF,eAAgB,mBAE7Bm8I,WAAYlxK,EAAK,sBAGnBmwK,IAKF,IAAKL,EASH,OARArtI,EAAkB,CAChB5jC,OAAQ2xK,EACRz6I,QAAS06I,EACTptI,aAAaC,EAAAA,EAAAA,KAAYktI,EAAsBC,GAC/C5sI,WACAo5H,mBAAmB,SAErBkT,IAIF,IAAIjoK,EACAy1E,EAEJ,GAAI,SAAU17E,GAAsB,UAAdA,EAAKxO,KACzByU,EAAOjG,EAAKq9I,aACP,CACL,MAAM6xB,GAAqBlkB,EAAAA,GAAAA,KAAyBmkB,EAAAA,GAAAA,IAAqBlhG,IACzEhoE,EAAOipK,EAAmBjpK,KAC1By1E,EAAWwzF,EAAmBxzF,QAChC,CAEAh7B,EAAY,CAAEz6C,OAAMy1E,WAAU0zF,YAAY,IAC1ClB,GAAqB,IAGjBxB,GAAsBnvK,EAAAA,EAAAA,IAAiB0wE,IAC3C,MAAMohG,EAAmB1+H,OAAOwK,OAAOwyH,GACjC2B,EAAWD,EAAiBvrI,MAAM6nI,GAAWA,EAAO4D,kBAAoBthG,EAAQj5E,MAAKA,GAEvFwI,GAAQ2wK,EAAkB,CAAE3wK,SAAQiD,SAAU4sC,EAAAA,GAAgBiiI,aAE9DA,GAAUlB,EAAwB,CAAC,GACvCF,GAAqB,IAGjB16E,GAAsB36F,EAAAA,EAAAA,KAAQ,KAC1BtG,GAASw/C,WAAWmlE,SAAW,IAAI5mE,QAAiB,CAAC8K,EAAG33C,KAAgC,IAA9B,YAAE+rK,EAAW,SAAE5tI,GAAUn+B,EAKzF,YAJoB3Q,IAAhB08K,GACFp0H,EAAIh3C,MAAK69B,EAAAA,EAAAA,KAAeL,IAGnBwZ,CAAG,GACT,KACF,CAAC7oD,GAASw/C,WAAWmlE,UAExB,OACE94G,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACHzU,OAAQA,EACR6I,IAAKm8D,EACLpjE,WAAW+I,EAAAA,GAAAA,GCtOM,WDsOsB,kBACvCu1F,iBAAiBv1F,EAAAA,GAAAA,GCvOyB,YDyOvC2mK,IAAwBO,GCzOiE,WD0O1FA,GC1O+D,YD4OjEx9E,YAAU,EACV4L,WAAS,EACT9zB,OAAQ4lG,EACRr9J,UAAWkf,GAAS,SACpBqxC,kBAAmBA,GACnBC,eAAgBA,GAChBC,eAAgBA,EAChBivB,UAAWA,EACX0+E,yBAAyB,iBACzB5yK,QAASqxK,GAERjC,GAAgBzuK,EACfY,EAAAA,GAAA7K,cAACm8K,GAAa,CACZnxK,UAAU,GACVkI,UAAW9J,EACX41F,YAAax2F,QAAQY,GAAUsxK,GAC/BxiF,SAAS,iBACTqwE,iBAAiB,EACjBjoE,gBAAgB,EAChBr2F,OAAQA,EACRo2F,cAAeA,EACfI,gBAAiB04E,EACjBT,aAAcA,IAGhB7tK,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACwpG,GAAiB,CAChBv/F,OAAQ8wK,EACR7iF,SAAS,qBACThlF,UAAW9J,KAAYsxK,GAAuBO,GAC9Cj8E,YAAax2F,QAAQY,GAAUsxK,GAC/B56E,kBAAgB,EAChB90F,UAAY0vK,GAAwBO,OAAkC17K,EC5QoC,WD6Q1G0gG,oBAAqBA,EACrBI,cAAeA,EACf+F,oBAAqB60E,EAAkBQ,EAA4BF,EACnEh7E,iBAAkB06E,EAAkBQ,EAA4BjU,EAChEhnE,kBAAmBg7E,KAEnBd,GAAuBlyK,QAAQuyK,IAC/BlwK,EAAAA,GAAA7K,cAACo8K,GAAqB,CACpBnyK,OAAQ8wK,EACR/7E,YAAa51F,EACbm3F,iBAAkB06E,EAAkBQ,EAA4BjU,EAChEhnE,kBAAmBg7E,EACnBv7E,oBAAqBA,EACrBjhG,QAASA,KAKZ,KAyCX,SAASqvE,KACP,OAAO3vE,SAASsC,cAAc,OAChC,CAEA,SAASstE,KACP,OAAO5vE,SAASsC,cAAc,OAChC,C,4BE7UA,MAAMg1J,GAAMt3J,SAASsB,cAAc,O,sFCDnC,SAA4C,WAA5C,GAA+N,WC4BzNq8K,GAAmB,GAAK7oK,EAAAA,EAsH9B,IAAerK,EAAAA,EAAAA,KApH2B1E,IASpC,IATqC,WACzC63K,EAAU,UACVtxK,EAAS,SACT5M,EAAQ,wBACRm+K,EAAuB,qBACvBC,EAAoB,MACpBz6K,EAAK,SACL2vC,EAAQ,gBACR+qI,GACDh4K,EACC,MAAMi4K,EA8FD,SAAwBJ,EAA2BC,GACxD,GAAIA,GAA2BD,EAAWK,MAAO,CAC/C,GAAIC,EAAAA,IAA8BnzF,IAAI6yF,EAAWO,UAC/C,MAAO,QAET,GAAIC,EAAAA,IAA8BrzF,IAAI6yF,EAAWO,UAC/C,MAAO,OAEX,CACA,MAAO,MACT,CAxGsBE,CAAeT,EAAYC,GAEzCS,GAAqBhzK,EAAAA,EAAAA,IAAgB,KACzCyyK,IAAkB16K,EAAM,IAGpB6O,GAAUtL,EAAAA,EAAAA,KAAQ,KACtB,OAAQo3K,GACN,IAAK,QACH,OACE7xK,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GACX/a,IAAK87K,EAAW/1K,QAChBif,IAAI,GACJnlB,WAAW,IAGjB,IAAK,QACH,OACEwK,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACG16B,QAAQ8zK,EAAWK,OAAOzlK,WACzBrM,EAAAA,GAAA7K,cAAA,OAAKgL,UD7D+C,aC6DlB+O,EAAAA,GAAAA,IAAoBuiK,EAAWK,MAAOzlK,WAE1ErM,EAAAA,GAAA7K,cAAA,SACEgL,UAAWuQ,GACX/a,IAAK87K,EAAW/1K,QAChBkd,UAAQ,EACRjB,OAAK,EACLoB,MAAI,EACJ7D,yBAAuB,KAI/B,QACE,OACElV,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAC4sI,GAAAA,EAAI,CACH5hI,UD7E2I,WC8E3IE,KAAMoxK,EAAWrvG,SACjBgwG,WAAWC,EAAAA,GAAAA,IAAiBZ,EAAWrvG,SAAUqvG,EAAWO,UAC5DM,YAAab,EAAWt2K,eACxBkC,KAAMo0K,EAAWp0K,KACjBsoH,SAAO,IAER9+E,GACC7mC,EAAAA,GAAA7K,cAAA,KACEgL,WAAW+I,EAAAA,GAAAA,GAAe,OAAQ,cAAewH,GDtF+M,YCuFhQ7P,QAASA,IAAMgmC,EAAS3vC,MAKpC,GACC,CAACu6K,EAAYI,EAAa36K,EAAO2vC,IAE9B0rI,EAAqC,SAAhBV,IAA2BF,EAChDa,EAAuB70K,QAAwB,SAAhBk0K,GAA0BJ,EAAWgB,qBACpEC,EAAsC,SAAhBb,EAEtBc,GAAgBzpK,EAAAA,GAAAA,GACpB/I,EDpGmB,WCoGK5M,GDpG0D,WCoG/Bg/K,GDpGgF,YCuGrI,OACEvyK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWwyK,GACb5sK,EACD/F,EAAAA,GAAA7K,cAACy9K,GAAAA,EAAY,CACX1gK,UAAWsgK,EACX52K,aAAc61K,EAAWt2K,gBAAkBs2K,EAAW/1K,QACtDS,MAAOq1K,GACPh1K,OAAQg1K,KAETkB,GACC1yK,EAAAA,GAAA7K,cAAA,OAAKgL,UDjHiK,YCkHpKH,EAAAA,GAAA7K,cAAA,KACEgL,WAAW+I,EAAAA,GAAAA,GACT,OACAuoK,EAAWgB,oBAAsB,uBAAyB,eAC1D/hK,IAEF7P,QAASsxK,IAEVtrI,GACC7mC,EAAAA,GAAA7K,cAAA,KACEgL,WAAW+I,EAAAA,GAAAA,GAAe,OAAQ,cAAewH,IACjD7P,QAASA,IAAMgmC,EAAS3vC,MAK5B,I,wCCnIK,SAAS27K,GACtBv8K,EACAw8K,GAKA,IAJAnkF,EAAM/xF,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAAG,EACT2zK,EAAO3zK,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GACPm2K,EAAmBn2K,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GACnBo2K,EAAYp2K,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GAEZ,MAAMq2K,EAAa38K,EAAU08K,EAAe,aAAe,aACrDE,EAAaD,EAAa38K,EAAU08K,EAAe,cAAgB,gBACnEG,EAA4C,iBAAvBL,EACvBx8K,EAAU6B,iBAA8B26K,GACxCA,GACE,OAAEt/K,GAAW2/K,EACbC,EAA2B,GACjC,IAAIC,GAAU,EAEd,IAAK,IAAIp6H,EAAI,EAAGA,EAAIzlD,EAAQylD,IAAK,CAC/B,MAAM/0B,EAAUivJ,EAAYl6H,GACtB74B,EAAK8D,EAAQ8uJ,EAAe,aAAe,aAC3CM,EAAKlzJ,EAAK8D,EAAQ8uJ,EAAe,cAAgB,gBAKvD,GAJkBD,EACdO,GAAML,EAAatkF,GAAU2kF,GAAMJ,EAAavkF,EAChDvuE,GAAM8yJ,EAAavkF,GAAU2kF,GAAML,EAAatkF,EAGlDykF,EAAeptK,KAAKizC,GACpBo6H,GAAU,OACL,GAAIA,IAAY9C,EACrB,KAEJ,CAEA,MAAO,CAAE4C,cAAaC,iBACxB,CC1BA,SARA,SAAwB98K,EAAwB4tB,GAA4C,IAAtB8uJ,EAAYp2K,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GAChF,MAAMq2K,EAAa38K,EAAU08K,EAAe,aAAe,aACrDE,EAAaD,EAAa38K,EAAU08K,EAAe,cAAgB,gBACnE5yJ,EAAK8D,EAAQ8uJ,EAAe,aAAe,aAC3CM,EAAKlzJ,EAAK8D,EAAQ8uJ,EAAe,cAAgB,gBACvD,OAAO5yJ,EAAK6yJ,GAAcK,EAAKJ,CACjC,ECCe,SAASK,GAAsBpvJ,EAAkBjtB,EAAeskB,GAC7E,MAAMllB,EAAYklB,EAAatf,QAC/B,IAAK5F,GAAaY,EAAQ,EACxB,OAEF,MAAM,eAAEk8K,EAAc,YAAED,GAAgBN,GACtCv8K,EACA6tB,EAVoB,GAYpB,GACA,GAGF,IAAKgvJ,EAAY3/K,SAAW2/K,EAAYj8K,GACtC,OAEF,MAAMulF,EAAQ22F,EAAe,GAC7B,IAAKA,EAAev8K,SAASK,IACvBA,IAAUulF,IAAU+2F,GAAel9K,EAAW68K,EAAY12F,IAAU,CACxE,MAAMlqE,EAAWrb,EAAQk8K,EAAeA,EAAe5/K,OAAS,GAAK,QAAU,OAC/Ew7F,EAAAA,GAAAA,IAAc14F,EAAW68K,EAAYj8K,GAAQqb,EAtB3B,GAuBpB,CACF,CCtBO,SAASkhK,GAAqB75K,GAoBlC,IApBmC,SACpC8S,EAAQ,aACRsmK,EAAY,iCACZU,EAAgC,6BAChCC,EAA4B,kBAC5BC,EAAiB,MACjBl7H,EAAK,kBACLm7H,EAAiB,SACjB19I,EAAQ,QACR13B,GAWD7E,EACC,MAAOk6K,EAAmBC,IAAwBh1K,EAAAA,EAAAA,KAAU,GAEtDi1K,GAAmB70K,EAAAA,EAAAA,IAAiB0uE,GACnCn1B,GAIEy4B,EAAAA,GAAAA,GAAcz4B,EAAMllD,OAAQq6E,IAHzB,IAMNomG,GAAiB90K,EAAAA,EAAAA,IAAgB,CAACI,EAAeE,KACrDA,EAAE0Y,iBACF47J,GAAsB78K,GAAW88K,EAAiB98K,EAAQqI,IAAQ,IAG9D20K,GAAmB/0K,EAAAA,EAAAA,IAAiBM,IAExC,GAAIA,EAAE00K,QAAU10K,EAAEikB,SAAWjkB,EAAE20K,SAAW30K,EAAE40K,SAAU,OAAO,EAC7D,IAAK3nK,EAAU,OAAO,EAEtB,GAAIgsC,GAASA,EAAMllD,QAAUsgL,GAAqB,EAAG,CACnD,MAAMlyK,EAAO82C,EAAMo7H,GACnB,GAAIlyK,EAAM,CACR,IAAuB,IAAnBu0B,EAASv0B,GACX,OAAO,EAGTnC,EAAE0Y,gBACJ,CACF,CAEA,OAAO,CAAI,KAGbjb,EAAAA,EAAAA,KAAU,KACHwP,GAAUqnK,EAAqBJ,GAAgC,EAAI,EAAE,GACzE,CAACjnK,EAAUinK,IAEd,MAAMW,GAAyB57H,GAASo7H,EAAoBp7H,EAAMllD,OAAS,EAmB3E,OAlBA0J,EAAAA,EAAAA,KAAU,KACHw2K,IAAoCY,GACvCP,EAAqBJ,GAAgC,EAAI,EAC3D,GACC,CAACW,EAAuBX,EAA8BD,KAEzDx2K,EAAAA,EAAAA,KAAU,IAAOwP,GAAWogC,EAAAA,GAAAA,GAAyB,CACnD+pE,MAAOp4G,EACP81K,KAAMX,GAAqBZ,OAAet+K,EAAa+K,GAAqBw0K,GAAgB,EAAGx0K,GAC/F+0K,OAAQZ,GAAqBZ,OAAet+K,EAAa+K,GAAqBw0K,EAAe,EAAGx0K,GAChGutC,OAAQ4mI,IAAsBZ,OAAet+K,EAAa+K,GAAqBw0K,GAAgB,EAAGx0K,GAClGstC,QAAS6mI,IAAsBZ,OAAet+K,EAAa+K,GAAqBw0K,EAAe,EAAGx0K,GAClGg1K,MAAOZ,EAAoBK,OAAmBx/K,EAC9CwL,QAASg0K,SACNx/K,GAAY,CACfk/K,EAAmBK,EAAgBC,EAAkBxnK,EAAUsmK,EAAcv0K,EAASo1K,IAGjFC,CACT,CC5DA,MA0FA,IAAex1K,EAAAA,EAAAA,KA1FsB1E,IAK/B,IALgC,OACpC2E,EAAM,QACNE,EAAO,iBACPi2K,EAAgB,cAChBC,GACD/6K,EAEC,MAAM4hB,GAAezf,EAAAA,EAAAA,IAAuB,OACtC,aAAEya,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BrY,OAAQ7J,OAAWA,GAAW,GAEnGkgL,GAAmBz1K,EAAAA,EAAAA,IAAgB,SAAC0wB,GAAuC,IAAvBglJ,EAAUj4K,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GAElE,MACM8nC,GADYvB,EAAAA,EAAAA,MAAYrK,MAAMC,KACblJ,GAClB6U,GAILgwI,EAAiBhwI,EAAMmwI,EACzB,IAEM59J,GAAc9X,EAAAA,EAAAA,IAAgB,CAACM,EAAqB7I,KACxD6I,EAAE0Y,iBAEFy8J,EAAiBh+K,EAAG,IAGhBk+K,GAAsB31K,EAAAA,EAAAA,IAAiB41K,IAC3CH,EAAiBG,EAAOn+K,IAAI,EAAK,IAG7Bo+K,EAAuBvB,GAAsB,CACjD/mK,SAAUnO,EACVm6C,MAAOi8H,EACPx+I,SAAU2+I,EACVjB,mBAAmB,EACnBH,kCAAkC,EAClCj1K,aAGFvB,EAAAA,EAAAA,KAAU,KACRq2K,GAAsB,uBAAwByB,EAAsBx5J,EAAa,GAChF,CAACw5J,KAEJ93K,EAAAA,EAAAA,KAAU,KACJy3K,IAAkBA,EAAcnhL,QAClCiL,GACF,GACC,CAACk2K,EAAel2K,IAEnB,MAAMw2K,GAAkBzsJ,EAAAA,EAAAA,GACtBmsJ,GAAenhL,OACXmhL,OACAjgL,EACJ8hB,GAEI0+J,EAAsBP,IAAkBA,EAAcnhL,OACxDyhL,EACAN,EAEJ,IAAKn+J,GAAiB0+J,IAAwBA,EAAoB1hL,OAChE,OAGF,MAAM2M,GAAY+I,EAAAA,GAAAA,GAChB,gDACAwN,GAGF,OACE1W,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWA,EAAWiH,IAAKoU,GAC7B05J,GAAqBxuK,KAAI,CAAArB,EAASnO,KAAK,IAAb,GAAEN,GAAIyO,EAAA,OAC/BrF,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKjQ,EACLuJ,UAAU,+CACVU,QAASoW,EACT06E,SAAU/6F,EACVo1D,MAAOgpH,IAAyB99K,GAEhC8I,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQj5B,EACR8iH,WAAW,QACXyF,cAAY,IAEL,IAET,I,4BC/GV,SAAuY,WAAvY,GAA4e,WCwGteg2D,GAA4B,qBA2mBlC,IAAe72K,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA6B,IAA3B,OAAEvH,GAAQuH,EACjB,MAAM,cACJ6f,EAAa,aACb4uJ,EAAY,aACZn7F,EAAY,mBACZo7F,GACE3zK,EAEEkhF,GAAgBphF,EAAAA,EAAAA,KAASpC,QAA+C1K,GAArCmuF,EAAAA,EAAAA,KAAmBnhF,EAAQtC,GAC9DqnB,GAAiBC,EAAAA,EAAAA,KAAqBhlB,EAAQtC,IAC9C,SAAEg8H,EAAQ,yBAAEhC,GAA6B13H,EAAO+kC,SAASg3E,MACzD63D,EAAoB5zK,EAAO6zK,cAAcC,EAAAA,KACzCD,EAAgBn6C,IAAao6C,EAAAA,IAA0B9zK,EAAO6zK,cAAcn6C,QAAY1mI,EAE9F,MAAO,CACL+xB,iBACAD,gBACAivJ,iBAAkB7yF,GAAcE,QAChCsyF,eACAE,kBAAmBA,GAAmBI,SACtCH,cAAeA,GAAeG,SAC9Bt8C,2BACAu8C,oBAAqB17F,EAAa27F,SAAS9kG,SAC3C+kG,cAAc3tD,EAAAA,GAAAA,GAAmBxmH,EAAQ,iBACzC2zK,qBACD,GA1Be5zK,EAvmB+B7H,IAqC7C,IArC8C,OAClDwF,EAAM,SACNiD,EAAQ,YACRyzK,EAAW,QACXC,EAAO,eACPC,EAAc,sBACdC,EAAqB,aACrBJ,EAAY,QACZtpK,EAAO,eACPka,EAAc,cACdD,EAAa,iBACbivJ,EAAgB,aAChBL,EAAY,kBACZE,EAAiB,cACjBC,EAAa,aACbW,EAAY,eACZvY,EAAc,yBACdvkC,EAAwB,oBACxBu8C,EAAmB,mBACnBN,EAAkB,yBAClBc,EAAwB,uBACxBC,EAAsB,kBACtBC,EAAiB,wBACjBC,EAAuB,eACvBC,EAAc,oBACdC,EAAmB,gBACnBC,EAAe,OACf5mB,EAAM,aACN6mB,EAAY,QACZC,EAAO,aACPC,EAAY,gBACZC,EAAe,oBACft7E,EAAmB,eACnBu7E,EAAc,cACdC,EAAa,uBACbvf,EAAsB,iBACtBwf,GACDp9K,EAEC,MAAMwN,GAAMrL,EAAAA,EAAAA,IAAuB,MAE7Bk7K,GAASl7K,EAAAA,EAAAA,IAAsB,OAC/B,qBAAEm7K,EAAoB,eAAEC,GAAc,yBAAEC,KAA6Bx4K,EAAAA,EAAAA,MAErEe,IAAOC,EAAAA,EAAAA,KAGPy3K,IAAgBt7K,EAAAA,EAAAA,IAAiC,MAEjDsvD,IAAWtvD,EAAAA,EAAAA,IAAuB,MAElCu7K,IAAiBv7K,EAAAA,EAAAA,MACjBw7K,IAAkB/uJ,EAAAA,EAAAA,GAAsBstJ,GACxC0B,GAAuB1B,EAAYtiL,OAASsiL,EAAcyB,IAC1D,SAAEzzK,KAAaC,EAAAA,EAAAA,MAEf0zK,GAAYzB,GAAkBr4K,QAAQq4K,GACtC0B,GAAY1B,GAAkBA,GAAgB2B,UAE9CC,GAA0C,UADnBH,IAAa3B,GAAatiL,SAAUqkL,EAAAA,EAAAA,KAAuB/B,EAAY,MAG7FgC,GAAkBC,GAAgBC,KAAmBn0K,EAAAA,EAAAA,MAErDo0K,GAAsBC,KAA2Bn5K,EAAAA,EAAAA,IACtDo3K,GAA4Bd,EAAmB8C,gBAE3CC,GAAsBz6K,SACzBs6K,IAAwB7B,GAA0BsB,MAAerB,IAE7DgC,GAAmBC,KAAwBv5K,EAAAA,EAAAA,IAASs2K,EAAmBgD,mBACxEE,GAAkBlD,EAAmBkD,iBAGzChlI,aAAcilI,GACdrlI,cAAeslI,GACfplI,QAASqlI,IACPzlI,MAEIM,aAAcolI,GAAqBxlI,cAAeylI,IAAyB3lI,KAE7E10C,GAASZ,QAAQm4K,EAAYtiL,QAC7BqlL,GAAkBl7K,QAAQ65K,IAAsBhkL,SAC/CslL,GAAWC,GAAaC,KAAiBn1K,EAAAA,EAAAA,MAEhD3G,EAAAA,EAAAA,KAAU,KACHqB,KACHy5K,KACAZ,GAAyB,CAAEmB,qBAAiB7jL,IAC9C,GACC,CAACsjL,GAAiBz5K,KAErB,MAAO06K,GAAUC,KAAgBz+K,EAAAA,EAAAA,KAAQ,IACrBkD,QAAQ65K,IAAsBp2E,OAAOnqD,GAAMA,EAAE66H,OAAS76H,EAAEkiI,SACpD,EAAC,GAAM,GAEtB,CADUx7K,QAAQ65K,IAAsBp7E,MAAMnlD,GAAMA,EAAE66H,OAAS76H,EAAEkiI,UACtD,IACjB,CAAC3B,MAEG4B,GAAYC,KAAkB5+K,EAAAA,EAAAA,KAAQ,IACpBkD,QAAQ65K,IAAsBp2E,OAAOnqD,GAAMA,EAAEw7H,uBACzC,EAAC,GAAM,GAE3B,CADe90K,QAAQ65K,IAAsBp7E,MAAMnlD,GAAMA,EAAEw7H,wBAC3C,IACtB,CAAC+E,KAEE8B,IAAoBC,EAAAA,GAAAA,GAAsB,IAAGC,EAAAA,QAE7C,mBACJC,GAAkB,eAClBC,GAAc,qBACdC,GAAoB,YACpBC,GAAW,kBACXC,KACEC,EAAAA,GAAAA,GACFn8K,QAAQ4O,IAAY+pK,IAA4BJ,IAAiB2C,IACjE9C,EACAU,EACA+C,EAAAA,IACApE,EACAE,EACAC,IAGI,yBACJwE,GAAwB,kBACxBC,GAAiB,wBACjBC,KACEC,EAAAA,GAAAA,GACFv8K,QAAQ4O,IAAY+pK,IAA4BJ,IAAiB2C,IAAmBz/C,GACpF28C,EACAU,EACA6C,GACAjuH,GACAsqH,IAGI,qBACJwE,GAAoB,oBACpBC,GAAmB,cACnBC,GAAa,qBACbC,KACEC,EAAAA,GAAAA,GACF58K,QAAQ4O,GAAW+pK,GAA2BuC,IAC9C9C,EACAU,EACA6C,GACAjuH,GACAoqH,OACA/gL,EACA8xB,GAkBF,SAASg0J,GAAmBj7K,GAC1B63K,GAAyB,CAAEmB,gBAAiBh5K,GAC9C,EAjBArC,EAAAA,EAAAA,KAAU,IAAOqB,IAAS+uB,EAAAA,EAAAA,GAAsBqpJ,QAAWjiL,GAAY,CAAC6J,GAAQo4K,KAEhFz5K,EAAAA,EAAAA,KAAU,KACJqB,KACF25K,GAAwB/B,GAA4Bd,EAAmB8C,gBACvEG,GAAqBjD,EAAmBgD,mBAC1C,GACC,CAAChD,EAAoB92K,GAAQ43K,KAEhCj5K,EAAAA,EAAAA,KAAU,KACHqB,IACH64K,GAAyB,CAAEmB,qBAAiB7jL,GAC9C,GACC,CAAC0iL,GAA0B74K,GAAQ43K,KAMtCj5K,EAAAA,EAAAA,KAAU,KACJqB,IAAUuF,KACZ22K,EAAAA,GAAAA,KACF,GACC,CAAC32K,GAAUvF,KAEd,MACEolE,kBAAmB+2G,GAAoB,kBACvC72G,GAAiB,uBACjBC,GAAsB,sBACtBC,KACEC,EAAAA,GAAAA,GAAuBqzG,IAAgBpB,IAA0B13K,IAE/Do8K,IAAkBx7K,EAAAA,EAAAA,IAAgB,CAAC40G,EAAoB6mE,KACvDr8K,OACao/J,GAAkBid,IAAwB1E,IAAiBF,EAAkBa,EACxF9iE,EAAW6iE,EAAe/mB,GACzBuoB,GAAqBC,GAAmBE,IAC7CnB,GAAyB,CACvBe,oBAA6CzjL,IAA7ByhL,EAAyCiC,QAAsB1jL,EAC/E2jL,qBACAE,qBAEJ,IAGIsC,IAAmB17K,EAAAA,EAAAA,IAAgB,KACvCw7K,IAAgB,EAAK,IAGjBG,IAAkB37K,EAAAA,EAAAA,IAAgB,KACtCw7K,IAAiB,IAGbI,IAAsB57K,EAAAA,EAAAA,IAAgB,KAC1Cw7K,IAAgB,GAAO,EAAK,IAuBxBK,IAAkB77K,EAAAA,EAAAA,IAAgBwM,UACtClM,EAAE0Y,iBACF6gK,KAEA,MAAM,aAAEiC,GAAiBx7K,EAEnBgiD,QAAcy5H,EAAAA,GAAAA,GAA8BD,EAAaviI,OAC3D+I,GAAOjuD,QACTkjL,EAAaj1H,EAAO43H,GACtB,IAYItzC,IAAmB5mI,EAAAA,EAAAA,IAAiBM,IACxC,MAAM,MAAEgiD,GAAUhiD,EAAEC,OACdsmI,GAAiBC,EAAAA,EAAAA,IAAcxkF,GAEjCukF,GAAgBxyI,QAClBkjL,EAAa1wC,EAAgBqzC,GAC/B,IAGI8B,IAAuBh8K,EAAAA,EAAAA,IAAgB,MAC3CgnI,EAAAA,GAAAA,GAAsB,KAAM1mI,GAAMsmI,GAAiBtmI,IAAG,IAGlDo7J,IAAe17J,EAAAA,EAAAA,IAAiBjI,IACpCs/K,EAAoBV,EAAYnmJ,QAAO,CAACsnB,EAAGgC,IAAMA,IAAM/hD,IAAO,IAG1DkkL,IAAuBj8K,EAAAA,EAAAA,IAAgB,KAC3Cq3K,EAAoBV,EAAYpvK,KAAKuwC,IAAC,IACjCA,EACHw7H,qBAAqB,MACnB,IAGA4I,IAAwBl8K,EAAAA,EAAAA,IAAgB,KAC5Cq3K,EAAoBV,EAAYpvK,KAAKuwC,IAAC,IAAWA,EAAGw7H,yBAAqB/9K,MAAc,IAGnF4mL,IAAsBn8K,EAAAA,EAAAA,IAAiBjI,IAC3Cs/K,EAAoBV,EAAYpvK,KAAI,CAAC+qK,EAAYx4H,IAC3CA,IAAM/hD,EACD,IACFu6K,EACHgB,qBAAsBhB,EAAWgB,0BAAuB/9K,GAIrD+8K,IACN,IAGC7oK,IAAezJ,EAAAA,EAAAA,IAAgB,KACnC,MAAMo8K,EAAMtE,EAAO/6K,QACnB,IAAKq/K,EACH,OAGF,MAAM,MAAEp/K,EAAK,OAAEK,GAAW++K,EAAIlsK,wBAC9BksK,EAAIx6G,QAAQy6G,QAAQr/K,MAAQA,EAC5Bo/K,EAAIx6G,QAAQy6G,QAAQh/K,OAASA,CAAM,KAIrCw7F,EAAAA,GAAAA,GAAkB5wF,EAAKwB,KAEvBvB,EAAAA,GAAAA,GAAcuB,KAEd1L,EAAAA,EAAAA,KAAU,KACR,MAAM22D,EAAawjH,GAAcn7K,QAC3Bg/B,EAAQrnC,SAASw4B,eAAe8oJ,IAEtC,IAAKthH,IAAe34B,EAAO,OAE3B,MAAM,MAAE/+B,GAAU03D,EAAWxkD,yBAE7B9D,EAAAA,EAAAA,KAAgB,KACd2vB,EAAM3iC,MAAM6oC,YAAY,yBAA2B,GAAEjlC,MAAU,GAC/D,GACD,CAACwD,GAAMpB,KAEV,MAAMk5C,IAAkEh9C,EAAAA,EAAAA,KAAQ,IACvE4K,IAAA,IAAC,UAAEC,EAAW/G,OAAQm5C,GAAYryC,EAAA,OACvCrF,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLoN,QAAS7O,GACTzG,KAAK,UACLsD,MAAM,cACNR,UAAWu3C,EAAa,SAAW,GACnC72C,QAASyE,EACTE,UAAU,gBAEVxF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,mBACN,GAEV,CAAC2D,KAEE23K,IAAYnzK,EAAAA,GAAAA,IAAgB,KAChC,IAAKuwK,GAAiB,OAEtB,MAAM6C,EAAuB7F,GT5bChqB,ES4bgCkqB,IT3bhE5qB,GAAIqB,UAAYX,GAChB8vB,EAAAA,GAAAA,IAAgBxwB,IAChBA,GAAIhzJ,iBAAiB,MAAMuS,SAASkxK,IAClCA,EAAGC,YAAY,KAAK,IAEf1wB,GAAI2wB,aAAa/gH,OAAOvnE,QAAU,GANpC,IAA2Bq4J,ES6b9B,OAAO6vB,GAtVoB,IAsV6BA,OAAuBhnL,CAAS,GACvF,CAACmhL,EAAcE,EAAS8C,KAErBkD,GAAiB3D,IAAuBc,IAEvC8C,GAAcC,GAAcC,KAAgBzhL,EAAAA,EAAAA,KAAQ,IACpDshL,IAAmBvE,GAIjB,CAHYA,GAAqBp2E,OAAOnqD,GAAM86H,EAAAA,IAA8BnzF,IAAI3nC,EAAE+6H,YACtEwF,GAAqBp2E,OAAOnqD,GAAMg7H,EAAAA,IAA8BrzF,IAAI3nC,EAAE+6H,YACtEwF,GAAqBp2E,OAAOnqD,GAAMklI,EAAAA,IAA8Bv9F,IAAI3nC,EAAE+6H,aAHpC,EAAC,GAAO,GAAO,IAKnE,CAACwF,GAAsBuE,KAEpBK,IAAoB3hL,EAAAA,EAAAA,KAAQ,MAC3B+8K,IACEA,GAAqBp7E,MAAMnlD,IAAOklI,EAAAA,IAA8Bv9F,IAAI3nC,EAAE+6H,aAC5E,CAACwF,KAEJ,IAAKA,GACH,OAGF,MAAM6E,GAAa7E,GAAqBhkL,OAAS,EAE3C8oL,KACA7E,KACCwB,MACA5C,GAAsBD,GAA2BgC,KAClDiE,IAAchE,IAIpB,IAAIt4K,GAAQ,GAEVA,GAAQJ,GADNq8K,GACWvE,GAAY,0BAA4B,0BAC5CwE,GACIxE,GAAY,0BAA4B,0BAC5CyE,GACIzE,GAAY,0BAA4B,0BAExCA,GAAY,yBAA2B,yBAN4BD,GAAqBhkL,OAAQ,KA6F/G,MAAM+oL,IAAwB7D,KAAmCE,GAEjE,OACE54K,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,GACRE,QAASk4K,EACTp6I,OA1FJ,WACE,GAAKi7I,GAIL,OACEx3K,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yBAAyBiJ,IAAKzJ,GAAKqkB,MAAQ,WAAQtvB,GAChEsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAAC6E,OAAK,EAAC5E,MAAM,cAActD,KAAK,UAAUmI,UAAU,qBAAqB3E,QAAS81K,GACvF32K,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAeJ,IAC7B63K,KAAmBF,IAEhB13K,EAAAA,GAAA7K,cAACoR,GAAAA,EAAY,CACXpG,UAAU,iEACVqG,QAASixC,GACThxC,UAAU,SAET9I,SAASq4K,IACRh2K,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,MAAMpF,QAASs6K,IAAuBx7K,GAAK,QAE3Ds5K,IACCj5K,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KAEIikJ,KAAoB/D,GAOlBv4K,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,oBAAoBpF,QAASA,IAAM25K,QAAmB9lL,IAClEiL,GAAM,+BANTK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,kBAAkBpF,QAASA,IAAM25K,IAAmB,IAChE76K,GAAK,+BAUT02K,IAAsBD,IAA2BgC,GAEhDp4K,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAASA,IAAMq3K,IAAwB,IAC9Dv4K,GAAK08K,GAAa,yBAA2B,0BAIhDr8K,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,QAAQpF,QAASA,IAAMq3K,IAAwB,IAC3DmE,GAAa,oBAAsB,kBAIzCjE,IAAuBgE,IAAqBz+K,SAASq4K,KACpDoD,GACEp5K,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,kBAAkBpF,QAASw6K,IACvC17K,GAAK,8BAGRK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,UAAUpF,QAASu6K,IAC/Bz7K,GAAK,+BAMf08K,KACChE,GACEr4K,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CACPX,KAAK,kBAELpF,QAASA,IAAMy3K,IAAqB,IACrC,qBAKDt4K,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,UAAUpF,QAASA,IAAMy3K,IAAqB,IAAO,qBASpF,CAQYna,GACRh+J,WAAW+I,EAAAA,GAAAA,GDtkBM,WCwkBf4vK,IAAapoK,IACZ+nK,IDzkBmH,WC0kBpH30K,ID1kBmC,WC2kBnCg0K,ID3kB+D,WC4kB/DvB,GAAkB,wBAEpBxqG,iBAAe,GAEf/rE,EAAAA,GAAA7K,cAAA,OACEgL,UAAWuQ,GACX8rK,YAAazD,GACb0D,OAAQzB,GACR0B,WAvPN,SAAwBj9K,GACtBA,EAAE0Y,iBAEEm/J,GAAep7K,UACjBsB,OAAOP,aAAaq6K,GAAep7K,SACnCo7K,GAAep7K,aAAUxH,EAE7B,EAiPMioL,YAxRmBl9K,IACvB,MAAQm9K,cAAeC,EAAUn9K,OAAQo9K,GAAer9K,EAGnDq9K,EAA8B14J,QAAS,IAAG1T,QAAyBmsK,IACtEvF,GAAep7K,QAAUsB,OAAOC,WAAWu7K,GAzNnB,MA6NtB8D,GAAeA,EAA2BnmL,QAAS,IAAG+Z,QAItDmsK,GACFp9K,EAAE0J,kBAGJ6vK,KAAe,EAwQXn4K,QAASm4K,GACT,0BAAyBr5K,GAAK,4BAA6B,IAC3D,oBAEAK,EAAAA,GAAA7K,cAAA,OAAKgL,UD1lB4Z,YC2lB/ZH,EAAAA,GAAA7K,cAAA,QAAMgL,UD3lBkb,WC2lBnZ0b,EAAE,IAAIC,EAAE,IAAI3f,MAAM,OAAOK,OAAO,OAAOugL,GAAG,OAEjF/8K,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GD9lBgI,WCgmBzI,gBACAqzK,IDjmBuN,YCmmBzNhkI,SAAUigI,IAEThB,GAAqB9wK,KAAI,CAAC+qK,EAAYx4H,IACrCj5C,EAAAA,GAAA7K,cAAC6nL,GAAmB,CAClBvL,WAAYA,EACZC,wBAAyB0G,GACzBzG,qBAAsB0G,GACtB9kL,SAA0C,IAAhCikL,GAAqBhkL,OAC/B0D,MAAO+hD,EACPpyC,IAAK4qK,EAAWwL,UAAYhkI,EAC5BpS,SAAUg0H,GACV+W,gBAAiB0J,QAIvBt7K,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GDnnBuQ,WCqnBhRqzK,IDrnB8U,aCwnBhVv8K,EAAAA,GAAA7K,cAAC+nL,GAAc,CACb3+K,OAAQ47K,GACRxF,cAAe2F,GACf5F,iBAAkB2F,GAClB57K,QAAS27K,KAEXp6K,EAAAA,GAAA7K,cAACgoL,GAAAA,EAAY,CACX5+K,OAAQk7K,GACRv/E,OAAQw/E,GACRz/F,aAAc0/F,GACdxC,eAAgBA,GAChBD,qBAAsBA,EACtBH,cAAe6C,GACfr+E,oBAAqBq+E,GACrBn7K,QAASo7K,KAEX75K,EAAAA,GAAA7K,cAACioL,GAAAA,EAAkB,CACjBh+K,OAAQA,EACRb,OAAQw7K,GACR7C,qBAAsBA,EACtB37E,oBAAqBy+E,GACrBv7K,QAASw7K,KAEXj6K,EAAAA,GAAA7K,cAAA,OAAKgL,UD/oBgW,YCgpBnWH,EAAAA,GAAA7K,cAACkoL,GAAAA,EAAgB,CACfj+K,OAAQA,EACRiD,SAAUA,EACVyB,SAAUA,GACVyI,QAASA,EACTurK,iBAAkBA,GAClBC,eAAgBA,GAChBC,gBAAiBA,GACjBz8E,oBAAqBA,EACrBu7E,eAAgBA,EAChBC,cAAeA,EACfuG,mBAAiB,EACjBC,kBAAgB,EAChBp9K,UAAU,qDACVktF,SAAS,aACTkpF,eAAgBA,IAElBv2K,EAAAA,GAAA7K,cAACqoL,GAAAA,EAAY,CACXp2K,IAAKikD,GACLz0D,GAAIu+K,GACJ/1K,OAAQA,EACRiD,SAAUA,EACVo7K,wBAAsB,EACtBC,kBAAkB,aAClBnxK,QAASA,EACTG,SAAUnO,GACVw3K,QAASA,EACT1mI,gBAAiBmqI,EAAAA,IACjB96H,YAAa/+C,GAAK,cAClBmP,SAAU2nK,EACV5mB,OAAQirB,GACRviI,SAAUogI,GACVgF,aAAchgL,QAAQ4O,GAAW+pK,GAA2BR,EAAYtiL,QACxEqiL,aAAc4F,GACdmC,oBAAqB95K,IAAYg0K,GACjC+F,kBAAmB7F,KAErBh4K,EAAAA,GAAA7K,cAAA,OAAKgL,UDrrB8gB,YCsrBjhBH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL0G,IAAKiwK,GACLl3K,UDxrBiiB,WCyrBjiBU,QAASi6K,GACTriK,cAAew9J,EAAwBpyG,QAAoBnvE,GAEtBiL,GAApCg+J,IAAmBqY,EAAsB,OAAUA,EAAsB,OAAe,SAE1FC,GACCj2K,EAAAA,GAAA7K,cAAC2oL,GAAAA,EAAc,CACbv/K,OAAQm8K,GACRqD,YAAa7H,EACbU,aAAenwJ,OAAoC/xB,EAAnBmmL,GAChCmD,eAAgBjD,GAChBt8K,QAASqlE,GACTplE,oBAAqBqlE,GACrBzlB,gBAAiB73B,EACjBuwJ,iBAAkBA,EAClBxf,uBAAwBA,QAO9B,KC5VZ,IAAel5J,EAAAA,EAAAA,KA9UiB1E,IAE1B,IAF2B,OAC/B2E,EAAM,OAAE0/K,EAAM,kBAAEC,EAAiB,OAAEruB,EAAM,QAAE8mB,GAC5C/8K,EAEC,MAAMukL,GAAmBpiL,EAAAA,EAAAA,IAAyB,MAE5CqiL,GAAiBriL,EAAAA,EAAAA,IAAuB,OAEvCsiL,EAAUC,IAAev/K,EAAAA,EAAAA,IAAiB,KAC1CuB,EAASi+K,IAAcx/K,EAAAA,EAAAA,IAAmB,CAAC,MAC3Cy/K,EAAaC,IAAkB1/K,EAAAA,EAAAA,KAAS,IACxC2/K,EAAmBC,IAAwB5/K,EAAAA,EAAAA,KAAS,IACpD6/K,EAAYC,IAAiB9/K,EAAAA,EAAAA,IAASk/K,IAAU,IAChDa,EAAUC,IAAehgL,EAAAA,EAAAA,IAAiB,KAC1CigL,EAAeC,IAAoBlgL,EAAAA,EAAAA,OACnCmgL,EAAWC,IAAgBpgL,EAAAA,EAAAA,KAAkB,GAE9CY,GAAOC,EAAAA,EAAAA,KAEPw/K,GAAuBjgL,EAAAA,EAAAA,IAAiBM,IAC5Cs/K,EAAYt/K,EAAEC,OAAOH,MAAM,IAGvB0pK,GAAa9pK,EAAAA,EAAAA,IAAiBiI,IAC9B7I,GAAU6I,EAAIlL,SAChBkL,EAAIlL,QAAQ8vD,OACd,KAGF9uD,EAAAA,EAAAA,KAAU,IAAOqB,GAAS+uB,EAAAA,EAAAA,GAAsBqpJ,QAAWjiL,GAAY,CAAC6J,EAAQo4K,KAChFz5K,EAAAA,EAAAA,KAAU,KACHqB,IACH+/K,EAAY,IACZC,EAAW,CAAC,KACZE,GAAe,GACfE,GAAqB,GACrBE,EAAcZ,IAAU,GACxBc,EAAY,IACZE,OAAiBvqL,GACjByqL,GAAa,GACf,GACC,CAAClB,EAAQ1/K,KAEZrB,EAAAA,EAAAA,KAAU,IAAM+rK,EAAWkV,IAAmB,CAAClV,EAAY1qK,IAE3D,MAAM8gL,GAAelgL,EAAAA,EAAAA,IAAgB,WACnCo/K,EAAW,IAD6C3hL,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAAG,GAChC,MAE3B2sK,EAAAA,EAAAA,KAAoB,KAClB,MAAMxuI,EAAOqjJ,EAAeliL,QACvB6+B,IAILkG,EAAAA,EAAAA,KAAe,KACblG,EAAK8G,SAAS,CAAE3rB,IAAK6kB,EAAK8C,aAAcyhJ,SAAU,UAAW,GAC7D,GAEN,IAEMC,GAAepgL,EAAAA,EAAAA,IAAgB,KAEnC,GADAggL,GAAa,IACR5gL,EACH,OAGF,MAAMihL,EAAyBZ,SAAiClqL,IAAlBsqL,IAAgC1+K,EAAQ0+K,GAAejkH,QAE/F0kH,EAAUn/K,EACboG,KAAI,CAACmB,EAAM3Q,KAGV,GAFA2Q,EAAOA,EAAKkzD,OAIZ,MAAO,CACLlzD,KAAM,CACJA,QAEFmzB,OAAQyX,OAAOv7C,MACXA,IAAU8nL,GAAiB,CAAEU,SAAS,GAC3C,IACA/vJ,OAAOhyB,SAENgiL,EAAkBtB,EAAStjH,OAAO6kH,UAAU,EAtF1B,KAuFxB,IAAKD,GAAmBF,EAAQjsL,OAAS,EAAG,CAE1C,GADA8qL,EAAYqB,GACRF,EAAQjsL,OAAQ,CAClB,MAAMqsL,EAAiBv/K,EAAQoG,KAAKo5K,GAAMA,EAAE/kH,OAAO6kH,UAAU,EA3F3C,OA2FkEjwJ,OAAOhyB,SACvFkiL,EAAersL,OAAS,EAC1B6rL,EAAaQ,GAEbtB,EAAWsB,EAEf,MACER,IAGF,YADAF,GAAa,EAEf,CAEA,GAAIK,EAEF,YADAL,GAAa,GAIf,MAAMn3D,EAAsB,CAC1B+3D,QAAS,CACP1B,SAAU,CACRx2K,KAAM83K,GAERF,cACKjB,GAAe,CAAEz7I,UAAU,MAC5B27I,GAAqB,CAAEsB,gBAAgB,MACvCpB,GAAc,CAAEqB,MAAM,KAI9B,GAAIrB,EAAY,CACd,MAAM,KAAE/2K,EAAI,SAAEy1E,GAAcwhG,IAAYlyB,EAAAA,GAAAA,IAAyBkyB,EAASc,UAAU,EAxH9D,OAyHjB,CAAC,EAEN53D,EAAQi4D,KAAO,CACbC,eAAgB,CAACztI,OAAOusI,OACpBn3K,GAAQ,CAAEi3K,SAAUj3K,MACpBy1E,GAAY,CAAE6iG,iBAAkB7iG,GAExC,CAEAuyE,EAAO7nC,EAAQ,IAGXo4D,GAAejhL,EAAAA,EAAAA,IAAgB,CAACjI,EAAe2Q,KACnD,MAAMw4K,EAAa,IAAI//K,GACvB+/K,EAAWnpL,GAAS2Q,EAChBw4K,EAAWA,EAAW7sL,OAAS,GAAGunE,OAAOvnE,QAAU6sL,EAAW7sL,OA3I5C,GA4IpB6rL,EAAagB,GAEb9B,EAAW8B,EACb,IAGIC,GAAenhL,EAAAA,EAAAA,IAAiBjI,IACpC,MAAMmpL,EAAa,IAAI//K,GACvB+/K,EAAWrhG,OAAO9nF,EAAO,GACzBqnL,EAAW8B,QAEW3rL,IAAlBsqL,IACEA,IAAkB9nL,EACpB+nL,OAAiBvqL,GACRwC,EAAQ8nL,GACjBC,EAAiBD,EAAgB,KAIrCzV,EAAAA,EAAAA,KAAoB,KACb6U,EAAeliL,SAIpBkiL,EAAeliL,QAAQ9G,UAAUo0B,OAAO,YAAa40J,EAAeliL,QAAQ2hC,aArK1D,IAqKyF,GAC3G,IAGE0iJ,GAA4BphL,EAAAA,EAAAA,IAAiBsqF,IACjDw1F,EAAiBjnK,OAAOyxE,GAAU,IAG9B+2F,GAA0BrhL,EAAAA,EAAAA,IAAiBM,IAC/Cg/K,EAAeh/K,EAAEC,OAAOu7B,QAAQ,IAG5BwlJ,GAA8BthL,EAAAA,EAAAA,IAAiBM,IACnDk/K,EAAqBl/K,EAAEC,OAAOu7B,QAAQ,IAGlCylJ,GAAuBvhL,EAAAA,EAAAA,IAAiBM,IAC5Co/K,EAAcp/K,EAAEC,OAAOu7B,QAAQ,IAG3B0lJ,GAAiBxhL,EAAAA,EAAAA,IAAiBM,IACpB,KAAdA,EAAEysC,SACJqzI,GACF,IAGIqB,GAAuBzhL,EAAAA,EAAAA,IAAiBM,IAC5C6+K,EAAY7+K,EAAEC,OAAOH,MAAM,IAGvBshL,GAAmB1hL,EAAAA,EAAAA,IAAgB,KACvC,GAAI+/K,IAAcb,EAAStjH,OAAOvnE,OAChC,OAAOmM,EAAK,4BAGE,IAGZmhL,GAAkB3hL,EAAAA,EAAAA,IAAiBjI,IACvC,MAAM2oL,EAAiBv/K,EAAQoG,KAAKo5K,GAAMA,EAAE/kH,SAAQprC,QAAQmwJ,GAAMA,EAAEtsL,SACpE,GAAI0rL,GAAaW,EAAersL,OAAS,IAAM8M,EAAQpJ,GAAO6jE,OAAOvnE,OACnE,OAAOmM,EAAK,2BAEE,IAsBlB,SAASohL,IACP,OAAOzgL,EAAQoG,KAAI,CAACs0B,EAAQ9jC,IAC1B8I,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAO5I,IAAUoJ,EAAQ9M,OAAS,GAzOlB,KAyOuB8M,EAAQ9M,OAC3CmM,EAAK,cACLA,EAAK,wBACTsiD,MAAO6+H,EAAgB5pL,GACvBqI,MAAOy7B,EAEPz6B,SAAWd,GAAM2gL,EAAalpL,EAAOuI,EAAE2X,cAAc7X,OACrDyhL,WAAYL,IAEbzpL,IAAUoJ,EAAQ9M,OAAS,GAC1BwM,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,uBACVoF,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACLmI,UAAW7F,EAAK,UAEhBkB,QAASA,IAAMy/K,EAAappL,IAE5B8I,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,uBAKvB,CAeA,OACEH,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CAAC1B,OAAQA,EAAQE,QAASk4K,EAASp6I,OA7DvCv8B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,0BACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAAC6E,OAAK,EAAC5E,MAAM,cAActD,KAAK,UAAUmI,UAAU,uBAAuB3E,QAAS81K,GACzF32K,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAeR,EAAK,YACnCK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,UACNtD,KAAK,UACL8C,UAAU,sBACVU,QAAS0+K,GAER5/K,EAAK,YAkDqDQ,UAAU,aACzEH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR2G,IAAK+2K,EACLr+K,MAAOH,EAAK,gBACZJ,MAAO8+K,EACPp8H,MAAO4+H,IACPtgL,SAAUqgL,EACVI,WAAYL,IAEd3gL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oBAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,6BAA6BiH,IAAKg3K,GAC/Cp+K,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,kBAAkBR,EAAK,gBAEpCu/K,GAvBP,WACE,MAAMW,EAAiBv/K,EAAQoG,KAAKo5K,GAAMA,EAAE/kH,SAAQprC,QAAQmwJ,GAAMA,EAAEtsL,SAEpE,OAAOorL,SAAiClqL,IAAlBsqL,IAAgCa,EAAeb,KACnEh/K,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,cAAcR,EAAK,4BAEpC,CAiBoBshL,GACbrC,EACC5+K,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,gBACLC,QA/BDygL,IACJr6K,KAAI,CAAC5G,EAAO5I,KAAU,CAAGqI,MAAOkzC,OAAOv7C,GAAQ4I,QAAOsgE,QAAS9/D,EAAQpJ,GAAO6jE,WA+BzEv6D,SAAUiyC,OAAOusI,GACjBz+K,SAAUggL,IAGZQ,KAKJ/gL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oBAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACX+9K,GACAl+K,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,iBACZs7B,QAASujJ,EACTj+K,SAAUigL,IAGdxgL,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,gBACZs7B,QAASyjJ,EACTtrK,SAAUwrK,EACVr+K,SAAUkgL,IAEZzgL,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,YACZs7B,QAAS2jJ,EACTxrK,SAAUsrK,QAAgChqL,IAAXupL,EAC/B19K,SAAUmgL,IAEX9B,GACC5+K,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,kBAAkBR,EAAK,6BACrCK,EAAAA,GAAA7K,cAAC+1G,GAAAA,EAAQ,CACP3rG,MAAOu/K,EACPv+K,SAAU6+K,EACV/zE,mBAAiB,IAEnBrrG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,QAAQR,EAAK,iCAI5B,I,4BC9VZ,MAuCA,IAAerB,EAAAA,EAAAA,KAvCmB1E,IAE5B,IAF6B,MACjC+iF,EAAK,MAAE3wB,EAAK,QAAEnrD,GACfjH,EACC,MAAMqd,GAAc9X,EAAAA,EAAAA,IAAiBM,IAEnCA,EAAE0Y,iBAEFtX,EAAQ87E,EAAMukG,OAAQvkG,EAAM/lF,GAAG,IAG3BuJ,GAAY+I,EAAAA,GAAAA,GAChB,cACA8iD,GAAS,SAGLr2D,EAAO,GAAEwrL,EAAAA,IAAuBC,EAAAA,IAAW,oBAAoBzkG,EAAM0kG,YACrEnxI,EAAWoxI,GAAAA,GAAc1iG,IAAIjpF,GAEnC,OACEqK,EAAAA,GAAA7K,cAAA,OACEgL,UAAWA,EACXo/B,YAAatoB,EACblX,MAAQ,IAAG48E,EAAM4kG,MAAM,OAEtBC,EAAAA,GAAqB7kG,EAAMukG,OAC1BlhL,EAAAA,GAAA7K,cAAA,OACEQ,IAAKA,EACLwK,UAAY+vC,OAAwCx7C,EAA7B,2BACvBimB,IAAKgiE,EAAMukG,OACXO,QAAQ,OACR,YAAW9rL,EACXoiE,OAAS7nB,OAA6Bx7C,EAAlBgtL,GAAAA,GACpBlsL,WAAW,IAGX,ICnCJmsL,GAAe,KAAQh5K,EAAAA,EACvBi5K,GAAwB,IAAOj5K,EAAAA,EAC/Bk5K,GAA+B,GAAMl5K,EAAAA,EACrCm5K,GAA2B,GAAMn5K,EAAAA,EAwEvC,IAAerK,EAAAA,EAAAA,KA7DqB1E,IAE9B,IAF+B,SACnCmoL,EAAQ,MAAE7qL,EAAK,UAAE8qL,EAAS,oBAAE7yF,EAAmB,aAAE34E,EAAY,cAAEugK,GAChEn9K,EAEC,MAAMwN,GAAMrL,EAAAA,EAAAA,IAAuB,OAEnCkmL,EAAAA,GAAAA,IAAe76K,EAAK+nF,GAEpB,MAAMz4E,GAAuBuzB,EAAAA,GAAAA,GAA6BzzB,GAEpD7W,GAAOC,EAAAA,EAAAA,MACP,SAAEkE,IAAaC,EAAAA,EAAAA,MAEfm+K,EAAep+K,EACjBqC,KAAKoI,OACJ+b,EAAAA,EAAWztB,MAAMV,MAAQ2lL,GAA2BH,KAAiB9sF,EAAAA,IAAoB8sF,KA9B9D,EAiC1BnlL,EAAS2J,KAAK6nE,KAAK+zG,EAAS7nF,OAAO1mG,OAAS0uL,IAC7CrtF,EAAAA,KAAqB/wF,EAAW+9K,GAA+BD,KAEpE,OACE5hL,EAAAA,GAAA7K,cAAA,OACEiS,IAAKA,EACLP,IAAKk7K,EAASnrL,GACdA,GAAK,kBAAiBM,IACtBiJ,UAAU,cAEVH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qBACbH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,kBAAkBiJ,IAAI,QAChCzJ,EAAKoiL,EAASnrL,KAAO+/F,EAAAA,IAAuB,iBAAoB,QAAOz/F,OAG5E8I,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAe,uBAAwBwN,GAClDne,MAAQ,WAAUiE,OAClB4M,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAEzB8hB,GAAgBurK,EAAS7nF,OAAOxzF,KAAKrG,IACpC,MAAMs8E,EAAQqlG,EAAU3hL,GAExB,IAAKs8E,EACH,OAIF,MAAMwlG,EAAiB,OAAQxlG,EAAQA,EAAQA,EAAM,GAErD,OACE38E,EAAAA,GAAA7K,cAACitL,GAAW,CACVv7K,IAAKs7K,EAAevrL,GACpB+lF,MAAOwlG,EACPthL,QAASk2K,GACT,KAIJ,IC1CJsL,GAA4C,CAChDhV,OAAQ,cACRiV,OAAQ,aACRC,OAAQ,eACRC,MAAO,YACPC,SAAU,aACVC,OAAQ,WACRC,QAAS,YACTC,QAAS,gBACTC,MAAO,aAKH11F,GAAe,KAAOxkF,EAAAA,EACtB6wF,GAAsB,MAAQ7wF,EAAAA,EAG9Bm6K,GAAmC,GAEzC,IAAIC,GACAC,GACAC,GA2LJ,UAAe3kL,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IAAuBkhD,EAAAA,GAAAA,IAAKlhD,EAAQ,CAAC,kBADpBD,EAzL2B7H,IAIzC,IAJ0C,UAC9CuG,EAAS,aACTi1K,EAAY,cACZ2B,GACDn9K,EAEC,MAAM4hB,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC0tB,GAAY1tB,EAAAA,EAAAA,IAAuB,OAElC8tH,EAAYq5D,IAAiBnkL,EAAAA,EAAAA,OAC7Bm7F,EAAQipF,IAAapkL,EAAAA,EAAAA,OACrBqkL,EAAqBC,IAA0BtkL,EAAAA,EAAAA,IAAS,IACzD,SAAE+E,IAAaC,EAAAA,EAAAA,OAEnBwvC,aAAcioD,EACdroD,cAAesoD,GACbxoD,MAEIw6C,QAAS0B,IAAwBpB,EAAAA,GAAAA,IAAwB,CAC/DC,QAASxyE,EACTkzE,WA7B0B,MA8BxBl8C,IACFA,EAAQ9nC,SAASwjF,IACf,MAAM,GAAEt3F,GAAOs3F,EAAMxuF,OACrB,IAAK9I,IAAOA,EAAG6tH,WAAW,mBACxB,OAGF,MAAMvtH,EAAQ8gB,OAAOphB,EAAG+yD,QAAQ,kBAAmB,KACnDm5H,GAAsB5rL,GAASg3F,EAAMC,cAAc,IAGrD,MAAMC,EAAuB00F,GAAsB5wI,QAAO,CAACm8C,EAAaF,EAAgBj3F,IAC/Ei3F,GAAkBj3F,EAAQm3F,EAAcn3F,EAAQm3F,GACtDC,KAECF,IAAyBE,KAI7B+0F,EAAuBj1F,EAAqB,IAGxC4vB,GAAoBhhB,EAAAA,GAAAA,GAAkB,GAAIsmF,EAAAA,KAC1CrmF,EAAsB/C,GAAU8jB,GAEtCzyC,EAAAA,GAAAA,GAAoB9hD,IAAa3lB,GAAYm5F,KAG7C//F,EAAAA,EAAAA,KAAU,KACR,IAAK2sH,EACH,OAGF,MAAMttF,EAAS9S,EAAUvtB,QACzB,IAAKqgC,EACH,OAGF,MAAM2gE,EAAUkmF,EAAsB5pF,GAAsBj9D,EAAO4E,YAAc,EAAIq4D,GAAsB,GAE3GziB,EAAAA,GAAAA,GAAwBx6C,EAAQ2gE,EAAQ,GACvC,CAAC2sB,EAAYu5D,IAEhB,MAAMzjL,GAAOC,EAAAA,EAAAA,KAEP2jL,GAAgB9oL,EAAAA,EAAAA,KAAQ,KAC5B,IAAKovH,EACH,OAAOjzF,GAAAA,EAET,MAAM4sJ,EAAkB,IAAI35D,GAS5B,OARIurD,GAAc5hL,QAChBgwL,EAAgBtnF,QAAQ,CACtBtlG,GAAI+/F,EAAAA,IACJt2F,KAAMV,EAAK,kBACXu6F,OAAQk7E,IAILoO,CAAe,GACrB,CAAC35D,EAAYlqH,EAAMy1K,KAGtBl4K,EAAAA,EAAAA,KAAU,KACRO,YAAW,KACT,MAAMgmL,EAAOA,KACXP,EAAcD,GAAUp5D,YAExBs5D,EAAUF,GAAU/oF,OAAoB,EAGtC+oF,GACFQ,IAiFR93K,iBAQE,OAPKo3K,KACHA,GAAmB,oCACnBC,UAAsBD,IAAkBW,QAExCT,IAAYU,EAAAA,GAAAA,IAAgBX,KAGvBD,EACT,CAxFQa,GACG5sG,KAAKysG,EACV,GA7GuB,IA8GD,GACvB,IAEH,MAAMI,GAAiB1kL,EAAAA,EAAAA,IAAiBjI,IACtCmsL,EAAuBnsL,GACvB,MAAM4sL,EAAatoK,EAAatf,QAASvF,QAAqB,oBAC3DR,cAAe,mBAAkBe,MACpC83F,EAAAA,GAAAA,IAAcxzE,EAAatf,QAAU4nL,EAAY,QAAS32F,GApH/B,IAoHoE,IAG3FgQ,GAAoBh+F,EAAAA,EAAAA,IAAgB,CAACw9E,EAAet8E,KACxD02K,EAAcp6F,EAAOt8E,EAAK,IAqBtB0jL,GAAqB76K,EAAAA,GAAAA,GAAe,cAAe/I,GAEzD,IAAK88F,EACH,OACEj9F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW4jL,GACd/jL,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,OAKd,MAAMw+C,GAAkBn0F,EAAAA,GAAAA,GACtB,sBACCuyF,GAAuB,mBAG1B,OACEz7F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW4jL,GACd/jL,EAAAA,GAAA7K,cAAA,OACEiS,IAAKqiB,EACLtpB,UAAWk9F,EACXj0F,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAEzB6uL,EAAc78K,KAxCrB,SAA8Bq7K,EAA6B7qL,GACzD,MAAM+O,EAAOo8K,GAAkBN,EAASnrL,IAExC,OAAOqP,GACLjG,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAY,sBAAoBjJ,IAAUksL,EAAsB,YAAc,IAC9E79K,OAAK,EACLuyC,OAAK,EACLn3C,MAAM,cAENE,QAASA,IAAMgjL,EAAe3sL,GAC9BsO,UAAWu8K,EAAS1hL,MAEpBL,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,OAAQjD,KAG3C,KA0BIjG,EAAAA,GAAA7K,cAAA,OACEiS,IAAKoU,EACL+8B,SAAUijD,EACVr7F,WAAW+I,EAAAA,GAAAA,GAAe,mBAAoBX,EAAAA,GAAe,eAAiB,kBAE7Eg7K,EAAc78K,KAAI,CAACq7K,EAAU9oI,IAC5Bj5C,EAAAA,GAAA7K,cAAC6uL,GAAa,CACZjC,SAAUA,EACV7qL,MAAO+hD,EACP+oI,UAAW9nF,EACX/K,oBAAqBA,EACrB34E,aAAc4sK,GAAuBnqI,EAAI,GAAKmqI,GAAuBnqI,EAAI,EACzE89H,cAAe55E,OAIjB,K,uOC1MV,MAmKA,IAAe7+F,EAAAA,EAAAA,KAnKiB1E,IAQ1B,IAR2B,IAC/B8iK,EAAG,WACH//J,EAAU,UACVwD,EAAS,oBACTgvF,EAAmB,QACnBtuF,EAAO,cACPojL,EAAa,gBACb3lI,GACD1kD,EAEC,MAAMwN,GAAMrL,EAAAA,EAAAA,IAAuB,MAE7B4D,GAAOC,EAAAA,EAAAA,KAGPu0F,GADiBlE,EAAAA,GAAAA,IAAkB7oF,EAAK+nF,KACPxyF,EACjCk2B,GAAe6pI,EAAIwnB,iBAAmBxnB,EAAI9pI,YAAauxJ,EAAAA,EAAAA,KAAkBznB,EAAK,aAC9EvhK,GAAiBJ,EAAAA,EAAAA,GAAS83B,GAAcshE,IAEvCiwF,IAAarlL,EAAAA,EAAAA,IAAS29J,EAAI9pI,WAAW/2B,UAAYV,GAClD2uC,GAAWC,EAAAA,GAAAA,GAAc2yH,EAAI9pI,WAAW/2B,SAAUuoL,GAElDC,GAAYC,EAAAA,EAAAA,KAAyB5nB,KAAQynB,EAAAA,EAAAA,KAAkBznB,EAAK,QACpE6nB,GAAYxpL,EAAAA,EAAAA,GAASspL,GAAYlwF,GAEjCqwF,EAAoB7mL,QAAQw2F,GAAeowF,IAC3C,WAAErzK,EAAU,kBAAEkF,IAAsBC,EAAAA,GAAAA,IAAa,GACjDI,EAAsB09E,IAAgBjjF,EACtCuzK,EAAetwF,GAAejjF,GAE9B,kBACJyyD,EAAiB,kBAAEC,EAAiB,wBACpC6uB,EAAuB,kBAAE5uB,EAAiB,uBAC1CC,EAAsB,sBAAEC,IACtBC,EAAAA,GAAAA,GAAuB58D,GAErBo8D,GAAoBrkE,EAAAA,EAAAA,IAAgB,IAAMiI,EAAIlL,UAC9CunE,GAAiBtkE,EAAAA,EAAAA,IAAgB,IAAMiI,EAAIlL,QAASvF,QAAQ,mCAC5D+sE,GAAiBvkE,EAAAA,EAAAA,IAAgB,IAAMiI,EAAIlL,QAAS/F,cAAc,+BAElE8gB,GAAc9X,EAAAA,EAAAA,IAAgB,MAC9BwkE,GAAsB9iE,GAC1BA,EAAQ,IACH67J,EACHhhK,QAAS6oL,GACT,IAGEG,GAAoBvlL,EAAAA,EAAAA,IAAiBM,IACzCA,EAAE0J,kBACF1J,EAAE0Y,iBACF8rK,EAAevnB,EAAI,IAGfioB,GAAsBxlL,EAAAA,EAAAA,IAAgB,KAC1C8kL,IAAgBvnB,EAAI,IAGhBxpE,GAAkB/zF,EAAAA,EAAAA,IAAgB,KACtC0B,EAAS,IACJ67J,EACHhhK,QAAS6oL,IACR,EAAK,IAGJpxF,GAAsBh0F,EAAAA,EAAAA,IAAgB,KAC1C0B,EAAS,IACJ67J,EACHhhK,QAAS6oL,QACR7vL,GAAW,EAAK,IAGf0qC,GAAkBjgC,EAAAA,EAAAA,IAAiBM,KACvCi0F,EAAAA,GAAAA,GAAoCj0F,GACpCgzF,EAAwBhzF,EAAE,KAG5BvC,EAAAA,EAAAA,KAAU,KACJP,GAAYmnE,GAAwB,GACvC,CAACA,EAAwBnnE,IAE5B,MAAMmlC,GAAgB54B,EAAAA,GAAAA,GACpB,YACAwzJ,EAAIvgK,OAASugK,EAAIlgK,QAAUkgK,EAAIvgK,MAAQugK,EAAIlgK,OAAS,WAAa,aACjEqE,GAAW,cACXV,GAGF,OACEH,EAAAA,GAAA7K,cAAA,OACEiS,IAAKA,EACLjH,UAAW2hC,EACXvC,YAAaH,EACbv+B,QAASoW,EACTwB,cAAeorD,IAEbt7D,EAAAA,IAAgB07K,GAChBjkL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,oBACVQ,MAAM,OACNs4F,MAAI,EACJ/E,aAAW,EACXrzF,QAAS6jL,GAET1kL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,4CAGhBikL,GACCpkL,EAAAA,GAAA7K,cAAA,UACEiS,IAAK0iC,EACL3pC,UAAU,cAGbhF,IAAmBspL,GAClBzkL,EAAAA,GAAA7K,cAAA,OACEQ,IAAKwF,EACLwf,IAAI,GACJxa,UAAU,UACV3K,WAAW,IAGdgvL,GACCxkL,EAAAA,GAAA7K,cAACm5C,GAAAA,EAAc31B,GAAA,CACb41B,SAAO,EACP54C,IAAK4uL,EACL3rK,UAAQ,EACRG,MAAI,EACJpB,OAAK,EACLzC,yBAAuB,EACvB4D,aAAW,EACX8rK,QAAQ,QAEJxuK,IAGPK,GACCzW,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAOxF,GAAkBipL,EAAY,QAAU,UAEzDvjL,QAAiCnM,IAAtBkvE,GACV5jE,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACHzU,OAAQolE,EACR+G,OAAQ9G,EACRJ,kBAAmBA,EACnBC,eAAgBA,EAChBC,eAAgBA,EAChBvjE,UAAU,mBACV+S,WAAS,EACTzU,QAASqlE,EACTplE,oBAAqBqlE,IAEnBzlB,GAAmBt+C,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAAC/F,QAASqyF,EAAiBjtF,KAAK,QAAQtG,EAAK,qBAC3EK,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAAC/F,QAASsyF,EAAqBltF,KAAK,YAC1CtG,EAAK2+C,EAAkB,cAAgB,oBAEzC2lI,GACCjkL,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACN,aAAW,EAACL,KAAK,SAASpF,QAAS8jL,GAAsBhlL,EAAK,YAI1E,ICvGV,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAEtC,IAAWgD,EAAAA,EAAAA,KAAyBV,IAAW,CAAC,EAClD48C,EAAkB3gD,QAAQyB,KAAWsnB,EAAAA,EAAAA,KAAqBhlB,EAAQtC,GACxE,MAAO,CACLs1E,UAAWhzE,EAAOmjL,KAAKC,MAAMD,KAC7BvmI,kBACD,GAPe78C,EA3DyB7H,IAOvC,IAPwC,UAC5CuG,EAAS,YACTg0F,EAAW,YACX4wF,EAAW,UACXrwG,EAAS,gBACTp2B,EAAe,YACf0mI,GACDprL,EACC,MAAM,cAAEqrL,EAAa,QAAEzsB,IAAY55J,EAAAA,EAAAA,MAG7B4c,GAAezf,EAAAA,EAAAA,IAAuB,OAG1C0xF,QAAS0B,IACPpB,EAAAA,GAAAA,IAAwB,CAAEC,QAASxyE,EAAc0pK,WAjBzB,OAmB5BhoL,EAAAA,EAAAA,KAAU,KACJi3F,GACF8wF,GACF,GACC,CAAC9wF,EAAa8wF,IAEjB,MAAMP,GAAoBvlL,EAAAA,EAAAA,IAAiBu9J,IACzClE,EAAQ,CAAEkE,MAAKyoB,cAAc,GAAO,IAGhCnnE,GAAoBhhB,EAAAA,GAAAA,GAAkB,GAAI9P,EAAAA,KAEhD,OACEltF,EAAAA,GAAA7K,cAAA,WACE6K,EAAAA,GAAA7K,cAAA,OACEiS,IAAKoU,EACLrb,WAAW+I,EAAAA,GAAAA,GAAe,YAAa/I,EAAWoI,EAAAA,GAAe,eAAiB,kBAEhFw8K,EAEE/mE,GAAqBtpC,GAAaA,EAAUlhF,OAC9CkhF,EAAUhuE,KAAKg2J,GACb18J,EAAAA,GAAA7K,cAACiwL,GAAS,CACRv+K,IAAK61J,EAAI9lK,GACT8lK,IAAKA,EACLvtE,oBAAqBA,EACrBxyF,YAAaw3F,EACbtzF,QAASkkL,EAAcC,OAActwL,EACrCuvL,cAAeS,EACfpmI,gBAAiBA,MAGnB0/D,GAAqBtpC,EACvB10E,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBAAkB,kBAEjCH,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAhBR7+C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBAAkB,8CAmBjC,KCvEH,IAAKklL,GAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,iBAAdA,EAAAA,EAAc,6BAAdA,EAAAA,EAAc,uBAAdA,EAAAA,EAAc,eAAdA,CAAc,MAOnB,MAAMC,GAAyD,CACpE,CAACD,GAAeE,OAAQ,QACxB,CAACF,GAAexoG,aAAc,yBAC9B,CAACwoG,GAAet5C,UAAW,mBAC3B,CAACs5C,GAAeG,MAAO,WAGnBC,GAAwB,CAC5B,CAACJ,GAAeE,OAAQ,aACxB,CAACF,GAAexoG,aAAc,gBAC9B,CAACwoG,GAAet5C,UAAW,gBAC3B,CAACs5C,GAAeG,MAAO,aAqEzB,IAAelnL,EAAAA,EAAAA,KAlEwB1E,IAGjC,IAHkC,UACtCktH,EAAS,YAAEM,EAAW,eAAE0vD,EAAc,aAAE4O,EAAY,kBAAEpI,EAAiB,iBACvEC,EAAgB,UAAErc,GACnBtnK,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEb,SAAS+lL,EAAgBt7G,GACvB,OACErqE,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAY,sBAAoB2mH,IAAcz8C,EAAM,YAAc,IAElExpE,QAASA,IAAMumH,EAAY/8C,GAC3B7kE,UAAW7F,EAAK2lL,GAAuBj7G,IACvC9kE,OAAK,EACLuyC,OAAK,EACLn3C,MAAM,eAENX,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,OAAQu8K,GAAsBp7G,MAGjE,CAEA,MAAMu7G,GAAmBzmL,EAAAA,EAAAA,IAAgB,KACvCumL,EAAa5+D,IAAcu+D,GAAet5C,SAAW,WAAa,OAAO,IAO3E,OACE/rI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,oBAAoBU,QALrC,SAAyBogB,GACvBA,EAAM9X,iBACR,EAG+DC,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACpFoyH,IAAcu+D,GAAeE,OAASz+D,IAAcu+D,GAAexoG,aAAeqkF,GACjFlhK,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,uBACVqF,UAAWshH,IAAcu+D,GAAet5C,SAAW,kBAAoB,cACvExmI,OAAK,EACLuyC,OAAK,EACLn3C,MAAM,cACNE,QAAS+kL,GAET5lL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,sBAIhBo9K,GAAoBoI,EAAgBN,GAAeE,OACnDhI,GAAoBoI,EAAgBN,GAAexoG,cAClDygG,GAAqBqI,EAAgBN,GAAet5C,WACpDuxC,GAAqBqI,EAAgBN,GAAeG,OAEpD1+D,IAAcu+D,GAAeE,OAASz+D,IAAcu+D,GAAexoG,cACnE78E,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,uBACVU,QAASi2K,EACTtxK,UAAU,gBACVD,OAAK,EACLuyC,OAAK,EACLn3C,MAAM,eAENX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,2BAGb,I,uOC/BV,IAAI6vE,IAAc,EAElB,MAyQA,IAAe1xE,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACQ,CACLmkL,mBAAmB9jL,EAAAA,EAAAA,KAAeL,GAAQmkL,kBAC1CC,yBAAyB/nF,EAAAA,EAAAA,KAA+Br8F,MAJ1CD,EAzQ0B7H,IAwBxC,IAxByC,OAC7CwF,EAAM,SACNiD,EAAQ,OACR9D,EAAM,gBACNm/J,EAAe,YACfqnB,EAAW,kBACXgB,EAAiB,kBACjBF,EAAiB,SACjBx4F,EAAQ,kBACRiwF,EAAiB,iBACjBC,EAAgB,UAChBp9K,EAAS,wBACT2lL,EAAuB,OACvB/tH,EAAM,QACNt5D,EAAO,cACPs4K,EAAa,oBACbx7E,EAAmB,gBACnB3F,EAAe,YACfovF,EAAW,eACXlO,EAAc,aACd4O,EAAY,eACZvO,EAAc,qBACdD,KACG8O,GACJpsL,EACC,MAAOktH,EAAWC,IAAgBhoH,EAAAA,EAAAA,IAAiB,IAC5Cq2K,EAAc6Q,IAAmBlnL,EAAAA,EAAAA,IAAmB,KACpDq7F,EAAoB8rF,IAAyBnnL,EAAAA,EAAAA,IAAmB,KACjE,SAAE+E,IAAaC,EAAAA,EAAAA,OAEdoiL,EAAkBC,IAAoBC,EAAAA,GAAAA,GAAe9nL,EAAQE,OAAS/J,EAAWoP,IAClF,aAAE0S,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BrY,EAAQE,GAAS,GAAO,GAE7FkB,GAAOC,EAAAA,EAAAA,MAERowE,IAAezxE,IAClByxE,IAAc,IAGhB9yE,EAAAA,EAAAA,KAAU,KACR66D,GAAQ,GACP,CAACA,KAGJ76D,EAAAA,EAAAA,KAAU,KACJqgL,GACJx2D,EArFuB,EAqFS,GAC/B,CAACw2D,KAEJxuK,EAAAA,EAAAA,KAAgB,KACd,GAAKjL,GAAavF,IAAU++K,EAO5B,OAHAzpL,SAASue,KAAKhd,UAAUC,IAAI,iCAC5BxB,SAASue,KAAKhd,UAAUC,IAAI,uBAErB,KACLxB,SAASue,KAAKhd,UAAUid,OAAO,uBAE/B5U,YAAW,MACT8N,EAAAA,EAAAA,KAAgB,KACd1X,SAASue,KAAKhd,UAAUid,OAAO,gCAAgC,GAC/D,GAvGiB,IAwGC,CACvB,GACA,CAACirK,EAAmBx5K,EAAUvF,IAEjC,MAAM+nL,GAAkBvqL,EAAAA,EAAAA,IAAOq5K,GAC/BkR,EAAgBpqL,QAAUk5K,GAC1Bl4K,EAAAA,EAAAA,KAAU,KACHopL,EAAgBpqL,QAAQ1I,SAAU+K,IAIvC+nL,EAAgBpqL,QAAQwO,SAASrK,IAC/B82K,EAAe,CAAEx6F,MAAOt8E,GAAO,IAGjC4lL,EAAgB,IAAG,GAClB,CAAC1nL,EAAQ44K,IAEZ,MAAMh6E,GAAoBh+F,EAAAA,EAAAA,IAAgB,CAACw9E,EAAet8E,KACxD4lL,GAAiB/rF,GAAW,IAAIA,EAAQ75F,KAExC02K,EAAcp6F,EAAM,IAGhB4pG,GAAwBxqL,EAAAA,EAAAA,IAAOq+F,GACrCmsF,EAAsBrqL,QAAUk+F,GAChCl9F,EAAAA,EAAAA,KAAU,KACHqpL,EAAsBrqL,QAAQ1I,SAAU+K,IAI7CgoL,EAAsBrqL,QAAQwO,SAASwvE,IACrCg9F,EAAqB,CACnBh9F,cACA,IAGJ+rG,EAAgB,IAAG,GAClB,CAAC1nL,EAAQ24K,IAEZ,MAAMsP,GAA0BrnL,EAAAA,EAAAA,IAAiBw9E,IAC/CupG,GAAuBvmI,GAAQ,IAAIA,EAAKg9B,EAAM/lF,MAE9C2kG,EAAoB5e,EAAM,IAGtB8+B,GAAet8G,EAAAA,EAAAA,IAAiB/L,IACpCqL,IACAinL,EAAatyL,EAAK,IAGdk7K,GAAsBnvK,EAAAA,EAAAA,IAAgB,CAC1C0wE,EAAqBkkC,EAAoB4pD,EAA0B8oB,KAEnE7wF,IAAkB/lB,EAASkkC,EAAU4pD,GAAgB,EAAM8oB,EAA0B,IAGvF,SAASlsJ,EAAc7tB,EAAmBg6K,GACxC,OAAQ5/D,GACN,KAAKu+D,GAAeE,MAClB,OACEvlL,EAAAA,GAAA7K,cAACwxL,GAAW,CACVxmL,UAAU,aACV42K,cAAe55E,IAGrB,KAAKkoF,GAAexoG,YAClB,OACE78E,EAAAA,GAAA7K,cAACwpG,GAAiB,CAChBx+F,UAAU,aACVkI,UAAW9J,IAAWmO,EACtB2gF,SAAUA,EACV8G,YAAa51F,IAAWmO,GAAYg6K,GACpCtnL,OAAQA,EACRo2F,eAAgB1xF,GAAYgiL,EAC5BvqF,oBAAqBirF,IAG3B,KAAKnB,GAAet5C,SAClB,OACE/rI,EAAAA,GAAA7K,cAACm8K,GAAa,CACZnxK,UAAU,aACVkI,UAAW9J,IAAWmO,EACtBynF,cAAaupE,GAAkBn/J,IAAWmO,GAAYg6K,GACtDr5F,SAAUA,EACVqwE,gBAAiBA,EACjBjoE,gBAAiBswF,EACjB3mL,OAAQA,EACRiD,SAAUA,EACVmzF,eAAgB1xF,GAAYgiL,EAC5BlwF,gBAAiB04E,IAGvB,KAAK+W,GAAeG,KAClB,OACExlL,EAAAA,GAAA7K,cAACyxL,GAAS,CACRzmL,UAAU,aACVg0F,cAAa4wF,GAAcxmL,IAAWmO,GAAYg6K,GAClD3B,YAAaA,EACbC,YAAaA,IAMvB,CAMA,MAAMj/K,EACJ/F,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBAAkBU,QANrC,SAAyBogB,GACvBA,EAAM9X,iBACR,GAKO6mE,IACChwE,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTxuB,KAAK,QACLyuB,UAAWg4F,EACXO,YAAa90E,OAAOwK,OAAOuoI,IAAwB9xL,QAElD+mC,IAINz2B,GACC9D,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACLuyC,OAAK,EACLn3C,MAAM,cACN6E,UAAW7F,EAAK,SAChBQ,UAAU,sBACV9C,KAAK,OACLwD,QAASpC,GAETuB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGjBH,EAAAA,GAAA7K,cAAC0xL,GAAgB,CACf//D,UAAWA,EACXM,YAAaL,EACb+vD,eAAgBA,EAChB5V,UAAW6kB,EACXL,aAAcjqE,EACd6hE,kBAAmBA,EACnBC,iBAAkBA,KAKxB,GAAIz5K,EAAU,CACZ,IAAK0S,EACH,OAGF,MAAMswK,GAAkB59K,EAAAA,GAAAA,GACtB,yBACAwN,EACAmvK,GAAqB,mBACrBvI,GAAqB,sBACrByI,GAAqB,oBAGvB,OAAIzI,EAEAt9K,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2mL,GACb/gL,GAML/F,EAAAA,GAAA7K,cAACopG,GAAAA,EAAM,KACLv+F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2mL,GACb/gL,GAIT,CAEA,OACE/F,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI2F,GAAA,CACHpa,OAAQA,EACRE,QAASA,EACTm0F,WAAY0qF,EACZn9K,WAAW+I,EAAAA,GAAAA,GAAe,aAAc/I,GACxCzB,oBAAqBD,EACrBsoL,aAAex+K,EAAAA,QAAkC7T,EAAnByxL,EAC9B56I,aAAehjC,EAAAA,QAAkC7T,EAAnB0xL,EAC9B1nF,mBAAoBn2F,EAAAA,GACpBi2F,WAAS,GAEJ8+E,EAAoB0I,EAAsB,CAC7Cv/K,UAAW,OACXwM,UAAW,WAGZlN,EACI,K,gBCtTX,MAgCA,IAAezH,EAAAA,EAAAA,KAhCK1E,IAQD,IARM,WACvBotL,EAAU,MACVh7H,EAAK,QACL23G,EAAO,YACP3kK,EAAW,KACXknB,EAAI,SACJyrE,EAAQ,QACR9wF,GACYjH,EACZ,MAAMqd,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC0B,EAAQ8wF,EAAS,IAGnB,OACE3xF,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAK88J,EACLxjK,WAAW+I,EAAAA,GAAAA,GAAe,6CAA8C89K,GAAc,eACtFlyJ,WAAS,EACTj0B,QAASoW,EACT+0C,MAAOA,GAENg7H,GACChnL,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAAC5oB,KAAK,QAAQ6oB,KAAMA,IAE7BlmB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAAQ,IAAEwjK,GAC1B3jK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,aAAYgmB,EAAAA,GAAAA,GAAWnnB,KAEhC,ICmHf,IAAeV,EAAAA,EAAAA,KAAK2oL,EAAAA,GAAAA,IA9HqBrtL,IAWnC,IAXoC,OACxC2E,EAAM,OACNa,EAAM,aACN+/G,EAAY,YACZmhD,EAAW,aACX4mB,EAAY,mBACZC,EAAkB,KAClBC,EAAI,QACJrR,EAAO,QACPl1K,EAAO,QACPpC,GACD7E,EACC,MAAM,eAAEsoK,EAAc,eAAEmlB,IAAmBzoL,EAAAA,EAAAA,MAGrC4c,GAAezf,EAAAA,EAAAA,IAAuB,OACtC,aAAEya,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BrY,OAAQ7J,OAAWA,GAAW,GAEnG4yL,GAAoBnoL,EAAAA,EAAAA,IAAgBkG,IAAuC,IAAtC,MAAE6/C,EAAK,QAAEy+G,GAAwBt+J,EAE1E,MACMw8C,GADY1e,EAAAA,EAAAA,MAAYrK,MAAMC,KACdmsB,GAEtBg9G,EAAe,CACbyB,QAAU,IAAGA,IAAUxkD,GAAgBt9D,EAAO,IAAGA,EAAIvY,UAAW,GAAG6yF,WAAa,OAElFt7H,GAAS,IAGL0mL,GAAuBpoL,EAAAA,EAAAA,IAAiBvI,IAC5CywL,EAAe,CAAEjoL,SAAQooL,aAAc5wL,IACvCiK,GAAS,IAGL4mL,GAA8BhtL,EAAAA,EAAAA,KAAQ,KAC1C,GAAKysL,GAAc1zL,QAAW2zL,EAC9B,OAAOD,EAAaxgL,KAAKghL,IACvB,MAAMvzL,EAAUgzL,EAAmBO,EAAMC,cACzC,MAAO,CACL/wL,GAAI8wL,EAAM9wL,GACV+sK,QAAS+jB,EAAME,SACf5oL,YAAa7K,GAAS4R,QAAQ8B,MAAMA,MAAQ,GAC7C,GACD,GACD,CAACq/K,EAAcC,IAEZU,GAAuB1oL,EAAAA,EAAAA,IAAiByC,KACvCA,EAAK+hK,QAAQl/C,WAAWsxD,IAAUjkI,MAAM,MAIzC,OAAQlwC,EACV2lL,EAAqB3lL,EAAKhL,IAE1B0wL,EAAkB1lL,IAGb,KASHkmL,EAAuBrU,GAAsB,CACjD/mK,SAAUnO,EACVm6C,OAR8Bj+C,EAAAA,EAAAA,KAAQ,KACtC,GAAK6lK,GAAgBmnB,EACrB,MAAQ,GACL5oG,OAAO4oG,GAA+B,GAAInnB,GAAe,GAAG,GAC9D,CAACA,EAAamnB,IAKftxJ,SAAU0xJ,EACVppL,YAGIspL,EAAWznB,IAAgBA,EAAY9sK,QAAY0zL,IAAiBA,EAAa1zL,OAYvF,IAVA0J,EAAAA,EAAAA,KAAU,KACJ6qL,GACFtpL,GACF,GACC,CAACspL,EAAStpL,KAEbvB,EAAAA,EAAAA,KAAU,KACRq2K,GAAsB,uBAAwBuU,EAAsBtsK,EAAa,GAChF,CAACssK,KAECtxK,GAAgBuxK,EACnB,OAGF,MAAM5nL,GAAY+I,EAAAA,GAAAA,GClIG,WDoInB,iCACAwN,GAGF,OACE1W,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWA,EAAWiH,IAAKoU,GAC7BisK,GAA6B/gL,KAAI,CAACghL,EAAOxwL,IACxC8I,EAAAA,GAAA7K,cAAC6yL,GAAW,CACVnhL,IAAM,cAAa6gL,EAAM9wL,KACzB+sK,QAAS+jB,EAAM/jB,QACf3kK,YAAa0oL,EAAM1oL,YACnBknB,KAAMkhK,EACNJ,YAAU,EACVr1F,SAAU+1F,EAAM9wL,GAChBiK,QAAS0mL,EACTv7H,MAAO87H,IAAyB5wL,MAGnCopK,GAAa55J,KAAI,CAACi9J,EAASzsK,IAC1B8I,EAAAA,GAAA7K,cAAC6yL,GAAW,CACVnhL,IAAM,GAAE88J,EAAQz+G,SAASy+G,EAAQA,UACjCA,QAASA,EAAQA,QACjB3kK,YAAa2kK,EAAQ3kK,YAErBknB,MAAMid,EAAAA,EAAAA,MAAYrK,MAAMC,KAAK4qI,EAAQz+G,OACrC8hI,YAAU,EACVr1F,SAAUgyE,EACV9iK,QAASymL,EACTt7H,MAAO87H,GAAwBL,GAA6Bj0L,QAAU,KAAO0D,MAG7E,KEpGV,IAAeoH,EAAAA,EAAAA,KAzCsB1E,IAE/B,IAFgC,OACpC2E,EAAM,YAAE+hK,EAAW,QAAE7hK,GACtB7E,EACC,MAAM,eAAEsoK,IAAmBtjK,EAAAA,EAAAA,OACrB,SAAEkF,IAAaC,EAAAA,EAAAA,OAEdoiL,EAAkBC,IAAoBC,EAAAA,GAAAA,GAAe9nL,EAAQE,OAAS/J,EAAWoP,GAElFmT,GAAc9X,EAAAA,EAAAA,IAAiBwkK,IACnCzB,EAAe,CACbyB,QAAU,IAAGA,MAEfllK,GAAS,IAGX,OACEuB,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACHzU,OAAQA,EACRkI,UAAU,OACVwM,UAAU,SACVxU,QAASA,EACT0B,UAAU,iBACVzB,oBAAqBD,EACrBsoL,aAAex+K,EAAAA,QAAkC7T,EAAnByxL,EAC9B56I,aAAehjC,EAAAA,QAAkC7T,EAAnB0xL,EAC9B1nF,mBAAoBn2F,EAAAA,GACpBi2F,WAAS,GAER8hE,EAAY55J,KAAKuhL,GAChBjoL,EAAAA,GAAA7K,cAAC6yL,GAAW,CACVnhL,IAAKohL,EAAWtkB,QAChBA,QAASskB,EAAWtkB,QACpB3kK,YAAaipL,EAAWjpL,YACxB2yF,SAAUs2F,EAAWtkB,QACrB9iK,QAASoW,MAGR,ICsCX,IAAe3Y,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAM,SAAEyrE,GAAapvE,EAAOovE,SAAS8kG,SAGrC,MAAO,CAAE9kG,WAAUxyB,iBAFK53B,EAAAA,EAAAA,KAAqBhlB,EAAQtC,GAEjBgzB,sBADP0B,EAAAA,EAAAA,KAA2BpyB,GACE,GAL1CD,EA5D8B7H,IAS5C,IAT6C,OACjDwF,EAAM,SACNiD,EAAQ,OACR9D,EAAM,gBACNq3F,EAAe,QACfn3F,EAAO,SACPqyE,EAAQ,gBACRxyB,EAAe,qBACflsB,GACDx4B,EAEC,MAAM4hB,GAAezf,EAAAA,EAAAA,IAAuB,OACtC,aAAEya,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BrY,OAAQ7J,OAAWA,GAAW,GACnGwzL,GAAe1/J,EAAAA,EAAAA,GAAsBsoD,GAAU,GAC/Cq3G,EAAoBr3G,GAAYo3G,EAChCja,GAAoBC,EAAAA,GAAAA,GAAqB9uK,EAAQiD,IAGrDorF,QAAS0B,IACPpB,EAAAA,GAAAA,IAAwB,CAAEC,QAASxyE,EAAckzE,WArBzB,OAuB5BxxF,EAAAA,EAAAA,KAAU,IAAOqB,GAAS+uB,EAAAA,EAAAA,GAAsB7uB,QAAW/J,GAAY,CAAC6J,EAAQE,IAEhF,MAIM0B,GAAY+I,EAAAA,GAAAA,GAChB,gDACAwN,GACEyxK,GAAmB30L,QAAW,UAGlC,OACEwM,EAAAA,GAAA7K,cAAA,OACEiS,IAAKoU,EACLrb,UAAWA,EACXoY,YAdoBk2J,KACtBR,EAAkB,CAAE76K,KAAM,iBAAkB,GAezCojB,GAAgB2xK,EACfA,EAAkBzhL,KAAKmpE,GACrB7vE,EAAAA,GAAA7K,cAACokG,GAAa,CACZ1yF,IAAKgpE,EAAQj5E,GACbi5E,QAASA,EACTxyE,KAAMu6F,EAAAA,IACNzI,oBAAqBA,EACrBtuF,QAAStC,EAASq3F,OAAkBlhG,EACpCi9F,SAAU9hB,EACVvxB,gBAAiBA,EACjB+yC,YAAU,EACVj/D,qBAAsBA,MAGxB5b,EACFxW,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,WACNnqD,EACA,KC7FV,IAAgB,KAAO,YAAY,YAAc,YC6GjD,IAAe4J,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAQyrE,SAAU2e,GAAgB/tF,EAAOu4E,aAAa27F,SAItD,MAAO,CAAEnmF,cAAanxC,iBAHE53B,EAAAA,EAAAA,KAAqBhlB,EAAQtC,GAGdgzB,sBAFV0B,EAAAA,EAAAA,KAA2BpyB,GAEK,GAN7CD,EAtEkC7H,IAShD,IATiD,OACrD2E,EAAM,qBACN24K,EAAoB,oBACpB37E,EAAmB,QACnB98F,EAAO,YACPgxF,EAAW,gBACXnxC,EAAe,qBACflsB,EAAoB,OACpB7e,GACD3Z,EACC,MAAM,yBAAEwuL,IAA6BxpL,EAAAA,EAAAA,MAG/B4c,GAAezf,EAAAA,EAAAA,IAAuB,OACtC,aAAEya,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BrY,OAAQ7J,OAAWA,GAAW,GACnGwzL,GAAe1/J,EAAAA,EAAAA,GAAsBinE,GAAa,GAClD04F,EAAoB14F,GAAey4F,GAEzC38G,EAAAA,GAAAA,GAAoB/vD,GAEpB,MACEiyE,QAAS0B,IACPpB,EAAAA,GAAAA,IAAwB,CAAEC,QAASxyE,EAAckzE,WAxBzB,IAwB4D/xF,YAAa4B,KAErGrB,EAAAA,EAAAA,KAAU,IAAOqB,GAAS+uB,EAAAA,EAAAA,GAAsB7uB,QAAW/J,GAAY,CAAC6J,EAAQE,IAEhF,MAAM+nL,GAA0BrnL,EAAAA,EAAAA,IAAiBkpL,IAC1C9pL,IACLg9F,EAAoB8sF,GACpBnR,EAAqB,CACnBh9F,WAAYmuG,EAAGzxL,KAEjBwxL,IAA0B,IAGtBjoL,GAAY+I,EAAAA,GAAAA,GAChBwH,GAAOwf,KACP,mCACAxZ,GACCyxK,GAAmB30L,QAAUkd,GAAO0vD,QAGvC,OACEpgE,EAAAA,GAAA7K,cAAA,OACEiS,IAAKoU,EACLrb,UAAWA,GAEVqW,GAAgB2xK,EACfA,EAAkBzhL,KAAKmpE,GACrB7vE,EAAAA,GAAA7K,cAACokG,GAAa,CACZ1yF,IAAKgpE,EAAQj5E,GACbi5E,QAASA,EACT1vE,UAAWuQ,GAAO43K,YAClBjrL,KAAMkrL,EAAAA,IACNp5F,oBAAqBA,EACrBtuF,QAAS2lL,EACT70F,SAAU9hB,EACVvxB,gBAAiBA,EACjB+yC,YAAU,EACVj/D,qBAAsBA,EACtB7e,OAAQA,MAGViD,EACFxW,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,WACNnqD,EACA,KCyEV,IAAe4J,EAAAA,EAAAA,KA5HsB1E,IAuB/B,IAvBgC,OACpC2E,EAAM,eACNiqL,GAAiB,EAAK,gBACtBlqI,EAAe,YACfy/H,EAAW,uBACXvmB,EAAsB,aACtBof,EAAY,eACZoH,EAAc,iBACdhH,EAAgB,eAChByR,EAAc,QACdhqL,EAAO,oBACPC,EAAmB,OACnBU,EAAM,YACNspL,EAAW,iBACXC,EAAgB,gBAChBC,EAAe,sBACfv0B,EAAqB,iBACrB9D,EAAgB,cAChBjkE,EAAa,qBACbl6D,EAAoB,kBACpBk9H,EAAiB,gBACjBu5B,EAAe,sBACf1vD,GACDv/H,EACC,MAAM,iBACJkvL,IACElqL,EAAAA,EAAAA,OAEGunL,EAAkBC,IAAoBC,EAAAA,GAAAA,GAAe9nL,EAAQE,IAC7DsqL,EAA4BC,IAAiCjqL,EAAAA,EAAAA,KAAS,GAEvE6uD,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,MACNqjG,EAAgBC,EAAW83B,IAAaplL,EAAAA,EAAAA,MAE/Cm0B,EAAAA,GAAAA,IAAsB3yB,IAAkB,IAAhB8hD,GAAW9hD,EAE7B9G,IAAW4oD,IACb8hI,IACAD,EAA8BrrL,QAAQ65J,IACxC,GACC,CAACj5J,EAAQi5J,IAEZ,MAAOjrJ,EAAS6kJ,EAAaC,IAAiBxtJ,EAAAA,EAAAA,KAExCqlL,GAAiC/pL,EAAAA,EAAAA,IAAiBoT,IACtD4+I,IACI/xJ,GAAQ0pL,EAAiB,CAAE1pL,SAAQmT,YAAW,IAcpD,OAXArV,EAAAA,EAAAA,KAAU,KACHqB,EAKLd,YAAW,KACT2zJ,GAAa,GA3DQ,KAsDrBC,GAMoB,GACrB,CAAC9yJ,EAAQ6yJ,EAAaC,IAGvBrxJ,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACHzU,OAAQA,EACR2U,WAAS,EACTzM,UAAU,QACVwM,UAAWu1K,EAAiB,MAAQ,SACpCroL,WAAW+I,EAAAA,GAAAA,GACT,iBAAkB,QAAS,wBAAyBw/K,GAAe,gBAErEjqL,QAASA,EACTC,oBAAqBA,EACrBqoL,aAAex+K,EAAAA,QAAkC7T,EAAnByxL,EAC9B56I,aAAehjC,EAAAA,QAAkC7T,EAAnB0xL,EAC9B1nF,mBAAoBn2F,EAAAA,IAGnBmgL,IAAgBG,GACf7oL,EAAAA,GAAA7K,cAACi/J,GAAAA,EAAgB,CACfC,sBAAuBA,EACvBu0B,gBAAiBA,EACjBt0B,sBAAkB5/J,EAClB67J,iBAAkBA,EAClB//G,WAAS,EACTjkC,QAASA,EACT+/E,cAAeA,EACfl6D,qBAAsBA,EACtBk9H,kBAAmBA,EACnBue,cAAY,EACZ10C,sBAAuBA,EACvBo7B,WAAY20B,EACZzqL,QAASA,EACT0B,WAAW+I,EAAAA,GAAAA,GAAegoJ,GAAkB,6BAIhDlxJ,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACT,uBACAgoJ,GAAkB,+BAEpB9nJ,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GAE5BkiL,GAAgB52K,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,OAAOpF,QAAS+1K,GAAehpH,EAAQ,qBACtEmwH,GAAeC,GACdh+K,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,WAAWpF,QAASm9K,GAChCpwH,EAAQtP,EAAkB,cAAgB,oBAG9Cy/H,GAAeC,GAAkB+K,GAChC/oL,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,cAAcpF,QAASm2K,GACnCppH,EAAQ,mBAGZ86H,GAAeC,GACd3oL,EAAAA,GAAA7K,cAACyR,GAAAA,EAAQ,CAACX,KAAK,SAASpF,QAAS4nL,GAC9B9oL,EAAK,kBAIP,I,4BCpIX,MAAMwpL,GAAsE,CAC1EC,EAAG,OACHC,OAAQ,OACRC,EAAG,SACHC,GAAI,SACJC,EAAG,YACHC,IAAK,gBACLC,KAAM,YACNC,KAAM,WAEFC,GAAa/1L,SAASsB,cAAc,OA4c1C,IAAemJ,EAAAA,EAAAA,KA1cqB1E,IAM9B,IAN+B,OACnC2E,EAAM,eACNsrL,EAAc,cACdC,EAAa,iBACbC,EAAgB,QAChBtrL,GACD7E,EAEC,MAAM4hB,GAAezf,EAAAA,EAAAA,IAAuB,MAEtCiuL,GAAkBjuL,EAAAA,EAAAA,IAAyB,OAC3C,aAAEya,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BrY,IACpE0rL,EAAmBC,EAAiBC,IAAoBtmL,EAAAA,EAAAA,MACxDg2D,EAASuwH,IAAcrrL,EAAAA,EAAAA,IAAS,KAChCsrL,EAAeC,IAAoBvrL,EAAAA,EAAAA,KAAS,IAC5CwrL,EAAgBC,IAAqBzrL,EAAAA,EAAAA,OACrC0rL,EAAqBC,IAA0B3rL,EAAAA,EAAAA,IAA+B,CAAC,IAEtF7B,EAAAA,EAAAA,KAAU,IAAOqB,GAAS+uB,EAAAA,EAAAA,GAAsB7uB,QAAW/J,GAAY,CAAC6J,EAAQE,KAChFksL,EAAAA,GAAAA,GACEpsL,EACAid,EACA/c,GACA,IAGFvB,EAAAA,EAAAA,KAAU,KACJ+sL,EACFD,EAAgB9tL,QAAS8vD,SAEzBo+H,EAAW,IACXE,GAAiB,GACnB,GACC,CAACL,KAEJ/sL,EAAAA,EAAAA,KAAU,KACHsZ,IACH2zK,IACAO,EAAuB,CAAC,GACxBF,OAAkB91L,GACpB,GACC,CAACy1L,EAAkB3zK,KAEtBtZ,EAAAA,EAAAA,KAAU,KACR,IAAKqB,IAAWurL,EACd,OAGF,MAAMc,EAAwC,CAAC,EAC/C,IAAI,cAAE9zL,GAAkBgzL,EAAc99B,wBACtC,KAAOl1J,GAAiBA,EAAcF,KAAOi0L,EAAAA,KAAmB,CAC9D,MAAMC,EAAa3B,GAAwBryL,EAAcknC,SACrD8sJ,IACFF,EAAgBE,IAAc,GAGhCh0L,EAAgBA,EAAcA,aAChC,CAEA4zL,EAAuBE,EAAgB,GACtC,CAACrsL,EAAQurL,EAAeI,IAE3B,MAAMa,GAAmB5rL,EAAAA,EAAAA,IAAgB,KACvC,IAAK2qL,EACH,OAGF,MAAMv3B,EAAY/0J,OAAOg1J,eACrBD,IACFA,EAAUy4B,kBACVz4B,EAAU04B,SAASnB,GACrB,IAGIoB,GAAsB/rL,EAAAA,EAAAA,IAAgB,KAC1C,MAAMozJ,EAAY/0J,OAAOg1J,eACrBD,GACFw3B,EAAiBx3B,EAAU6H,WAAW,GACxC,IAGI+wB,GAAkBhsL,EAAAA,EAAAA,IAAiBisL,IACvC,GAAKtB,EASL,OANAF,GAAWyB,gBAAgBvB,EAAc/9B,iBACrCq/B,GACFxB,GAAWzxL,iBAAiBmzL,GAAAA,IAA6B5gL,SAAS2zB,IAChEA,EAAGw9I,YAAYx9I,EAAGH,aAAa,OAAQ,IAGpC0rJ,GAAWp9B,SAAS,IAGvB++B,GAAqBpsL,EAAAA,EAAAA,IAAgB,KACzC,GAAK2qL,EAIL,OAAOA,EAAc99B,wBAAwBl1J,aAAa,IAG5D,SAAS00L,IACP,MAAMtwJ,EAAQ8uJ,EAAgB9tL,QAC9B,IAAKg/B,EACH,OAGF,MAAM,YAAEiG,EAAW,YAAEsqJ,EAAW,WAAEv0G,GAAeh8C,EACjD,GAAIuwJ,GAAetqJ,EAEjB,YADAqpJ,OAAkB91L,GAIpB,IAAIyL,EAAY,GACZ+2E,EAAau0G,EAActqJ,IAC7BhhC,EAAY,cAEV+2E,EAAa,IACf/2E,GAAa,cAGfqqL,EAAkBrqL,EACpB,CAOA,SAASurL,EAAyB7kL,GAChC,GAAI4jL,EAAoB5jL,GACtB,MAAO,SAGT,GAAY,cAARA,GAA+B,kBAARA,GACzB,GAAI0rC,OAAO4K,KAAKstI,GAAqBruF,MAClCuvF,GAASA,IAAS9kL,GAAOlJ,QAAQ8sL,EAAoBkB,MAEtD,MAAO,gBAEJ,GAAIlB,EAAoBmB,WAAanB,EAAoBoB,cAC9D,MAAO,UAIX,CAEA,MAAMC,GAAoB3sL,EAAAA,EAAAA,IAAgB,KACxC,GAAIsrL,EAAoBsB,QAAS,CAC/B,MAAM7nK,EAAUqnK,IAChB,IACGzB,IACG5lK,GACDA,EAAQwmH,QAAQ4hB,aAAejB,EAAAA,GAAsBK,UACpDxnI,EAAQ43J,YAEZ,OASF,OANA53J,EAAQ23J,YAAY33J,EAAQ43J,kBAC5B4O,GAAwBE,IAAe,IAClCA,EACHmB,SAAS,KAIb,CAEA,MAAMlkL,EAAOsjL,IACbt3L,SAASs/J,YACP,cAAc,EAAQ,2CAA0C9H,EAAAA,GAAsBK,YAAY7jJ,YAEpGpJ,GAAS,IAGLutL,GAAiB7sL,EAAAA,EAAAA,IAAgB,KACrCurL,GAAwBE,IAEtB/2L,SAASs/J,YAAYy3B,EAAgB/3K,KAAO,eAAiB,QAC7D0/B,OAAO4K,KAAKytI,GAAiBlgL,SAAS7D,IACvB,WAARA,GAA4B,cAARA,IAAwBlJ,QAAQitL,EAAgB/jL,KACvEhT,SAASs/J,YAAYtsJ,EACvB,IAGFqkL,IACO,IACFN,EACH/3K,MAAO+3K,EAAgB/3K,QAEzB,IAGEo5K,GAAmB9sL,EAAAA,EAAAA,IAAgB,KACvCtL,SAASs/J,YAAY,UACrB+3B,IACAR,GAAwBE,IAAe,IAClCA,EACHsB,QAAStB,EAAgBsB,UACxB,IAGCC,GAAsBhtL,EAAAA,EAAAA,IAAgB,KAC1CtL,SAASs/J,YAAY,aACrB+3B,IACAR,GAAwBE,IAAe,IAClCA,EACHwB,WAAYxB,EAAgBwB,aAC3B,IAGCC,GAA0BltL,EAAAA,EAAAA,IAAgB,KAC9C,GAAIsrL,EAAoBoB,cAAe,CACrC,MAAM3nK,EAAUqnK,IAChB,IACGzB,IACG5lK,GACmB,QAApBA,EAAQ8Z,UACP9Z,EAAQ43J,YAEZ,OASF,OANA53J,EAAQ23J,YAAY33J,EAAQ43J,kBAC5B4O,GAAwBE,IAAe,IAClCA,EACHiB,eAAe,KAInB,CAEA,MAAMhkL,EAAOsjL,IACbt3L,SAASs/J,YAAY,cAAc,EAAQ,QAAOtrJ,WAClDpJ,GAAS,IAGL6tL,GAAsBntL,EAAAA,EAAAA,IAAgB,KAC1C,GAAIsrL,EAAoBmB,UAAW,CACjC,MAAM1nK,EAAUqnK,IAChB,IACGzB,IACG5lK,GACmB,SAApBA,EAAQ8Z,UACP9Z,EAAQ43J,YAEZ,OASF,OANA53J,EAAQ23J,YAAY33J,EAAQ43J,kBAC5B4O,GAAwBE,IAAe,IAClCA,EACHgB,WAAW,KAIf,CAEA,MAAM/jL,EAAOsjL,GAAgB,GAC7Bt3L,SAASs/J,YAAY,cAAc,EAAQ,6CAA4CtrJ,YACvFpJ,GAAS,IAGL8tL,GAAuBptL,EAAAA,EAAAA,IAAgB,KAC3C,MAAMqtL,IAAoBnpI,EAAAA,GAAAA,GAAewW,IAAY,IAAI+S,MAAM,KAAKlmE,IAAI+lL,WAAWpzK,KAAK,KAExF,GAAIgxK,EAAe,CACjB,MAAMnmK,EAAUqnK,IAChB,IAAKrnK,GAA+B,MAApBA,EAAQ8Z,QACtB,OAOF,OAJC9Z,EAA8B9d,KAAOomL,OAEtC/tL,GAGF,CAEA,MAAMoJ,EAAOsjL,GAAgB,GAC7BJ,IACAl3L,SAASs/J,YACP,cACA,EACC,WAAUq5B,yCAAwD3kL,SAErEpJ,GAAS,IAGLyZ,GAAgB/Y,EAAAA,EAAAA,IAAiBM,IACrC,MAUM80C,EAVqD,CACzDl0B,EAAG6pK,EACHhzI,EAAG80I,EACHU,EAAGP,EACHlzI,EAAGgzI,EACHU,EAAGL,EACH3yI,EAAG0yI,EACHO,EAAGd,GCjWM,SAAyBrsL,GACtC,MAAMoH,EAAMpH,EAAEoH,KAAOpH,EAAE8pD,KAEvB,OAAO1iD,EAAI49G,WAAW,OAAS59G,EAAIirC,MAAM,GAAG7T,cAAgBp3B,CAC9D,CDgWoCgmL,CAAgBptL,KAG9CA,EAAE00K,SACG10K,EAAEikB,SAAWjkB,EAAE20K,UAChB7/H,IAKN90C,EAAE0Y,iBACF1Y,EAAE0J,kBACForC,IAAS,KAGXr3C,EAAAA,EAAAA,KAAU,KACJqB,GACF1K,SAASiV,iBAAiB,UAAWoP,GAGhC,IAAMrkB,SAASkV,oBAAoB,UAAWmP,KACpD,CAAC3Z,EAAQ2Z,IAEZ,MAAMvY,GAAOC,EAAAA,EAAAA,KASb,IAAK4W,EACH,OAGF,MAAMrW,GAAY+I,EAAAA,GAAAA,GAChB,gBACAwN,EACAuzK,GAAqB,sBAGjB6C,GAA0B5jL,EAAAA,GAAAA,GAC9B,iCACAvL,QAAQk8D,EAAQrmE,SAAW,SAGvB+E,EAAQsxL,EACT,SAAQA,EAAehuK,aAAaguK,EAAe/tK,8BAA8B+tK,EAAehuK,OACjG,GAEJ,OACE7b,EAAAA,GAAA7K,cAAA,OACEiS,IAAKoU,EACLrb,UAAWA,EACX5H,MAAOA,EACPkmD,UA/BJ,SAAgCh/C,GAChB,UAAVA,EAAEoH,KAAmBojL,IACvBsC,IACA9sL,EAAE0Y,iBAEN,EA4BIonB,YAAa7pC,EAAAA,GAEbsK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,cACN6E,UAAU,eACVrF,UAAWurL,EAAyB,WACpC7qL,QAASirL,GAET9rL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,0BACfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,cACN6E,UAAU,YACVrF,UAAWurL,EAAyB,QACpC7qL,QAASmrL,GAEThsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oBAEfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,cACN6E,UAAU,cACVrF,UAAWurL,EAAyB,UACpC7qL,QAASorL,GAETjsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,sBAEfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,cACN6E,UAAU,kBACVrF,UAAWurL,EAAyB,aACpC7qL,QAASsrL,GAETnsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BAEfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,cACN6E,UAAU,qBACVrF,UAAWurL,EAAyB,iBACpC7qL,QAASwrL,GAETrsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,6BAEfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,cACN6E,UAAU,iBACVrF,UAAWurL,EAAyB,aACpC7qL,QAASyrL,GAETtsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,yBAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,0BACfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,cAAc6E,UAAW7F,EAAK,2BAA4BkB,QAASqpL,GAC/ElqL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAIjBH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,8BACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACC,MAAM,cAAc6E,UAAW7F,EAAK,UAAWkB,QAASspL,GAC9DnqL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,0BAEfH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,0BAEfH,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAe,uCAAwCqhL,IAElEvqL,EAAAA,GAAA7K,cAAA,SACEiS,IAAK4iL,EACL7pL,UAAU,+BACV/M,KAAK,OACLmM,MAAOs6D,EACPnb,YAAY,eACZquI,aAAa,MACb1iI,UAAU,MACVjhD,IAAI,OACJ7I,SAvTZ,SAA6Bd,GAC3B2qL,EAAW3qL,EAAEC,OAAOH,OACpBisL,GACF,EAqTYjzI,SAAUizI,KAIdxrL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW2sL,GACd9sL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,0BACfH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLC,MAAM,cACN6E,UAAW7F,EAAK,QAChBQ,UAAU,gBACVU,QAAS0rL,GAETvsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,wBAKjB,IEtcV,IAAe7B,EAAAA,EAAAA,KAhCyB1E,IAElC,IAFmC,MACvC+iF,EAAK,MAAE3wB,EAAK,QAAEnrD,EAAO,oBAAEsuF,GACxBv1F,EACC,MAAMqd,GAAc9X,EAAAA,EAAAA,IAAiBM,IAEnCA,EAAE0Y,iBAEFtX,IAAU87E,EAAM,IAGZx8E,GAAY+I,EAAAA,GAAAA,GAChB,cACA8iD,GAAS,SAGX,OACEhsD,EAAAA,GAAA7K,cAAA,OACEgL,UAAWA,EACXo/B,YAAatoB,EACblX,MAAO48E,EAAMA,OAEb38E,EAAAA,GAAA7K,cAAC0nF,GAAAA,EAAW,CACV3C,WAAYyC,EAAM/lF,GAClByG,KAhCkB,GAiClB42F,qBAAmB,EACnBH,sBAAoB,EACpBnD,8BAA+BxB,IAE7B,IC0HV,IAAe7wF,EAAAA,EAAAA,KAxGoB1E,IAS7B,IAT8B,OAClC2E,EAAM,OACN27F,EAAM,aACNjgB,EAAY,QACZx7E,EAAO,cACPs4K,EAAa,oBACbx7E,EAAmB,eACnB47E,EAAc,qBACdD,GACDt9K,EAEC,MAAM4hB,GAAezf,EAAAA,EAAAA,IAAuB,OACtC,aAAEya,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BrY,OAAQ7J,OAAWA,GAAW,GACnGs4L,GAAqCrsJ,EAAAA,GAAAA,GACzCu5D,EAAO1mG,OAAS,IAAIymF,KAAiBigB,QAAUxlG,EAzD5B,MA0DhB,IAEL62E,EAAAA,GAAAA,GAAoB/vD,GAEpB,MACEiyE,QAAS0B,IACPpB,EAAAA,GAAAA,IAAwB,CAAEC,QAASxyE,EAAckzE,WAvBzB,IAuB4D/xF,YAAa4B,IAE/F0uL,GAAoB9tL,EAAAA,EAAAA,IAAiBw9E,IACzCo6F,EAAcp6F,EAAMukG,QACpB/J,EAAe,CAAEx6F,MAAOA,EAAM/lF,IAAK,IAG/B4vL,GAA0BrnL,EAAAA,EAAAA,IAAiBw9E,IAC/C4e,EAAoB5e,GACpBu6F,EAAqB,CAAEh9F,WAAYyC,EAAM/lF,IAAK,IAG1CykH,GAAel8G,EAAAA,EAAAA,IAAiBw9E,IAChC,WAAYA,EACdswG,EAAkBtwG,GAElB6pG,EAAwB7pG,EAC1B,IAGI1lE,GAAc9X,EAAAA,EAAAA,IAAgB,CAAC+hL,EAAgBtqL,KACnDmgL,EAAcmK,GACd/J,EAAe,CAAEx6F,MAAO/lF,GAAK,IAGzBs2L,GAAyB/tL,EAAAA,EAAAA,IAAiBw9E,IAC9C4e,EAAoB5e,GACpBu6F,EAAqB,CAAEh9F,WAAYyC,EAAM/lF,IAAK,IAG1Cu2L,EAAgB1Z,GAAsB,CAC1C/mK,SAAUnO,EACVy0K,cAAc,EACdt6H,MAAOs0I,EACPrZ,8BAA8B,EAC9Bx9I,SAAUklF,EACV58G,aAGFu5B,EAAAA,GAAAA,IAAsB3yB,IAAyB,IAAvB+nL,GAAkB/nL,OACd3Q,IAAtB04L,IAA0D,IAAvBA,GAtG3C,SAAwBl2L,EAAeskB,GACrC,MAAMllB,EAAYklB,EAAatf,QAC/B,IAAK5F,EACH,OAGF,MAAM,eAAE88K,EAAc,YAAED,GAAgBN,GACtCv8K,EACA,eAZoB,GAcpB,GACA,GACA,GAGF,IAAK68K,EAAY3/K,SAAW2/K,EAAYj8K,GACtC,OAEF,MAAMulF,EAAQ22F,EAAe,GAC7B,IAAKA,EAAev8K,SAASK,IACvBA,IAAUulF,IAAU+2F,GAAel9K,EAAW68K,EAAY12F,IAAQ,GAAQ,CAC9E,MACMygB,EAAuB,UADZhmG,EAAQk8K,EAAeA,EAAe5/K,OAAS,GAAK,QAAU,OAxBxD,GAyBgB0D,EAA6B,GAEpE6/E,EAAAA,GAAAA,GAAwBzgF,EAAW4mG,EACrC,CACF,CAgFImwF,CAAeF,EAAe3xK,EAAa,GAC1C,CAAC2xK,IAEJ,MAAMhtL,GAAY+I,EAAAA,GAAAA,GAChB,gDACAwN,GAGF,OACE1W,EAAAA,GAAA7K,cAAA,OACEiS,IAAKoU,EACLrb,UAAWA,GAEVqW,GAAgBw2K,EACfA,EAAWtmL,KAAI,CAACi2E,EAAOzlF,IACrB,WAAYylF,EACV38E,EAAAA,GAAA7K,cAACitL,GAAW,CACVv7K,IAAK81E,EAAM/lF,GACX+lF,MAAOA,EACP3wB,MAAOmhI,IAAkBj2L,EACzB2J,QAASoW,IAGXjX,EAAAA,GAAA7K,cAACm4L,GAAiB,CAChBzmL,IAAK81E,EAAM/lF,GACX+lF,MAAOA,EACP3wB,MAAOmhI,IAAkBj2L,EACzB2J,QAASqsL,EACT/9F,oBAAqBA,MAIzB34E,EACFxW,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,WACNnqD,EACA,ICvGV,IAAe4J,EAAAA,EAAAA,KAxCkB1E,IAQ3B,IACAmM,GAT4B,MAChChG,EAAK,YACLf,EAAW,UACX4zB,EAAS,SACTwd,EAAQ,MACR4b,EAAK,qBACLt1C,EAAuB,GAAE,QACzB7V,GACDjH,EAGC,MAAM2zL,GAAmBxyL,EAAAA,EAAAA,GAAS63B,GAAY46J,EAAAA,EAAAA,KAAmB56J,QAAal+B,GAW9E,OAVA07C,EAAWA,GAAYm9I,EAEnBn9I,EACFrqC,EACE/F,EAAAA,GAAA7K,cAAA,OAAKQ,IAAKy6C,EAAUjwC,UAAWuW,EAAsBiE,IAAI,GAAG8yK,SAAS,QAAQj4L,WAAW,IAEjFuK,IACTgG,GAAUirF,EAAAA,GAAAA,IAAgBjxF,EAAO,IAIjCC,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPm3B,MAAOA,EACP7rD,UAAU,iCACVo/B,YAAam0D,GAAAA,EACb7yF,QAASA,GAETb,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SACM,iBAAZ4F,GAAuBogB,EAAAA,GAAAA,GAAWpgB,GAAWA,GAEvD/F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACZJ,GAAUC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SAASJ,GAClCf,GAAgBgB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eAAenB,IAExC,IC3Bf,IAAeV,EAAAA,EAAAA,KApBqB1E,IAAsC,IAArC,MAAEoyD,EAAK,aAAE0hI,EAAY,QAAE7sL,GAASjH,EACnE,MAAM,MACJmG,EAAK,IAAEwK,EAAG,YAAEvL,EAAW,aAAE2uL,GACvBD,EAEEz2K,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC0B,EAAQ6sL,EAAa,IAGvB,OACE1tL,EAAAA,GAAA7K,cAACy4L,GAAU,CACT5hI,MAAOA,EACPp5B,UAAW+6J,EACX5tL,MAAOA,GAASwK,EAChBvL,YAAaA,EACb6B,QAASoW,GACT,ICWN,IAAe3Y,EAAAA,EAAAA,KAxBiB1E,IAE1B,IAF2B,aAC/B8zL,EAAY,gBAAEpvI,EAAe,YAAEymI,EAAW,oBAAE51F,EAAmB,QAAEtuF,GAClEjH,EACC,MAAM,IAAE8iK,GAAQgxB,EAEVz2K,GAAc9X,EAAAA,EAAAA,IAAgB,CAAC0uL,EAAgB95E,EAAoB4pD,KACvE98J,EAAQ6sL,EAAc35E,EAAU4pD,EAAe,IAGjD,GAAKjB,EAIL,OACE18J,EAAAA,GAAA7K,cAACiwL,GAAS,CACR1oB,IAAKA,EACLvtE,oBAAqBA,EACrBhvF,UAAU,sBACVU,QAASkkL,EAAc9tK,OAAcviB,EACrC4pD,gBAAiBA,GACjB,IC0CN,IAAehgD,EAAAA,EAAAA,KAvDmB1E,IAE5B,IACA9F,EACA8+B,EACA+6J,GAL6B,MACjC3hI,EAAK,aAAE8hI,EAAY,aAAEJ,EAAY,QAAE7sL,GACpCjH,EAKK,UAAW8zL,IACb55L,EAAQ45L,EAAa55L,OAGnB,cAAe45L,IACjB96J,EAAY86J,EAAa96J,WAEvB,iBAAkB86J,IACpBC,EAAeD,EAAaC,cAG9B,MAAMI,GAAmBhzL,EAAAA,EAAAA,IAASyyL,EAAAA,EAAAA,KAAmBG,IAC/CrsE,GAAevmH,EAAAA,EAAAA,GAASjH,IAASq+J,EAAAA,EAAAA,KAAkBr+J,EAAO,cAC1D4iB,GAAuBuzB,EAAAA,GAAAA,GAA6Bq3E,GAAgBysE,GAEpE92K,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC0B,EAAQ6sL,EAAa,IAGvB,GAAII,EACF,OACE9tL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCAAkCU,QAASoW,GACxDjX,EAAAA,GAAA7K,cAAA,OAAKQ,IAAM7B,GAAO8+B,WAAW/2B,SAAYkyL,EAAkBpzK,IAAI,GAAGnlB,WAAW,IAC7EwK,EAAAA,GAAA7K,cAAA,OACEQ,IAAK2rH,EACLnhH,WAAW+I,EAAAA,GAAAA,GAAe,aAAcwN,GACxCiE,IAAI,GACJnlB,WAAW,KAMnB,MAAM,MAAEuK,EAAK,YAAEf,GAAgB0uL,EAE/B,OACE1tL,EAAAA,GAAA7K,cAACy4L,GAAU,CACT5hI,MAAOA,EACPp5B,UAAW+6J,EACXv9I,SAAUkxE,GAAgB1uF,GAAW/2B,QACrC6a,qBAAsBA,EACtB3W,MAAOA,EACPf,YAAaA,EACb6B,QAASoW,GACT,IC5BN,IAAe3Y,EAAAA,EAAAA,KA9BqB1E,IAM9B,IAN+B,aACnC8zL,EAAY,gBACZpvI,EAAe,oBACf6wC,EAAmB,QACnBtuF,EAAO,qBACPuxB,GACDx4B,EACC,MAAM,QAAEi2E,GAAY69G,EAEpB,GAAK79G,EAIL,OACE7vE,EAAAA,GAAA7K,cAACokG,GAAa,CACZ1pB,QAASA,EACTxyE,KAAM2wL,EAAAA,IACN7+F,oBAAqBA,EACrBpvF,MAAO8vE,EAAQ8M,MACfx8E,UAAU,sBACVU,QAASA,EACT8wF,SAAU+7F,EACVpvI,gBAAiBA,EACjB+yC,YAAU,EACVI,eAAa,EACbr/D,qBAAsBA,GACtB,ICZAq9B,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAK,GA6MjD,IAAepxD,EAAAA,EAAAA,KA1LwB1E,IAajC,IAbkC,OACtC2E,EAAM,MACN2mD,EAAK,UACL+oI,EAAS,iBACTC,EAAgB,SAChBC,EAAQ,cACRC,EAAa,gBACb9vI,EAAe,YACfymI,EAAW,SACX5pI,EAAQ,QACR18C,EAAO,eACP4vL,EAAc,qBACdj8J,GACDx4B,EACC,MAAM,SACJklC,EAAQ,SACRwvJ,EAAQ,qBACRC,IACE3vL,EAAAA,EAAAA,MAGE4c,GAAezf,EAAAA,EAAAA,IAAuB,OACtC,aAAEya,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BrY,OAAQ7J,OAAWA,GAAW,GACnG85L,GAAoBluJ,EAAAA,GAAAA,GAAiB2tJ,EAAWz3K,IAEpDi3E,QAAS0B,IACPpB,EAAAA,GAAAA,IAAwB,CAC1BC,QAASxyE,EACT0pK,WAhD6B,IAiD7BvoL,YAAa4B,IAGTi5C,GAAiBr4C,EAAAA,EAAAA,IAAgBkG,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EACjFuZ,IAAc2xC,EAAAA,GAAkBC,WAClCf,GAAatU,EACf,IAGIgyI,EAAgB1Z,GAAsB,CAC1C/mK,SAAUnO,EACVo1K,6BAA8B6a,EAC9B5a,kBAAmB4a,EACnB91I,MAAOw1I,EACP/3J,SAAUk4J,EACV5vL,aAGFvB,EAAAA,EAAAA,KAAU,KACRq2K,GAAsB,uBAAwB4Z,EAAe3xK,EAAa,GACzE,CAAC2xK,IAEJ,MAAMsB,GAAetvL,EAAAA,EAAAA,IAAgB,KACnC2/B,EAAS,CAAEloC,GAAIsuD,IACfopI,EAAS,CAAEppI,MAAOA,EAAQwpI,MAAOP,EAAUrsI,YAAa,IAGpD6sI,GAAoBxvL,EAAAA,EAAAA,IAAgB,KACxC,MAAMwvD,GAAQC,EAAAA,GAAAA,KAEd2/H,EAAqB,CACnBrpI,MAAOA,EACP36C,IAAK6jL,EAAe7jL,IACpBzC,WAAYsmL,EAAevmL,KAC3B8mD,QACAigI,qBAAqB,GACrB,IAGEC,GAAuBrmK,EAAAA,EAAAA,GAC3B0lK,GAAkB16L,OACd06L,OACAx5L,EACJ8hB,GAEIs4K,EAA2BZ,GAAkB16L,OAAS06L,EAAmBW,EAE/E,IAAKr4K,IAAkBs4K,GAA0Bt7L,SAAU26L,EACzD,OAGF,MAAMhuL,GAAY+I,EAAAA,GAAAA,GAChB,oCACAX,EAAAA,GAAe,eAAiB,gBAChCimL,GAAqB,UACrB93K,GAqFF,OACE1W,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbrxC,IAAKoU,EACLrb,UAAWA,EACXu4C,MAAOo2I,EACP7vI,aAAa,uBACbyR,YAAU,EACV/X,WAAYnB,EACZu3I,cAAe,KAEdZ,GA1FDnuL,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAACliB,QAAM,EAACxS,UAAU,wBAAwBU,QAAS4tL,GAC1DzuL,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASguL,EAAUtmL,OA0FpCumL,GAnFDpuL,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAACliB,QAAM,EAACxS,UAAU,wBAAwBU,QAAS8tL,GAC1D3uL,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASiuL,EAAevmL,OAmFzClK,QAAQmxL,GAA0Bt7L,SA7E9Bs7L,EAA0BpoL,KAAI,CAACsoL,EAAiB93L,KACrD,OAAQ83L,EAAgB57L,MACtB,IAAK,MACH,OACE4M,EAAAA,GAAA7K,cAAC85L,GAAS,CACRpoL,IAAKmoL,EAAgBp4L,GACrB82L,aAAcsB,EACd7/F,oBAAqBA,EACrBtuF,QAASwtL,EACT/vI,gBAAiBA,EACjBymI,YAAaA,IAInB,IAAK,QACH,OACE/kL,EAAAA,GAAA7K,cAAC+5L,GAAW,CACVroL,IAAKmoL,EAAgBp4L,GACrBk3L,aAAcU,EACdd,aAAcsB,EACdnuL,QAASwtL,IAIf,IAAK,UACH,OACEruL,EAAAA,GAAA7K,cAACg6L,GAAa,CACZtoL,IAAKmoL,EAAgBp4L,GACrB82L,aAAcsB,EACd7/F,oBAAqBA,EACrBtuF,QAASwtL,EACT/vI,gBAAiBA,EACjBlsB,qBAAsBA,IAI5B,IAAK,QACL,IAAK,OACL,IAAK,OACH,OACEpyB,EAAAA,GAAA7K,cAAC+5L,GAAW,CACVroL,IAAKmoL,EAAgBp4L,GACrBo1D,MAAOmhI,IAAkBj2L,EACzBw2L,aAAcsB,EACdnuL,QAASwtL,IAGf,IAAK,UACL,IAAK,QACL,IAAK,QACH,OACEruL,EAAAA,GAAA7K,cAACi6L,GAAa,CACZvoL,IAAKmoL,EAAgBp4L,GACrBo1D,MAAOmhI,IAAkBj2L,EACzBw2L,aAAcsB,EACdnuL,QAASwtL,IAIf,QACE,OACJ,IAiBe,ICvFrB,IAAe/vL,EAAAA,EAAAA,KAnHkB1E,IAO3B,IAP4B,OAChC2E,EAAM,OACNa,EAAM,iBACNiwL,EAAgB,cAChBC,EAAa,qBACbl9J,EAAoB,QACpB3zB,GACD7E,EACC,MAAM,kBAAE21L,EAAiB,iBAAEt7J,IAAqBr1B,EAAAA,EAAAA,MAG1Co3B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KAC9B2jB,GAAYvZ,EAAAA,EAAAA,MAAYwZ,MAAM5jB,KAE9Bp5B,GAAOC,EAAAA,EAAAA,KAEP4b,GAAezf,EAAAA,EAAAA,IAAuB,OAErCoqL,EAAkBC,EAAkBoJ,IAAmBnJ,EAAAA,GAAAA,GAAe9nL,EAAQE,OAAS/J,IAE9FwI,EAAAA,EAAAA,KAAU,KACJqB,GACFixL,GACF,GACC,CAACjxL,EAAQixL,IAEZ,MAAM5a,GAAmBz1K,EAAAA,EAAAA,IAAiBvI,IACxC6H,IACA8wL,EAAkB,CAAEnwL,OAAQA,EAASqwL,SAAU74L,GAAK,IAGhD84L,EAAsBjc,GAAsB,CAChD/mK,SAAUnO,EACVm6C,MAAO42I,EACPn5J,SAAUy+I,EACVf,mBAAmB,EACnBH,kCAAkC,EAClCj1K,YAaF,OAVAvB,EAAAA,EAAAA,KAAU,KACRq2K,GAAsB,uBAAwBmc,EAAqBl0K,EAAa,GAC/E,CAACk0K,KAEJxyL,EAAAA,EAAAA,KAAU,KACJoyL,IAAkBA,EAAc97L,QAClCiL,GACF,GACC,CAAC6wL,EAAe7wL,IAGjBuB,EAAAA,GAAA7K,cAAC6d,GAAAA,EAAI,CACHzU,OAAQA,EACRkI,UAAU,OACVwM,UAAU,SACVxU,QAASA,EACT0B,UAAU,aACVzB,oBAAqBD,EACrBsoL,aAAex+K,EAAAA,QAAkC7T,EAAnByxL,EAC9B56I,aAAehjC,EAAAA,QAAkC7T,EAAnB0xL,EAC9B1nF,mBAAoBn2F,EAAAA,GACpBi2F,WAAS,GAETx+F,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gBAAgBiJ,IAAI,QAAQzJ,EAAK,uBAC/Cq2B,GAAa0mB,GAAa4yI,GAAe5oL,KAAI,CAAArB,EAAoBnO,KAAU,IAA7B,GAAEN,EAAE,UAAEu+E,GAAW9vE,EAC9D,MAAMq/B,EAAO1O,EAAUp/B,GACjB8uB,EAAOg3B,EAAU9lD,GACjBsvB,EAAOwe,GAAQhf,EAiBfiqK,GAAkBzmL,EAAAA,GAAAA,GAAemmL,IAAqBz4L,GAAM,YAElE,OACEoJ,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKjQ,EACLuJ,UAAU,yDAEVU,QAtBgBoW,MACbk+D,GAAa/iD,EAChBwiJ,EAAiBh+K,GAEjBq9B,EAAiB,CACf9/B,QAASwL,EAAK,+BACdkxK,WAAYlxK,EAAK,QACjB/L,OAAQ,CACNA,OAAQ,mBACRo0H,QAAS,CAAC,IAGhB,EAWEh8D,MAAO0jI,IAAwBx4L,EAC/B89C,cAAe5iB,GAAwB+iD,GAClCn1E,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,8CAElBH,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL5oB,KAAK,QACL6oB,KAAMA,EACN/lB,UAAWwvL,IAEb3vL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,QACZ+lB,GAAQlmB,EAAAA,GAAA7K,cAACkpD,GAAAA,EAAa,CAACn4B,KAAMA,EAAM0pK,QAAM,IAC1C5vL,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAYukC,EACxB/kC,EAAK,4BACLA,EAAK,cAAe+lB,GAAM4wI,aAAc,OAGrC,IAGV,ICnBX,IAAeh4J,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMwhB,KAAmC,IAAjC,aAAEm0E,GAAcn0E,EACvB,MAAO,CACL3lB,KAAK68E,EAAAA,EAAAA,KAAiB14E,EAAQ21F,GAC9BnH,YAAY09E,EAAAA,EAAAA,KAAyBlsK,GACrC0wB,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GAClD,GANeD,EA1FgC7H,IAG9C,IAH+C,aACnDy9F,EAAY,oBAAElI,EAAmB,IAAE5xF,EAAG,WAAE2yF,EAAU,YAClD3tC,EAAW,qBAAEnwB,GACdx4B,EACC,MAAM,aAAEyhF,EAAY,iBAAE8a,EAAgB,eAAE7a,IAAmB18E,EAAAA,EAAAA,MAGrDwwF,GAAkBrzF,EAAAA,EAAAA,IAA0B,MAE5C4D,GAAOC,EAAAA,EAAAA,KACPm+J,EAAUxgK,IAAQA,EAAI66F,YAAcz6F,QAAQJ,EAAI46F,eAChD03F,EAAoBlyL,QAAQJ,GAAKuzE,UAEjCq3G,GAAoB1tL,EAAAA,EAAAA,KAAQ,KAChC,IAAK8C,EACH,MAAO,GAGT,MAAMuyL,GAAqBvyL,EAAIuzE,UAAUnhD,QAAOtqB,IAAA,IAAC,UAAEgtF,GAAWhtF,EAAA,OAAKgtF,CAAS,KAAK,IAC9EvgD,MAAM,EAtBuB,GAuB1Bi+I,GAAmBxyL,EAAIyyL,QAAU,IAAItpL,KAAIC,IAAA,IAAC,GAAE/P,GAAI+P,EAAA,OAAK/P,CAAE,IACvDq5L,EAAgB1yL,EAAIuzE,SAAWvzE,EAAIuzE,SAASnhD,QAAOhuB,IAAA,IAAC,GAAE/K,GAAI+K,EAAA,OAAMouL,EAAgBl5L,SAASD,EAAG,IAAI,GAEtG,MAAO,IAAIk5L,KAAuBvyL,EAAIyyL,QAAU,MAAQC,GAAen+I,MAAM,EAzBrD,EAyB4E,GACnG,CAACv0C,KAEJL,EAAAA,EAAAA,KAAU,MAEH2yL,GAAqB1H,EAAkB30L,OA9BpB,GA8BoD+J,GAC1E89E,EAAa,CACXhB,eAAgB,CACdzO,UAAWruE,EAAIquE,YAGrB,GACC,CAACikH,EAAmB1H,EAAkB30L,OAAQ6nF,EAAc99E,EAAK85F,IAEpE,MAAMD,GAAiB71F,EAAAA,EAAAA,KAAY,KACjC40F,EAAiB,CAAEkB,gBAAe,GACjC,CAAClB,EAAkBkB,IAEhB64F,GAAqB3uL,EAAAA,EAAAA,KAAasuE,IACtCyL,EAAe,CAAEjB,eAAgBxK,EAAQwK,gBAAiB,GACzD,CAACiB,IAEJ,IAAK/9E,EACH,OAGF,MAAM4yL,EAAoBhI,EAAkB30L,OAAS,EAErD,OACEwM,EAAAA,GAAA7K,cAAA,OAAK0R,IAAKtJ,EAAI3G,GAAIuJ,UAAU,cAAciJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAClEsL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,sBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,QAAQiJ,IAAI,QAAQ7L,EAAIwC,OACtCC,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,QAAQiJ,IAAI,QAAQzJ,EAAK,WAAYpC,EAAI+nB,MAAO,OAE/DtlB,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAW49J,EAAU,gBAAarpK,EAClCiM,MAAM,UACNtD,KAAK,OACL47F,MAAI,EACJthD,OAAK,EACL92C,QAASu2F,GAERz3F,EAAKo+J,EAAU,qBAAuB,sBAG3C/9J,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4CACbH,EAAAA,GAAA7K,cAAA,UAAQiS,IAAKgoF,EAAiBjvF,UAAU,mBACtCgwL,GAAqBnwL,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,MAC9B01K,GAAqBhI,EAAkBzhL,KAAKmpE,GAC3C7vE,EAAAA,GAAA7K,cAACokG,GAAa,CACZ1pB,QAASA,EACTxyE,KAAM+yL,EAAAA,IACNjhG,oBAAqBA,EACrB57E,QAAS28E,GAAc3tC,EACvBovC,SAAU9hB,EACVhvE,QAASqvL,EACT/+F,eAAa,EACb/+D,qBAAsBA,EACtBg9D,gBAAiBA,OAInB,KCvFJ3/B,IAAe5mD,EAAAA,GAAAA,KAAU6mD,GAAOA,KAAM,KAAO,GA2EnD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM8lB,GAAgB6oK,EAAAA,EAAAA,KAA2B3uL,IAC3C,MAAE00C,EAAK,UAAEk6I,GAAc9oK,GAAiB,CAAC,GACzC,SAAE+oK,GAAa7uL,EAAOovE,SAE5B,MAAO,CACL16B,QACA2jD,YAAaw2F,EAAS51F,OACtB21F,YACA/tI,YAAa5kD,SAAQoE,EAAAA,EAAAA,KAAeL,GAAQ8uL,2BAC7C,GAXe/uL,EAzE6B7H,IAO3C,IAP4C,SAChD8S,EAAQ,MACR0pC,EAAK,YACL2jD,EAAW,UACXu2F,EAAS,YACT/tI,EAAW,QACX9jD,GACD7E,EACC,MAAM,qBAAE62L,IAAyB7xL,EAAAA,EAAAA,MAG3B4c,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC4D,GAAOC,EAAAA,EAAAA,MAGX6tF,QAAS0B,IACPpB,EAAAA,GAAAA,IAAwB,CAAEC,QAASxyE,EAAckzE,WArBzB,MAsE5B,OA7CAxxF,EAAAA,EAAAA,KAAU,KACRuyD,IAAa,KACXghI,GAAsB,GACtB,KAGJtzK,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAsCRuB,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,EAAcrb,UAAU,8BAA8BiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAnC5F,WACE,QAAcA,IAAV0hD,EAIJ,OAAKA,GAAS2jD,EACLA,EAAYrzF,KAAK9P,GACtBoJ,EAAAA,GAAA7K,cAACu7L,GAAgB,CACf7pL,IAAKjQ,EACLygG,aAAczgG,EACdu4F,oBAAqBA,EACrB5sC,YAAaA,MAKf+tI,EACGA,EAAU98L,OAIR88L,EAAU5pL,KAAK9P,GACpBoJ,EAAAA,GAAA7K,cAACu7L,GAAgB,CACf7pL,IAAKjQ,EACLygG,aAAczgG,EACdu4F,oBAAqBA,EACrB5sC,YAAaA,MARRviD,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,cAAciJ,IAAI,QAAO,kBAa1CpJ,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,KACjB,CAIKtkB,GACG,KC+DV,IAAej8B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM8lB,GAAgBmpK,EAAAA,EAAAA,KAAuBjvL,IACvC,MAAE00C,EAAK,QAAE0iE,GAAYtxF,GAAiB,CAAC,GACvC,OAAEpoB,EAAM,SAAEiD,IAAaD,EAAAA,EAAAA,KAAyBV,IAAW,CAAC,EAC5DgkB,EAAOtmB,GAASwlC,EAAAA,EAAAA,KAAWljC,EAAQtC,QAAU1K,EAC7CkuF,EAAexjF,GAASyjF,EAAAA,EAAAA,KAAmBnhF,EAAQtC,QAAU1K,EAC7D26G,EAAgB3pF,GAAOkrK,EAAAA,EAAAA,KAAoBlvL,EAAQgkB,QAAQhxB,EAC3D4pD,EAAkB3gD,QAAQyB,KAAWsnB,EAAAA,EAAAA,KAAqBhlB,EAAQtC,GAClEu2J,EAAav2J,GAAUiD,GAAWuzJ,EAAAA,EAAAA,KAAiBl0J,EAAQtC,EAAQiD,QAAY3N,EAC/EmhK,EAAkBl4J,SAASg4J,GAAYG,gBAAkBH,GAAYI,eACrE94G,EAAQ79C,GAAUiD,GAAWigH,EAAAA,EAAAA,KAAY5gH,EAAQtC,EAAQiD,QAAY3N,EAI3E,MAAO,CACL0hD,QACA0iE,UACApzF,OACA2pF,gBACA/wD,kBACAuyI,cAToBlzL,QAAQ+nB,IAAS/nB,QAAQ0E,KAC1C66C,EAAAA,EAAAA,KAAiBx3B,EAAMu3B,EAAO44G,EAAiBjzE,GASlD40E,uBAAwB75J,QAAQyB,KAAWq4J,EAAAA,EAAAA,KAA6B/1J,EAAQtC,GAChF+C,oBAAoBC,EAAAA,EAAAA,KAAyBV,GAC9C,GAxBeD,EAlHyB7H,IAYvC,IAZwC,SAC5C8S,EAAQ,MACR0pC,EAAK,QACL0iE,EAAO,KACPpzF,EAAI,aACJk9D,EAAY,cACZysB,EAAa,uBACbmoD,EAAsB,gBACtBl5G,EAAe,cACfuyI,EAAa,mBACb1uL,EAAkB,QAClB1D,GACD7E,EACC,MAAM,eACJk3L,EAAc,YACdxuI,EAAW,kBACXyuI,IACEnyL,EAAAA,EAAAA,MAGE4c,GAAezf,EAAAA,EAAAA,IAAuB,OAErC69J,EAAiBC,IAAYC,EAAAA,GAAAA,GAAYtC,IAG9C/pE,QAAS0B,IACPpB,EAAAA,GAAAA,IAAwB,CAAEC,QAASxyE,EAAc0pK,WA5BzB,MA8BtBH,EAAc8L,IAAiBpzB,EAAAA,EAAAA,KAA4B/3I,EAAMk9D,EAAcysB,GAAe01E,YAE9FiM,GAAiBzvL,EAAAA,EAAAA,KAAY,CAACm7J,EAAe3oD,EAAoB4pD,KACrE,GAAIonB,EAAa,CACf,IAAK5iL,EACH,OAGEw7J,EACF/D,GAAiBoC,IACf15G,EAAY,CACVO,YAAa1gD,EACbu6J,MACAV,cACAjoD,YACA,IAGJzxD,EAAY,CAAEO,YAAa1gD,EAAoBu6J,MAAK3oD,YAExD,CAEIxrG,EAAAA,IACFwoL,EAAkB,CAAE36I,WAAO1hD,GAC7B,GACC,CAACqwL,EAAa5iL,EAAoBy3J,IAE/Bq3B,GAAuB1vL,EAAAA,EAAAA,KAAY,KACvCuvL,GAAgB,GACf,CAACA,IAEEnxL,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IA+BV,MAAMyyL,EAAavzL,aAAkBjJ,IAAV0hD,GAAuB0iE,GAAWA,EAAQtlH,QAErE,OACEwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YAAYiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACnDsL,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbrxC,IAAKoU,EACLrb,WAAW+I,EAAAA,GAAAA,GAAe,8BAA+BgoL,GAAc,QACvEx4I,MAAOogE,EACP75D,aAAa,aACb0R,iBA1GkB,GA2GlBD,YAAU,EACV/X,WAAYs4I,GAvClB,WACE,QAAcv8L,IAAV0hD,EAIJ,OAAK0iE,EAMAA,EAAQtlH,OAMNslH,EAAQpyG,KAAKg2J,GAClB18J,EAAAA,GAAA7K,cAACiwL,GAAS,CACRv+K,IAAK61J,EAAI9lK,GACT8lK,IAAKA,EACLvtE,oBAAqBA,EACrBtuF,QAASkkL,EAAciM,OAAiBt8L,EACxC4pD,gBAAiBA,MAVjBt+C,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,cAAciJ,IAAI,QAAQzJ,EAAK,gBAN5CK,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,KAmBd,CAeOtkB,IAEFs/H,EACG,K,gBCjKV,SAAuB,WAAvB,GAA8C,WAA9C,GAA0E,WAA1E,GAA6F,WAA7F,GAAgH,WAAhH,GAAoI,WAApI,GAAiK,WAAjK,GAAsL,WAAtL,GAAyM,WAAzM,GAA2N,WAA3N,GAA6O,WAA7O,GAAuQ,WAAvQ,GAA6R,WAA7R,GAA+S,WCuC/S,IAAev7J,EAAAA,EAAAA,KAxBf,SAAiC1E,GAA8B,IAA7B,cAAEu3L,GAAyBv3L,EAC3D,MAAM+F,GAAOC,EAAAA,EAAAA,KACb,OACEI,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACbygL,EAAczuJ,eAAiB,GAC9B1iC,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,IACf1Q,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,gBAAgBF,UAAWuQ,MACrCs+C,EAAAA,GAAAA,IAAqBmiI,EAAczuJ,iBAIvCyuJ,EAAc1uJ,cAAgB,GAC7BziC,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,IACf1Q,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,UAAUF,UAAWuQ,MAC/Bs+C,EAAAA,GAAAA,IAAqBmiI,EAAc1uJ,iBAItC0uJ,EAAc1uJ,gBAAkB0uJ,EAAczuJ,gBAC3C/iC,EAAK,4CAGhB,ICkDA,IAAerB,EAAAA,EAAAA,KA1D+B1E,IAAgC,IAA/B,cAAEu3L,EAAa,QAAEh9L,GAASyF,EACvE,MAAM+F,GAAOC,EAAAA,EAAAA,MACP,wBAAEwxL,IAA4BxyL,EAAAA,EAAAA,MAE9BuiH,GAAiBE,EAAAA,EAAAA,KAA4BltH,GAC7CmtH,GAAevmH,EAAAA,EAAAA,IAASwmH,EAAAA,EAAAA,KAAoBptH,EAAS,UACrDqtH,EAAe7jH,SAAQ8jH,EAAAA,EAAAA,KAAqBttH,IAE5C8iB,GAAc1V,EAAAA,EAAAA,KAAY,KAC9B6vL,EAAwB,CAAExlL,UAAWzX,EAAQyC,IAAK,GACjD,CAACw6L,EAAyBj9L,EAAQyC,KAErC,OACEoJ,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACTwH,GACA/S,QAAQ2jH,GAAgBH,IAAmBzwG,IAE7C7P,QAASoW,GAETjX,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IAkBxB,SAAuB/Q,EAAiBxL,EAAqBuH,EAAkB8lH,GAC7E,OAAK9lH,EAKHsE,EAAAA,GAAA7K,cAAA,YACE6K,EAAAA,GAAA7K,cAAA,OACEQ,IAAK+F,EACLif,IAAI,GACJnlB,WAAW,EACX2K,WAAW+I,EAAAA,GAAAA,GAAewH,GAAc8wG,GAAgB9wG,OAEzDoxG,EAAAA,EAAAA,KAAgB3tH,IAAY6L,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,UACvCshH,EAAAA,EAAAA,GAAqBhiH,EAAMxL,GAAS,KAZhCwtH,EAAAA,EAAAA,GAAqBhiH,EAAMxL,EAetC,CAlCW4tH,CAAcpiH,EAAMxL,EAASmtH,GAAgBH,EAAgBK,IAEhExhH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACb/Q,EAAK,0BAA2BwxL,EAAc3uJ,WAAY,OAI/DxiC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,KACbg6E,EAAAA,GAAAA,IAAsC,IAAfv2F,EAAQgxB,KAAaxlB,EAAK4pD,OAEpDvpD,EAAAA,GAAA7K,cAACk8L,GAAwB,CAACF,cAAeA,KAEvC,IC6BV,IAAe7yL,EAAAA,EAAAA,KAjEf,SAA8B1E,GAA2C,IAA1C,KAAE8rB,EAAI,MAAEyM,EAAK,cAAEg/J,GAAyBv3L,EACrE,MAAM+F,GAAOC,EAAAA,EAAAA,MACP,sBAAE0xL,IAA0B1yL,EAAAA,EAAAA,MAC5BsxC,EAAW/d,GAAS,YAAaA,EAEjCp+B,EAAQm8C,EAAW/d,EAAMpsB,QAAQhS,WAAQW,EACzCy7C,EAAYD,GAAWpd,EAAAA,EAAAA,KAAkBX,QAASz9B,EAClD68L,GAAax2L,EAAAA,EAAAA,GAASo1C,GACtBgxE,EAAiBowE,GAAcx9L,GAAO6+B,WAAW/2B,QAEjDob,GAAc9X,EAAAA,EAAAA,IAAgB,KAClCmyL,EAAsB,CAAE57J,QAASy7J,EAAcz7J,SAAU,IAG3D,OACE11B,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAaA,IACvC7P,QAASoW,GAETjX,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IAkBxB,SAAuB/Q,EAAiB+lB,EAAehqB,GACrD,OACEsE,EAAAA,GAAA7K,cAAA,YACGuG,EACCsE,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,IACf1Q,EAAAA,GAAA7K,cAAA,OACEQ,IAAK+F,EACLif,IAAI,GACJnlB,WAAW,EACX2K,WAAW+I,EAAAA,GAAAA,GAAewH,GAAcA,GAAeA,OAI3D1Q,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACLC,KAAMR,EACNroB,KAAK,eACL8C,UAAWuQ,GACX8gL,gBAAc,EACdC,uBAAqB,IAIxB9xL,EAAK,SAGZ,CA1CWoiH,CAAcpiH,EAAM+lB,EAAM6rK,GAAcpwE,IAE3CnhH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACb/Q,EAAK,0BAA2BwxL,EAAc3uJ,WAAY,OAI/DxiC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACbw/B,GAAYvyC,QAAQw0B,EAAMhN,QAASulE,EAAAA,GAAAA,IAAoC,IAAbv4D,EAAMhN,KAAaxlB,EAAK4pD,OAErFvpD,EAAAA,GAAA7K,cAACk8L,GAAwB,CAACF,cAAeA,KAIjD,IChEA,GAAuB,WAAvB,GAA2K,WAA3K,GAAqS,WAArS,GAAwT,WAAxT,GAA2U,WAA3U,GAA+V,WCoC/V,IAAIO,GACAC,GAWJ,MAAMC,GAAwB,CAC5BC,YAAa,4BACbC,eAAgB,+BAChBC,UAAW,mCACXC,cAAe,kCACfC,mBAAoB,mCACpBC,0BAA2B,0CAC3BC,eAAgB,8BAChBC,kBAAmB,kCACnBC,wBAAyB,+BACzBC,uBAAwB,6BACxBC,6BAA8B,uCAE1BC,GAAiBjgJ,OAAO4K,KAAKy0I,IAE7Ba,GAAsB,CAC1BZ,YAAa,yBACba,aAAc,0BACdP,eAAgB,4BAChBQ,cAAe,2BACfC,aAAc,0BACdZ,cAAe,4BAEXa,GAAetgJ,OAAO4K,KAAKs1I,IAkLjC,IAAen0L,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMytL,GAAaC,EAAAA,EAAAA,KAAiBrxL,EAAQtC,GACtCsmB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAC1B4zL,GAAOnwG,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAAS6zL,eAC3CptK,EAAyB,uBAAfH,GAAMtyB,KAChB8/L,GAAe9rK,EAAAA,EAAAA,KAAmB1lB,EAAQtC,GAC1C+zL,GAAcC,EAAAA,EAAAA,KAAkB1xL,EAAQtC,IAAS25B,KAEvD,MAAO,CACL+5J,aAAYE,OAAMntK,UAASH,OAAMwtK,eAAcC,cAChD,GAXe1xL,EAnK0B7H,IAQxC,IARyC,OAC7CwF,EAAM,KACNsmB,EAAI,WACJotK,EAAU,KACVE,EAAI,QACJntK,EAAO,aACPqtK,EAAY,YACZC,GACDv5L,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEP4b,GAAezf,EAAAA,EAAAA,IAAuB,OACrCwQ,EAAS8mL,IAAct0L,EAAAA,EAAAA,KAAS,GACjCu0L,GAAev3L,EAAAA,EAAAA,IAAiB,KAEhC,eAAEw3L,EAAc,yBAAEC,IAA6B50L,EAAAA,EAAAA,MAC/C7B,GAAcC,EAAAA,EAAAA,MAEpBE,EAAAA,EAAAA,KAAU,KACRq2L,EAAe,CAAEn0L,SAAQymB,WAAU,GAClC,CAACzmB,EAAQm0L,EAAgB1tK,IAE5B,MAAM4tK,GAASh5L,EAAAA,EAAAA,KAAQ,IACdorB,EAAUgtK,GAAeL,IAC/B,CAAC3sK,IAEE6tK,GAAcj5L,EAAAA,EAAAA,KAAQ,IACnBorB,EAAU4sK,GAAsBb,IACtC,CAAC/rK,IA4EJ,OAzEA3oB,EAAAA,EAAAA,KAAU,KACH41L,GAILW,EAAO/oL,SAASrK,IACd,MAAMszL,EAAQb,EAAWzyL,GACQ,iBAAVszL,GAGrBH,EAAyB,CACvBnzL,OACAjB,SACAw0L,MAAOD,EAEPE,aAAuB,mBAATxzL,GAElB,GACA,GACD,CAACozL,EAAQr0L,EAAQ0zL,EAAYU,KAEhCt2L,EAAAA,EAAAA,KAAU,KACR,iBApGJyO,iBAME,OALK+lL,KACHA,GAAqB,gCACrBC,SAAoBD,IAGfA,EACT,CA8FYoC,GAEDvnL,EAKAumL,GAAet3K,EAAatf,UAIjCu3L,EAAO/oL,SAAQ,CAACrK,EAAMnJ,KACpB,MAAMy8L,EAAQb,EAAWzyL,GAGzB,GAFiC,iBAAVszL,GAERL,EAAap3L,QAAQrF,SAASwJ,GAC3C,OAGF,IAAKszL,EAGH,YAFAL,EAAap3L,QAAQ8J,KAAK3F,GAK5B,MAAM,UAAE0zL,GAAcJ,EAEtBhC,GAAYqC,OACVx4K,EAAatf,QAASgK,SAAShP,GAC/B,CACE6I,MAAOJ,EAAM+zL,EAAuCrzL,OACjD0zL,EAAY,CACb/xK,OAASnG,IAAc9P,EAAAA,GAAAA,IAAQ,4BAA6B,CAAE6nL,MAAOG,EAAWl4K,IAAGm3K,SACnFiB,aAAct0L,EAAK,kBACjB,CAAC,KACFg0L,IAIPL,EAAap3L,QAAQ8J,KAAK3F,GAE1Bmb,EAAatf,QAASgK,SAAShP,GAAO9B,UAAUid,OAAO3B,GAAc,IAGvE3T,KAzCEs2L,GAAW,EA0Cd,EA9CD,EA8CI,GACH,CACDI,EAAQC,EAAannL,EAASumL,EAAYnzL,EAAMP,EAAQo0L,EAA0BR,EAAMj2L,IAGrFwP,GAAYumL,EAKf9yL,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAa,gBAAiBnE,GAAWmE,KACtE1Q,EAAAA,GAAA7K,cAAC++L,GAAAA,EAAkB,CACjBpB,WAAYA,EACZ1/L,KAAMyyB,EAAU,QAAU,UAC1B9lB,MAAOJ,EAAK,wBAGZ2zL,EAAap3L,QAAQ1I,QAAUwM,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAEzC7+C,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,GACPi4K,EAAO/sL,KAAKitL,GACX3zL,EAAAA,GAAA7K,cAAA,OAAK0R,IAAK8sL,EAAOxzL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAcA,SAI5D/S,QAASm1L,EAAoCqB,aAAa3gM,SACzDwM,EAAAA,GAAA7K,cAAA,OAAKgL,UDnNkI,YCoNrIH,EAAAA,GAAA7K,cAAA,MAAIgL,UDpNoN,YCoNlLR,EAAK,+BAEzCmzL,EAAoCqB,YAAYztL,KAAKyqL,IACrD,GAAI,UAAWA,EAAe,CAC5B,MAAMh9L,EAAU++L,EAAa/B,EAAcx/E,OAC3C,IAAKx9G,KAAa,YAAaA,GAAU,OAEzC,OACE6L,EAAAA,GAAA7K,cAACi/L,GAAuB,CACtBvtL,IAAM,qBAAoBsqL,EAAcx/E,QACxCx9G,QAASA,EACTg9L,cAAeA,GAGrB,CAEA,GAAI,YAAaA,GAAiBzrK,EAAM,CACtC,MAAMyM,EAAQghK,IAAchC,EAAcz7J,SAE1C,OACE11B,EAAAA,GAAA7K,cAACk/L,GAAqB,CACpBxtL,IAAM,mBAAkBsqL,EAAcz7J,UACtChQ,KAAMA,EACNyM,MAAOA,EACPg/J,cAAeA,GAGrB,CAEgB,MAlDjBnxL,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,KAsDT,KCrPV,GAAuB,WAAvB,GAA0C,WAA1C,GAA6D,WC4C7D,IAAevgD,EAAAA,EAAAA,KA1BsC1E,IAAc,IAAb,KAAEiS,GAAMjS,EAC5D,MAAM+F,GAAOC,EAAAA,EAAAA,MACP,mBAAE00L,IAAuB11L,EAAAA,EAAAA,MAEzBu9H,GAAW1hI,EAAAA,EAAAA,KAAQ,IAAOoR,EAAK6Z,MAAO40H,EAAAA,EAAAA,KAAgBzuI,EAAK6Z,WAAQhxB,GAAY,CAACmX,EAAK6Z,OACrFzO,GAAc1V,EAAAA,EAAAA,KAAY,KAC9B+yL,EAAmB,CAAEn4D,SAAUA,EAAWvwH,UAAWC,EAAKD,WAAY,GACrE,CAACC,EAAKD,UAAW0oL,EAAoBn4D,IAExC,OACEn8H,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAa,4BAA6B7P,QAASoW,GAChFjX,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAAC5oB,KAAK,SAAS6oB,KAAMra,EAAK6Z,OAEjC1lB,EAAAA,GAAA7K,cAAA,WACE6K,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACb7E,EAAK9L,OAGRC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACb/Q,EAAK,0BAA2BkM,EAAKw2B,MAAO,OAG7C,ICZV,IAAIqvJ,GACAC,GAWJ,MAAM4C,GAAe,CACnBC,WAAY,iCACZC,eAAgB,gCAEZC,GAASniJ,OAAO4K,KAAKo3I,IAuJ3B,IAAej2L,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA6B,IAA3B,OAAEvH,GAAQuH,EACjB,MAAMqsL,GAAOnwG,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAAS6zL,eAC3CnxL,GAAWC,EAAAA,EAAAA,KAAeL,GAIhC,MAAO,CAAEoxL,WAHUhxL,EAASgxL,WAAW6B,eAGlB3B,OAAMpnL,UAFT9J,EAASgxL,WAAW8B,iBAEA,GAPtBnzL,EA1IpB,SAAmB7H,GAMO,IANN,OAClBwF,EAAM,SACNsN,EAAQ,WACRomL,EAAU,KACVE,EAAI,UACJpnL,GACsBhS,EACtB,MAAM+F,GAAOC,EAAAA,EAAAA,KAEP4b,GAAezf,EAAAA,EAAAA,IAAuB,OACrCwQ,EAAS8mL,IAAct0L,EAAAA,EAAAA,KAAS,GACjCu0L,GAAev3L,EAAAA,EAAAA,IAAiB,KAEhC,sBAAE84L,EAAqB,0BAAEC,EAAyB,yBAAEtB,IAA6B50L,EAAAA,EAAAA,MACjF7B,GAAcC,EAAAA,EAAAA,MAEpBE,EAAAA,EAAAA,KAAU,KACJ0O,GACFipL,EAAsB,CAAEz1L,SAAQwM,aAClC,GACC,CAACxM,EAAQy1L,EAAuBjpL,KAEnC1O,EAAAA,EAAAA,KAAU,KACHwP,IAAYd,IACf0nL,EAAap3L,QAAU,GACvBm3L,GAAW,GACb,GACC,CAAC3mL,EAAUd,KAGd1O,EAAAA,EAAAA,KAAU,KACH41L,GAIL4B,GAAOhqL,SAASrK,IACd,MAAMszL,EAAQb,EAAWzyL,GACQ,iBAAVszL,GAGrBH,EAAyB,CAAEnzL,OAAMjB,SAAQw0L,MAAOD,GAClD,GACA,GACD,CAACv0L,EAAQ0zL,EAAYU,KAExBt2L,EAAAA,EAAAA,KAAU,KACR,iBAxEJyO,iBAME,OALK+lL,KACHA,GAAqB,gCACrBC,SAAoBD,IAGfA,EACT,CAkEYoC,GAEDvnL,EAKAumL,GAAet3K,EAAatf,UAIjCw4L,GAAOhqL,SAAQ,CAACrK,EAAMnJ,KACpB,MAAMy8L,EAAQb,EAAWzyL,GAGzB,GAFiC,iBAAVszL,GAERL,EAAap3L,QAAQrF,SAASwJ,GAC3C,OAGF,IAAKszL,EAGH,YAFAL,EAAap3L,QAAQ8J,KAAK3F,GAK5B,MAAM,UAAE0zL,GAAcJ,EAEtBhC,GAAYqC,OACVx4K,EAAatf,QAASgK,SAAShP,GAC/B,CACE6I,MAAOJ,EAAM40L,GAAwCl0L,OAClD0zL,EAAY,CACb/xK,OAASnG,IAAc9P,EAAAA,GAAAA,IAAQ,4BAA6B,CAAE6nL,MAAOG,EAAWl4K,IAAGm3K,SACnFiB,aAAct0L,EAAK,kBACjB,CAAC,KACFg0L,IAIPL,EAAap3L,QAAQ8J,KAAK3F,EAAK,IAGjCtD,KAvCEs2L,GAAW,EAwCd,EA5CD,EA4CI,GACH,CACD9mL,EAASumL,EAAYnzL,EAAMP,EAAQwM,EAAW4nL,EAA0BR,EAAMj2L,IAGhF,MAAMy6C,GAAiBr4C,EAAAA,EAAAA,IAAgBkG,IAAqD,IAApD,UAAEuZ,GAA6CvZ,EACjFuZ,IAAc2xC,EAAAA,GAAkBC,WAAa5kD,GAC/CkpL,EAA0B,CAAE11L,SAAQwM,aACtC,IAGF,OAAKW,GAAYumL,GAAelnL,EAK9B5L,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAa,gBAAiBnE,GAAWmE,KACtE1Q,EAAAA,GAAA7K,cAAC++L,GAAAA,EAAkB,CAACpB,WAAYA,EAAY1/L,KAAK,UAAU2M,MAAOJ,EAAK,wBAErE2zL,EAAap3L,QAAQ1I,QAAUwM,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAEzC7+C,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,GACPk5K,GAAOhuL,KAAKitL,GACX3zL,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,IAAe4iL,EAAap3L,QAAQrF,SAAS88L,IAAUjjL,SAIzF/S,QAAQm1L,EAAWiC,iBAClB/0L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IAA6B/Q,EAAK,+BAEjDK,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbC,MAAOo6I,EAAWkC,mBAClB/1I,aAAa,4BACbtG,WAAYnB,EACZmZ,iBAAkBskI,EAAAA,IAClBvkI,YAAU,GAERoiI,EAAWkC,mBAAiDtuL,KAAK9E,GACjE5B,EAAAA,GAAA7K,cAAC+/L,GAA8B,CAACruL,IAAKjF,EAAKgK,UAAWC,KAAMjK,SA3B9D5B,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,KAkCnB,KChJA,IAAevgD,EAAAA,EAAAA,KA3Bf,SAAuC1E,GAA2C,IAA1C,KAAEiS,EAAI,UAAE6wC,EAAS,UAAE1mB,GAAqBp8B,EAC9E,MAAM+F,GAAOC,EAAAA,EAAAA,MACP,SAAEk/B,IAAalgC,EAAAA,EAAAA,MACf8lC,EAAO1O,EAAUnqB,EAAKrN,QACtBknB,EAAOg3B,EAAU7wC,EAAKrN,QAEtByY,GAAc9X,EAAAA,EAAAA,IAAgB,KAClC2/B,EAAS,CAAEloC,GAAI8tC,EAAK9tC,IAAK,IAG3B,OACEoJ,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAa,4BAA6B7P,QAASoW,GAChFjX,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CAAC5oB,KAAK,SAAS6oB,KAAMwe,GAAQhf,EAAM8rK,gBAAc,EAACC,uBAAqB,IAE9EzxL,EAAAA,GAAA7K,cAAA,WACE6K,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACbg0B,GAAO5I,EAAAA,EAAAA,KAAgB4I,IAAQ0c,EAAAA,EAAAA,KAAazhD,EAAM+lB,IAGrD1lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACb7E,EAAK22B,WAAa7iC,EAAK,0BAA2BkM,EAAK22B,WAAY,KAAO7iC,EAAK,aAK1F,IClBA,IAAI+xL,GACAC,GAWJ,MAAM4C,GAAe,CACnBC,WAAY,+BACZC,eAAgB,gCAEZC,GAASniJ,OAAO4K,KAAKo3I,IAwK3B,IAAej2L,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAM2tL,GAAOnwG,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAAS6zL,eAC3CnxL,GAAWC,EAAAA,EAAAA,KAAeL,GAC1BoxL,EAAahxL,EAASgxL,WAAWqC,aACjCz/J,EAAU5zB,EAASgxL,WAAWxiJ,gBAC5BvX,KAAM/C,GAAct0B,EAAOo3B,OAC3BC,KAAM2jB,GAAch7C,EAAOi7C,MAEnC,MAAO,CACLm2I,aAAYE,OAAMt9J,UAASM,YAAW0mB,YACvC,GAXej7C,EAzJpB,SAAwB7H,GAQE,IARD,OACvBwF,EAAM,SACNsN,EAAQ,WACRomL,EAAU,KACVE,EAAI,QACJt9J,EAAO,UACPgnB,EAAS,UACT1mB,GACsBp8B,EACtB,MAAM+F,GAAOC,EAAAA,EAAAA,KAEP4b,GAAezf,EAAAA,EAAAA,IAAuB,OACrCwQ,EAAS8mL,IAAct0L,EAAAA,EAAAA,KAAS,GACjCu0L,GAAev3L,EAAAA,EAAAA,IAAiB,KAEhC,oBAAEq5L,EAAmB,wBAAEC,EAAuB,yBAAE7B,IAA6B50L,EAAAA,EAAAA,MAC7E7B,GAAcC,EAAAA,EAAAA,MAEpBE,EAAAA,EAAAA,KAAU,KACJw4B,GACF0/J,EAAoB,CAAEh2L,SAAQs2B,WAChC,GACC,CAACt2B,EAAQs2B,KAEZx4B,EAAAA,EAAAA,KAAU,KACHwP,IAAYgpB,IACf49J,EAAap3L,QAAU,GACvBm3L,GAAW,GACb,GACC,CAAC3mL,EAAUgpB,KAGdx4B,EAAAA,EAAAA,KAAU,KACH41L,GAIL4B,GAAOhqL,SAASrK,IACd,MAAMszL,EAAQb,EAAWzyL,GACQ,iBAAVszL,GAGrBH,EAAyB,CAAEnzL,OAAMjB,SAAQw0L,MAAOD,GAClD,GACA,GACD,CAACv0L,EAAQ0zL,EAAYU,KAExBt2L,EAAAA,EAAAA,KAAU,KACR,iBA5EJyO,iBAME,OALK+lL,KACHA,GAAqB,gCACrBC,SAAoBD,IAGfA,EACT,CAsEYoC,GAEDvnL,EAKAumL,GAAet3K,EAAatf,UAIjCw4L,GAAOhqL,SAAQ,CAACrK,EAAMnJ,KACpB,MAAMy8L,EAAQb,EAAWzyL,GAGzB,GAFiC,iBAAVszL,GAERL,EAAap3L,QAAQrF,SAASwJ,GAC3C,OAGF,IAAKszL,EAGH,YAFAL,EAAap3L,QAAQ8J,KAAK3F,GAK5B,MAAM,UAAE0zL,GAAcJ,EAEtBhC,GAAYqC,OACVx4K,EAAatf,QAASgK,SAAShP,GAC/B,CACE6I,MAAOJ,EAAM40L,GAAwCl0L,OAClD0zL,EAAY,CACb/xK,OAASnG,IAAc9P,EAAAA,GAAAA,IAAQ,4BAA6B,CAAE6nL,MAAOG,EAAWl4K,IAAGm3K,SACnFiB,aAAct0L,EAAK,kBACjB,CAAC,KACFg0L,IAIPL,EAAap3L,QAAQ8J,KAAK3F,EAAK,IAGjCtD,KAvCEs2L,GAAW,EAwCd,EA5CD,EA4CI,GACH,CACD9mL,EAASumL,EAAYnzL,EAAMP,EAAQs2B,EAAS89J,EAA0BR,EAAMj2L,IAG9E,MAAMy6C,GAAiBr4C,EAAAA,EAAAA,IAAgB,KAChCu2B,GAEL2/J,EAAwB,CAAEj2L,SAAQs2B,WAAU,IAG9C,OAAKnpB,GAAYumL,GAAep9J,EAK9B11B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAa,gBAAiBnE,GAAWmE,KACtE1Q,EAAAA,GAAA7K,cAAC++L,GAAAA,EAAkB,CAACpB,WAAYA,EAAY1/L,KAAK,QAAQ2M,MAAOJ,EAAK,wBAEnE2zL,EAAap3L,QAAQ1I,QAAUwM,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAEzC7+C,EAAAA,GAAA7K,cAAA,OAAKiS,IAAKoU,GACPk5K,GAAOhuL,KAAKitL,GACX3zL,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,IAAe4iL,EAAap3L,QAAQrF,SAAS88L,IAAUjjL,SAIzF/S,QAAQm1L,EAAWiC,iBAClB/0L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IAA6B/Q,EAAK,+BAEjDK,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbC,MAAOo6I,EAAWkC,mBAClB/1I,aAAa,4BACbtG,WAAYnB,EACZmZ,iBAAkBskI,EAAAA,IAClBvkI,YAAU,GAEToiI,EAAWkC,mBAAoBtuL,KAAK9E,GAC/B,cAAeA,EAEf5B,EAAAA,GAAA7K,cAAC+/L,GAA8B,CAACruL,IAAM,WAAUjF,EAAKgK,YAAaC,KAAMjK,IAK1E5B,EAAAA,GAAA7K,cAACmgM,GAA4B,CAC3BzuL,IAAM,SAAQjF,EAAK8zB,UACnB7pB,KAAMjK,EACN86C,UAAWA,EACX1mB,UAAWA,SAtClBh2B,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,KA+CnB,K,gBC1DA,UAAevgD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAAuC,IAArC,OAAEkwL,GAAkBlwL,EAC3B,MAAM,OAAEmwL,EAAM,QAAEC,IAAY1zL,EAAAA,EAAAA,KAAeL,GAAQg0L,YAEnD,MAAO,CACLF,OAAQA,IAASD,EAAOv6J,QACxB1rB,OAASmmL,IAAUF,EAAOv6J,SAAY,GACvC,GAPev5B,EA7GiC7H,IAQ/C,IARgD,KACpD8rB,EAAI,QACJvxB,EAAO,OACPohM,EAAM,WACNI,EAAU,YACVC,EAAW,OACXJ,EAAM,OACNlmL,GACD1V,EACC,MAAM,sBACJi8L,EAAqB,SACrB/2J,EAAQ,iBACRg3J,IACEl3L,EAAAA,EAAAA,MAEEm3L,GAAkBvtK,EAAAA,EAAAA,GAA8BmtK,EAAWK,cAC1DlvK,EAAWglF,IAAgB/sG,EAAAA,EAAAA,KAAkB,GAC9Ck3L,EAAkBt4L,QAAQ63L,IAC1B,OAAEx6J,EAAM,KAAEnzB,GAAS0tL,EACnB51L,GAAOC,EAAAA,EAAAA,MAEb1C,EAAAA,EAAAA,KAAU,KAEH+4L,GAAmBF,IAAoBJ,EAAWK,aACrDH,EAAsB,CACpBnwK,OAAM9Z,UAAWzX,EAAQyC,GAAIokC,SAAQ1rB,SAAQuS,MA5B/B,EA4BqDq0K,mBAAmB,GAE1F,GAEC,CAACP,EAAWK,YAAaC,IAE5B,MAAME,GAAsB50L,EAAAA,EAAAA,KAAY,KACtCuqG,GAAa,GACb+pF,EAAsB,CACpBnwK,OAAM9Z,UAAWzX,EAAQyC,GAAIokC,SAAQ1rB,SAAQuS,MApC3B,IAqClB,GACD,CAAC6D,EAAMmwK,EAAuB1hM,EAAQyC,GAAI0Y,EAAQ0rB,KAErD99B,EAAAA,EAAAA,KAAU,KACR4uG,GAAa,EAAM,GAClB,CAAC0pF,IAEJ,MAAMY,GAAoB70L,EAAAA,EAAAA,KAAa3K,IACrCkoC,EAAS,CAAEloC,OACXk/L,GAAkB,GACjB,CAACA,EAAkBh3J,IAetB,OACE9+B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACZq1L,EACGA,EAAO9uL,KAAK9P,GACZoJ,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKjQ,EACLuJ,UAAU,sBAEVU,QAASA,IAAMu1L,EAAkBx/L,KAEhC4K,EAAAA,EAAAA,KAAS5K,GACRoJ,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACdmkE,WAAW,OACX7pF,OAAQj5B,EACRugC,eAAa,EACbse,kBAAgB,IAGlBz1C,EAAAA,GAAA7K,cAACugD,GAAAA,EAAa,CACZgkE,WAAW,OACXt6G,OAAQxI,EACR6+C,kBAAgB,OAKtBz1C,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MACX22I,GAzCP,WACE,MAAMa,EAAkBV,EAAWK,YAAcR,EAAQhiM,OAEzD,OAAOmiM,EAAWK,YArDA,GAqD+BK,EAAkB,GACjEr2L,EAAAA,GAAA7K,cAACmhM,GAAAA,EAAc,CACbhxK,MAAO+wK,EACPE,SAAS,QACTzvK,UAAWA,EACXjmB,QAASs1L,GAGf,CA8BiBK,IAEbx2L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cAAciJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACrDsL,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,eAAeiJ,IAAI,SAChCu2B,EAAAA,GAAAA,GAAuB,CACtB93B,KAAMA,EAAKA,KACXy1E,SAAUz1E,EAAKy1E,YAGnBt9E,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,iBAAiBiJ,IAAKzJ,EAAKqkB,MAAQ,YAAStvB,IAQ7C6K,EAPEo2L,EAAWK,aAOEz9C,EAPWq9C,GAQhC,GAAMr2L,EAAQg5I,EAAS,KAAKt0H,UAAY,GARK,OAO9D,IAAuB1kB,EAAeg5I,CAJ5B,KClEV,IAAej6I,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MACEg0L,aAAa,OAAEt2L,EAAM,UAAEwM,KACrB7J,EAAAA,EAAAA,KAAeL,GAEnB,IAAKtC,IAAWwM,EACd,MAAO,CAAC,EAGV,MAAM8Z,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAC1BjL,GAAU8yB,EAAAA,EAAAA,KAAkBvlB,EAAQtC,EAAQwM,GAGlD,MAAO,CACL8Z,OACAvxB,UACAw5J,KALWx5J,IAAWijK,EAAAA,EAAAA,KAAsB11J,EAAQvN,GAMrD,GAlBesN,EAjD2B7H,IAMzC,IAN0C,SAC9C8S,EAAQ,KACRgZ,EAAI,QACJvxB,EAAO,KACPw5J,EAAI,QACJlvJ,GACD7E,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAOb,IALAud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGLtK,IAAYw5J,IAASjoI,EACxB,OAAO1lB,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAGjB,MAAM,QAAEkhI,EAAO,QAAEjnE,GAAY60C,EAC7B,IAAK70C,EAAQA,QACX,OAGF,MAAM29E,GAAkBC,EAAAA,GAAAA,IAAqB59E,EAAQA,QAAS,UAE9D,OACE94G,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cAAciJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACrDsL,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,gBAAgBiJ,IAAI,SAC/Bu2B,EAAAA,GAAAA,GAAuB,CACtB93B,KAAMk4K,EAAQ1B,SAASx2K,KACvBy1E,SAAUyiG,EAAQ1B,SAAS/gG,YAG/Bt9E,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mCACZ4/K,EAAQN,QAAQ/4K,KAAK6uL,GACpBv1L,EAAAA,GAAA7K,cAACwhM,GAAiB,CAChB9vL,IAAM,GAAE8mJ,EAAK/2J,MAAM2+L,EAAOv6J,SAC1BtV,KAAMA,EACNvxB,QAASA,EACTohM,OAAQA,EACRI,WAAYc,EAAgBlB,EAAOv6J,QACnC46J,YAAa98E,EAAQ88E,iBAIvB,K,gBC3EV,SAAuB,WAAvB,GAA4C,WAA5C,GAAiE,WAAjE,GAAuG,WAAvG,GAA2H,WAA3H,GAAoJ,WAApJ,GAAsK,WAAtK,GAAkN,WAAlN,GAAmQ,WC2B7PgB,GAAY,EAAIjuL,EAAAA,EA6ItB,IAAerK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,iBAAEm1L,IAAqB90L,EAAAA,EAAAA,KAAeL,GAC5C,MAAO,CACLgkB,KAAMmxK,GAAkBz3L,QAASwlC,EAAAA,EAAAA,KAAWljC,EAAQm1L,EAAiBz3L,aAAU1K,EAC/EmiM,mBACAzkK,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GAClD,GAPeD,EAhI2B7H,IAMzC,IAN0C,SAC9C8S,EAAQ,KACRgZ,EAAI,iBACJmxK,EAAgB,qBAChBzkK,EAAoB,QACpB3zB,GACD7E,EACC,MAAM,YAAEk9L,EAAW,iBAAE5iK,IAAqBt1B,EAAAA,EAAAA,OACnCmB,EAAO8mJ,IAAY9nJ,EAAAA,EAAAA,IAAS,KAC5Bg4L,EAAgBC,IAAqBj4L,EAAAA,EAAAA,IAAS,IAC9Ck4L,EAAaC,IAAkBn4L,EAAAA,EAAAA,SAA6BrK,GAC7DiL,GAAOC,EAAAA,EAAAA,KAEPkpH,EAAYnrH,QAAQoC,GACpB+mB,EAAYnpB,QAAQk5L,GAAkB/vK,YAE5C3J,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGVvB,EAAAA,EAAAA,KAAU,KACHwP,IACHm6I,EAAS,IACTqwC,OAAexiM,GACjB,GACC,CAACgY,IAEJ,MAAM06I,GAAoB7lJ,EAAAA,EAAAA,KAAa9B,IACrConJ,EAASpnJ,EAAEC,OAAOH,MAAM,GACvB,IAEG43L,GAAkB51L,EAAAA,EAAAA,KAAY,KAClCy1L,GAAmB3mI,IAAS8gB,EAAAA,GAAAA,IAAcimH,EAAAA,GAAAA,MAAiB5jM,OAAQ68D,EAAO,IAAG,GAC5E,IAEGgnI,GAAoB91L,EAAAA,EAAAA,KAAY,KACpCu1L,EAAY,CACV13L,OAAQsmB,EAAM9uB,GACdmJ,QACAu3L,WAAWF,EAAAA,GAAAA,MAAiBL,GAC5BE,eACA,GACD,CAACvxK,EAAMoxK,EAAaC,EAAgBE,EAAal3L,IAE9CymL,GAA0BjlL,EAAAA,EAAAA,KAAao7E,IACtCA,EAAMyV,QAAWhgE,GAAwBuqD,EAAM/lF,KAAO2gG,EAAAA,IAKvD5a,EAAM/lF,KAAO2gG,EAAAA,IAKjB2/F,EAAev6G,EAAM/lF,IAJnBsgM,OAAexiM,GALfw/B,EAAiB,CAAEQ,eAAgB,kBASb,GACvB,CAACtC,EAAsB8B,IAEpBqjK,GAAa98L,EAAAA,EAAAA,KAAQ,KAClB,CACL7D,GAAI,EACJmJ,QACAu3L,WAAWF,EAAAA,GAAAA,MAAiBL,GAC5BE,iBAED,CAACF,EAAgBE,EAAal3L,IAEjC,GAAK2lB,GAAM83B,QAIX,OACEx9C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAgB,kBAC7C1Q,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAgBA,KAC7C1Q,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,IAAiB/Q,EAAK,qBACvCK,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTxuB,KAAK,WACLyuB,UAAW9W,OAAOu/K,EAAWN,cAAgB,EAC7CO,eAAa,EACb54K,UAAW,EACXze,UAAWuQ,IAEX1Q,EAAAA,GAAA7K,cAAC4pD,GAAAA,EAAS,CACR9B,MAAOs6I,EACPp3L,WAAW+I,EAAAA,GAAAA,GAAewH,GD9HqJ,YC+H/K7P,QAASs2L,EACT95L,KAAMu5L,GACNa,aAAW,KAGfz3L,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAOQ,EACPQ,SAAU6mJ,EACVtnJ,MAAOH,EAAK,yBACZyT,SAAU0T,EACVuU,2BAAyB,KAG7Br7B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAgBA,KAC7C1Q,EAAAA,GAAA7K,cAACwpG,GAAiB,CAChBtR,SAAS,0BACThlF,UAAWqE,EACXynF,YAAaznF,EACb6uF,oBAAqBirF,EACrBrmL,UAAWuQ,GACX2qF,oBAAoB,qBACpBC,uBAAqB,MAI3Bt7F,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASuwF,EACT11G,SAAU0T,EACVjmB,QAASw2L,EACT7xL,UAAW7F,EAAK,SAEfmnB,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGb,KCxIJy2L,GAAY,EAAIjuL,EAAAA,EA4JtB,IAAerK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,eAAEg2L,IAAmB31L,EAAAA,EAAAA,KAAeL,GAK1C,MAAO,CACLgkB,KALWgyK,GAAgBt4L,QAASwlC,EAAAA,EAAAA,KAAWljC,EAAQg2L,EAAet4L,aAAU1K,EAMhFuoD,MALYy6I,GAAgBt4L,QAAUs4L,GAAgB54I,SACpDwjE,EAAAA,EAAAA,KAAY5gH,EAAQg2L,EAAet4L,OAAQs4L,EAAe54I,cAAWpqD,EAKvEgjM,iBACAtlK,sBAAsB0B,EAAAA,EAAAA,KAA2BpyB,GAClD,GAZeD,EA7IyB7H,IAOvC,IAPwC,SAC5C8S,EAAQ,KACRgZ,EAAI,MACJu3B,EAAK,eACLy6I,EAAc,qBACdtlK,EAAoB,QACpB3zB,GACD7E,EACC,MAAM,UAAE+9L,EAAS,iBAAEzjK,IAAqBt1B,EAAAA,EAAAA,OACjCmB,EAAO8mJ,IAAY9nJ,EAAAA,EAAAA,IAAS,KAC5Bk4L,EAAaC,IAAkBn4L,EAAAA,EAAAA,SAA6BrK,GAC7DiL,GAAOC,EAAAA,EAAAA,KAEPknB,EAAYnpB,QAAQ+5L,GAAgB5wK,WACpC8wK,EAAY36I,GAAOrmD,KAAOihM,EAAAA,KAEhC16K,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGVvB,EAAAA,EAAAA,KAAU,KACHwP,IACHm6I,EAAS,IACTqwC,OAAexiM,GACjB,GACC,CAACgY,KAEJxP,EAAAA,EAAAA,KAAU,MACJ+/C,GAAOl9C,OAASk9C,GAAOg6I,eACzBpwC,EAAS5pG,EAAMl9C,OACfm3L,EAAej6I,EAAMg6I,aACvB,GACC,CAACh6I,IAEJ,MAAM6rE,GAAYruH,EAAAA,EAAAA,KAAQ,IACjBsF,IAAUk9C,GAAOl9C,OAASk3L,IAAgBh6I,GAAOg6I,aACvD,CAACA,EAAal3L,EAAOk9C,GAAOg6I,YAAah6I,GAAOl9C,QAE7CqnJ,GAAoB7lJ,EAAAA,EAAAA,KAAa9B,IACrC,MAAMq4L,EAAWr4L,EAAEC,OAAOH,MAC1BsnJ,EAASixC,EAAS,GACjB,IAEGC,GAAkBx2L,EAAAA,EAAAA,KAAY,KAClCo2L,EAAU,CACRv4L,OAAQsmB,EAAM9uB,GACdmJ,QACA++C,QAAS7B,EAAOrmD,GAChBqgM,eACA,GACD,CAACvxK,EAAMiyK,EAAWV,EAAal3L,EAAOk9C,IAEnCupI,GAA0BjlL,EAAAA,EAAAA,KAAao7E,IACtCA,EAAMyV,QAAWhgE,GAAwBuqD,EAAM/lF,KAAO2gG,EAAAA,IAKvD5a,EAAM/lF,KAAO2gG,EAAAA,IAKjB2/F,EAAev6G,EAAM/lF,IAJnBsgM,EA1EgB,KAqEhBhjK,EAAiB,CAAEQ,eAAgB,kBASb,GACvB,CAACtC,EAAsB8B,IAEpBqjK,GAAa98L,EAAAA,EAAAA,KAAQ,KAClB,IACFwiD,EACHl9C,QACAk3L,iBAED,CAACA,EAAal3L,EAAOk9C,IAExB,GAAKv3B,GAAM83B,QAIX,OACEx9C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,IACd1Q,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAgB,mBAC3CusC,GAASj9C,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MAClB5B,GACCj9C,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAgBA,GAAYknL,GFhIe,aEiIxE53L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAWuQ,IAAiB/Q,EAAKi4L,EAAY,0BAA4B,qBAC/E53L,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTxuB,KAAK,WACLyuB,UAAW9W,OAAOu/K,EAAWN,cAAgB,EAC7CO,eAAa,EACb54K,UAAW,EACXze,UAAWuQ,IAEX1Q,EAAAA,GAAA7K,cAAC4pD,GAAAA,EAAS,CACR9B,MAAOs6I,EACPp3L,UAAWuQ,GACXrT,KAAMu5L,GACNa,aAAW,KAGfz3L,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRlB,MAAOQ,EACPQ,SAAU6mJ,EACVtnJ,MAAOH,EAAK,yBACZyT,SAAU0T,EACVuU,2BAAyB,MAG3Bu8J,GACA53L,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAgBA,KAC7C1Q,EAAAA,GAAA7K,cAACwpG,GAAiB,CAChBtR,SAAS,wBACThlF,UAAWqE,EACXynF,YAAaznF,EACb6uF,oBAAqBirF,EACrBrmL,UAAWuQ,GACX2qF,oBAAoB,qBACpBC,uBAAqB,OAOjCt7F,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASuwF,EACT11G,SAAU0T,EACVjmB,QAASk3L,EACTvyL,UAAW7F,EAAK,SAEfmnB,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGb,KC9HJ63L,GAAqB,sBAoM3B,IAAe15L,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEwqB,GAAQxqB,EACjB,MAAMq/B,GAAO4qE,EAAAA,EAAAA,KAAU5tG,EAAQmuB,GACzBiiC,GAAeC,EAAAA,EAAAA,KAAmBrwD,EAAQmuB,IAC1C,SAAE9oB,IAAahF,EAAAA,EAAAA,KAAeL,GAAQu2L,WACtCz5D,GAAetW,EAAAA,GAAAA,GAAmBxmH,EAAQ,eAEhD,MAAO,CACLmuB,SACA6U,OACA39B,WACA+3H,WAAYhtE,GAAcitE,IAC1BP,eACD,GAbe/8H,EAlMyB7H,IAQvC,IARwC,OAC5Ci2B,EAAM,KACN6U,EAAI,SACJ39B,EAAQ,QACRtI,EAAO,WACPqgI,EAAU,SACVpyH,EAAQ,aACR8xH,GACD5kI,EACC,MAAM,WACJs+L,EAAU,mBACV98C,EAAkB,0BAClB+8C,EAAyB,2BACzBC,IACEx5L,EAAAA,EAAAA,OAEGy5L,EAAgBC,EAAkBC,IAAwB10L,EAAAA,EAAAA,IAAQ,IAClE20L,EAAiBC,EAAmBC,IAAuB70L,EAAAA,EAAAA,IAAQ,IACnEo+C,EAAOs9E,IAAYxgI,EAAAA,EAAAA,MACpBY,GAAOC,EAAAA,EAAAA,KAEPu8H,GAAW1hI,EAAAA,EAAAA,KAAQ,IAAOiqC,GAAO41G,EAAAA,EAAAA,KAAgB51G,QAAQhwC,GAAY,CAACgwC,KAE5EvnB,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAGV,MAAMk6L,EAAcj0J,GAAOyc,EAAAA,EAAAA,KAAuBzc,GAAQ,IAEnD5wC,EAAO0rI,IAAYzgI,EAAAA,EAAAA,OACnBsB,EAAMu4L,IAAW75L,EAAAA,EAAAA,IAAS45L,GAAe,KACzC55D,EAAKU,IAAU1gI,EAAAA,EAAAA,IAAS+/H,GAAc,IAEvCF,EAAoBl6F,IAAQm6F,EAAAA,EAAAA,KAAkBn6F,GAC9Ck7F,GAAuB7kI,EAAAA,EAAAA,GAAS6jI,GAAmB,EAAO5jI,EAAAA,GAAeC,UAE/EiC,EAAAA,EAAAA,KAAU,KACRq7L,IACAG,GAAqB,GACpB,CAAC7oK,KAEJ3yB,EAAAA,EAAAA,KAAU,KACR07L,EAAQD,GAAe,IACvBl5D,EAAOX,GAAc,GAAG,GACvB,CAAC65D,EAAa75D,EAAYp6F,KAE7BxnC,EAAAA,EAAAA,KAAU,KACRsiI,OAAS9qI,EAAU,GAClB,CAACkrI,KAEJ1iI,EAAAA,EAAAA,KAAU,KACJ6J,IAAa8xL,EAAAA,GAAmB34D,WAClCq4D,IACAG,IACAn5D,OAAS7qI,GACX,GACC,CAACqS,IAEJ,MAAM+xL,GAAmB35L,EAAAA,EAAAA,IAAiBM,IACxCm5L,EAAQn5L,EAAEC,OAAOH,OACjB+4L,IAEIr2I,IAAU+1I,IACZz4D,OAAS7qI,EACX,IAGI2rI,GAAkBlhI,EAAAA,EAAAA,IAAiBM,IACvCggI,EAAOhgI,EAAEC,OAAOH,OAChB+4L,GAAkB,IAGdn4D,GAAoBhhI,EAAAA,EAAAA,IAAiBihI,IACzCZ,EAASY,GACTq4D,GAAmB,IAGfn4D,GAAoBnhI,EAAAA,EAAAA,IAAgB,KACxC,MAAM45L,EAAc14L,EAAK06D,OACnB0lE,EAAa1B,EAAIhkE,OAElBg+H,EAAYvlM,QAKjB0kM,EAAW,IACLG,GAAkB,CACpBx2I,IAAKnd,EACLrkC,KAAM04L,EACN/5L,YAAayhI,KAIb3sI,GACFsnJ,EAAmB,CACjBtZ,KAAMhuI,KACF0kM,GAAmB,CAAE32I,IAAKnd,MAfhC66F,EAASy4D,GAiBX,IAGIgB,GAAwB75L,EAAAA,EAAAA,IAAgB,KAC5Ci5L,EAA2B,CAAE1J,MAAQ,GAAEvyD,WAAmB,IAGtD88D,GAA2B95L,EAAAA,EAAAA,IAAgB,KAC/Ci5L,EAA2B,CAAE1J,MAAQ,GAAEvyD,cAAsB,IAGzD+8D,GAAuB/5L,EAAAA,EAAAA,IAAgB,KAC3Ci5L,EAA2B,CAAE1J,MAAQ,GAAEvyD,KAAa,IAIhD9wE,GAAWtvD,EAAAA,EAAAA,IAAyB,MACpCo9L,GAAep9L,EAAAA,EAAAA,KAAO,GAEtBq9L,GAAqBj6L,EAAAA,EAAAA,IAAiB2iI,IAC1C22D,IACAN,EAA0B,CAAEtoK,SAAQiyG,OAAMu3D,UAAWF,EAAaj9L,SAAU,IAG9E,IAAKwoC,EACH,OAGF,MAAM5d,EAAY/f,IAAa8xL,EAAAA,GAAmB/4D,WAElD,OACE9/H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACurI,GAAAA,EAAc,CACbd,qBAAsBA,EACtBr/H,SAAU4/H,EACVpgI,MAAOJ,EAAK,uBACZyT,SAAU0T,IAEZ9mB,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR7J,GAAG,YACHkJ,MAAOH,EAAK,uBACZY,SAAUu4L,EACVv5L,MAAOc,EACP4hD,MAAOA,IAAU+1I,GAAqB/1I,OAAQvtD,EAC9C2mC,2BAAyB,IAE3Br7B,EAAAA,GAAA7K,cAAC+1G,GAAAA,EAAQ,CACP3rG,MAAOw/H,EACPx+H,SAAU8/H,EACVvgI,MAAOH,EAAK,0BACZyT,SAAU0T,EACVgpD,UAAW0uD,EACXpzB,mBAAoBozB,GAAgBA,EAAeO,EAAIvrI,QAAQ+jF,gBAAa7iF,KAGhFsL,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,sBAAsB0M,QAAM,EAAC9R,QAASm4L,GACnDh5L,EAAAA,GAAA7K,cAAA,YAAOwK,EAAK,kBAEdK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,cAAc0M,QAAM,EAAC9R,QAASo4L,GAC3Cj5L,EAAAA,GAAA7K,cAAA,YAAOwK,EAAK,qBAEdK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,OAAO0M,QAAM,EAAC9R,QAASq4L,GACpCl5L,EAAAA,GAAA7K,cAAA,YAAOwK,EAAK,uBAEdK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mCACZgmB,EAAAA,GAAAA,GAAWxmB,EAAK,iBAAkB,CAAC,cAK5CK,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAAS8/J,GAAkBG,EAC3B33L,QAASy/H,EACTltH,SAAU0T,EACVthB,UAAW7F,EAAK,SAEfmnB,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,WAGfL,EAAAA,GAAA7K,cAAC0mJ,GAAAA,EAAY,CACXt7I,SAAU64L,EACV/tI,SAAUA,IAER,KCtMJiuI,GAAsB,+BA2S5B,IAAeh7L,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMqgB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,IAC1B,WAAE64L,IAAel2L,EAAAA,EAAAA,KAAeL,IAChC,SAAEqF,GAAakxL,GACf,QAAE7tE,GAAY6tE,EAAW56E,SAASj+G,IAAW,CAAC,EAEpD,MAAO,CACLsmB,OACAk9D,cAAcC,EAAAA,EAAAA,KAAmBnhF,EAAQtC,GACzC2H,WACAwyL,eAAe5pF,EAAAA,EAAAA,KAAiBjqF,EAAM,cACtC8zK,WAAW7pF,EAAAA,EAAAA,KAAiBjqF,EAAM,eAClC+zK,gBAAiBrvE,EACjB12E,mBAAoBhyC,EAAOiyC,UAAUD,mBACtC,IAEH,CAAChyC,EAAMiF,KAAiB,IAAf,OAAEvH,GAAQuH,EACjB,OAAOhJ,SAAQinC,EAAAA,EAAAA,KAAWljC,EAAQtC,GAAQ,GAlB1BqC,EAxS6B7H,IAY3C,IAZ4C,OAChDwF,EAAM,KACNsmB,EAAI,aACJk9D,EAAY,SACZ77E,EAAQ,cACRwyL,EAAa,UACbC,EAAS,gBACTC,EAAe,SACf/sL,EAAQ,mBACRgnC,EAAkB,eAClBu8E,EAAc,QACdxxH,GACD7E,EACC,MAAM,WACJ8/L,EAAU,gBACVC,EAAe,aACfC,EAAY,cACZC,EAAa,SACb/6J,EAAQ,wBACRg7J,EAAuB,qBACvBC,IACEn7L,EAAAA,EAAAA,MAEEo7L,EAAet0K,GAAM3lB,OAAS,GAC9Bk6L,EAAer3G,GAAcwjB,OAAS,GACtC4G,EAAgBrvG,QAAQilF,GAAcqqB,eAErCitF,EAAoBC,EAAkBC,IAAqBv2L,EAAAA,EAAAA,MAC3Dw7H,EAAwBC,IAA6BvgI,EAAAA,EAAAA,KAAS,IAC9DgB,EAAO8mJ,IAAY9nJ,EAAAA,EAAAA,IAASi7L,IAC5B5zF,EAAO0gD,IAAY/nJ,EAAAA,EAAAA,IAASk7L,IAC5BnmM,EAAO0rI,IAAYzgI,EAAAA,EAAAA,OACnBkjD,EAAOs9E,IAAYxgI,EAAAA,EAAAA,MACpBoxC,EAAYzqB,IAAQm5G,EAAAA,EAAAA,KAAkBn5G,GACtCk6G,GAAuB7kI,EAAAA,EAAAA,GAASo1C,GAAW,EAAOn1C,EAAAA,GAAeC,SACjE0E,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGVvB,EAAAA,EAAAA,KAAU,KACHs8L,IACLM,EAAwB,CAAE16L,WAC1B06L,EAAwB,CAAE16L,SAAQi7L,WAAW,IAC7CN,EAAqB,CAAE36L,WAAS,GAC/B,CAACA,EAAQo6L,KAEZt8L,EAAAA,EAAAA,KAAU,KACJ6J,IAAa8xL,EAAAA,GAAmB34D,WAClCZ,GAA0B,GAC1BC,OAAS7qI,GACX,GACC,CAACqS,IAEJ,MAAMuzL,GAAc7/L,EAAAA,EAAAA,KAAQ,IACnB83C,OAAO4K,KAAKylC,GAAcG,kBAAoB,CAAC,GAAGvvF,QACxD,CAACovF,GAAcG,mBACZw3G,EAAoB33G,GAAc43G,eAAehnM,QAAU,EAE3DinM,GAAsBl5L,EAAAA,EAAAA,KAAY,KACtC0uH,EAAeyqE,EAAAA,GAAkBC,gBAAgB,GAChD,CAAC1qE,IAEE2qE,GAAwBr5L,EAAAA,EAAAA,KAAY,KACxC0uH,EAAeyqE,EAAAA,GAAkBG,WAAW,GAC3C,CAAC5qE,IAEE6qE,GAAuBv5L,EAAAA,EAAAA,KAAY,KACvC0uH,EAAeyqE,EAAAA,GAAkBK,UAAU,GAC1C,CAAC9qE,IAEE+qE,GAA4Bz5L,EAAAA,EAAAA,KAAY,KAC5C0uH,EAAeyqE,EAAAA,GAAkBO,mBAAmB,GACnD,CAAChrE,IAEEirE,GAAqB35L,EAAAA,EAAAA,KAAY,KACrC0uH,EAAeyqE,EAAAA,GAAkBS,QAAQ,GACxC,CAAClrE,IAEEmrE,IAAsB75L,EAAAA,EAAAA,KAAY,KACtC0uH,EAAeyqE,EAAAA,GAAkBW,aAAa,GAC7C,CAACprE,IAEEqrE,IAAiB/5L,EAAAA,EAAAA,KAAaugI,IAClCtC,EAASsC,GACTxC,GAA0B,EAAK,GAC9B,IAEG8nB,IAAoB7lJ,EAAAA,EAAAA,KAAa9B,IACrConJ,EAASpnJ,EAAEC,OAAOH,OAClB+/H,GAA0B,EAAK,GAC9B,IAEGi8D,IAAoBh6L,EAAAA,EAAAA,KAAa9B,IACrCqnJ,EAASrnJ,EAAEC,OAAOH,OAClB+/H,GAA0B,EAAK,GAC9B,IAEGk8D,IAAsBj6L,EAAAA,EAAAA,KAAY,KACtC,MAAMk6L,EAAe17L,EAAMg7D,OACrB2gI,EAAet1F,EAAMrrC,OAEtB0gI,EAAajoM,OAKlBkmM,EAAW,CACTt6L,SACAW,MAAO07L,EACPr1F,MAAOs1F,EACP5nM,UARAyrI,EAAS+5D,GAST,GACD,CAAClzF,EAAOhnG,EAAQtL,EAAOiM,EAAO25L,IAE3BiC,IAAyBp6L,EAAAA,EAAAA,KAAY,KACzC0uH,EAAeyqE,EAAAA,GAAkBkB,mBAAmB,GACnD,CAAC3rE,IAEE4rE,IAA0Bt6L,EAAAA,EAAAA,KAAY,KAC1C0uH,EAAeyqE,EAAAA,GAAkBoB,oBAAoB,GACpD,CAAC7rE,IAEE8rE,IAAsBx6L,EAAAA,EAAAA,KAAY,KAClCmkB,EAAKgqF,UACPmqF,EAAc,CAAEz6L,OAAQsmB,EAAK9uB,KAE7BgjM,EAAa,CAAEx6L,OAAQsmB,EAAK9uB,KAG9BwjM,IACAT,IACA76J,EAAS,CAAEloC,QAAIlC,GAAY,GAC1B,CAACgxB,EAAKgqF,UAAWhqF,EAAK9uB,GAAIwjM,EAAmBT,EAAiBC,EAAcC,EAAe/6J,IAExFk9J,IAA2BvhM,EAAAA,EAAAA,KAAQ,KACvC,IAAKmoF,GAAcgrE,iBACjB,OAAOjuJ,EAAK,gBAGd,GAA2C,QAAvCijF,EAAagrE,iBAAiBx6J,KAChC,OAAOuM,EAAK,gBAGd,MAAMs8L,EAAgBr5G,EAAagrE,iBAAiBohB,QAAQx7K,OACtD0oM,EAAcxoJ,GAAoB/jB,QAAQ6T,IAAcA,EAAS+4D,aAAY/oG,QAAU,EAE7F,OAAO0oM,EAAe,GAAED,OAAmBC,IAAiB,GAAED,GAAe,GAC5E,CAACvoJ,EAAoBkvC,GAAcgrE,iBAAkBjuJ,IAClDw8L,IAAkB1hM,EAAAA,EAAAA,KAAQ,KAAMunF,EAAAA,EAAAA,KAAat8D,IAAO,CAACA,IAE3D,GAAIA,EAAKs5I,cAAgBt5I,EAAK4xI,YAC5B,OAGF,MAAMxwI,GAAY/f,IAAa8xL,EAAAA,GAAmB/4D,WAElD,OACE9/H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACurI,GAAAA,EAAc,CACbd,qBAAsBA,EACtBr/H,SAAU+6L,GACVloL,UAAWmmL,IAEbv5L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR7J,GAAG,gBACHkJ,MAAOH,EAAK,oBACZY,SAAU6mJ,GACV7nJ,MAAOQ,EACPkiD,MAAOA,IAAUq3I,GAAsBr3I,OAAQvtD,EAC/C0e,UAAWmmL,IAEbv5L,EAAAA,GAAA7K,cAAC+1G,GAAAA,EAAQ,CACPt0G,GAAG,gBACHkJ,MAAOH,EAAK,0BACZY,SAAUg7L,GACVh8L,MAAO6mG,EACPt2B,UAxLkB,IAyLlBs7B,oBAzLkB,IAyL6BhF,EAAM5yG,QAAQ+jF,WAC7DnkE,UAAWmmL,EACXluF,mBAAiB,KAGpB3lF,EAAKgqF,WACJ1vG,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,OAAO6uB,WAAS,EAACj0B,QAAS45L,GACvCz6L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,gBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAA8BR,EAAlBw8L,GAAuB,aAAqB,iBAG5En8L,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,UACL6uB,WAAS,EACTj0B,QAAS+5L,EACTxnL,UAAWmmL,GAEXv5L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,eAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAA4BR,EAAhBqtG,EAAqB,mBAA2B,SAE7EwsF,GACCx5L,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,OACLpF,QAASq6L,EACTpmK,WAAS,EACT1hB,UAAWqmL,GAEXz5L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,0BAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YACbs5L,GAAkB2C,EAAAA,GAAAA,IAAc3C,EAAgBjmM,QAAUmM,EAAK,aAIrEhC,QAAQ+nB,EAAK22K,cAAc7oM,SAC1BwM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,kBACLpF,QAASu6L,GACTtmK,WAAS,GAET90B,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,sBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,aACbi8L,EAAAA,GAAAA,IAAc12K,EAAK22K,aAAc7oM,UAIxCwM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,gBACL6uB,WAAS,EACTj0B,QAASi6L,EACT1nL,UAAWmmL,GAEXv5L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,cAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B4yL,MAIPh8L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,QACL6uB,WAAS,EACTj0B,QAASm6L,GAETh7L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,0BAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAYm6L,IAE9Bt6L,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,QACL6uB,WAAS,EACTj0B,QAAS86L,IAET37L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,QAAQiJ,IAAI,QAAQzJ,EAAK,uBACzCK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,SAAQgzL,EAAAA,GAAAA,IAAc12K,EAAK4wI,gBAE5Dt2J,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,cACL6uB,WAAS,EACTj0B,QAASg7L,IAET77L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,wBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAYo6L,KAGhCv6L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,SAAS0M,QAAM,EAACrM,aAAW,EAACzF,QAASs5L,GACjDz0K,EAAKgqF,UAAY/vG,EAAK,iBAAmBA,EAAK,mBAIrDK,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAAS8mG,EACTx+H,QAAS26L,GACTpoL,SAAU0T,GACVthB,UAAW7F,EAAK,SAEfmnB,GACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGjBH,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ27L,EACRz7L,QAAS27L,EACTvyL,KAAM6d,EAAKgqF,UAAY/vG,EAAK,sBAAwBA,EAAK,qBACzDi2B,aAAclQ,EAAKgqF,UAAY/vG,EAAK,iBAAmBA,EAAK,gBAC5Dk2B,eAAgBkmK,GAChBjmK,sBAAoB,IAElB,KC/JV,IAAex3B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMqgB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAChC,MAAO,CACLsmB,OACAc,cAAe9kB,EAAO8kB,cACtBb,UAAWD,IAAQE,EAAAA,EAAAA,KAAcF,GACjCq9D,kBAAkBF,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAAS2jF,iBACvD,GARethF,EAtJwC7H,IAStD,IATuD,SAC3D8S,EAAQ,KACRgZ,EAAI,UACJC,EAAS,cACTa,EAAa,iBACbu8D,EAAgB,eAChBktC,EAAc,mBACdqsE,EAAkB,QAClB79L,GACD7E,EACC,MAAM,iBAAE2iM,IAAqB39L,EAAAA,EAAAA,MACvBe,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAGV,MAAM+9L,EAAuB7+L,QAAQ+nB,GAAM+2K,oBACrCC,EAAqB/+L,QAAQ+nB,GAAMi3K,kBAEnCC,EAAkBj/L,QAAQ+nB,GAAMgqF,WAAchqF,IAAQiqF,EAAAA,EAAAA,KAAiBjqF,EAAM,cAC7Em3K,EAAsBl3K,IAAagqF,EAAAA,EAAAA,KAAiBjqF,EAAO,gBAE3Do3K,GAAeriM,EAAAA,EAAAA,KAAQ,KAC3B,IAAKsoF,EACH,MAAO,GAGT,MAAOx+D,EAAOw4K,IAAU1tE,EAAAA,GAAAA,IAAU98E,OAAOwK,OAAOgmC,IAAoBgyF,GAAWA,EAAO9jE,UAEtF,MAAO,IAAI1sF,KAAUw4K,EAAO,GAC3B,CAACh6G,IAEEi6G,GAAyB79L,EAAAA,EAAAA,IAAiB41K,IAC9CunB,EAAmBvnB,EAAOllJ,OAAQklJ,EAAOkoB,mBAAqBz2K,GAC9DypG,EAAeyqE,EAAAA,GAAkBwC,gBAAgB,IAG7CC,GAAyBh+L,EAAAA,EAAAA,IAAgB,KAC7Co9L,EAAiB,CACfn9L,OAAQsmB,EAAM9uB,GACd8lM,qBACAF,sBAAuBA,GACvB,IAGEY,GAAuBj+L,EAAAA,EAAAA,IAAgB,KAC3Co9L,EAAiB,CACfn9L,OAAQsmB,EAAM9uB,GACd8lM,oBAAqBA,EACrBF,wBACA,IAGEa,GAAsBl+L,EAAAA,EAAAA,IAAgB,KAC1C8wH,EAAeyqE,EAAAA,GAAkB4C,eAAe,IAG5CC,GAAkBp+L,EAAAA,EAAAA,IAAiB41K,IACvC,GAAIA,EAAO9jE,QACT,OAAOtxG,EAAK,kBAId,MAAMq2B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KAC9BykK,EAAiBzoB,EAAOkoB,iBAAmBjnK,EAAU++I,EAAOkoB,uBAAoBvoM,EAEtF,OAAI8oM,EACK79L,EAAK,uBAAuBm8B,EAAAA,EAAAA,KAAgB0hK,IAG9C79L,EAAK,eAAe,IAG7B,OACEK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,SACL6uB,WAAS,EACT1hB,UAAQ,GAERpT,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,aAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAYR,EAAKgmB,EAAY,4BAA8B,yBAI/E3lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACjDsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,eAAeiJ,IAAI,QAC7BzJ,EAAKgmB,EACF,sCACA,sCAGLm3K,EAAap2L,KAAKquK,GACjB/0K,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKkuK,EAAOllJ,OACZ1vB,UAAU,sBAEVU,QAASA,IAAMm8L,EAAuBjoB,IAEtC/0K,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQklJ,EAAOllJ,OACf8kB,OAAQ4oJ,EAAgBxoB,GACxB59I,eAAa,OAKnBn3B,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASqkK,EACT/7L,QAASw8L,EACT73L,UAAW7F,EAAK,oCAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,gCAIhB08L,GACC78L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPrqB,QAASuhK,EACT18L,MAAOH,EAAK,uBACZY,SAAU48L,KAGbX,GACCx8L,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPrqB,QAASyhK,EACT58L,MAAOH,EAAK,kCACZY,SAAU68L,KAGdp9L,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,kCACVR,EAAK,+BAOd,KCoHV,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA6B,IAA3B,OAAEvC,GAAQuC,EACjB,MAAM+jB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,IAC1B,oBAAE69H,EAAmB,gBAAEC,EAAe,MAAEj7E,IAAUw7I,EAAAA,EAAAA,IAAiB/7L,EAAQtC,GAEjF,MAAO,CACLsmB,OACAC,WAAWC,EAAAA,EAAAA,KAAcF,GACzB3e,UAAUhF,EAAAA,EAAAA,KAAeL,GAAQu2L,WAAWlxL,SAC5Ck7C,QACAg7E,sBACAC,kBACA56H,YAAaojB,GAAMpjB,YACnBo7L,gBAAgBx1E,EAAAA,GAAAA,GAAmBxmH,EAAQ,kBAC3Ci8L,mBAAmB96G,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAASw+L,WACxD,IAEH,CAACl8L,EAAMwhB,KAAiB,IAAf,OAAE9jB,GAAQ8jB,EACjB,OAAOvlB,SAAQinC,EAAAA,EAAAA,KAAWljC,EAAQtC,KAAWq+L,EAAAA,EAAAA,IAAiB/7L,EAAQtC,GAAQ,GAlB9DqC,EApPqC7H,IAYnD,IAZoD,KACxD8rB,EAAI,SACJhZ,EAAQ,UACRiZ,EAAS,SACT5e,EAAQ,oBACRk2H,EAAmB,gBACnBC,EAAe,MACfj7E,EAAK,YACL3/C,EAAW,eACXo7L,EAAc,kBACdC,EAAiB,QACjBl/L,GACD7E,EACC,MAAM,iBACJikM,EAAgB,kBAChBC,EAAiB,kBACjBC,EAAiB,sBACjBz1E,EAAqB,qBACrB01E,IACEp/L,EAAAA,EAAAA,MAEEsgI,GAAwBzkI,EAAAA,EAAAA,KAAQ,IAAMirB,EAAK4jB,WAAW5D,MAAKrgC,IAAA,IAAC,WAAEo3H,GAAYp3H,EAAA,OAAKo3H,CAAU,KAAG,CAAC/2G,EAAK4jB,YAClGyzF,EAAkBmC,GAAuB/C,UAAY,GACrDp5F,GAAWtoC,EAAAA,EAAAA,KAAQ,KAAMunF,EAAAA,EAAAA,KAAat8D,IAAO,CAACA,KAE7C25G,EAAwBC,IAA6BvgI,EAAAA,EAAAA,KAAS,IAC9Dk/L,EAAaC,IAAkBn/L,EAAAA,EAAAA,IAAsBgkC,EAAW,SAAW,YAC3E28F,EAAkBC,IAAuB5gI,EAAAA,EAAAA,OACzCo/L,EAA2BC,EAAyBC,IAA4Bx6L,EAAAA,EAAAA,MAChFy6L,EAA0BC,EAAwBC,IAA2B36L,EAAAA,EAAAA,KAE9E05H,GAA8B/0G,EAAAA,EAAAA,GAAsBy0G,GAGpD/5H,EAAYm8H,GAA0B1hI,QACzB,WAAhBsgM,IACKv+D,GAAqB3C,GAAwC,KAArB2C,KAJXzC,GAAuBM,IAMtC,YAAhB0gE,GAA6Bl7J,IAGnC5lB,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGVvB,EAAAA,EAAAA,KAAU,KACRoiI,GAA0B,EAAM,GAC/B,CAACvC,KAEJ7/H,EAAAA,EAAAA,KAAU,KACJ+gM,IAAgBN,GAClBG,GACF,GACC,CAACG,EAAaN,EAAmBG,IAEpC,MAAM9/D,GAAuBz8H,EAAAA,EAAAA,KAAahC,IACxCogI,EAAoBpgI,GACpB+/H,GAA0B,GAEtBr9E,GACF+7I,EAAqB,CACnB5+L,OAAQsmB,EAAK9uB,IAEjB,GACC,CAAC8uB,EAAK9uB,GAAIqrD,IAEPw8I,GAAqBl9L,EAAAA,EAAAA,KAAY,CAAChC,EAAeE,KAIrD,GAHgB8yC,OAAOwK,QAAO5Z,EAAAA,EAAAA,MAAYwZ,MAAM5jB,MAC7CpJ,QAAOhpB,IAAA,IAAC,UAAE+oG,EAAS,UAAEpmE,GAAW3iC,EAAA,OAAK+oG,GAAapmE,GAAW8yD,MAAMsiG,GAAMA,EAAEhyL,UAAS,IAE3ElZ,QAAUkqM,GAA4B,WAAVn+L,EAAoB,CAC1D+oH,EAAsB,CAAEzmG,MAAO,mBAC/B,MAAM88K,EAAal/L,EAAE2X,cAAczgB,QAAQ,gBAK3C,OAFCgoM,EAAWxoM,cAAc,kBAAuC8kC,SAAU,OAC1E0jK,EAAWxoM,cAAc,mBAAwC8kC,SAAU,EAE9E,CACAijK,EAAe3+L,GACf+/H,GAA0B,EAAK,GAC9B,CAACo+D,EAAgBp1E,IAEds2E,GAA+Br9L,EAAAA,EAAAA,KAAahC,IAChDw+L,EAAkB,CAChB3+L,OAAQsmB,EAAK9uB,GACb0L,YAAuB,cAAV/C,GACb,GACD,CAACmmB,EAAK9uB,GAAImnM,IAEPc,GAAat9L,EAAAA,EAAAA,KAAY,KACzBwhC,GAA4B,YAAhBk7J,EACdM,IAEAV,EAAiB,CAAE1hE,SAA0B,WAAhB8hE,GAA4Bv+D,GAA0B,IACrF,GACC,CAAC38F,EAAUw7J,EAAwBN,EAAaJ,EAAkBn+D,IAE/Do/D,GAAkCv9L,EAAAA,EAAAA,KAAY,KAClDs8L,EAAiB,CAAE1hE,SAAU,GAAI4iE,wBAAwB,IACzDP,GAAyB,GACxB,CAACA,EAAyBX,IAEvBmB,GAA0Bz9L,EAAAA,EAAAA,KAAY,KAC1C88L,IACAP,GAAmB,GAClB,CAACO,EAA0BP,IAExBn+L,GAAOC,EAAAA,EAAAA,KACPq/L,EAAct5K,EAAY,UAAY,OACtCu5K,EAAcv5K,EAAY,UAAY,QAEtCrlB,EAAU,CACd,CAAEf,MAAO,UAAWO,MAAOH,EAAM,GAAEs/L,YAAuB1/G,SAAU5/E,EAAM,GAAEs/L,iBAC5E,CAAE1/L,MAAO,SAAUO,MAAOH,EAAM,GAAEs/L,WAAsB1/G,SAAU5/E,EAAM,GAAEs/L,iBAGtEE,EAAoB,CAAC,CACzB5/L,MAAO,UACPO,MAAOH,EAAK,yCACX,CACDJ,MAAO,YACPO,MAAOH,EAAK,2CAGRmnB,GAAY/f,IAAa8xL,EAAAA,GAAmB/4D,WAC5CE,GAA8C,WAAhBi+D,GAA4Bv4K,EAAK4jB,WAAa5jB,EAAK4jB,UAAU91C,OAAS,EAiB1G,OACEwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACjDsL,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,mBAAmBR,EAAM,GAAEu/L,UACzCl/L,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTI,SAAUy9L,EACV59L,KAAK,eACLC,QAASA,EACTC,SAAUk+L,KAGG,YAAhBR,EACCj+L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAChDipM,EACC39L,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAC2yG,GAAAA,EAAQ,CAACv9F,IAAKozL,EAAmBx9L,UAAU,aAAa0H,KAAM81L,IAC/D39L,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,eAAeiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACnDiL,EAAM,GAAEs/L,qBAGXj/L,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,SAAS0M,QAAM,EAACrM,aAAW,EAACzF,QAASu9L,GACjDz+L,EAAK,eAERK,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ4/L,EACR1/L,QAAS4/L,EACTx2L,KAAMlI,EAAK,eACXi2B,aAAcj2B,EAAK,gBACnBk2B,eAAgBmpK,EAChBlpK,sBAAoB,KAIxB91B,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,OAIZ7+C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qBACbH,EAAAA,GAAA7K,cAACwrI,GAAa,CACZ3D,QAAM,EACND,gBAAiBA,EACjBj2G,UAAWA,GACXm2G,oBAAqBA,EACrBC,gBAAiBA,EACjB38H,SAAUy9H,IAEX/7E,IAAU2+E,EAAAA,KA9DrB,WACE,MAAMC,EAAoB,GAAExmE,EAAAA,MAAkBymE,EAAAA,MAE9C,OACE9gI,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,eAAeiJ,IAAI,QAC5BzJ,EAAK,mCACJgqD,QAAQ,SAAU,mBAClBijB,MAAM,KACNlmE,KAAKizC,GACU,kBAANA,EAAwB35C,EAAAA,GAAA7K,cAAC2yG,GAAAA,EAAQ,CAACv9F,IAAKs2H,EAAkBh5H,KAAO,IAAGi5H,EAAAA,QAA0BnnF,IAI/G,CAiDgDonF,GACtC/gI,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,eAAeiJ,IAAI,QAC7BzJ,EAAM,GAAEu/L,qCAIdl/D,IACChgI,EAAAA,GAAA7K,cAAC6rI,GAAe,CACd5hI,OAAQsmB,EAAK9uB,GACb0yC,UAAW5jB,EAAK4jB,UAChBqyF,eAAgBqC,IAGpBh+H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACjDsL,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,mBACXR,EAAKgmB,EAAY,4CAA8C,4CAElE3lB,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTI,SAAU8B,EAAc,YAAc,UACtCjC,KAAK,kBACLC,QAAS6+L,EACT5+L,SAAUq+L,IAEZ5+L,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,kCAEPR,EADHgmB,EACQ,2CACA,6CAIf3lB,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASr1B,EACTkQ,SAAU0T,GACVthB,UAAW7F,EAAK,QAChBkB,QAASg+L,GAER/3K,GACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGjBH,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ+/L,EACR7/L,QAAS+/L,EACT32L,KAAMlI,EAAK,gDAAiDo9H,GAC5DlnG,eAAgBipK,EAChBhpK,sBAAoB,IAElB,KCzNV,IAAex3B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA2B,IAAzB,KAAEqgB,GAAMrgB,EACf,MAAM,cAAEmhB,GAAkB9kB,EAE1B,MAAO,CACL8kB,gBACA44K,aAAav8G,EAAAA,EAAAA,KAAmBnhF,EAAQgkB,EAAK9uB,KAAKksF,QACnD,GAPerhF,EAjDoC7H,IAMlD,IANmD,KACvD8rB,EAAI,cACJc,EAAa,YACb44K,EAAW,OACX7gM,EAAM,QACNE,GACD7E,EACC,MAAM,gBACJylM,EAAe,iBACfjvF,IACExxG,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MACNy4C,EAAQqH,IAAa3gD,EAAAA,EAAAA,IAAS,IAE/BugM,GAAU7kM,EAAAA,EAAAA,KAAQ,KACtB,MAAM8kM,GAAsBH,GAAe,IACxCltJ,QAAO,CAAC8K,EAAe+3H,KACjBA,EAAOyqB,SAAYzqB,EAAO9jE,SAAW8jE,EAAOllJ,SAAWrJ,GAC1Dw2B,EAAIh3C,KAAK+uK,EAAOllJ,QAEXmtB,IACN,IAGChnB,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KAEpC,OAAOtC,EAAAA,EAAAA,KAAkB8oK,EAAoBvpK,EAAWqiB,EAAO,GAC9D,CAAC+mJ,EAAa54K,EAAe6xB,IAE1BwhG,GAAmBt4I,EAAAA,EAAAA,KAAasuB,IACpCugF,EAAiB,CAAEhxG,OAAQsmB,EAAK9uB,GAAIi5B,WACpCpxB,GAAS,GACR,CAACinB,EAAK9uB,GAAIw5G,EAAkB3xG,IAE/B,OACEuB,EAAAA,GAAA7K,cAACirD,GAAgB,CACf7hD,OAAQA,EACR08C,cAAeqkJ,EACfpkJ,kBAAmBv7C,EAAK,oBACxB04C,OAAQA,EACR+C,eAAgBsE,EAChBvE,SAAUkkJ,EACVhkJ,mBAAoBw+F,EACpBp7I,QAASA,GACT,KCoDN,IAAeH,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMqgB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,IACxB25B,KAAM/C,GAAct0B,EAAOo3B,MAGnC,MAAO,CACLpT,OACAsQ,YACAypK,iBALuB/5K,KAASiqF,EAAAA,EAAAA,KAAiBjqF,EAAM,aAAeA,EAAKgqF,WAM3EgwF,gBAAgB78G,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAASo7L,eAAiB5jK,GAAAA,EACrEjR,UAAWD,IAAQE,EAAAA,EAAAA,KAAcF,GAClC,GAZejkB,EA3FsC7H,IAQpD,IARqD,KACzD8rB,EAAI,UACJsQ,EAAS,iBACTypK,EAAgB,eAChBC,EAAc,UACd/5K,EAAS,QACTlnB,EAAO,SACPiO,GACD9S,EACC,MAAM,6BAAEy2G,IAAiCzxG,EAAAA,EAAAA,MAEnCe,GAAOC,EAAAA,EAAAA,MACN+/L,EAAuBC,EAAqBC,IAAwBh8L,EAAAA,EAAAA,MAE3EsZ,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAGV,MAAMqhM,GAAev+L,EAAAA,EAAAA,KAAawzK,IAChC,IAAKA,EAAOgrB,eACV,OAGF,MAAMC,EAAehqK,EAAU++I,EAAOgrB,gBACtC,OAAKC,EAIErgM,EAAK,iBAAiBm8B,EAAAA,EAAAA,KAAgBkkK,SAJ7C,CAI2D,GAC1D,CAACrgM,EAAMq2B,IAEJiqK,GAAoB1+L,EAAAA,EAAAA,KAAawzK,IACrC,GAAKrvJ,EAIL,MAAO,CAAC,CACN3lB,MAAOJ,EAAK,WACZsG,KAAM,SACNK,aAAa,EACbiuC,QAASA,IAAM87D,EAA6B,CAC1CjxG,OAAQsmB,EAAK9uB,GACbi5B,OAAQklJ,EAAOllJ,OACfuiF,aAAc,CAAC,KAEjB,GACD,CAACzyG,EAAM+lB,EAAM2qF,IAEhB,OACErwG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GACjDsL,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,gBAAgBR,EAAKgmB,EAAY,oBAAsB,oBAEnE+5K,EAAeh5L,KAAKquK,GACnB/0K,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKkuK,EAAOllJ,OACZ1vB,UAAU,sBACVwS,QAAM,EACNuhC,eAAgB+rJ,EAAkBlrB,IAElC/0K,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQklJ,EAAOllJ,OACf8kB,OAAQmrJ,EAAa/qB,GACrB59I,eAAa,OAIlBsoK,GACCz/L,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,SAAO,EACP13B,QAAS++L,EACTp6L,UAAW7F,EAAK,0CAEhBK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,+BAGhBulB,GAAQ+5K,GACPz/L,EAAAA,GAAA7K,cAAC+qM,GAAoB,CACnBx6K,KAAMA,EACNnnB,OAAQohM,EACRlhM,QAASohM,MAKb,KCuKV,IAAevhM,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMqgB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,IAC1B,aAAE6tG,IAAiBpqB,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAAW,CAAC,GAC1D,iBAAE+gM,EAAkBpnK,KAAM+gH,GAAep4I,EAAOi7C,MAGtD,MAAO,CACLj3B,OACAo0H,aACAqmD,mBACAC,WANiBnzF,GAAeroE,EAAAA,EAAAA,KAAWljC,EAAQurG,QAAgBv4G,EAOnEixB,UAAWD,IAAQE,EAAAA,EAAAA,KAAcF,GAClC,GAbejkB,EArPgC7H,IAU9C,IAV+C,KACnD8rB,EAAI,QACJjnB,EAAO,SACPiO,EAAQ,OACRtN,EAAM,WACN06I,EAAU,WACVsmD,EAAU,iBACVD,EAAgB,UAChBx6K,EAAS,eACTsqG,GACDr2H,EACC,MAAM,wBACJymM,EAAuB,oBACvBC,EAAmB,sBACnBC,EAAqB,kBACrBC,EAAiB,iBACjBC,IACE7hM,EAAAA,EAAAA,OAEG8hM,EAAeC,IAAoB5hM,EAAAA,EAAAA,OACnC6hM,EAAgCC,EAA8BC,IAAiCj9L,EAAAA,EAAAA,MAC/Fk9L,EAA8BC,EAA4BC,IAA+Bp9L,EAAAA,EAAAA,MACzFq9L,EAAcC,IAAmBpiM,EAAAA,EAAAA,IAASpB,QAAQyiM,GAAYc,gBAC9DE,EAAeC,IAAoBtiM,EAAAA,EAAAA,IAASpB,QAAQyiM,GAAYgB,gBACjEzhM,GAAOC,EAAAA,EAAAA,KACPqtG,EAAemzF,GAAYxpM,IAEjCumB,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGVvB,EAAAA,EAAAA,KAAU,KACRmjM,GAAyB,GACxB,CAACA,KAEJnjM,EAAAA,EAAAA,KAAU,KACJwP,IACFy0L,EAAgBf,GAAYc,eAAgB,GAC5CG,EAAiBjB,GAAYgB,gBAAiB,GAChD,GACC,CAAChB,EAAY1zL,IAEhB,MAAM40L,GAA4B//L,EAAAA,EAAAA,KAAY,KAC5Cu/L,IACAP,EAAsB,CAAE36J,UAAWjgB,EAAYvmB,EAAS6tG,IACnDtnF,GACHsqG,EAAeyqE,EAAAA,GAAkB6G,QACnC,GACC,CAACT,EAA+BP,EAAuB56K,EAAWvmB,EAAQ6tG,EAAcgjB,IAErFuxE,GAA0BjgM,EAAAA,EAAAA,KAAY,KAC1C0/L,IACAX,EAAoB,CAAE16J,UAAWxmC,EAAQA,OAAQshM,GAAiB,GACjE,CAACO,EAA6BX,EAAqBlhM,EAAQshM,IAExDe,GAAwBlgM,EAAAA,EAAAA,KAAa05B,IACzCkmK,EAAgBlmK,GAChBwlK,EAAiB,CAAErhM,OAAQ6tG,EAAe1vC,UAAWtiC,IAChDA,GACHomK,GAAiB,EACnB,GACC,CAACp0F,EAAcwzF,IAEZiB,GAAyBngM,EAAAA,EAAAA,KAAa05B,IAC1ComK,EAAiBpmK,GACjBulK,EAAkB,CAAEphM,OAAQ6tG,EAAe1vC,UAAWtiC,GAAU,GAC/D,CAACgyE,EAAcuzF,IAyIlB,OACExgM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACu3H,GAAAA,EAAY,CACXh8C,OAAQikB,GAAAA,EAAegtG,iBACvBtkM,KAAMukM,EAAAA,IACNzhM,UAAU,iBAEXigM,GAtFLpgM,EAAAA,GAAA7K,cAAA,WACE6K,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,sBACV40B,UAAQ,GAER/0B,EAAAA,GAAA7K,cAACugD,GAAAA,EAAa,CAACt2C,OAAQghM,EAAYxpM,MAErCoJ,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,SACL0M,QAAM,EACNrM,aAAW,EACXzF,QAASggM,GAERlhM,EAAKgmB,EAAY,wBAA0B,4BAE9C3lB,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQqiM,EACRniM,QAASqiM,EACTvkK,OArEJv8B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gBACbH,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL5oB,KAAK,OACL6oB,KAAMk6K,IAERpgM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACZR,EAAKgmB,EAAY,wBAA0B,6BAgE5C1L,WAAWkM,EAAAA,GAAAA,GACTxmB,EAAKgmB,EAAY,+BAAiC,6BAA8By6K,EAAYrgM,OAC5F,CAAC,KAAM,oBAET61B,aAAcj2B,EAAKgmB,EAAY,wBAA0B,2BACzDkQ,eAAgByrK,EAChBxrK,sBAAoB,MA8DlBsqK,GAtDNpgM,EAAAA,GAAA7K,cAAA,WACE6K,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,eAAeiJ,IAAI,QAAQzJ,EAAK,0BAE7CK,EAAAA,GAAA7K,cAAA,OAAKypK,eAAa,GAChB5+J,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAI,eACJZ,KAAK,QACL0M,QAAM,EACNm5J,cAAe,EACf14J,UAAQ,GAEPzT,EAAK,0BAEPwgM,EACCA,EAAiBz5L,KAAI,CAAC9P,EAAIqiD,IACxBj5C,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKjQ,EACLk1K,cAAe7yH,EAAI,EACnB94C,UAAU,kCAEVU,QAASA,KA9GrB8/L,EA+GgC/pM,GA9GhCoqM,GA8GmC,GAGvBhhM,EAAAA,GAAA7K,cAACugD,GAAAA,EAAa,CAACt2C,OAAQxI,OAI3BoJ,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CAACp3G,IAAI,gBAAgBilK,cAAe,EAAGjkK,KAAK,gCAG7D7H,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,yBAAyBiJ,IAAI,QAAQzJ,EAAK,2BACvDK,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQwiM,EACRtiM,QAASwiM,EACT1kK,OA3GR,WACE,IAAKmkK,EAAe,OACpB,MAAMmB,EAAc/nD,EAAW4mD,GAC/B,OAAKmB,EAGH7hM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gBACbH,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACL5oB,KAAK,OACL6oB,KAAM27K,IAER7hM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACZR,EAAK,4CATZ,CAaF,CA2FgBmiM,GACR7nL,UA1FR,WACE,IAAKymL,EAAe,OACpB,MAAMmB,EAAc/nD,EAAW4mD,GAC/B,OAAKmB,EAEDA,EAAYE,gBACP57K,EAAAA,GAAAA,GACJ,yBAAwB07K,EAAY9hM,sCAAsC2lB,EAAM3lB,WACjF,CAAC,KAAM,qBAIJomB,EAAAA,GAAAA,GAEJ,yBAAwB07K,EAAY9hM,sCAAsC2lB,EAAM3lB,kFACjF,CAAC,KAAM,yBAZT,CAcF,CAyEmBiiM,GACXpsK,aAAcj2B,EAAK,uBACnBk2B,eAAgB2rK,MAkBjBpB,GACCpgM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,mBAAmBR,EAAK,6BACtCK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPrqB,QAASimK,EACT37I,QAASk8I,EACT3hM,MAAOH,EAAK,gCAGfuhM,GACClhM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPrqB,QAASmmK,EACT77I,QAASm8I,EACT5hM,MAAOH,EAAK,iCAIlBK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,kCACKR,EAAfuhM,EAAoB,iCAAyC,oCAKlE,KC3NJe,GAAoB,6BAGpBC,GAAoD,CACxD,eACA,aACA,YACA,aACA,cACA,cACA,eACA,aACA,aACA,kBACA,aACA,aACA,YAIIC,GAA0BD,GAAgB1uM,OAAS,EAEnD0/I,IAAex0H,EAAAA,GAAAA,KAAUgxC,GAAOA,KAAM,KAAK,GAqZjD,IAAepxD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAMqgB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAC1BwjF,GAAeC,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAC1C,WAAE64L,EAAU,kBAAEmK,IAAsBrgM,EAAAA,EAAAA,KAAeL,IACnD,SAAEqF,GAAakxL,EACfoK,EAAmB1kM,QAAQilF,GAAcqqB,cACzCq1F,GAAerzF,EAAAA,EAAAA,KAAiBvpF,IAChC,QAAE0kG,GAAY6tE,EAAW56E,SAASj+G,IAAW,CAAC,EAC9CmjM,GAAgBF,KAAqB1yF,EAAAA,EAAAA,KAAiBjqF,EAAM,eAAiBA,EAAKgqF,WAKxF,MAAO,CACLhqF,OACAk9D,eACA77E,WACAu7L,eACAD,mBACA9I,cAVoB7zK,EAAKgqF,YAAaC,EAAAA,EAAAA,KAAiBjqF,EAAM,cAW7D+pF,YAVkB/pF,EAAKgqF,YAAaC,EAAAA,EAAAA,KAAiBjqF,EAAM,YAW3D8zK,UAVgB9zK,EAAKgqF,YAAaC,EAAAA,EAAAA,KAAiBjqF,EAAM,eAWzD+zK,gBAAiBrvE,EACjBo4E,8BAA4D,aAA7BJ,GAAmBvgL,MAClD6xB,mBAAoBhyC,EAAOiyC,UAAUD,mBACrC6uJ,eACD,IAEH,CAAC7gM,EAAMiF,KAAiB,IAAf,OAAEvH,GAAQuH,EACjB,OAAOhJ,SAAQinC,EAAAA,EAAAA,KAAWljC,EAAQtC,GAAQ,GA9B1BqC,EAnZ2B7H,IAiBzC,IAjB0C,OAC9CwF,EAAM,KACNsmB,EAAI,aACJk9D,EAAY,SACZ77E,EAAQ,aACRu7L,EAAY,iBACZD,EAAgB,cAChB9I,EAAa,YACb9pF,EAAW,UACX+pF,EAAS,aACT+I,EAAY,SACZ71L,EAAQ,gBACR+sL,EAAe,8BACf+I,EAA6B,mBAC7B9uJ,EAAkB,eAClBu8E,EAAc,QACdxxH,GACD7E,EACC,MAAM,uBACJ6oM,EAAsB,WACtB/I,EAAU,WACVgJ,EAAU,aACV9I,EAAY,cACZC,EAAa,gBACbF,EAAe,SACf76J,EAAQ,wBACRg7J,EAAuB,qBACvBC,EAAoB,YACpB4I,IACE/jM,EAAAA,EAAAA,OAEGs7L,EAAoBC,EAAkBC,IAAqBv2L,EAAAA,EAAAA,KAC5Dm2L,EAAet0K,EAAK3lB,MACpBk6L,EAAer3G,GAAcwjB,OAAS,IAErCi5B,EAAwBC,IAA6BvgI,EAAAA,EAAAA,KAAS,IAC9DgB,EAAO8mJ,IAAY9nJ,EAAAA,EAAAA,IAASi7L,IAC5B5zF,EAAO0gD,IAAY/nJ,EAAAA,EAAAA,IAASk7L,IAC5BnmM,EAAO0rI,IAAYzgI,EAAAA,EAAAA,OACnBkjD,EAAOs9E,IAAYxgI,EAAAA,EAAAA,OACnB6jM,EAAgBC,IAAqB9jM,EAAAA,EAAAA,IAAS2mB,EAAK83B,SACpDrN,IAAY0uF,EAAAA,EAAAA,KAAkBn5G,GAC9Bk6G,IAAuB7kI,EAAAA,EAAAA,GAASo1C,IAAW,EAAOn1C,EAAAA,GAAeC,SACjE6nM,IAAgBroM,EAAAA,EAAAA,KAAQ,KAAMunF,EAAAA,EAAAA,KAAat8D,IAAO,CAACA,IACnD/lB,IAAOC,EAAAA,EAAAA,KAEPmjM,IAAgChnM,EAAAA,EAAAA,IAAuB,OAE7DohB,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGVvB,EAAAA,EAAAA,KAAU,KACJs8L,IACFM,EAAwB,CAAE16L,WAC1B06L,EAAwB,CAAE16L,SAAQi7L,WAAW,IAC7CN,EAAqB,CAAE36L,WACzB,GACC,CAACA,EAAQo6L,KAGZt8L,EAAAA,EAAAA,KAAU,KACR2lM,EAAkBllM,QAAQ+nB,EAAK83B,SAAS,GACvC,CAAC93B,EAAK83B,WAETtgD,EAAAA,EAAAA,KAAU,KACJ6J,IAAa8xL,EAAAA,GAAmB34D,WAClCZ,GAA0B,GAC1BC,OAAS7qI,GACX,GACC,CAACqS,IAEJ,MAAM0zL,IAAsBt7L,EAAAA,EAAAA,IAAgB,KAC1C8wH,EAAeyqE,EAAAA,GAAkBC,gBAAgB,IAG7CC,IAAwBz7L,EAAAA,EAAAA,IAAgB,KAC5C8wH,EAAeyqE,EAAAA,GAAkBG,WAAW,IAGxCC,IAAuB37L,EAAAA,EAAAA,IAAgB,KAC3C8wH,EAAeyqE,EAAAA,GAAkBK,UAAU,IAGvCiI,IAAyB7jM,EAAAA,EAAAA,IAAgB,KAC7C8wH,EAAeyqE,EAAAA,GAAkBuI,iBAAiB,IAG9CjI,IAA4B77L,EAAAA,EAAAA,IAAgB,KAChD8wH,EAAeyqE,EAAAA,GAAkBO,mBAAmB,IAGhDC,IAAqB/7L,EAAAA,EAAAA,IAAgB,KACzC8wH,EAAeyqE,EAAAA,GAAkBS,QAAQ,IAGrCC,IAAsBj8L,EAAAA,EAAAA,IAAgB,KAC1C8wH,EAAeyqE,EAAAA,GAAkBW,aAAa,IAG1CC,IAAiBn8L,EAAAA,EAAAA,IAAiB2iI,IACtCtC,EAASsC,GACTxC,GAA0B,EAAK,IAG3B8nB,IAAoBjoJ,EAAAA,EAAAA,IAAiBM,IACzConJ,EAASpnJ,EAAEC,OAAOH,OAClB+/H,GAA0B,EAAK,IAG3Bi8D,IAAoBp8L,EAAAA,EAAAA,IAAiBM,IACzCqnJ,EAASrnJ,EAAEC,OAAOH,OAClB+/H,GAA0B,EAAK,IAG3B4jE,IAAoB/jM,EAAAA,EAAAA,IAAgB,KACxC,MAAMs8L,EAAe17L,EAAMg7D,OACrB2gI,EAAet1F,EAAMrrC,OAEtB0gI,EAAajoM,OAKlBkmM,EAAW,CACTt6L,SACAW,MAAO07L,EACPr1F,MAAOs1F,EACP5nM,UARAyrI,EAAS0iE,GAST,IAGEkB,IAAqBhkM,EAAAA,EAAAA,IAAgB,KACzC8wH,EAAeyqE,EAAAA,GAAkB0I,aAAa,IAG1CC,IAAyBlkM,EAAAA,EAAAA,IAAgB,KAC7C,IAAKyjF,EACH,OAGF,MAAM,mBAAE0gH,GAAuB1gH,EAE/B6/G,EAAuB,CAAErjM,OAAQsmB,EAAK9uB,GAAI2mE,WAAY+lI,GAAqB,IAGvEC,IAAoBpkM,EAAAA,EAAAA,IAAgB,KACxC0jM,GAAmB3mM,IACjB,MAAMsnM,GAAqBtnM,EAM3B,OAJAg3I,IAAa,KACXyvD,EAAY,CAAEvjM,SAAQm+D,UAAWimI,GAAoB,IAGhDA,CAAiB,GACxB,KAGJtmM,EAAAA,EAAAA,KAAU,KACR,IAAKslM,EACH,OAKF,MAAMiB,EAAWV,GAA8B7mM,SAAS/F,cAAc,SACtEstM,EAASxoK,SAAW2nD,GAAc0gH,kBAAkB,GACnD,CAACd,EAA+B5/G,GAAc0gH,qBAEjD,MAAMtH,IAA2BvhM,EAAAA,EAAAA,KAAQ,KACvC,IAAKmoF,GAAcgrE,iBACjB,OAAOjuJ,GAAK,gBAGd,GAA2C,QAAvCijF,EAAagrE,iBAAiBx6J,KAChC,OAAOuM,GAAK,gBAGd,MAAMs8L,EAAgBr5G,EAAagrE,iBAAiBohB,QAAQx7K,OACtD0oM,EAAcxoJ,GAAoB/jB,QAAQ6T,IAAcA,EAAS+4D,aAAY/oG,QAAU,EAE7F,OAAO0oM,EACF,GAAED,OAAmBC,IACrB,GAAED,GAAe,GACrB,CAACvoJ,EAAoBkvC,GAAcgrE,iBAAkBjuJ,KAElD+jM,IAA0BjpM,EAAAA,EAAAA,KAAQ,KACtC,IAAKirB,EAAK6qF,oBACR,OAAO,EAGT,IAAIymC,EAAakrD,GAAgBvyK,QAC9B9oB,KACa,iBAARA,IAA2B+7L,GACvBl9K,EAAK6qF,oBAAqB1pG,MAEpCrT,OAEF,MAAM,aAAE26G,EAAY,SAAE/B,GAAa1mF,EAAK6qF,oBAOxC,OAJKpC,GAAiB/B,IACpB4qC,GAAc,GAGTA,CAAU,GAChB,CAACtxH,EAAK6qF,oBAAqBqyF,IAExBtI,IAAc7/L,EAAAA,EAAAA,KAAQ,IACnB83C,OAAO4K,KAAKylC,GAAcG,kBAAoB,CAAC,GAAGvvF,QACxD,CAACovF,GAAcG,mBAEZ4gH,IAAoBxkM,EAAAA,EAAAA,IAAgB,KACpCmjM,EACFI,EAAW,CAAEtjM,OAAQsmB,EAAK9uB,KAChB8uB,EAAKgqF,UAGfmqF,EAAc,CAAEz6L,OAAQsmB,EAAK9uB,KAF7BgjM,EAAa,CAAEx6L,OAAQsmB,EAAK9uB,KAI9BwjM,IACAT,IACA76J,EAAS,CAAEloC,QAAIlC,GAAY,IAG7B,GAAIgxB,EAAKs5I,cAAgBt5I,EAAK4xI,YAC5B,OAGF,MAAMxwI,GAAY/f,IAAa8xL,EAAAA,GAAmB/4D,WAElD,OACE9/H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACurI,GAAAA,EAAc,CACbkjE,WAAYhB,EACZhjE,qBAAsBA,GACtBr/H,SAAU+6L,GACVloL,UAAWmmL,IAEbv5L,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR7J,GAAG,cACHkJ,MAAOH,GAAK,aACZY,SAAU6mJ,GACV7nJ,MAAOQ,EACPkiD,MAAOA,IAAUggJ,GAAoBhgJ,OAAQvtD,EAC7C0e,UAAWmmL,IAEbv5L,EAAAA,GAAA7K,cAAC+1G,GAAAA,EAAQ,CACPt0G,GAAG,cACHkJ,MAAOH,GAAK,0BACZmwE,UArRgB,IAsRhBs7B,oBAtRgB,IAsR6BhF,EAAM5yG,QAAQ+jF,WAC3Dh3E,SAAUg7L,GACVh8L,MAAO6mG,EACPhzF,UAAWmmL,EACXluF,mBAAiB,KAGpB3lF,EAAKgqF,WACJ1vG,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,OAAO6uB,WAAS,EAACj0B,QAAS45L,IACvCz6L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,GAAK,cAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAA4BR,GAAhBmjM,GAAqB,aAAqB,iBAGzET,GACCriM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,UACL6uB,WAAS,EACTj0B,QAAS+5L,IAET56L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,GAAK,kBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAYR,GAAK,sBAGrCK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,cACL6uB,WAAS,EACTj0B,QAASmiM,GACT5vL,UAAWq8F,GAEXzvG,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,GAAK,uBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5Bs6L,GAAwB,IAAEvB,IAA2BS,EAAiB,EAAI,KAG/E5iM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,gBACL6uB,WAAS,EACTj0B,QAASi6L,GACT1nL,UAAWmmL,GAEXv5L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,GAAK,cAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B4yL,KAGLh8L,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,QACL6uB,WAAS,EACTj0B,QAASm6L,IAETh7L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,GAAK,0BAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,aAAYi8L,EAAAA,GAAAA,IAAc9B,MAE3Cd,GACCx5L,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,OACLpF,QAASq6L,GACTpmK,WAAS,EACT1hB,UAAWqmL,GAEXz5L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,GAAK,0BAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YACbs5L,GAAkB2C,EAAAA,GAAAA,IAAc3C,EAAgBjmM,QAAUmM,GAAK,aAIrEhC,QAAQ+nB,EAAK22K,cAAc7oM,SAC1BwM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,kBACLpF,QAASu6L,GACTtmK,WAAS,GAET90B,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,GAAK,mBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,aACbi8L,EAAAA,GAAAA,IAAc12K,EAAK22K,aAAc7oM,UAIvC+uM,GACCviM,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,SAAS0M,QAAM,EAAC9R,QAAS0iM,IACtCvjM,EAAAA,GAAA7K,cAAA,YAAOwK,GAAK,kBACZK,EAAAA,GAAA7K,cAAC4mC,GAAAA,EAAQ,CACPnlC,GAAG,sBACHkJ,MAAOH,GAAK,iBACZs7B,QAAS2nK,EACT7tK,UAAQ,KAGZ/0B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kCAAkCR,GAAK,6BAI5DK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,QAAQ6uB,WAAS,EAACj0B,QAASsiM,IACxCnjM,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,GAAK,iBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,aAAYi8L,EAAAA,GAAAA,IAAc12K,EAAK4wI,cAAgB,MAG/DwsC,KAAkBT,GAAoB1kM,QAAQilF,IAC9C5iF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBAAkBiH,IAAK27L,IACpC/iM,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPrqB,SAAU2nD,EAAa0gH,mBACvBxjM,MAAOH,GAAK,eACZY,SAAU8iM,GACV9jH,SACEqD,EAAa0gH,mBAAqB3jM,GAAK,0BAA4BA,GAAK,0BAE1EyT,UAAWq8F,MAKnBzvG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,SAAS0M,QAAM,EAACrM,aAAW,EAACzF,QAASs5L,GACjDx6L,GAAK,iBAIZK,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAAS8mG,EACTx+H,QAASqiM,GACT9vL,SAAU0T,GACVthB,UAAW7F,GAAK,SAEfmnB,GACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGjBH,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ27L,EACRz7L,QAAS27L,EACTngL,WAAWkM,EAAAA,GAAAA,GACTm8K,IAAiB58K,EAAKgqF,UAClB/vG,GAAK,2BACLA,GAAK,oCAAqC+lB,EAAK3lB,OACnD,CAAC,KAAM,oBAET61B,aAAc0sK,IAAiB58K,EAAKgqF,UAAY/vG,GAAK,cAAgBA,GAAK,qBAC1Ek2B,eAAgB8tK,GAChB7tK,sBAAoB,IAElB,KChEV,IAAex3B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAAsD,IAApD,OAAEjG,EAAM,wBAAEykM,GAAyBx+L,EAC1C,MAAMqgB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAC1B2tG,GAAWlqB,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IACpC25B,KAAM/C,GAAct0B,EAAOo3B,OAC7B,cAAEtS,GAAkB9kB,EACpBikB,GAAYC,EAAAA,EAAAA,KAAcF,GAC1Bo+K,IAAwBp+K,EAAKgqF,WAAam0F,GAGhD,MAAO,CACLn+K,OACAsQ,YACAxP,gBACAb,YACA63B,QAPc93B,EAAK83B,QAQnBsmJ,sBACAC,cAAer+K,EAAKs+K,YACpBzsC,YAAa55J,QAAQovG,GACrBhqB,iBAAkBgqB,GAAUhqB,iBAC7B,IAEH,CAACrhF,EAAMiF,KAAiB,IAAf,OAAEvH,GAAQuH,EACjB,OAAOhJ,SAAQinC,EAAAA,EAAAA,KAAWljC,EAAQtC,GAAQ,GAvB1BqC,EArXsC7H,IAepD,IAfqD,SACzD8S,EAAQ,WACRu3L,EAAU,eACVC,EAAc,cACdH,EAAa,KACbr+K,EAAI,UACJsQ,EAAS,cACTxP,EAAa,iBACbu8D,EAAgB,YAChBw0E,EAAW,UACX5xI,EAAS,QACT63B,EAAO,oBACPsmJ,EAAmB,QACnBrlM,EAAO,eACPwxH,GACDr2H,EACC,MAAM,gBAAEuqM,IAAoBvlM,EAAAA,EAAAA,OAErB8sG,EAAaC,IAAkB5sG,EAAAA,EAAAA,IAA6B,CAAC,IAC7D+pH,EAAWC,IAAgBhqH,EAAAA,EAAAA,IAASpB,QAAQsmM,KAC5Cn9K,EAAWglF,IAAgB/sG,EAAAA,EAAAA,KAAS,IACpCqlM,EAAiCC,EAA+BC,IAAkCzgM,EAAAA,EAAAA,MAClG0gM,EAAaC,IAAkBzlM,EAAAA,EAAAA,IAAS,IACzCY,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAGV,MAAMgmM,GAAqBhqM,EAAAA,EAAAA,KAAQ,KACjC,MAAMiqM,EAAsBR,EAAiBnhH,IAAmBmhH,QAAkBxvM,EAIlF,IAAIuvM,IAAeS,GAAwBR,EAA3C,CAIA,GAAID,EAAY,CACd,MAAMv/J,GAAOvB,EAAAA,EAAAA,MAAYrK,MAAMC,KAAKmrK,GAEpC,OAAOx/J,EAAO,CACZ7U,OAAQ6U,EAAK9tC,GACbotM,YAAaD,EACbQ,YAAa5kM,EAAK,gBAClBsxG,SAAS,EACTgsF,sBAAkBvoM,QAChBA,CACN,CAEA,OAAOgwM,CAdP,CAc0B,GACzB,CAAC3hH,EAAkBghH,EAAeE,EAAYtkM,EAAMukM,KAEvDhnM,EAAAA,EAAAA,KAAU,KACJq6J,GAAe2sC,IAAmBO,GACpCx0E,EAAeyqE,EAAAA,GAAkBO,mBACnC,GACC,CAACv1K,EAAM6xI,EAAatnC,EAAgBw0E,EAAoBP,KAE3DhnM,EAAAA,EAAAA,KAAU,KACRyuG,EAAe84F,GAAoBT,aAAe,CAAC,GACnDQ,GAAgBC,GAAoBF,aAAe,IAAIr0D,OAAO,EAhElC,KAiE5BnnB,EAAaprH,QAAQsmM,IACrBn4F,GAAa,EAAM,GAClB,CAACi4F,EAAeE,EAAYQ,IAE/B,MAAM14F,GAAyBxqG,EAAAA,EAAAA,KAAa9B,IAC1C,MAAM,KAAEY,GAASZ,EAAEC,OAMnBisG,GAAgBihF,IAAC,UACZA,EACH,CAACvsL,IANgCd,EAMCqtL,EAAEvsL,IAL7Bd,QAAQ7K,IADjB,IAAmC6K,CAOjC,IACFwpH,GAAa,EAAK,GACjB,IAEG47E,GAAwBpjM,EAAAA,EAAAA,KAAY,KACnC2iM,IAILp4F,GAAa,GACbq4F,EAAgB,CACd/kM,OAAQsmB,EAAK9uB,GACbi5B,OAAQq0K,EACRF,YAAat4F,EACb64F,gBACA,GACD,CAACL,EAAgBC,EAAiBz+K,EAAK9uB,GAAI80G,EAAa64F,IAErDK,GAAqBrjM,EAAAA,EAAAA,KAAY,KAChC2iM,IAILC,EAAgB,CACd/kM,OAAQsmB,EAAK9uB,GACbi5B,OAAQq0K,EACRF,YAAa,CAAC,IAEhBM,IAAgC,GAC/B,CAAC5+K,EAAK9uB,GAAI0tM,EAAgCJ,EAAgBC,IAEvD52F,GAAuBhsG,EAAAA,EAAAA,KAAasF,MACpCooG,EAAAA,EAAAA,KAAiBvpF,KAIjBo+K,GAAwBp+K,EAAKs+K,cAI7Bt+K,EAAKgqF,WAIDhqF,EAAKs+K,YAAan9L,MACzB,CAAC6e,EAAMo+K,IAEJe,GAAepqM,EAAAA,EAAAA,KAAQ,KAC3B,GAAIwpM,IAAeQ,EACjB,OAGF,GAAIA,EAAmBxzF,QACrB,OAAOtxG,EAAK,kBAGd,MAAM69L,EAAiBiH,EAAmBxH,iBACtCjnK,EAAUyuK,EAAmBxH,uBAC7BvoM,EAEJ,OAAI8oM,EACK79L,EAAK,uBAAuBm8B,EAAAA,EAAAA,KAAgB0hK,IAG9C79L,EAAK,eAAe,GAC1B,CAACskM,EAAYQ,EAAoBzuK,EAAWr2B,IAEzCmlM,GAA0BvjM,EAAAA,EAAAA,KAAa9B,IAC3C,MAAM,MAAEF,GAAUE,EAAEC,OACpB8kM,EAAejlM,GACfwpH,GAAa,EAAK,GACjB,IAEH,GAAK07E,EAIL,OACEzkM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAACE,UAAQ,EAAC50B,UAAU,uBAC3BH,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQ40K,EAAmB50K,OAC3B8kB,OAAQkwJ,EACR1tK,eAAa,KAIjBn3B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAI,QAAQzJ,EAAK,uBAEtDK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,aACL46B,QAASt9B,QAAQ+tG,EAAYiD,YAC7B7uG,MAAOH,EAAKgmB,EAAY,6BAA+B,4BACvDkoF,UAAQ,EACRz6F,SAAUm6F,EAAqB,cAC/BhtG,SAAUwrG,KAGbpmF,GACC3lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,eACL46B,QAASt9B,QAAQ+tG,EAAYq5F,cAC7BjlM,MAAOH,EAAK,yBACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,gBAC/BhtG,SAAUwrG,KAIfpmF,GACC3lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,eACL46B,QAASt9B,QAAQ+tG,EAAYs5F,cAC7BllM,MAAOH,EAAK,yBACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,gBAC/BhtG,SAAUwrG,KAIhB/rG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,iBACL46B,QAASt9B,QAAQ+tG,EAAYuE,gBAC7BnwG,MAAOH,EAAKgmB,EAAY,0BAA4B,gCACpDkoF,UAAQ,EACRz6F,SAAUm6F,EAAqB,kBAC/BhtG,SAAUwrG,KAGd/rG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,cACL46B,QAASt9B,QAAQ+tG,EAAYu5F,aAC7BnlM,MAAOH,EAAK,wBACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,eAC/BhtG,SAAUwrG,KAGd/rG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,cACL46B,QAASt9B,QAAQ+tG,EAAYw5F,aAC7BplM,MAAOH,EAAK,wBACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,eAC/BhtG,SAAUwrG,KAGd/rG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,gBACL46B,QAASt9B,QAAQ+tG,EAAYy5F,eAC7BrlM,MAAOH,EAAK,0BACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,iBAC/BhtG,SAAUwrG,MAGZpmF,GACA3lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,WACL46B,QAASt9B,QAAQ+tG,EAAY05F,UAC7BtlM,MAAOH,EAAK,qBACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,YAC/BhtG,SAAUwrG,KAIhB/rG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,cACL46B,QAASt9B,QAAQ+tG,EAAY+C,aAC7B3uG,MAAOH,EAAK,qBACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,eAC/BhtG,SAAUwrG,MAGZpmF,GACA3lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,cACL46B,QAASt9B,QAAQ+tG,EAAYgD,aAC7B5uG,MAAOH,EAAK,wBACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,eAC/BhtG,SAAUwrG,KAIhB/rG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,YACL46B,QAASt9B,QAAQ+tG,EAAY25F,WAC7BvlM,MAAOH,EAAK,sBACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,aAC/BhtG,SAAUwrG,KAGd/rG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,aACL46B,QAASt9B,QAAQ+tG,EAAY45F,YAC7BxlM,MAAOH,EAAK,2BACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,cAC/BhtG,SAAUwrG,KAGbvuD,GACCx9C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,eACL46B,QAASt9B,QAAQ+tG,EAAYkD,cAC7B9uG,MAAOH,EAAK,0BACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,gBAC/BhtG,SAAUwrG,MAIdpmF,GACA3lB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAK,YACL46B,QAASt9B,QAAQ+tG,EAAY65F,WAC7BzlM,MAAOH,EAAK,4BACZkuG,UAAQ,EACRz6F,SAAUm6F,EAAqB,aAC/BhtG,SAAUwrG,KAKf+3F,GACC9jM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oBAAoBiJ,IAAI,QAClCzJ,EAAK,kCAIRgmB,GACA3lB,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR7J,GAAG,cACHkJ,MAAOH,EAAK,iBACZY,SAAUukM,EACVvlM,MAAOglM,EACPnxL,SAAU0wL,EACVh0H,UAhVkB,KAoVrBtpD,IAAkB09K,IAAmBJ,IAAwBG,GAC5DjkM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,SAAS0M,QAAM,EAACrM,aAAW,EAACzF,QAASwjM,GACjD1kM,EAAK,2BAMdK,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASuwF,EACTjoH,QAAS8jM,EACTn/L,UAAW7F,EAAK,QAChByT,SAAU0T,GAETA,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,sBAIf8jM,GACAjkM,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ6lM,EACR3lM,QAAS6lM,EACTz8L,KAAK,+CACL+tB,aAAcj2B,EAAK,yBACnBk2B,eAAgB+uK,EAChB9uK,sBAAoB,IAGpB,K,0BCtWV,MAqNA,IAAex3B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA6B,IAA3B,OAAEvH,GAAQuH,EACjB,MAAM+e,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,IACxB6jF,aAAc6iE,GAAqBpkJ,EAAOo3B,OAC5C,QAAEgqD,EAAO,iBAAEC,EAAgB,sBAAEyiH,IAA0B3iH,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAAW,CAAC,EAC9FumB,EAAYD,IAAQE,EAAAA,EAAAA,KAAcF,IAChC0S,QAAS+gH,GAAoBz3I,EAAOm3B,aAAe,CAAC,EACtD4sK,EAAwB/jM,EAAO+iC,WAAWghK,sBAE1ChG,EAAmB/5K,IAASA,EAAKgqF,YAAaC,EAAAA,EAAAA,KAAiBjqF,EAAM,aAErEggL,EAAsBjG,KAAqBxwF,EAAAA,EAAAA,KAAiBvpF,SAA+BhxB,IAAtBgxB,EAAK4wI,mBACnD5hK,IAA1B+wM,GAAuC//K,EAAK4wI,cAAgBmvC,EAEzDE,EAAgBjgL,KAAUiqF,EAAAA,EAAAA,KAAiBjqF,EAAM,iBAC9CC,KAAcswI,EAAAA,EAAAA,KAAkBvwI,EAAM,gBAC1CA,EAAKgqF,YAIRt5D,MAAOhgB,EAAW,eAClBy5B,EAAc,cACd+1I,EAAa,aACbvsD,IACEt3I,EAAAA,EAAAA,KAAeL,GAAQ03I,WAE3B,MAAO,CACLosD,sBAAuB7nM,QAAQ+nB,GAAQ8/K,GACvC1iH,UACA6iH,gBACA5iH,mBACA+iE,mBACAngI,YACAwzH,kBACA/iH,cACA4vH,YAAan2F,EACb+1I,gBACAvsD,eACAomD,mBACAj5K,cAAe9kB,EAAO8kB,cACtBk/K,sBACD,GAzCejkM,EArNkC7H,IAqBhD,IArBiD,OACrDwF,EAAM,SACNymM,EAAQ,QACR/iH,EAAO,cACP6iH,EAAa,iBACb5iH,EAAgB,iBAChB+iE,EAAgB,UAChBngI,EAAS,SACTjZ,EAAQ,cACRk5L,EAAa,gBACbzsD,EAAe,aACfE,EAAY,YACZ2M,EAAW,YACX5vH,EAAW,cACX5P,EAAa,iBACbi5K,EAAgB,sBAChB+F,EAAqB,oBACrBE,EAAmB,QACnBjnM,EAAO,eACPwxH,EAAc,mBACdqsE,GACD1iM,EACC,MAAM,SACJklC,EAAQ,mBAAEw6G,EAAkB,gBAAEqgD,EAAe,yBAC7CmM,EAAwB,6BAAEC,EAA4B,iBAAE/iC,IACtDpkK,EAAAA,EAAAA,MACEe,GAAOC,EAAAA,EAAAA,KAEPyrD,GAAWtvD,EAAAA,EAAAA,IAAyB,MAEpCyf,GAAezf,EAAAA,EAAAA,IAAuB,OAErCiqM,EAAgBC,IAAqBlnM,EAAAA,EAAAA,MAEtCmnM,GAAWzrM,EAAAA,EAAAA,KAAQ,IAChBorM,GAAY9iH,EAAmBxwC,OAAO4K,KAAK4lC,GAAoB,IACrE,CAACA,EAAkB8iH,IAEhB7iH,GAAYvoF,EAAAA,EAAAA,KAAQ,KAExB,MAAMu7B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KACpC,IAAK+pD,IAAY9sD,EACf,MAAO,GAGT,MAAMoC,GAAU+qD,EAAAA,EAAAA,KACdL,EAAQp8E,KAAIrB,IAAA,IAAC,OAAEwqB,GAAQxqB,EAAA,OAAKwqB,CAAM,IAClCmG,EACA8vH,GAGF,OAAO+/C,EAAWztK,EAAQzI,QAAQE,IAAYq2K,EAASrvM,SAASg5B,KAAWuI,CAAO,GACjF,CAAC0qD,EAASgjE,EAAkB+/C,EAAUK,KAEzCC,EAAAA,GAAAA,GAAsBnjH,GAEtB,MAAM1sD,GAAe77B,EAAAA,EAAAA,KAAQ,KAE3B,MAAMu7B,GAAYmN,EAAAA,EAAAA,MAAYrK,MAAMC,KAC9BqtK,EAAyBzoM,QAAQy4B,GACjCiwK,EAAaD,EAEdjtD,GAAkB1iH,EAAAA,EAAAA,KAAkB0iH,EAAiBnjH,EAAWI,GAAe,GADhF4sD,EAGJ,OAAOhjC,EAAAA,GAAAA,IACLxpB,EAAAA,GAAAA,IAAO,IACF6vK,KACCD,GAAyB/sD,GAAqB,MAC9C+sD,GAAyBR,GAAsB,KAClDj2K,QAAQ6pH,IACT,MAAM90G,EAAO1O,EAAUwjH,GACvB,OAAK90G,IAIG/e,GAAa+e,EAAK2hH,uBAAwB/iE,EAAAA,EAAAA,KAAU5+C,OACrDmhK,IAAaK,EAASrvM,SAAS2iJ,GAAW,KAEnD,EACD,GACA,CAACx2D,EAAWm2D,EAAiB/iH,EAAaijH,EAAcusD,EAAejgL,EAAWkgL,EAAUK,KAExFxqJ,EAAaC,IAAWC,EAAAA,GAAAA,QAAkBlnD,EAAW4hC,EAAc34B,QAAQy4B,IAE5EggK,GAAoBj3L,EAAAA,EAAAA,IAAiBvI,IACrCivM,GACFvJ,EAAoB1lM,GAAI,GACxBq5H,EAAgByqE,EAAAA,GAAkB4L,sBAElC3M,IACA76J,EAAS,CAAEloC,OACb,IAGIwoF,GAAqBjgF,EAAAA,EAAAA,IAAiBM,IAC1C65I,EAAmB,CAAEljG,MAAO32C,EAAEC,OAAOH,OAAQ,IAGzC2Y,GAAgBqlC,EAAAA,GAAAA,GAA0B/hC,EAAc9O,GAAWxV,IACnEwkD,GAAeA,EAAYloD,OAAS,GACtC4iM,EAAkB16I,GAAuB,IAAXxkD,EAAe,EAAIA,GACnD,GACC,oBAAoB,GAEjBqvM,GAAgCpnM,EAAAA,EAAAA,IAAgB,KACpD8mM,OAAkBvxM,EAAU,IAGxB8xM,GAAiCrnM,EAAAA,EAAAA,IAAgB,KACrD2mM,EAAyB,CAAE1mM,SAAQm+D,WAAYioI,GAAwB,IAGnEiB,GAA4BtnM,EAAAA,EAAAA,IAAgB,KAChD6jK,IACA+iC,EAA6B,CAAEW,uBAAwBC,EAAAA,GAAuB7mE,YAAa,IA+B7F,OA5BA3iH,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IA2BRuB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACZ0lM,GAbD7lM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,qBAAqBiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAC5DsL,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR2G,IAAKikD,EACL9rD,MAAO62B,EACP71B,SAAU6+E,EACV1gC,YAAa/+C,EAAK,aAStBK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACZulM,GACC1lM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,QAAQ0M,QAAM,EAAC9R,QAAS2lM,GACrCxmM,EAAAA,GAAA7K,cAAA,YAAOwK,EAAK,uBACZK,EAAAA,GAAA7K,cAAC4mC,GAAAA,EAAQ,CAACj8B,MAAOH,EAAK,sBAAuBs7B,QAASuqK,KAExDxlM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,gBACVR,EAAK6lM,EAAwB,+BAAiC,mCAIrExlM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACZu7C,GAAaloD,OACZwM,EAAAA,GAAA7K,cAACsjD,GAAAA,EAAc,CACbt4C,UAAU,4BACVu4C,MAAOpiB,EACPqiB,WAAYgD,EACZ+hC,gBAAiB//E,QAAQy4B,GACzBhvB,IAAKoU,EACLijC,UAAWvmC,GAEVwjC,EAAYh1C,KAAK9P,IAChBoJ,SAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKjQ,EACLuJ,UAAU,kCAEVU,QAASA,IAAMu1L,EAAkBx/L,GACjCs9C,gBAtDgB0yJ,EAsDuBhwM,EArD9CgwM,IAAapgL,GAAkBi5K,EAA+B,CAAC,CACpE1/L,MAAOJ,EAAK,iCACZsG,KAAM,OACNsuC,QAASA,KACP0xJ,EAAkBW,EAAS,SAJ0BlyM,IAuD3CsL,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CAAC1lB,OAAQj5B,EAAIugC,eAAa,EAACyX,WAAS,KAxDpE,IAAgCg4J,CA0DnB,KAEA5gD,IAAetqG,GAAgBA,EAAYloD,OAO9CwM,EAAAA,GAAA7K,cAAC0pD,GAAAA,EAAO,MANR7+C,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CACX6tD,cAAe,EACfjlK,IAAI,gBACJgB,KAAM8d,EAAY,uBAAyB,uBAOlDggL,GACC3lM,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,SAAO,EACP13B,QAAS4lM,EACTjhM,UAAW7F,EAAK,0BAEhBK,EAAAA,GAAA7K,cAAC0qC,GAAAA,EAAI,CAACx/B,KAAK,qBAGdo/L,GACCz/L,EAAAA,GAAA7K,cAAC0xM,GAAAA,EAAiB,CAChBtoM,OAAQZ,QAAQqoM,GAChBn2K,OAAQm2K,EACRvnM,QAAS8nM,IAGT,KCjBV,IAAejoM,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA6B,IAA3B,OAAEvH,GAAQuH,EACjB,MAAM+e,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAC1B2tG,GAAWlqB,EAAAA,EAAAA,KAAmBnhF,EAAQtC,GAE5C,MAAO,CACLsmB,OACAc,cAAe9kB,EAAO8kB,cACtB+zK,kBAAmBxtF,GAAUytF,eAAehnM,QAAU,EACtDsvF,QAASiqB,GAAUjqB,QACpB,GAVerhF,EA7KsC7H,IASpD,IATqD,eACzDq2H,EAAc,mBACdqsE,EAAkB,KAClB52K,EAAI,cACJc,EAAa,kBACb+zK,EAAiB,QACjBz3G,EAAO,QACPrkF,EAAO,SACPiO,GACD9S,EACC,MAAM,8BAAEktM,IAAkCloM,EAAAA,EAAAA,OAEpC,YACJ8sG,EAAW,sBAAEE,EAAqB,UAAE9kF,EAAS,uBAAEilF,EAAsB,aAAED,GACrEN,GAAqB9lF,GAAM6qF,qBACzB5wG,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAGV,MAAMo9L,GAA0Bt6L,EAAAA,EAAAA,KAAY,KAC1C0uH,EAAeyqE,EAAAA,GAAkBqM,kBAAkB,GAClD,CAAC92E,IAEE+2E,GAA0BzlM,EAAAA,EAAAA,KAAY,KAC1C0uH,EAAeyqE,EAAAA,GAAkBuM,2BAA2B,GAC3D,CAACh3E,IAEEi3E,GAA6B3lM,EAAAA,EAAAA,KAAawzK,IAC9CunB,EAAmBvnB,EAAOllJ,OAAQklJ,EAAOkoB,mBAAqBz2K,GAC9DypG,EAAeyqE,EAAAA,GAAkByM,qBAAqB,GACrD,CAAC3gL,EAAe81K,EAAoBrsE,KAEhC/iB,EAAqBC,IAA0BpuG,EAAAA,EAAAA,KAAS,GAEzD4lM,GAAwBpjM,EAAAA,EAAAA,KAAY,KACnCmkB,IAILomF,GAAa,GACbg7F,EAA8B,CAAE1nM,OAAQsmB,EAAK9uB,GAAIw7G,aAAc1G,IAAc,GAC5E,CAAChmF,EAAMgmF,EAAaI,EAAcg7F,IAE/BM,GAAmB3sM,EAAAA,EAAAA,KAAQ,IAC1BqoF,EAIEA,EAAQnzD,QAAOtqB,IAAA,IAAC,aAAE+sG,GAAc/sG,EAAA,OAAK1H,QAAQy0G,EAAa,IAHxD,IAIR,CAACtvB,IAEEukH,GAAsB9lM,EAAAA,EAAAA,KAAawzK,IACvC,MAAM,aAAE3iE,GAAiB2iE,EACzB,IAAK3iE,IAAiB1sF,EACpB,OAGF,MAAM,oBAAE6qF,GAAwB7qF,EAEhC,OAAO6sB,OAAO4K,KAAKi1D,GAAclgE,QAAO,CAACpmC,EAAQuU,KAC/C,MAAMxZ,EAAMwZ,EACZ,IACG+xF,EAAavrG,IACV0pG,IAAsB1pG,IACf,eAARA,GAAgC,iBAARA,GAAkC,cAARA,EAErD,OAAOiF,EAGT,MAAMspB,EA/GZ,SAAqCvuB,GACnC,OAAQA,GACN,IAAK,eACH,MAAO,yBACT,IAAK,YACH,MAAO,8BACT,IAAK,eACH,MAAO,iCACT,IAAK,aACH,MAAO,+BACT,IAAK,YACH,MAAO,8BACT,IAAK,aACH,MAAO,+BACT,IAAK,cACH,MAAO,8BACT,IAAK,cACH,MAAO,8BACT,IAAK,eACH,MAAO,iCACT,IAAK,YACH,MAAO,6BACT,IAAK,WACH,MAAO,6BACT,IAAK,kBACH,MAAO,8BACT,IAAK,aACH,MAAO,8BACT,IAAK,aACH,MAAO,8BACT,IAAK,aACH,MAAO,+BACT,IAAK,aACH,MAAO,+BACT,QACE,OAEN,CA0EsBygM,CAA4BzgM,GAE5C,IAAKuuB,EACH,OAAOtpB,EAGT,MAAMy7L,EAAmB5nM,EAAKy1B,GAE9B,MAAQ,GAAEtpB,IAAUA,EAAOtY,OAA6B,KAAI+zM,IAAxBA,GAA4C,GAC/E,GAAG,GACL,CAAC7hL,EAAM/lB,IAEV,OACEK,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,mCACV5H,MAAQ,sDAGRyH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iCACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,kBAAkBiJ,IAAI,QAAQzJ,EAAK,6BACjDK,EAAAA,GAAA7K,cAACg+G,GAAsB,CACrB/zG,OAAQsmB,GAAM9uB,GACds2G,oBAAqBA,EACrBC,uBAAwBA,EACxBpB,uBAAwBA,EACxBL,YAAaA,EACb2B,kBAAkB,mBAClBltG,WAAW+I,EAAAA,GAAAA,GACT,eACAgkG,GAAuB,sBAEzBE,kBAAkBlkG,EAAAA,GAAAA,GAAe,OAAQgkG,GAAuB,cAIpEltG,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACT,UACAgkG,GAAuB,YAGzBltG,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,cACL6uB,WAAS,EACTy1E,QAAM,EACN1pG,QAASg7L,GAET77L,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,wBAC9BK,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,YAAYo6L,KAIhCv6L,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACT,UACAgkG,GAAuB,YAGzBltG,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,kBAAkBiJ,IAAI,QAAQzJ,EAAK,sBAEjDK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,WACLpF,QAASmmM,GAERrnM,EAAK,wBAGPynM,EAAiB1gM,KAAKquK,GACrB/0K,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKkuK,EAAOllJ,OACZ1vB,UAAU,wCAEVU,QAASA,IAAMqmM,EAA2BnyB,IAE1C/0K,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQklJ,EAAOllJ,OACf8kB,OAAQ0yJ,EAAoBtyB,GAC5B59I,eAAa,SAOvBn3B,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASqzE,EACT/qG,QAAS8jM,EACTn/L,UAAW7F,EAAK,QAChByT,SAAU0T,GAETA,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGb,KCnDV,IAAe7B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAAsD,IAApD,OAAEvH,EAAM,wBAAEykM,GAAyBl9L,EAC1C,MAAM+e,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAC1B2tG,GAAWlqB,EAAAA,EAAAA,KAAmBnhF,EAAQtC,GAG5C,MAAO,CACLsmB,OACAo+K,sBAJ4Bp+K,EAAKgqF,WAAam0F,GAK9CtsC,YAAa55J,QAAQovG,GACrBjqB,QAASiqB,GAAUjqB,QACpB,IAEH,CAACphF,EAAMC,KAAiB,IAAf,OAAEvC,GAAQuC,EACjB,OAAOhE,SAAQinC,EAAAA,EAAAA,KAAWljC,EAAQtC,GAAQ,GAd1BqC,EAvJ0C7H,IASxD,IATyD,KAC7D8rB,EAAI,qBACJ8hL,EAAoB,YACpBjwC,EAAW,QACXz0E,EAAO,eACPmtC,EAAc,oBACd6zE,EAAmB,QACnBrlM,EAAO,SACPiO,GACD9S,EACC,MAAM,6BAAEy2G,IAAiCzxG,EAAAA,EAAAA,MAEnC6lM,GAAqBhqM,EAAAA,EAAAA,KAAQ,KACjC,GAAKqoF,EAIL,OAAOA,EAAQp9C,MAAKrgC,IAAA,IAAC,OAAEwqB,GAAQxqB,EAAA,OAAKwqB,IAAW23K,CAAoB,GAAC,GACnE,CAAC1kH,EAAS0kH,KAEP,YACJ97F,EAAW,sBAAEE,EAAqB,UAAE9kF,EAAS,uBAAEilF,EAAsB,aAAED,GACrEN,GAAqBi5F,GAAoBryF,cAAgB1sF,GAAM6qF,sBAC5Dk3F,EAA6BC,EAA2BC,IAA8B9jM,EAAAA,EAAAA,KACvFlE,GAAOkuD,EAAAA,GAAAA,KACPD,GAAUhuD,EAAAA,EAAAA,MAEhBud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGVvB,EAAAA,EAAAA,KAAU,KACJq6J,GAAeiwC,IAAyB/C,GAC1Cx0E,EAAeyqE,EAAAA,GAAkBuI,iBACnC,GACC,CAACv9K,EAAM6xI,EAAatnC,EAAgBw0E,EAAoB+C,IAE3D,MAAM7C,GAAwBpjM,EAAAA,EAAAA,KAAY,KACnCmkB,GAAS8hL,IAId17F,GAAa,GACbuE,EAA6B,CAC3BjxG,OAAQsmB,EAAK9uB,GACbi5B,OAAQ23K,EACRp1F,aAAc1G,IACd,GACD,CAAChmF,EAAM8hL,EAAsB17F,EAAcuE,EAA8B3E,IAEtEk8F,GAAqBrmM,EAAAA,EAAAA,KAAY,KAChCmkB,GAAS8hL,GAIdn3F,EAA6B,CAC3BjxG,OAAQsmB,EAAK9uB,GACbi5B,OAAQ23K,EACRp1F,aAAc,CACZy1F,cAAc,IAEhB,GACD,CAACniL,EAAM8hL,EAAsBn3F,IAE1B9C,GAAuBhsG,EAAAA,EAAAA,KAAasF,KACpCi9L,MAICp+K,IAASA,EAAK6qF,sBAIZ7qF,EAAK6qF,oBAAoB1pG,IAC/B,CAAC6e,EAAMo+K,KAEH52F,EAAqBC,IAA0BpuG,EAAAA,EAAAA,KAAS,GAE/D,GAAK0lM,EAIL,OACEzkM,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,mCACV5H,MAAQ,uDAGRyH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iCACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAACE,UAAQ,EAAC50B,UAAU,uBAC3BH,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CAAC1lB,OAAQ40K,EAAmB50K,OAAQsH,eAAa,KAGnEn3B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,uBAAuBiJ,IAAI,QAAQwkD,EAAQ,0BACzD5tD,EAAAA,GAAA7K,cAACg+G,GAAsB,CACrB/zG,OAAQsmB,GAAM9uB,GACds2G,oBAAqBA,EACrBC,uBAAwBA,EACxBpB,uBAAwBA,EACxBL,YAAaA,EACbvrG,WAAW+I,EAAAA,GAAAA,GACT,eACAgkG,GAAuB,sBAEzBG,kBAAkB,mBAClBD,kBAAkBlkG,EAAAA,GAAAA,GAAe,OAAQgkG,GAAuB,WAChEK,qBAAsBA,MAIxBu2F,GACA9jM,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,GAAAA,GACT,UACAgkG,GAAuB,YAGzBltG,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,cAAc0M,QAAM,EAACrM,aAAW,EAACzF,QAAS6mM,GACtD95I,EAAQ,4BAMjB5tD,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASqzE,EACT/qG,QAAS8jM,EACTn/L,UAAWooD,EAAQ,QACnBx6C,SAAU0T,GAETA,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAIjBH,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQkpM,EACRhpM,QAASkpM,EACT9/L,KAAMlI,EAAK,iCACXi2B,aAAa,SACbC,eAAgB+xK,EAChB9xK,sBAAoB,IAElB,KCtGV,IAAex3B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA6B,IAA3B,OAAEvH,GAAQuH,EACjB,MAAM+e,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,IACxB25B,KAAM/C,EAAWitD,aAAc6iE,GAAqBpkJ,EAAOo3B,MAC7DgqD,GAAUD,EAAAA,EAAAA,KAAmBnhF,EAAQtC,IAAS0jF,QAGpD,MAAO,CACLA,UACA9sD,YACA8vH,mBACAngI,UANgBD,IAAQE,EAAAA,EAAAA,KAAcF,GAOvC,GAZejkB,EA7DgD7H,IAS9D,IAT+D,UACnEo8B,EAAS,iBACT8vH,EAAgB,QAChBhjE,EAAO,UACPn9D,EAAS,eACTsqG,EAAc,mBACdqsE,EAAkB,QAClB79L,EAAO,SACPiO,GACD9S,GACCujB,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAGV,MAAMukF,GAAYvoF,EAAAA,EAAAA,KAAQ,KACxB,GAAKqoF,GAAY9sD,EAIjB,OAAOmtD,EAAAA,EAAAA,KACLL,EAAQnzD,QAAQolJ,IAAYA,EAAO9jE,UAASvqG,KAAIrB,IAAA,IAAC,OAAEwqB,GAAQxqB,EAAA,OAAKwqB,CAAM,IACtEmG,EACA8vH,EACD,GACA,CAAChjE,EAAS9sD,EAAW8vH,IAElBohD,GAA6B3lM,EAAAA,EAAAA,KAAaqlM,IAC9CtK,EAAmBsK,GACnB32E,EAAeyqE,EAAAA,GAAkByM,qBAAqB,GACrD,CAAC7K,EAAoBrsE,IAExB,OACEjwH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUy+J,eAAa,GACnC57E,EACCA,EAAUt8E,KAAI,CAAC9P,EAAIqiD,IACjBj5C,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPhuB,IAAKjQ,EACLk1K,cAAe7yH,EACf94C,UAAU,kCAEVU,QAASA,IAAMqmM,EAA2BtwM,IAE1CoJ,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CAAC1lB,OAAQj5B,EAAIugC,eAAa,OAI9Cn3B,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CACX6tD,cAAe,EACfjlK,IAAI,gBACJgB,KAAM8d,EAAY,uBAAyB,uBAK/C,KChEJmiL,GAAuB,CAAC,EAAG,GAAI,KAC/BC,GAAsB,CAC1BC,KAAM,KACNliJ,IAAK,MACLmiJ,KAAM,QAEFC,GAA6BH,GAAoBC,KA6OvD,IAAe1pM,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA6B,IAA3B,OAAEvH,GAAQuH,EACjB,MAAM,cAAEwhM,IAAkBpmM,EAAAA,EAAAA,KAAeL,GAAQu2L,WAAW56E,SAASj+G,IAAW,CAAC,EAEjF,MAAO,CACL+oM,gBACD,GANe1mM,EAhO4B7H,IAM1C,IAN2C,OAC/CwF,EAAM,cACN+oM,EAAa,SACbz7L,EAAQ,QACRjO,EAAO,eACPwxH,GACDr2H,EACC,MAAM,uBAAEwuM,EAAsB,iBAAEC,IAAqBzpM,EAAAA,EAAAA,MAE/Ce,GAAOC,EAAAA,EAAAA,MACNslF,EAAkBC,EAAcC,IAAiBvhF,EAAAA,EAAAA,MACjD2iG,EAAiB8hG,IAAsBvpM,EAAAA,EAAAA,KAAS,IAChDgB,EAAO8mJ,IAAY9nJ,EAAAA,EAAAA,IAAS,KAC5BinF,EAAkBC,IAAuBlnF,EAAAA,EAAAA,IAAiBwf,KAAKC,MAAQ0pL,KACvEK,EAAsBC,IAA2BzpM,EAAAA,EAAAA,IAAS,cAC1D0pM,EAAkBC,IAAuB3pM,EAAAA,EAAAA,IAA6B,KACtE4pM,EAAqBC,IAA0B7pM,EAAAA,EAAAA,IAAS,MACxD8pM,EAAiBC,IAAsB/pM,EAAAA,EAAAA,KAAS,IAEvDoe,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGVxC,EAAAA,EAAAA,IAAcoJ,IAAwB,IAAtB0jM,GAAiB1jM,EAC/B,GAAI0jM,IAAqBZ,EACzB,GAAKA,EAOE,CACL,MACEpoM,MAAOipM,EAAY,WAAEC,EAAU,WAAEpuK,EAAY2rE,gBAAiB0iG,GAC5Df,EAMJ,GALIa,GAAcniD,EAASmiD,GACvBC,IACFL,EAAuBd,GAAqBjxM,SAASoyM,GAAcA,EAAW1xH,WAAa,UAC3FmxH,EAAoBO,IAElBpuK,EAAY,CACd,MAAMsuK,GAAc70K,EAAAA,GAAAA,MAAkB4zK,GACtCM,EAAwB,UACxBviH,EAAwD,IAApC9/E,KAAKqZ,IAAIqb,EAAYsuK,GAC3C,CACID,GACFZ,GAAmB,EAEvB,MAvBEzhD,EAAS,IACT2hD,EAAwB,aACxBI,EAAuB,KACvB3iH,EAAsC,KAAlB3xD,EAAAA,GAAAA,MAAyB4zK,IAC7CQ,EAAoB,IACpBJ,GAAmB,EAkBrB,GACC,CAACH,IAEJ,MAAMiB,GAAwB7nM,EAAAA,EAAAA,KAAa9B,IACzC6oM,EAAmB7oM,EAAEC,OAAOu7B,QAAQ,GACnC,IAEGmsH,GAAoB7lJ,EAAAA,EAAAA,KAAa9B,IACrConJ,EAASpnJ,EAAEC,OAAOH,MAAM,GACvB,IAEG8pM,GAA+B9nM,EAAAA,EAAAA,KAAa9B,IAChDipM,EAAoB1wL,OAAOsxL,SAAS7pM,EAAEC,OAAOH,MAAO,IAAI,GACvD,IAEGuqF,GAAyBvoF,EAAAA,EAAAA,KAAa4jB,IAC1C8gE,EAAoB9gE,EAAKkjC,WACzB+8B,GAAe,GACd,CAACA,IAEEmkH,GAAkBhoM,EAAAA,EAAAA,KAAY,KAClCunM,GAAmB,GACnB,MAAMG,EAAqC,WAAxBN,EAAmCF,EAAmBzwL,OAAO2wL,GAChF,IAAI9tK,EACJ,OAAQ0tK,GACN,IAAK,SACH1tK,GAAavG,EAAAA,GAAAA,OAAmB0xD,EAAmBznE,KAAKC,OAAS,IACjE,MACF,IAAK,OACL,IAAK,MACL,IAAK,OACHqc,GAAavG,EAAAA,GAAAA,MAAkByzK,GAAoBQ,GAAwB,IAC3E,MACF,IAAK,YACH1tK,EAAa,EACb,MACF,QACEA,OAAanmC,EAGbyzM,EACFC,EAAuB,CACrBtrH,KAAMqrH,EAAcrrH,KACpB19E,SACAW,QACAymG,kBACA3rE,aACAouK,eAGFZ,EAAiB,CACfjpM,SACAW,QACAymG,kBACA3rE,aACAouK,eAGJh5E,EAAeyqE,EAAAA,GAAkBS,QAAQ,GACxC,CACD/7L,EAAQ4mF,EAAkByiH,EAAkBL,EAAwBD,EACpEE,EAAkB7hG,EAAiB+hG,EAAsBI,EAAqB5oM,EAAOkwH,IAGvF,OACEjwH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,2BACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,qBACZ4/E,SAAU5/E,EAAK,gCACfs7B,QAASurE,EACTjmG,SAAU6oM,KAGdppM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRN,UAAU,YACVu+C,YAAa/+C,EAAK,gBAClBJ,MAAOQ,EACPQ,SAAU6mJ,IAEZpnJ,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAAqBR,EAAK,kBAEzCK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBAAkBR,EAAK,kBACtCK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,gBACLC,QAAS,CACP,CACEf,MAAO,OACPO,MAAOH,EAAK,QAAS,IAEvB,CACEJ,MAAO,MACPO,MAAOH,EAAK,OAAQ,IAEtB,CACEJ,MAAO,OACPO,MAAOH,EAAK,QAAS,IAEvB,CACEJ,MAAO,YACPO,MAAOH,EAAK,YAEd,CACEJ,MAAO,SACPO,MAAOH,EAAK,oCAGhBY,SAAUioM,EACVhoM,SAAU+nM,IAEc,WAAzBA,GACCvoM,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,eAAeS,QAAM,EAACC,QAASskF,IAC9CqkH,EAAAA,GAAAA,IAAe7pM,EAAMqmF,GAAkB,KAAEx8B,EAAAA,GAAAA,IAAW7pD,EAAMqmF,IAG/DhmF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAAqBR,EAAK,oBAEvC6mG,GACAxmG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBAAkBR,EAAK,sBACtCK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,eACLC,QAAS,IACJwnM,GAAqBphM,KAAK+iM,IAAC,CAAQlqM,MAAOkqM,EAAElyH,WAAYz3E,MAAO2pM,MAClE,CACElqM,MAAO,IACPO,MAAOH,EAAK,YAEd,CACEJ,MAAO,SACPO,MAAOH,EAAK,mCAGhBY,SAAUqoM,EACVpoM,SAAUmoM,IAEa,WAAxBA,GACC3oM,EAAAA,GAAA7K,cAAA,SACEgL,UAAU,2BACV/M,KAAK,SACL6sB,IAAI,IACJT,IAAI,QACJjgB,MAAOkpM,EACPloM,SAAU8oM,IAGdrpM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAAqBR,EAAK,mBAG3CK,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,SAAO,EACP13B,QAAS0oM,EACTn2L,SAAUy1L,EACVrjM,UAA2B7F,EAAhBwoM,EAAqB,WAAmB,eAEnDnoM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,sBAGjBH,EAAAA,GAAA7K,cAACw1D,GAAa,CACZpsD,OAAQ2mF,EACRv+B,cAAY,EACZE,gBAAc,EACdpoD,QAAS2mF,EACTp+B,SAAU8iC,EACVtjC,WAAYw/B,EACZl/B,kBAAmBnnD,EAAK,UAEtB,KC7EV,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEjG,GAAQiG,EACjB,MAAM,WAAE8gG,IAAepkG,EAAAA,EAAAA,KAAeL,GAAQu2L,WAAW56E,SAASj+G,IAAW,CAAC,GACxE,OAAEqkG,EAAM,UAAEimG,EAAS,WAAEC,GAAexjG,GAAc,CAAC,EACnDzgF,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAGhC,MAAO,CACLqkG,SACAimG,YACAC,aACAhkL,UANgBD,IAAQE,EAAAA,EAAAA,KAAcF,GAOvC,GAZejkB,EAtJgC7H,IAQ9C,IAR+C,OACnDwF,EAAM,OACNqkG,EAAM,UACNimG,EAAS,WACTC,EAAU,UACVhkL,EAAS,SACTjZ,EAAQ,QACRjO,GACD7E,EACC,MAAM,iBACJq6B,EAAgB,wBAChB21K,EAAuB,yBACvBC,EAAwB,SACxB/qK,IACElgC,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MACP,MACJkqM,EAAQ,EAAC,WAAEb,EAAU,KAAEnsH,EAAI,QAAEitH,GAC3BtmG,GAAU,CAAC,EACT5oE,EAAa4oE,GAAQ5oE,YAAsD,KAAvC4oE,EAAO5oE,YAAavG,EAAAA,GAAAA,OAA0B/V,KAAKC,MACvF83B,GAAcmtD,GAAQ5oE,YAAc,IAAKvG,EAAAA,GAAAA,MAAmB,GAElEp3B,EAAAA,EAAAA,KAAU,KACJ4/E,IACF8sH,EAAwB,CAAExqM,SAAQ09E,SAClC+sH,EAAyB,CAAEzqM,SAAQ09E,SACrC,GACC,CAAC19E,EAAQ09E,EAAM8sH,EAAyBC,IAE3C,MAAMG,GAAoBzoM,EAAAA,EAAAA,KAAY,MACpCk7G,EAAAA,GAAAA,IAAoBhZ,EAAQ3mB,MAC5B7oD,EAAiB,CACf9/B,QAASwL,EAAK,eACd,GACD,CAAC8jG,EAAQ9jG,EAAMs0B,IAiElB,OA/DA9W,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IA8DRuB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,+BACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACXsjG,GACAzjG,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,gBAAgBR,EAAK,YAEnC8jG,GACCzjG,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,cAAcsjG,EAAO1jG,OAAS0jG,EAAO3mB,MACnD98E,EAAAA,GAAA7K,cAAA,SACEgL,UAAU,eACVZ,MAAOkkG,EAAO3mB,KACdshD,UAAQ,EACRv9H,QAASmpM,IAEXhqM,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,YAAYU,QAASmpM,GAAoBrqM,EAAK,aAC/DhC,QAAQk9B,IACP76B,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,gBACVm2C,EACG32C,EAAK,eACLA,EAAK,gBAAkB,IAAE6pM,EAAAA,GAAAA,IAAe7pM,EAAMk7B,OAAe2uB,EAAAA,GAAAA,IAAW7pD,EAAMk7B,QAIvFkvK,GACC/pM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,SAAIwK,EAAK,mBACTK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,6CAEVU,QAASA,IAAMi+B,EAAS,CAAEloC,GAAImzM,KAE9B/pM,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQk6K,EACRp1J,QAAQtvB,EAAAA,GAAAA,IAAoB1lB,EAAoB,IAAd8jG,EAAOt+E,MAAa,GACtDgS,eAAa,MA9FP8yK,MACtB,GAAKP,GAAWl2M,SAAUm2M,GAAYn2M,OACtC,OAAKk2M,EAEH1pM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,SAAIu0M,EAAUl2M,OAASmM,EAAK,eAAgBmqM,GAASnqM,EAAK,gBAC1DK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,iBACTupM,EAAUl2M,SACVy1M,EAAatpM,EAAK,4BAA6BspM,EAAaa,GAASnqM,EAAK,mBAE3E+pM,EAAUhjM,KAAKwjM,IACd,MAAMC,GAAW9kL,EAAAA,GAAAA,IAAoB1lB,EAAsB,IAAhBuqM,EAAS/kL,MAAa,GAC3DwvB,EAASu1J,EAASE,eAAkB,GAAED,OAAsBxqM,EAAK,qBAAuBwqM,EAC9F,OACEnqM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,6CAEVU,QAASA,IAAMi+B,EAAS,CAAEloC,GAAIszM,EAASr6K,UAEvC7vB,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQq6K,EAASr6K,OACjB8kB,OAAQA,EACRxd,eAAa,IAEN,MAtBEn3B,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,KA0BvB,EAuECwvL,GAnEcI,MACvB,IAAI5mG,GAAQ42F,UAAZ,CACA,IAAKsP,GAAcD,EAAW,OAAO1pM,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,MAC7C,GAAKkvL,GAAYn2M,OACjB,OACEwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,SAAgBwK,EAAZgmB,EAAiB,oBAA4B,mBACjD3lB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,gBACVwpM,EAAWjjM,KAAK4jM,GACftqM,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAU,6CAEVU,QAASA,IAAMi+B,EAAS,CAAEloC,GAAI0zM,EAAUz6K,UAExC7vB,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQy6K,EAAUz6K,OAClB8kB,QAAQtvB,EAAAA,GAAAA,IAAoB1lB,EAAuB,IAAjB2qM,EAAUnlL,MAAa,GACzDgS,eAAa,QAhBc,CAqB/B,EA8CCkzK,KAIH,KC1IJE,GAAS,IAEf,SAASC,GAAiBC,EAAuBC,GAC/C,MAAQC,YAAaC,EAAed,MAAOe,EAAU,EAAG1lL,KAAM2lL,GAAWL,GACjEE,YAAaI,EAAejB,MAAOkB,EAAU,EAAG7lL,KAAM8lL,GAAWP,EACzE,OAAIE,GAAiBG,EAAsB/yL,OAAO4yL,GAAiB5yL,OAAO+yL,GACtEF,GAAWG,EAAgBA,EAAUH,EAClCI,EAASH,CAClB,CAEA,MAmUA,IAAexsM,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMwhB,KAA6B,IAA3B,OAAE9jB,GAAQ8jB,EACjB,MAAM,QAAEknG,EAAO,eAAE8gF,IAAmBnpM,EAAAA,EAAAA,KAAeL,GAAQu2L,WAAW56E,SAASj+G,IAAW,CAAC,EACrFsmB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAGhC,MAAO,CACLq6L,gBAAiBrvE,EACjB+gF,uBAAwBD,EACxBxlL,OACAC,UANgBD,IAAQE,EAAAA,EAAAA,KAAcF,GAOvC,GAXejkB,EAnU6B7H,IAS3C,IAT4C,OAChDwF,EAAM,KACNsmB,EAAI,gBACJ+zK,EAAe,uBACf0R,EAAsB,SACtBz+L,EAAQ,UACRiZ,EAAS,QACTlnB,EAAO,eACPwxH,GACDr2H,EACC,MAAM,yBACJwxM,EAAwB,iBACxBn3K,EAAgB,uBAChBm0K,EAAsB,yBACtBiD,EAAwB,iCACxBC,EAAgC,oBAChCC,IACE3sM,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,MAEN4rM,EAA6BC,EAA2BC,IAA8B7nM,EAAAA,EAAAA,MACtF8nM,EAAoBC,EAAkBC,IAAqBhoM,EAAAA,EAAAA,MAC3DioM,EAAgBC,IAAqBhtM,EAAAA,EAAAA,OACrCm7L,EAAoBC,EAAkBC,IAAqBv2L,EAAAA,EAAAA,MAC3DmoM,EAAgBC,IAAqBltM,EAAAA,EAAAA,OAE5Coe,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAGV,MAAMytM,GAAuBzxM,EAAAA,EAAAA,KAAQ,KACnC,GAAKg/L,EACL,OAAOA,EACJr9F,MAAK/2F,IAAA,IAAC,WAAEw1B,GAAYx1B,EAAA,OACnBw1B,GAAeA,GAAavG,EAAAA,GAAAA,MAAkB63K,GAAAA,GAAsB,GAAK,GACzE,GACH,CAAC1S,IACE18L,GAAcC,EAAAA,EAAAA,MACpBusE,EAAAA,GAAAA,GAAYxsE,EAAamvM,EAAuB,SAAOx3M,GAEvD,MAAM03M,GAAmB3xM,EAAAA,EAAAA,KAAQ,IAAMirB,IAAQ40H,EAAAA,EAAAA,KAAgB50H,IAAO,CAACA,IACjE2mL,EAAgB5S,GAAiB/zJ,MAAK/+B,IAAA,IAAC,YAAEgkM,GAAahkM,EAAA,OAAKgkM,CAAW,IACtE2B,EAAoBF,EAAoB,GAAE/xI,EAAAA,MAAkB+xI,IAAqBC,GAAevvH,KAChGyvH,GAAkB9xM,EAAAA,EAAAA,KAAQ,KAC9B,MAAM2vH,EAAU1kG,GAAM4jB,UAAYmwJ,EAAkBA,GAAiB9pK,QAAOhuB,IAAA,IAAC,YAAEgpM,GAAahpM,EAAA,OAAMgpM,CAAW,IAC7G,OAAOvgF,GAASpzE,KAAKwzJ,GAAiB,GACrC,CAAC9kL,GAAM4jB,UAAWmwJ,IAOf+S,GAAejrM,EAAAA,EAAAA,KAAakiG,IAChC,MAAM,KACJ3mB,EAAI,MAAE/8E,EAAK,gBAAEymG,EAAe,WAAE3rE,EAAU,WAAEouK,GACxCxlG,EACJ2kG,EAAuB,CACrBhpM,SACA09E,OACA/8E,QACAymG,kBACA3rE,aACAouK,aACA5O,WAAW,GACX,GACD,CAACj7L,EAAQgpM,IAENqE,GAAclrM,EAAAA,EAAAA,KAAakiG,IAC/BsoG,EAAkBtoG,GAClBmoG,GAAkB,GACjB,CAACA,IAEEz8E,GAAe5tH,EAAAA,EAAAA,KAAY,KAC1BuqM,IACLU,EAAaV,GACbC,OAAkBr3M,GAClBm3M,IAAmB,GAClB,CAACA,EAAmBW,EAAcV,IAE/BY,GAAuBnrM,EAAAA,EAAAA,KAAY,KACvC0uH,EAAeyqE,EAAAA,GAAkBiS,WAAW,GAC3C,CAAC18E,IAEE28E,GAAsBrrM,EAAAA,EAAAA,KAAY,KAClC8qM,GACFI,EAAYJ,EACd,GACC,CAACI,EAAaJ,IAEXQ,GAAyBtrM,EAAAA,EAAAA,KAAY,KACzC+pM,EAAiC,CAAElsM,WACnCssM,GAA4B,GAC3B,CAACtsM,EAAQssM,EAA4BJ,IAElCwB,GAAiBvrM,EAAAA,EAAAA,KAAakiG,IAClC8nG,EAAoB,CAAEnsM,SAAQqkG,WAC9BwsB,EAAeyqE,EAAAA,GAAkBqS,WAAW,GAC3C,CAAC3tM,EAAQ6wH,EAAgBs7E,IAEtByB,GAAezrM,EAAAA,EAAAA,KAAakiG,IAChC4nG,EAAyB,CAAEjsM,SAAQ09E,KAAM2mB,EAAO3mB,MAAO,GACtD,CAAC19E,EAAQisM,IAEN4B,GAAc1rM,EAAAA,EAAAA,KAAakiG,IAC/BwoG,EAAkBxoG,GAClB02F,GAAkB,GACjB,CAACA,IAEEt/B,GAAet5J,EAAAA,EAAAA,KAAY,KAC1ByqM,IACLgB,EAAahB,GACbC,OAAkBv3M,GAClB0lM,IAAmB,GAClB,CAACA,EAAmB4S,EAAchB,IAE/BkB,IAAW3rM,EAAAA,EAAAA,KAAau7E,KAC5B2/B,EAAAA,GAAAA,IAAoB3/B,GACpB7oD,EAAiB,CACf9/B,QAASwL,EAAK,eACd,GACD,CAACA,EAAMs0B,IAEJk5K,GAAoB1pG,IACxB,MAAM,MACJqmG,EAAQ,EAAC,WAAEb,EAAU,WAAEpuK,EAAU,YAAE8vK,EAAW,UAAEyC,EAAS,UAAE/S,GACzD52F,EACJ,IAAI57F,EAAO,GASX,GAPEA,GADGwyL,GAAa4O,GAAca,EAAQb,EAC/BtpM,EAAK,UAAWspM,EAAaa,GAC3BA,EACFnqM,EAAK,eAAgBmqM,GAErBnqM,EAAK,eAGV06L,EAEF,OADAxyL,GAAS,IAAG0iM,MAAU5qM,EAAK,aACpBkI,EAOT,GAJIulM,IACFvlM,GAAS,IAAG0iM,MAAU5qM,EAAK,eAAgBytM,WAG1B14M,IAAfu0M,GAA4Ba,IAAUb,EACxCphM,GAAS,IAAG0iM,MAAU5qM,EAAK,2BACtB,GAAIk7B,EAAY,CACrB,MAAM+S,EAAwC,KAAhC/S,GAAavG,EAAAA,GAAAA,OAC3BzsB,GAAS,IAAG0iM,MAEV1iM,GADE+lC,EAAO,EACDjuC,EAAK,wBAAwB0tM,EAAAA,GAAAA,IAAgB1tM,EAAMiuC,IAEnDjuC,EAAK,qBAEjB,MAAWgrM,IACT9iM,GAAS,IAAG0iM,MAAU5qM,EAAK,gBAG7B,OAAOkI,CAAI,EAGPylM,GAAsB7pG,IAC1B,MAAM,MACJqmG,EAAQ,EAAC,WAAEb,EAAU,UAAE5O,EAAS,WAAEx/J,GAChC4oE,EACJ,OAAI42F,EACK,wBAEL4O,GAAca,EAAQb,EACjB,yBAELpuK,GAC4C,KAAhCA,GAAavG,EAAAA,GAAAA,QACf,EACH,uBAGJ,uBAAuB,EAG1Bi5K,GAAyB9pG,IAC7B,MAAMhrE,EAAmC,GA8BzC,OA7BAA,EAAQzyB,KAAK,CACXjG,MAAOJ,EAAK,QACZsG,KAAM,OACNsuC,QAASA,IAAM24J,GAASzpG,EAAO3mB,QAG5B2mB,EAAOknG,aAAgBlnG,EAAO42F,WACjC5hK,EAAQzyB,KAAK,CACXjG,MAAOJ,EAAK,QACZsG,KAAM,OACNsuC,QAASA,IAjJKkvD,KAClB2nG,EAAyB,CAAEhsM,SAAQqkG,WACnCwsB,EAAeyqE,EAAAA,GAAkBiS,WAAW,EA+IzBa,CAAW/pG,KAIzBA,EAAO42F,UAQV5hK,EAAQzyB,KAAK,CACXjG,MAAOJ,EAAK,cACZsG,KAAM,SACNsuC,QAASA,IAAM04J,EAAYxpG,GAC3Bn9F,aAAa,IAXfmyB,EAAQzyB,KAAK,CACXjG,MAAOJ,EAAK,gBACZsG,KAAM,SACNsuC,QAASA,IAAMk4J,EAAYhpG,GAC3Bn9F,aAAa,IAUVmyB,CAAO,EAGhB,OACEz4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4BACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACu3H,GAAAA,EAAY,CACXh8C,OAAQikB,GAAAA,EAAe84G,OACvBpwM,KAAMqwM,EAAAA,IACNvtM,UAAU,iBAEZH,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,gBAA4BR,EAAZgmB,EAAiB,yBAAiC,qBAEhF2mL,GACCtsM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACkuG,GAAAA,EAAS,CACRljG,UAAU,iBACV28E,KAAMwvH,EACN18E,WAAS,EACTC,SAAWnqG,GAAM4jB,eAAkC50C,EAAtBk4M,EAC7B7sM,MAAyBJ,EAAlB+lB,GAAM4jB,UAAiB,aAAqB,sCAIzDtpC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUy+J,eAAa,GACpC5+J,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACiG,IAAI,SAAS1G,UAAU,cAAcU,QAAS6rM,GAC1D/sM,EAAK,oBAEL4sM,IAAoBA,EAAgB/4M,SAAWwM,EAAAA,GAAA7K,cAAC8oH,GAAAA,EAAY,CAACp2G,KAAK,iBAAiBhB,IAAI,YACzF0lM,GAAiB7lM,KAAK+8F,GACrBzjG,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPG,YAAah1B,EAAAA,GAAA7K,cAAA,KAAGgL,UAAY,mCAAkCmtM,GAAmB7pG,OACjF+G,cAAc,OACd11E,WAAS,EAETj0B,QAASA,IAAMisM,EAAerpG,GAC9BvvD,eAAgBq5J,GAAsB9pG,GACtC58F,IAAK48F,EAAO3mB,MAEZ98E,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,sBAAsBsjG,EAAO1jG,OAAS0jG,EAAO3mB,MAC7D98E,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B+jM,GAAiB1pG,OAIxBzjG,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,oBAAoB0G,IAAI,cAAclH,EAAK,yBAEzDwrM,GAA0BxtM,QAAQwtM,EAAuB33M,SACxDwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUy+J,eAAa,GACpC5+J,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,eAAe0G,IAAI,SAASlH,EAAK,iBAC9CK,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP5uB,KAAK,SACLK,aAAW,EACXO,IAAI,SACJhG,QAAS4qM,GAETzrM,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASR,EAAK,2BAE/BwrM,GAAwBzkM,KAAK+8F,GAC5BzjG,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPG,YAAah1B,EAAAA,GAAA7K,cAAA,KAAGgL,UAAY,mCAAkCmtM,GAAmB7pG,OACjF+G,cAAc,OACd11E,WAAS,EAETj0B,QAASA,IAAMisM,EAAerpG,GAC9BvvD,eAAgBq5J,GAAsB9pG,GACtC58F,IAAK48F,EAAO3mB,MAEZ98E,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,SAASsjG,EAAO1jG,OAAS0jG,EAAO3mB,MAChD98E,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,WAAWiJ,IAAI,QAC5B+jM,GAAiB1pG,SAO9BzjG,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQitM,EACR/sM,QAASitM,EACT3rM,MAAOJ,EAAK,yBACZkI,KAAMlI,EAAK,4BACXm2B,sBAAoB,EACpBF,aAAcj2B,EAAK,aACnBk2B,eAAgBg3K,IAElB7sM,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQotM,EACRltM,QAASotM,EACT9rM,MAAOJ,EAAK,cACZkI,KAAMlI,EAAK,eACXm2B,sBAAoB,EACpBF,aAAcj2B,EAAK,gBACnBk2B,eAAgBs5F,IAElBnvH,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ27L,EACRz7L,QAAS27L,EACTr6L,MAAOJ,EAAK,cACZkI,KAAMlI,EAAK,kBACXm2B,sBAAoB,EACpBF,aAAcj2B,EAAK,UACnBk2B,eAAgBglI,IAEd,KC1RV,IAAev8J,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEwqB,GAAQxqB,EAGjB,MAAO,CACLq/B,MAHWC,EAAAA,EAAAA,KAAWjjC,EAAQmuB,GAI/B,GANepuB,EA3D2B7H,IAOzC,IAP0C,OAC9Ci2B,EAAM,OACNzwB,EAAM,MACNgnG,EAAK,KACLjhF,EAAI,UACJQ,EAAS,KACT+e,GACD9qC,EACC,MAAM,SAAEklC,EAAQ,oBAAE6uK,IAAwB/uM,EAAAA,EAAAA,MAEpCsK,GAAiB0kM,EAAAA,GAAAA,GAAuB,eACxCjuM,GAAOC,EAAAA,EAAAA,KAEP00C,GAAWxY,EAAAA,EAAAA,KAAgB4I,GAC3BmpK,EAAuC,KAA1B1oL,GAAOmP,EAAAA,GAAAA,OAA0B/V,KAAKC,MAEnDsvL,GAAaC,EAAAA,GAAAA,IAAQ,IAAIxvL,KAAKsvL,KAChCrkJ,EAAAA,GAAAA,IAAW7pD,EAAMkuM,IAAaG,EAAAA,GAAAA,IAAgBruM,EAAMkuM,GAAW,GAAM,GAAO,GAM1EI,GAAsB1sM,EAAAA,EAAAA,KAAY,KACtCosM,EAAoB,CAAEvuM,SAAQywB,SAAQq+K,YAAY,GAAO,GACxD,CAAC9uM,EAAQuuM,EAAqB99K,IAE3Bs+K,GAAsB5sM,EAAAA,EAAAA,KAAY,KACtCosM,EAAoB,CAAEvuM,SAAQywB,SAAQq+K,YAAY,GAAQ,GACzD,CAAC9uM,EAAQuuM,EAAqB99K,IAEjC,OACE7vB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW+I,EAAe,MAC7BlJ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW+I,EAAe,QAC7BlJ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW+I,EAAe,QAASrI,QAftButM,KACtBtvK,EAAS,CAAEloC,GAAIi5B,GAAS,GAelB7vB,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACLpf,IAAKgpB,EACLxyB,KAAK,SACL6oB,KAAMwe,IAER1kC,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW+I,EAAe,cAC7BlJ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW+I,EAAe,cAAeorC,GAC9Ct0C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW+I,EAAe,kBAAmBk9F,KAGtDpmG,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW+I,EAAe,SAAU4kM,IAE3C9tM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAW+I,EAAe,YAC7BlJ,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAW+I,EAAe,UAAWrI,QAASotM,GACvCtuM,EAAZgmB,EAAiB,sBAA8B,sBAElD3lB,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAW+I,EAAe,UAAWtI,QAAM,EAACC,QAASstM,GAC1DxuM,EAAK,oBAGN,KCsCV,IAAerB,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMiF,KAA6B,IAA3B,OAAEvH,GAAQuH,EACjB,MAAM+e,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,GAEhC,MAAO,CACLsmB,OACAC,UAAWD,IAAQE,EAAAA,EAAAA,KAAcF,GAClC,GAPejkB,EA7FkC7H,IAMhD,IANiD,KACrD8rB,EAAI,OACJtmB,EAAM,SACNsN,EAAQ,UACRiZ,EAAS,QACTlnB,GACD7E,EACC,MAAM,wBAAEy0M,EAAuB,qBAAEtU,IAAyBn7L,EAAAA,EAAAA,OACnD0vM,EAAuBC,EAAqBC,IAAwB3qM,EAAAA,EAAAA,MACpE4qM,EAAuBC,EAAqBC,IAAwB9qM,EAAAA,EAAAA,KAErElE,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,KAGVvB,EAAAA,EAAAA,KAAU,KACHwoB,GAAM22K,eAAiB76L,EAAAA,EAAAA,KAASpC,IACnC26L,EAAqB,CAAE36L,UACzB,GACC,CAACsmB,EAAMtmB,EAAQ26L,IAElB,MAAM6U,GAA0BrtM,EAAAA,EAAAA,KAAY,KAC1C8sM,EAAwB,CAAEjvM,SAAQ8uM,YAAY,IAC9CM,GAAsB,GACrB,CAACH,EAAyBjvM,EAAQovM,IAE/BK,GAA0BttM,EAAAA,EAAAA,KAAY,KAC1C8sM,EAAwB,CAAEjvM,SAAQ8uM,YAAY,IAC9CS,GAAsB,GACrB,CAACN,EAAyBjvM,EAAQuvM,IAErC,OACE3uM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iCACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACu3H,GAAAA,EAAY,CACXh8C,OAAQikB,GAAAA,EAAem6G,YACvBzxM,KAAM0xM,EAAAA,IACN5uM,UAAU,iBAEXxC,QAAQ+nB,GAAM22K,cAAc7oM,SAC3BwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,qBAAqBU,QAAS0tM,GAAqB,cACrEvuM,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,qBAAqBU,QAAS6tM,EAAqB9tM,QAAM,GAAC,iBAIlFZ,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UAAUy+J,eAAa,GACpC5+J,EAAAA,GAAA7K,cAAA,KAAG0R,IAAI,SACH6e,GAAM22K,aAAiC32K,EAAK22K,aAAa7oM,OACvDmM,EAAK,eAAgB+lB,EAAK22K,aAAa7oM,QAAUmM,EAAK,oBADnCA,EAAK,aAG5B+lB,GAAM22K,cACNr8L,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC5T,IAAI,YAEiB,IAA/B6e,GAAM22K,cAAc7oM,QACnBwM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,eAAe0G,IAAI,SACjBlH,EAAZgmB,EAAiB,iCAAyC,gCAG9DD,GAAM22K,cAAc31L,KAAIrB,IAAA,IAAC,OAAEwqB,EAAM,MAAEu2E,EAAK,KAAEjhF,GAAM9f,EAAA,OAC/CrF,EAAAA,GAAA7K,cAAC25M,GAAW,CACVj/K,OAAQA,EACRu2E,MAAOA,EACPjhF,KAAMA,EACNQ,UAAWA,EACXvmB,OAAQA,EACRyH,IAAKgpB,GACL,MAIR7vB,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ+vM,EACR7vM,QAAS+vM,EACTzuM,MAAM,uBACN8H,KAAK,gDACLguB,eAAgB+4K,IAElB5uM,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQkwM,EACRhwM,QAASkwM,EACT5uM,MAAM,uBACN8H,KAAK,gDACLguB,eAAgBg5K,IAEd,KCmJV,IAAevwM,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA6B,IAA3B,OAAEvC,GAAQuC,EACjB,MAAM+jB,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQtC,IAC1B,mBAAE81J,EAAqB85C,EAAAA,KAAyBttM,EAAO+iC,WAAa,CAAC,EAErEm+C,GAAeC,EAAAA,EAAAA,KAAmBnhF,EAAQtC,GAC1CyuJ,EAAiBjrE,GAAcirE,gBAAkBqH,EACjDvvI,GAAYC,EAAAA,EAAAA,KAAcF,GAEhC,MAAO,CACLkoI,iBAAkBhrE,GAAcgrE,iBAChCl6G,mBAAoBhyC,EAAOiyC,UAAUD,mBACrChuB,OACAwvI,qBACArH,iBACAloI,YACD,IAEH,CAACjkB,EAAMwhB,KAAiB,IAAf,OAAE9jB,GAAQ8jB,EACjB,OAAOvlB,SAAQinC,EAAAA,EAAAA,KAAWljC,EAAQtC,GAAQ,GAnB1BqC,EAlO+B7H,IAS7C,IAT8C,mBAClD85C,EAAkB,iBAClBk6G,EAAgB,KAChBloI,EAAI,SACJhZ,EAAQ,QACRjO,EAAO,mBACPy2J,EAAkB,eAClBrH,EAAc,UACdloI,GACD/rB,EACC,MAAM,wBAAEq1M,IAA4BrwM,EAAAA,EAAAA,MAE9Be,GAAOC,EAAAA,EAAAA,MACNkpH,EAAWC,IAAgBhqH,EAAAA,EAAAA,KAAS,IACpC+nB,EAAWglF,IAAgB/sG,EAAAA,EAAAA,KAAS,IACpCmwM,EAAuBC,IAA4BpwM,EAAAA,EAAAA,IAAuC6uJ,IAE1FwhD,EAAqBC,IAA0BtwM,EAAAA,EAAAA,IAAS8uJ,IAE/D1wI,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAGV,MAAM6wM,GAAmB70M,EAAAA,EAAAA,KAAQ,IAAM,CAAC,CACtC8E,MAAO,MACPO,MAAOH,EAAK,iBACX,CACDJ,MAAO,OACPO,MAAOH,EAAK,kBACX,CACDJ,MAAO,OACPO,MAAOH,EAAK,kBACV,CAACA,IAEC4vM,GAAsBhuM,EAAAA,EAAAA,KAAY,KACjCmkB,IACLomF,GAAa,GAEbmjG,EAAwB,CACtB7vM,OAAQsmB,EAAK9uB,GACbg3J,iBAAkBshD,EAClBrhD,eAAgBuhD,IAChB,GACD,CAAC1pL,EAAMwpL,EAAuBD,EAAyBG,KAE1DlyM,EAAAA,EAAAA,KAAU,KACR4uG,GAAa,GACbid,GAAa,GACbomF,EAAyBvhD,GACzByhD,EAAuBxhD,EAAe,GACrC,CAACD,EAAkBC,IAEtB,MAAM2hD,GAA2B/0M,EAAAA,EAAAA,KAC/B,IAAMi5C,GAAoB/jB,QAAOtqB,IAAA,IAAC,WAAEk3F,GAAYl3F,EAAA,OAAMk3F,CAAU,KAChE,CAAC7oD,KAGHx2C,EAAAA,EAAAA,KAAU,KACR,QAA4BxI,IAAxB06M,GAAqCA,IAAwBvhD,EAAjE,CAKA,GAAoC,SAAhCqhD,GAAuB97M,MAC8B,QAA3Bw6J,GAAkBx6J,MAA6C,SAA3Bw6J,GAAkBx6J,MAEd,IAAzC87M,EAAsBlgC,QAAQx7K,OAEvD,YADAu1H,GAAa,GAKjB,GAAImmF,GAAuB97M,OAASw6J,GAAkBx6J,KAAtD,CAKA,GAAoC,SAAhC87M,GAAuB97M,MAA8C,SAA3Bw6J,GAAkBx6J,KAAiB,CAC/E,MAAMq8M,EAAwBP,EAAsBlgC,QAC9C0gC,EAA0B9hD,GAAkBohB,QAElD,GAAIygC,EAAsBj8M,SAAWk8M,EAAwBl8M,QAC1Di8M,EAAsBz8H,UAAUopB,MAChCuzG,IAAmBD,EAAwBhqK,MACzCkqK,IAAoBhtK,EAAAA,EAAAA,KAAe+sK,EAAeC,OAIrD,YADA7mF,GAAa,EAGjB,CAEAA,GAAa,EAjBb,MAFEA,GAAa,EAZf,MAFEA,GAAa,EAiCI,GAClB,CACDqmF,EACAvhD,EACAqhD,EACAthD,IAGF,MAAMiiD,GAA8BtuM,EAAAA,EAAAA,KAAahC,IACjC,QAAVA,GACF4vM,EAAyB,CAAE/7M,KAAM,QACjCi8M,EAAuBxhD,IACJ,SAAVtuJ,GACT4vM,EAAyB,CACvB/7M,KAAM,OACN47K,QAAoC,SAA3BphB,GAAkBx6J,KAAkBw6J,EAAiBohB,QAAU,KAE1EqgC,EAAuBxhD,KAEvBshD,OAAyBz6M,GACzB26M,OAAuB36M,GACzB,GACC,CAACk5J,EAAkBC,IAEhBiiD,GAAuBvuM,EAAAA,EAAAA,KAAa9B,IACxC,IAAKimB,IAAS8pL,EAA0B,OAExC,MAAM,KAAEnvM,EAAI,QAAE46B,GAAYx7B,EAAE2X,cAC5B,GAAoC,SAAhC83L,GAAuB97M,KAAiB,CAC1C,MAAMowC,EAAW,CAAEy7G,SAAU5+I,GAE3B8uM,EADEl0K,EACuB,CACvB7nC,KAAM,OACN47K,QAAS,IAAIkgC,EAAsBlgC,QAASxrI,IAGrB,CACvBpwC,KAAM,OACN47K,QAASkgC,EAAsBlgC,QAAQr/I,QAAQogL,KAAWntK,EAAAA,EAAAA,KAAemtK,EAAOvsK,MAGtF,IACC,CAACgsK,EAA0B9pL,EAAMwpL,IAE9Bc,GAA6BzuM,EAAAA,EAAAA,KAAahC,IAC9C8vM,EAAuB9vM,EAAM,GAC5B,IAEG0wM,GAA+B1uM,EAAAA,EAAAA,KAAahC,GACzCI,EAAK,0CAA2CJ,IACtD,CAACI,IAEEuwM,EAA2BvqL,IACG,QAAhCupL,GAAuB97M,MAAkD,SAAhC87M,GAAuB97M,MAEpE,OACE4M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACXivM,GAAuBc,GACvBlwM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,mBACXR,EAAK,2BAERK,EAAAA,GAAA7K,cAACyd,GAAAA,EAAW,CACVqN,IAAK,EACLT,IAAK01I,EACL31J,MAAO6vM,EACP7uM,SAAUyvM,EACVj1E,YAAak1E,EACbE,kBAAgB,IAElBnwM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,kCACVR,EAAK,oCAIZK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,mBACXR,EAAK,uBAERK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTI,SAAU0uM,GAAuB97M,MAAQ,OACzCiN,KAAK,YACLC,QAASgvM,EACT/uM,SAAUsvM,IAEZ7vM,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,kCACsB,QAAhC+uM,GAAuB97M,MAAkBuM,EAAK,0BACd,SAAhCuvM,GAAuB97M,MAAmBuM,EAAK,4BAC9CuvM,GAAyBvvM,EAAK,0BAGH,SAAhCuvM,GAAuB97M,MACtB4M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,4BACbH,EAAAA,GAAA7K,cAAA,MAAIgL,UAAU,mBACXR,EAAK,2BAEP6vM,GAA0B9oM,KAAIC,IAAA,IAAC,SAAE68B,EAAQ,MAAEzjC,GAAO4G,EAAA,OACjD3G,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPjlD,KAAMmjC,EAASy7G,SACfhkH,QAASi0K,GAAuBlgC,QAAQ5yE,MAAMvxB,IAAMjoC,EAAAA,EAAAA,KAAeY,EAAUqnC,KAC7E/qE,MACEE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAAC8/C,GAAAA,EAAmB,CAACzR,SAAUA,EAAUkQ,mBAAoBA,IAC5D3zC,GAGLm/I,UAAQ,EACR3+I,SAAUuvM,IAER,MAMd9vM,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAASuwF,EACTjoH,QAAS0uM,EACT/pM,UAAW7F,EAAK,QAChByT,SAAU0T,GAETA,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGb,KCrNJk+H,GAA2B,4BAgPjC,IAAe//H,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA6B,IAA3B,OAAEwqB,GAAQxqB,EACjB,MAAMq/B,GAAOC,EAAAA,EAAAA,KAAWjjC,EAAQmuB,GAC1BnK,GAAOkf,EAAAA,EAAAA,KAAWljC,EAAQmuB,GAC1BiiC,GAAeC,EAAAA,EAAAA,KAAmBrwD,EAAQmuB,IAC1C,SAAE9oB,IAAahF,EAAAA,EAAAA,KAAeL,GAAQu2L,WACtC7mL,EAAUsU,IAAQo5F,EAAAA,EAAAA,KAAkBp5F,GAAMq5F,EAAAA,EAAAA,KAAqBr9G,IAASs9G,EAAAA,EAAAA,KAAuBt9G,IAC/FwjB,EAAgB4sC,GAAc5sC,cAGpC,MAAO,CACLwf,OAAM39B,WAAUqK,UAAS8T,gBAAekrL,iBAHjBt+I,GAAc6mF,cAAgB7mF,GAAc9sC,cAIpE,GAZevjB,EA9O0B7H,IASxC,IATyC,OAC7Ci2B,EAAM,KACN6U,EAAI,SACJ39B,EAAQ,QACRqK,EAAO,QACP3S,EAAO,SACPiO,EAAQ,cACRwY,EAAa,iBACbkrL,GACDx2M,EACC,MAAM,cACJoxD,EAAa,cACbjX,EAAa,gBACb4lJ,EAAe,0BACfxB,IACEv5L,EAAAA,EAAAA,OAEGs7L,EAAoBC,EAAkBC,IAAqBv2L,EAAAA,EAAAA,MAC3DwsM,EAAgCC,EAA8BC,IAAiC1sM,EAAAA,EAAAA,MAC/Fw7H,EAAwBC,IAA6BvgI,EAAAA,EAAAA,KAAS,IAC9DkjD,EAAOs9E,IAAYxgI,EAAAA,EAAAA,MACpBY,GAAOC,EAAAA,EAAAA,MAEbud,EAAAA,GAAAA,GAAe,CACbzQ,WACA0Q,OAAQ3e,IAGV,MAAMggI,EAAmB/5F,GAAQA,EAAK4mB,WAAmB,GACnDozE,EAAkBh6F,GAAQA,EAAK8mB,UAAkB,IAEhDF,EAAWC,IAAgBxsD,EAAAA,EAAAA,IAAS0/H,IACpCjzE,EAAUC,IAAe1sD,EAAAA,EAAAA,IAAS2/H,IAClC8xE,EAAwBC,IAA6B1xM,EAAAA,EAAAA,KAAUqS,IAEtElU,EAAAA,EAAAA,KAAU,KACRuzM,GAA2Br/L,EAAQ,GAClC,CAACA,KAEJlU,EAAAA,EAAAA,KAAU,KACRoiI,GAA0B,GAC1B86D,GAAmB,GAClB,CAACA,EAAmBvqK,KAEvB3yB,EAAAA,EAAAA,KAAU,KACRquD,EAAakzE,GACbhzE,EAAYizE,EAAgB,GAC3B,CAACD,EAAkBC,EAAiBh6F,KAEvCxnC,EAAAA,EAAAA,KAAU,KACJ6J,IAAa8xL,EAAAA,GAAmB34D,WAClCZ,GAA0B,GAC1BC,OAAS7qI,GACT0lM,IACF,GACC,CAACA,EAAmBrzL,IAEvB,MAAMklD,GAAwB1qD,EAAAA,EAAAA,KAAa9B,IACzC8rD,EAAa9rD,EAAEC,OAAOH,OACtB+/H,GAA0B,GAEtBr9E,IAAUo8E,IACZkB,OAAS7qI,EACX,GACC,CAACutD,IAEEmK,GAAuB7qD,EAAAA,EAAAA,KAAa9B,IACxCgsD,EAAYhsD,EAAEC,OAAOH,OACrB+/H,GAA0B,EAAK,GAC9B,IAEGoxE,GAA2BnvM,EAAAA,EAAAA,KAAa9B,IAC5CgxM,EAA0BhxM,EAAEC,OAAOu7B,SACnCqkG,GAA0B,EAAK,GAC9B,IAEGgB,GAAoB/+H,EAAAA,EAAAA,KAAY,KACpC,MAAMg/H,EAAmBj1E,EAAUyP,OAC7BylE,EAAkBh1E,EAASuP,OAE5BwlE,EAAiB/sI,OAKtBw3D,EAAc,CACZn7B,SACAze,SAAUo/L,EACVllJ,UAAWi1E,EACX/0E,SAAUg1E,IARVjB,EAASlB,GAST,GACD,CAAC/yE,EAAWE,EAAUR,EAAen7B,EAAQ2gL,IAE1CG,GAAsBpvM,EAAAA,EAAAA,KAAY,KACtCwyC,EAAc,CAAElkB,WAChBuqK,IACAT,GAAiB,GAChB,CAACS,EAAmBT,EAAiB5lJ,EAAelkB,IAGjDw7B,GAAWtvD,EAAAA,EAAAA,IAAyB,MACpCo9L,GAAep9L,EAAAA,EAAAA,KAAO,GAEtB60M,GAAqBrvM,EAAAA,EAAAA,KAAY,KACrC8pD,EAASnvD,SAAS0/I,QAClBu9C,EAAaj9L,SAAU,CAAI,GAC1B,IAEG20M,GAAyBtvM,EAAAA,EAAAA,KAAY,KACzC8pD,EAASnvD,SAAS0/I,QAClBu9C,EAAaj9L,SAAU,CAAK,GAC3B,IAEG40M,GAA4BvvM,EAAAA,EAAAA,KAAY,KAC5CgvM,IACAjxE,GAA0B,GAC1B64D,EAA0B,CAAEtoK,UAAS,GACpC,CAAC0gL,EAA+BpY,EAA2BtoK,IAExDupK,GAAqB73L,EAAAA,EAAAA,KAAaugI,IACtCxC,GAA0B,GAC1B64D,EAA0B,CAAEtoK,SAAQiyG,OAAMu3D,UAAWF,EAAaj9L,SAAU,GAC3E,CAACi8L,EAA2BtoK,IAE/B,IAAK6U,EACH,OAGF,MAAMqsK,IAAuBztH,EAAAA,EAAAA,KAAU5+C,IAASA,EAAK9tC,KAAO4nJ,EAAAA,IACtD13H,EAAY/f,IAAa8xL,EAAAA,GAAmB/4D,WAElD,OACE9/H,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,cACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAACogD,GAAAA,EAAe,CACd1lB,OAAQ6U,EAAK9tC,GACb8iH,WAAW,QACXjkE,kBAAgB,EAChBu7J,eAAa,EACbC,cAAY,IAEdjxM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR7J,GAAG,kBACHkJ,MAAOH,EAAK,iCACZY,SAAU0rD,EACV1sD,MAAO+rD,EACPrJ,MAAOA,IAAUo8E,GAA2Bp8E,OAAQvtD,IAEtDsL,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR7J,GAAG,iBACHkJ,MAAOH,EAAK,gCACZY,SAAU6rD,EACV7sD,MAAOisD,KAGXxrD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPrqB,QAASu1K,EACT1wM,MAAOH,EAAK,iBACZ4/E,SAAU5/E,EAAK6wM,EACX,gCACA,kCACJjwM,SAAUmwM,MAIfK,GACC/wM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,aAAa0M,QAAM,EAAC9R,QAAS+vM,GAC1C5wM,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,sBAAsBR,EAAK,wBAAyB+kC,EAAK4mB,aAE3EtrD,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,aAAa0M,QAAM,EAAC9R,QAASgwM,GAC1C7wM,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,sBAAsBR,EAAK,0BAA2B+kC,EAAK4mB,aAE5EpmC,GACCllB,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACPG,YACEh1B,EAAAA,GAAA7K,cAAC8wB,GAAAA,EAAM,CACLnyB,MAAOs8M,EACPc,iBAAe,EACfhrL,KAAMwe,EACNrnC,KAAK,OACL8C,UAAU,mBAGdwS,QAAM,EACN9R,QAASyvM,GAER3wM,EAAK,8BAGVK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,eAAeiJ,IAAI,QAAQzJ,EAAK,2BAA4B+kC,EAAK4mB,aAGlFtrD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,WACbH,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CAAC5uB,KAAK,SAAS0M,QAAM,EAACrM,aAAW,EAACzF,QAASs5L,GACjDx6L,EAAK,oBAIZK,EAAAA,GAAA7K,cAACmjC,GAAAA,EAAoB,CACnBC,QAAS8mG,EACTx+H,QAASy/H,EACTltH,SAAU0T,EACVthB,UAAW7F,EAAK,SAEfmnB,EACC9mB,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAEfX,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAGjBH,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ27L,EACRz7L,QAAS27L,EACTvyL,KAAMlI,EAAK,2BACXi2B,aAAcj2B,EAAK,iBACnBk2B,eAAgB86K,EAChB76K,sBAAoB,IAEtB91B,EAAAA,GAAA7K,cAACwgC,GAAAA,EAAa,CACZp3B,OAAQ8xM,EACR5xM,QAAS8xM,EACT1oM,KAAMlI,EAAK,oCAAqC+kC,EAAK4mB,WACrD11B,aAAcj2B,EAAK,SACnBk2B,eAAgBi7K,EAChBh7K,sBAAoB,IAEtB91B,EAAAA,GAAA7K,cAAC0mJ,GAAAA,EAAY,CACXt7I,SAAU64L,EACV/tI,SAAUA,IAER,KCDV,IAAe/sD,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IAGQ,CACLyvM,gBAHqBC,EAAAA,EAAAA,KAA4B1vM,MAFnCD,EAnP0B7H,IAUxC,IAVyC,OAC7CwF,EAAM,cACN2wH,EAAa,qBACby3E,EAAoB,wBACpB3D,EAAuB,eACvB5zE,EAAc,mBACdqsE,EAAkB,QAClB79L,EAAO,SACPiO,EAAQ,eACRykM,GACDv3M,EACC,OAAQm2H,GACN,KAAK2qE,EAAAA,GAAkB6G,QACrB,OAAQ4P,GACN,IAAK,MACH,OACEnxM,EAAAA,GAAA7K,cAACk8M,GAAS,CACRxqM,IAAKzH,EACLywB,OAAQzwB,EACRX,QAASA,EACTiO,SAAUA,IAGhB,IAAK,OACH,OACE1M,EAAAA,GAAA7K,cAACm8M,GAAU,CACTzqM,IAAKzH,EACLywB,OAAQzwB,EACRX,QAASA,EACTiO,SAAUA,IAGhB,IAAK,QACH,OACE1M,EAAAA,GAAA7K,cAACo8M,GAAW,CACV1qM,IAAKzH,EACLA,OAAQA,EACR6wH,eAAgBA,EAChBxxH,QAASA,EACTiO,SAAUA,GAAY,CACpBguL,EAAAA,GAAkBC,gBAClBD,EAAAA,GAAkBG,WAClBH,EAAAA,GAAkBuI,iBAClBvI,EAAAA,GAAkBO,mBAClBP,EAAAA,GAAkBqM,kBAClBrM,EAAAA,GAAkBuM,2BAClBvM,EAAAA,GAAkByM,qBAClBzM,EAAAA,GAAkBwC,gBAClBxC,EAAAA,GAAkB4L,mBAClB5L,EAAAA,GAAkB8W,oBAClB36M,SAASk5H,KAGjB,IAAK,UACH,OACE/vH,EAAAA,GAAA7K,cAACs8M,GAAa,CACZ5qM,IAAKzH,EACLA,OAAQA,EACR6wH,eAAgBA,EAChBxxH,QAASA,EACTiO,SAAUA,GAAY,CACpBguL,EAAAA,GAAkBkB,mBAClBlB,EAAAA,GAAkBO,mBAClBP,EAAAA,GAAkBoB,oBAClBpB,EAAAA,GAAkBG,WAClBH,EAAAA,GAAkBC,gBAClBD,EAAAA,GAAkBwC,gBAClBxC,EAAAA,GAAkB4L,mBAClB5L,EAAAA,GAAkB8W,oBAClB36M,SAASk5H,KAKnB,MAGF,KAAK2qE,EAAAA,GAAkBC,gBACrB,OACE36L,EAAAA,GAAA7K,cAACu8M,GAAqB,CACpBtyM,OAAQA,EACRsN,SAAUA,EACVjO,QAASA,IAIf,KAAKi8L,EAAAA,GAAkBG,WACrB,OACE76L,EAAAA,GAAA7K,cAACw8M,GAAgB,CACfvyM,OAAQA,EACR6wH,eAAgBA,EAChBvjH,SAAUA,EACVjO,QAASA,IAIf,KAAKi8L,EAAAA,GAAkBuI,iBACrB,OACEjjM,EAAAA,GAAA7K,cAACy8M,GAAsB,CACrBxyM,OAAQA,EACR6wH,eAAgBA,EAChBqsE,mBAAoBA,EACpB5vL,SAAUA,GAAY,CACpBguL,EAAAA,GAAkBqM,kBAClBrM,EAAAA,GAAkBuM,2BAClBvM,EAAAA,GAAkByM,sBAClBtwM,SAASk5H,GACXtxH,QAASA,IAIf,KAAKi8L,EAAAA,GAAkBoB,oBACvB,KAAKpB,EAAAA,GAAkBqM,kBACrB,OACE/mM,EAAAA,GAAA7K,cAAC08M,GAAsB,CACrBzyM,OAAQA,EACRsN,SAAUA,EACVjO,QAASA,IAIf,KAAKi8L,EAAAA,GAAkBuM,2BACrB,OACEjnM,EAAAA,GAAA7K,cAAC28M,GAAgC,CAC/B1yM,OAAQA,EACRk9L,mBAAoBA,EACpBrsE,eAAgBA,EAChBvjH,SAAUA,GAAY,CACpBguL,EAAAA,GAAkByM,sBAClBtwM,SAASk5H,GACXtxH,QAASA,IAIf,KAAKi8L,EAAAA,GAAkByM,qBACrB,OACEnnM,EAAAA,GAAA7K,cAAC48M,GAA0B,CACzB3yM,OAAQA,EACRooM,qBAAsBA,EACtB3D,wBAAyBA,EACzB5zE,eAAgBA,EAChBvjH,SAAUA,EACVjO,QAASA,IAIf,KAAKi8L,EAAAA,GAAkBO,mBACrB,OACEj7L,EAAAA,GAAA7K,cAAC68M,GAAwB,CACvB5yM,OAAQA,EACR6wH,eAAgBA,EAChBqsE,mBAAoBA,EACpB5vL,SAAUA,GAAY,CACpBguL,EAAAA,GAAkBwC,gBAClBxC,EAAAA,GAAkB4L,mBAClB5L,EAAAA,GAAkB8W,oBAClB36M,SAASk5H,GACXtxH,QAASA,IAIf,KAAKi8L,EAAAA,GAAkB4L,mBACvB,KAAK5L,EAAAA,GAAkBwC,gBACrB,OACEl9L,EAAAA,GAAA7K,cAAC88M,GAAsB,CACrB7yM,OAAQA,EACR6kM,WAAYl0E,IAAkB2qE,EAAAA,GAAkB4L,mBAChDpC,eAAgBsD,EAChB3D,wBAAyBA,EACzB5zE,eAAgBA,EAChBvjH,SAAUA,EACVjO,QAASA,IAIf,KAAKi8L,EAAAA,GAAkBkB,mBACvB,KAAKlB,EAAAA,GAAkB0I,aACrB,OACEpjM,EAAAA,GAAA7K,cAAC+8M,GAAkB,CACjB9yM,OAAQA,EACRsN,SAAUA,EACVjO,QAASA,IAGf,KAAKi8L,EAAAA,GAAkBS,QACrB,OACEn7L,EAAAA,GAAA7K,cAACg9M,GAAa,CACZ/yM,OAAQA,EACRsN,SAAUA,EACVjO,QAASA,EACTwxH,eAAgBA,IAGtB,KAAKyqE,EAAAA,GAAkBiS,WACrB,OACE3sM,EAAAA,GAAA7K,cAACi9M,GAAY,CACXhzM,OAAQA,EACRsN,SAAUA,EACVjO,QAASA,EACTwxH,eAAgBA,IAGtB,KAAKyqE,EAAAA,GAAkB4C,eACrB,OACEt9L,EAAAA,GAAA7K,cAAC+8M,GAAkB,CACjB9yM,OAAQA,EACRymM,UAAQ,EACRn5L,SAAUA,EACVjO,QAASA,EACTwxH,eAAgBA,EAChBqsE,mBAAoBA,IAI1B,KAAK5B,EAAAA,GAAkBK,UACrB,OACE/6L,EAAAA,GAAA7K,cAACk9M,GAAe,CACdjzM,OAAQA,EACRsN,SAAUA,EACVjO,QAASA,IAGf,KAAKi8L,EAAAA,GAAkBqS,WACrB,OACE/sM,EAAAA,GAAA7K,cAACm9M,GAAgB,CACflzM,OAAQA,EACRsN,SAAUA,EACVjO,QAASA,IAGf,KAAKi8L,EAAAA,GAAkBW,aACrB,OACEr7L,EAAAA,GAAA7K,cAACo9M,GAAkB,CACjBnzM,OAAQA,EACRsN,SAAUA,EACVjO,QAASA,IAKD,KC3RZ+zM,GAAO,OACPC,GAAc,UACdC,GAAc,eACdC,GAAM,YAEL,IAAKC,GAAQ,SAARA,GAAQ,OAARA,EAAAA,EAAQ,qBAARA,EAAAA,EAAQ,eAARA,EAAAA,EAAQ,2BAARA,EAAAA,EAAQ,aAARA,CAAQ,MAOpB,MAAMC,GAAgC,CACpC,CAACD,GAASE,SAAU,GACpB,CAACF,GAASG,MAAO,OACjB,CAACH,GAASI,YAAa,aACvB,CAACJ,GAASK,KAAM,OAGX,SAASC,GAAeC,GAE7B,OADAA,EAAaA,EAAWxpJ,QAAQ,MAAO,IACnC6oJ,GAAKz0E,KAAKo1E,GACLP,GAASG,KAEdJ,GAAI50E,KAAKo1E,GACJP,GAASK,IAEdR,GAAY10E,KAAKo1E,IAAeT,GAAY30E,KAAKo1E,GAC5CP,GAASI,WAEXJ,GAASE,OAClB,CCMA,MAAMjrF,GAA2B,CAC/BurF,YAAa,GACbC,YAAa,GACbC,KAAM,GACNllJ,MAAO,GACPmlJ,YAAa,GACbC,SAAU,GACVl/J,SAAU,GACVwzE,MAAO,GACPp8D,MAAO,GACP+nJ,SAAU,GACVN,WAAY,GACZO,WAAY,GACZC,OAAQ,GACRC,IAAK,GACLC,eAAgB,GAChBC,WAAY,GACZC,UAAU,EACVC,iBAAiB,EACjBC,WAAY,CAAC,EACbC,UAAW,EACXC,kBAAmB,IAGfC,GAAgDA,CAAChmJ,EAAOx6D,KAC5D,OAAQA,EAAOR,MACb,IAAK,iBACH,MAAO,IACFg7D,EACHglJ,YAAax/M,EAAOo0H,QACpBisF,WAAY,IACP7lJ,EAAM6lJ,WACTb,iBAAa1+M,IAGnB,IAAK,iBACH,MAAO,IACF05D,EACHilJ,YAAaz/M,EAAOo0H,QACpBisF,WAAY,IACP7lJ,EAAM6lJ,WACTZ,iBAAa3+M,IAGnB,IAAK,aACH,MAAO,IACF05D,EACHklJ,KAAM1/M,EAAOo0H,QACbisF,WAAY,IACP7lJ,EAAM6lJ,WACTX,UAAM5+M,IAGZ,IAAK,cACH,MAAO,IACF05D,EACHA,MAAOx6D,EAAOo0H,QACdisF,WAAY,IACP7lJ,EAAM6lJ,WACT7lJ,WAAO15D,IAGb,IAAK,gBACH,MAAO,IACF05D,EACHmlJ,YAAa3/M,EAAOo0H,QAAQxnC,KAC5BqzH,eAAgBjgN,EAAOo0H,QAAQvnC,YAC/BwzH,WAAY,IACP7lJ,EAAM6lJ,WACTV,iBAAa7+M,IAGnB,IAAK,iBACH,MAAO,IACF05D,EACHolJ,SAAU5/M,EAAOo0H,QACjBisF,WAAY,IACP7lJ,EAAM6lJ,WACTT,cAAU9+M,IAGhB,IAAK,iBACH,MAAO,IACF05D,EACH9Z,SAAU1gD,EAAOo0H,QACjBisF,WAAY,IACP7lJ,EAAM6lJ,WACT3/J,cAAU5/C,IAGhB,IAAK,cACH,MAAO,IACF05D,EACH05D,MAAOl0H,EAAOo0H,QACdisF,WAAY,IACP7lJ,EAAM6lJ,WACTnsF,WAAOpzH,IAGb,IAAK,cACH,MAAO,IACF05D,EACH1C,MAAO93D,EAAOo0H,QACdisF,WAAY,IACP7lJ,EAAM6lJ,WACTvoJ,WAAOh3D,IAGb,IAAK,iBACH,MAAO,IAAK05D,EAAOqlJ,SAAU7/M,EAAOo0H,SACtC,IAAK,mBACH,MAAO,IACF55D,EACH+kJ,WAAYv/M,EAAOo0H,QACnBisF,WAAY,IACP7lJ,EAAM6lJ,WACTd,gBAAYz+M,IAGlB,IAAK,mBACH,MAAO,IACF05D,EACHslJ,WAAY9/M,EAAOo0H,QACnBisF,WAAY,IACP7lJ,EAAM6lJ,WACTP,gBAAYh/M,IAGlB,IAAK,mBACH,MAAO,IACF05D,EACHulJ,OAAQ//M,EAAOo0H,QACfisF,WAAY,IACP7lJ,EAAM6lJ,WACTN,YAAQj/M,IAGd,IAAK,gBACH,MAAO,IACF05D,EACHwlJ,IAAKhgN,EAAOo0H,QACZisF,WAAY,IACP7lJ,EAAM6lJ,WACTL,SAAKl/M,IAGX,IAAK,uBACH,MAAO,IACF05D,EACHylJ,eAAgBjgN,EAAOo0H,QACvBisF,WAAY,IACP7lJ,EAAM6lJ,WACTJ,oBAAgBn/M,IAGtB,IAAK,mBACH,MAAO,IACF05D,EACH0lJ,WAAYlgN,EAAOo0H,QACnBisF,WAAY,IACP7lJ,EAAM6lJ,WACTH,gBAAYp/M,IAGlB,IAAK,iBACH,MAAO,IAAK05D,EAAO2lJ,SAAUngN,EAAOo0H,SACtC,IAAK,wBACH,MAAO,IAAK55D,EAAO4lJ,gBAAiBpgN,EAAOo0H,SAC7C,IAAK,iBACH,OAAIp0H,EAAOo0H,QAAQznC,QACV,IACFnyB,KACAx6D,EAAOo0H,QACV6rF,eAAgBjgN,EAAOo0H,QAAQznC,SAG5B,IAAKnyB,KAAUx6D,EAAOo0H,SAC/B,IAAK,gBACH,MAAO,IACF55D,EACH6lJ,WAAY,IACP7lJ,EAAM6lJ,cACNrgN,EAAOo0H,UAGhB,IAAK,eACH,MAAO,IACF55D,EACH8lJ,UAAWtgN,EAAOo0H,SAEtB,IAAK,0BACH,MAAO,IACF55D,EACH+lJ,kBAAmBvgN,EAAOo0H,SAE9B,IAAK,aACH,MAAO,IACFH,IAEP,QACE,OAAOz5D,EACX,E,gBC7OF,UAAgB,KAAO,WAAW,YAAc,WAAW,mBAAmB,WAAW,gBAAkB,WAAW,KAAO,WAAW,iBAAiB,WAAW,cAAgB,WAAW,uBAAuB,WAAW,oBAAsB,WAAW,aAAa,WAAW,UAAY,WAAW,kBAAkB,WAAW,cAAgB,WAAW,uBAAuB,WAAW,kBAAoB,WAAW,wBAAwB,WAAW,mBAAqB,WAAW,SAAW,WAAW,SAAW,WAAW,gBAAkB,WAAW,eAAiB,WAAW,eAAe,WAAW,YAAc,WAAW,SAAW,WAAW,OAAS,WAAW,YAAc,WAAW,gCAAgC,WAAW,0BAA4B,WAAW,+BAA+B,WAAW,yBAA2B,WAAW,eAAe,WAAW,YAAc,WAAW,KAAO,YCwPp6B,IAAe9vD,EAAAA,EAAAA,KAjMgB1E,IAiBzB,IAjB0B,MAC9BmG,EAAK,YACLf,EAAW,MACXlL,EAAK,QACLugN,EAAO,eACPC,EAAc,aACdC,EAAY,WACZC,EAAU,cACV/nI,EAAa,SACb27C,EAAQ,YACRqsF,EAAW,UACXP,EAAS,YACTQ,EAAW,mBACXC,EAAkB,iBAClBC,EAAgB,iBAChBC,EAAgB,QAChBvmJ,GACD10D,EACC,MAAM,eAAEk7M,IAAmBl2M,EAAAA,EAAAA,MAErBe,GAAOC,EAAAA,EAAAA,KACPm1M,EAAgBp3M,QAAQyqH,IAExB,SACJ4sF,EAAQ,oBAAEC,EAAmB,aAAEC,GAC7Bb,GAAW,CAAC,GACV,cACJc,EAAa,gBACbC,EAAe,gBACfC,EAAe,KACfh1M,EAAI,MACJqrD,EAAK,eACL4pJ,GACGf,GAAgB,CAAC,EAEhBgB,GAAWx6M,EAAAA,EAAAA,IAASyyL,EAAAA,EAAAA,KAAmB15L,IAEvCsT,GAAMouM,EAAAA,GAAAA,GAAqCD,GAE3CE,GAAkBl0M,EAAAA,EAAAA,KAAam0M,IACnCttF,EAAU,CAAEh1H,KAAM,eAAgB40H,QAASktF,EAAe/uM,KAAK8Z,IAAIy1L,EAAMR,GAAgBQ,GAAO,GAC/F,CAACttF,EAAU8sF,IAERS,GAA2Bp0M,EAAAA,EAAAA,KAAY,KAC3CuzM,EAAe,CAAEc,KAAMhB,GAAkBphN,OAASqiN,EAAAA,GAAYC,cAAgBD,EAAAA,GAAYE,aAAc,GACvG,CAACnB,GAAkBphN,OAAQshN,IAExBkB,GAA6Bz0M,EAAAA,EAAAA,KAAY,KAC7CuzM,EAAe,CAAEc,KAAMC,EAAAA,GAAYI,cAAe,GACjD,CAACnB,IAEEoB,GAA4B30M,EAAAA,EAAAA,KAAY,KAC5CuzM,EAAe,CAAEc,KAAMC,EAAAA,GAAYM,UAAW,GAC7C,CAACrB,IAyDJ,OACE90M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOwf,MACrBlwB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO1R,aACpBu2M,GACCv1M,EAAAA,GAAA7K,cAAA,OACEiS,IAAKA,EACLjH,UAAWuQ,GAAO0lM,gBAClBzgN,IAAK4/M,EACL//M,WAAW,EACX2G,MAAOrI,EAAOoK,YAAY/B,MAC1BK,OAAQ1I,EAAOoK,YAAY1B,OAC3Bme,IAAI,MAGN46L,GAAYzhN,GACZkM,EAAAA,GAAA7K,cAACk5C,GAAAA,EAAQ,CACPlyC,MAAOrI,EAAMoK,YAAY/B,MACzBK,OAAQ1I,EAAMoK,YAAY1B,OAC1B2D,UAAWuQ,GAAO0lM,gBAClBC,kBAAgB,IAGpBr2M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO7I,MACrB7H,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,GAAO4lM,eAAgBv2M,GACrCf,GACCgB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO6lM,sBACpBpwL,EAAAA,GAAAA,GAAWnnB,EAAa,CAAC,KAAM,QAAS,aAKjDgB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAO8lM,WACpBnC,EAAQoC,OAAO/vM,KAAK9E,GACnB80M,GAAkB/2M,EAAK4pD,KAAM3nD,EAAK9B,MAAO8B,EAAK40E,OAAQ69H,EAAQ39H,YAE/D49H,GAAkBA,EAAe5tM,KAAK9E,GACrC80M,GAAkB/2M,EAAK4pD,KAAM3nD,EAAK9B,MAAO8B,EAAK40E,OAAQ69H,EAAQ39H,YAE/Du+H,GAAuBA,EAAoBzhN,OAAS,GA3FvDwM,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOimM,eACrB32M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOkmM,oBACpB72M,GAEHC,EAAAA,GAAA7K,cAAA,YACGyhF,EAAAA,GAAAA,GAAes9H,EAAYG,EAAQ39H,SAAU/2E,EAAK4pD,QAGvDvpD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOmmM,UACpB5B,EAAqBvuM,KAAKowM,GACzB92M,EAAAA,GAAA7K,cAAA,OACE0R,IAAKiwM,EACL32M,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOqmM,SAAUD,IAAQ5C,GAAaxjM,GAAOsmM,iBACvEn2M,QAASunH,EAAW,IAAMqtF,EAAgBqB,IAAQ5C,EAAY,EAAI4C,QAAOpiN,IAExEkiF,EAAAA,GAAAA,GAAekgI,EAAKzC,EAAQ39H,SAAU/2E,EAAK4pD,KAAM,CAAE0tJ,qBAAqB,cA4E/DviN,IAAf8/M,GACCkC,GAAkB/2M,EAAK4pD,KAAM5pD,EAAK,wBAAyB60M,EAAYH,EAAQ39H,UAAU,IAG7F12E,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOwmM,cACnBrC,GAAoBsC,GAAmB,CACvCp3M,MAAOo1M,GAAiBP,IAAmB,GAAG70M,MAC9CD,MAAOH,EAAK,yBACZsG,KAAM,OACNpF,QAASk0M,EAAgBY,OAA2BjhN,IAErD0gN,GAAmB+B,GAAmB,CACrCp3M,MAAOq1M,EACPt1M,MAAOH,EAAK,2BACZy3M,YAAYluM,EAAAA,GAAAA,GAAewH,GAAO2mM,SAAU3mM,GAAO0kM,EAAgBn3K,mBAEnEy2K,IAAiBK,GAAiBM,IAAqB8B,GAAmB,CAC1Ep3M,MAAOs1M,EACPv1M,MAAOH,EAAK,0BACZsG,KAAM,WACNpF,QAASk0M,EAAgBiB,OAA6BthN,IAEvD2L,GAAQ82M,GAAmB,CAC1Bp3M,MAAOM,EACPP,MAAOH,EAAK,uBACZsG,KAAM,SAEPylD,GAASyrJ,GAAmB,CAC3Bp3M,MAAO2rD,EACP5rD,MAAOH,EAAK,8BACZsG,KAAM,WAEN0uM,IAAwBI,GAAiBO,IAAoB6B,GAAmB,CAChFp3M,MAAOu1M,EACPx1M,MAAOH,EAAK,iCACZsG,KAAM,QACNpF,QAASk0M,EAAgBmB,OAA4BxhN,IAEtDsgN,IA1FYzqM,EA0FUyqM,EAxFzBh1M,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAnBN,SAAuByK,EAAayZ,GAClC,MACMszL,EADa33M,EAAK,iCAAkC2uD,GACvBse,MAAM,KACzC,OACE5sE,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACGi/K,EAAgB,GACjBt3M,EAAAA,GAAA7K,cAAC2yG,GAAAA,EAAQ,CACPv9F,IAAKA,EACL1C,KAAMyvM,EAAgB,GACtBtzL,MAAOA,IAERszL,EAAgBxlK,MAAM,GAG7B,CAKaylK,CAAchtM,EAAK5K,EAAKqkB,OAC/B3jB,KAAK,eACL46B,QAASt9B,QAAQ8uE,GACjBtsE,UAAWuQ,GAAO8mM,YAClBh8K,SAAU,EACV+pB,QAASkvJ,OARf,IAAmBlqM,CA4FX,IAMV,SAASmsM,GACPp7F,EAA8Bv7G,EAAeR,EAAem3E,GAC5D,IAD8EoK,EAAIlkF,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,IAAAA,UAAA,GAElF,OACEoD,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GAAewH,GAAOimM,cAAe71H,GAAQpwE,GAAO+mM,oBAClEz3M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOkmM,oBACpB72M,GAEHC,EAAAA,GAAA7K,cAAA,YACGyhF,EAAAA,GAAAA,GAAer3E,EAAOm3E,EAAU4kC,IAIzC,CAEA,SAAS67F,GAAkB9xM,GAYxB,IAZyB,MAC1BtF,EAAK,MACLD,EAAK,KACLmG,EAAI,WACJmxM,EAAU,QACVv2M,GAODwE,EACC,MAAM6C,EAAcvK,QAAQoC,GAASD,IAAUC,GAE/C,OACEC,EAAAA,GAAA7K,cAAC0/B,GAAAA,EAAQ,CACP10B,UAAWuQ,GAAOqqB,KAClBwvE,QAAM,EACNz1E,UAAW5sB,EACXjC,KAAMA,EACN8uB,UAAWl0B,EACXA,QAASA,EACTm0B,YAAaoiL,GAAcp3M,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GAAe,OAAQkuM,MAEhEp3M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,GAAOgnM,2BACpB33M,GAASD,GAEXC,GAASD,IAAUC,GAClBC,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,GAAOinM,0BAClB73M,GAKX,CCxQA,MAmDA,IAAexB,EAAAA,EAAAA,KAnDsB1E,IAE/B,IAFgC,IACpC2Q,EAAG,WAAEqtM,EAAU,QAAEn5M,EAAO,oBAAEo5M,GAC3Bj+M,EACC,MAAM,iBAAE25D,IAAqB30D,EAAAA,EAAAA,MAEvBe,GAAOC,EAAAA,EAAAA,KAEP05D,GAAgB/3D,EAAAA,EAAAA,KAAa0f,IACjC,IACE,MAAMpV,EAAO4sD,KAAKc,MAAMt4C,EAAMpV,OACxB,UAAE8sD,EAAS,UAAEC,GAAc/sD,EACjC,OAAQ8sD,GACN,IAAK,uBACH,IAAKi/I,EAAY,CACf,MAAM/9I,EAAUQ,EAAAA,IAAkBzB,EAAU0B,UAC5C/G,EAAiB,CAAEhpD,IAAKsvD,GAC1B,CACAp7D,IACA,MACF,IAAK,sBACCo5M,GACFA,EAAoBj/I,GAEtB,MACF,QACEn6D,IAGN,CAAE,MAAOtF,GACP,IAED,CAACsF,EAASm5M,EAAYrkJ,EAAkBskJ,IAO3C,OALA36M,EAAAA,EAAAA,KAAU,KACRM,OAAOsL,iBAAiB,UAAWwwD,GAC5B,IAAM97D,OAAOuL,oBAAoB,UAAWuwD,KAClD,CAACA,IAGFt5D,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,kBACbH,EAAAA,GAAA7K,cAAA,UACEQ,IAAK4U,EACLxK,MAAOJ,EAAK,kCACZ0hE,MAAM,UACND,QAAQ,gFACRjhE,UAAU,4BAER,ICnBV,IAAe7B,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAAsBC,IACxC,MAAM,QAAE6wD,IAAYxwD,EAAAA,EAAAA,KAAeL,GACnC,MAAO,CACLugD,MAAOsQ,EAAQtQ,OAAO9tD,QACtBo0G,aAAc7mG,EAAOm+I,cAAc12C,KACnCyrG,iBAAyC,YAAvBriJ,EAAQulJ,MAAM1kN,KAAqBm/D,EAAQulJ,KAAKlD,sBAAmBlgN,EACtF,GANiB+M,EAtC+B7H,IAO7C,IAP8C,SAClD8S,EAAQ,MACRu1C,EAAK,MACLmM,EAAK,iBACLwmJ,EAAgB,aAChBrsG,EAAY,iBACZwvG,GACDn+M,EACC,MAAM,kBAAEo+M,IAAsBp5M,EAAAA,EAAAA,MAExBe,GAAOC,EAAAA,EAAAA,MACN8oG,EAAoBC,IAAyB5pG,EAAAA,EAAAA,KAAS,GACvDk5M,GAAWx9M,EAAAA,EAAAA,KAAQ,IAChBm6M,GAAkBphN,QAAU46D,EAAM+lJ,kBACrCS,EAAiBlvK,MAAKrgC,IAAA,IAAC,GAAEzO,GAAIyO,EAAA,OAAKzO,IAAOw3D,EAAM+lJ,iBAAiB,KAAGp0M,WACnErL,GACH,CAACkgN,EAAkBxmJ,EAAM+lJ,oBAE5B,OACEn0M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACbH,EAAAA,GAAA7K,cAACg9H,GAAAA,EAAc,CAACj1C,OAAK,EAACksB,kBAAmBV,IAEzC1oG,EAAAA,GAAA7K,cAAC6zG,GAAAA,EAAY,CACX/mD,MAAOA,EAAQtiD,EAAKsiD,QAASvtD,EAC7By0G,KAAMZ,EACNvpG,YAAaW,EAAK,6BAA8Bs4M,GAChDv5J,YAAa/+C,EAAK,YAClBupG,WAAY8uG,EACZ/uG,kBAAkB,EAClBI,iBAAkB38F,EAClB08F,kBAAmBV,EACnBY,2BAA4BX,EAC5BuvG,cAAeH,IAEb,K,gBCrDK,SAASI,GACtB/wM,GACA,IADkCgxM,EAAiBx7M,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAH5B,KAKvBM,EAAAA,EAAAA,KAAU,KACJqL,EAAAA,IAIJ9K,YAAW,MACTwjC,EAAAA,EAAAA,KAAe,KACb75B,EAAIlL,SAAS8vD,OAAO,GACpB,GACDosJ,EAAkB,GACpB,CAAChxM,EAAKgxM,GACX,C,gICgDA,IAAe95M,EAAAA,EAAAA,KA1CkB1E,IAAgC,IAA/B,MAAE2F,EAAK,MAAE0iD,EAAK,SAAE1hD,GAAU3G,EAC1D,MAAM+F,GAAOC,EAAAA,EAAAA,KAEPy4M,GAAgBt8M,EAAAA,EAAAA,IAAyB,MAE/Co8M,GAAuBE,GAEvB,MAAOC,EAAUC,IAAex5M,EAAAA,EAAAA,IAAiB6zM,GAASE,UAC1D51M,EAAAA,EAAAA,KAAU,KACR,MAAMs7M,EAActF,GAAe3zM,GACnCg5M,EAAYC,EAAY,GAEvB,IAEH,MAAM//H,GAAel3E,EAAAA,EAAAA,KAAa9B,IAChC,MAAMgqF,EC/BH,SAA0BvuD,GAE/B,MAAMzV,GADNyV,EAAQA,EAAMyuB,QAAQ,SAAU,KACZuhC,MAAM,WAC1B,OAAOzlE,EAAQA,EAAMpM,KAAK,KAAO,EACnC,CD2BqBo/L,CAAiBh5M,EAAEC,OAAOH,OACrCi5M,EAActF,GAAezzM,EAAEC,OAAOH,OAC5Cg5M,EAAYC,GACZj4M,EAASkpF,EAAS,GACjB,CAAClpF,IAEEm4M,EAuBR,SAAqBJ,GACnB,OAAQA,GACN,KAAK1F,GAASI,WACZ,OAAOhzM,EAAAA,GAAA7K,cAAA,OAAKQ,IAAKgjN,GAAoBnjN,WAAW,EAAOmlB,IAAI,KAC7D,KAAKi4L,GAASG,KACZ,OAAO/yM,EAAAA,GAAA7K,cAAA,OAAKQ,IAAKijN,GAAcpjN,WAAW,EAAOmlB,IAAI,KACvD,KAAKi4L,GAASK,IACZ,OAAOjzM,EAAAA,GAAA7K,cAAA,OAAKQ,IAAKkjN,GAAarjN,WAAW,EAAOmlB,IAAI,KACtD,QACE,OAEN,CAlCmBm+L,CAAYR,GAE7B,OACEt4M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,aACbH,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR2G,IAAKixM,EACLv4M,MAAOH,EAAK,qBACZY,SAAUk4E,EACVl5E,MAAOA,EACP8qD,UAAU,UACVlqD,UAAWm4M,EAAW,kBAAoB,GAC1Cr2J,MAAOA,EACPzmB,SAAU,EACVs0C,UA1CuB,GA2CvBz0C,2BAAyB,IAE3Br7B,EAAAA,GAAA7K,cAAA,QAAMgL,UAAU,eAAeu4M,GAC3B,IEtBV,IAAep6M,EAAAA,EAAAA,KA3BoB1E,IAAgC,IAA/B,MAAE2F,EAAK,MAAE0iD,EAAK,SAAE1hD,GAAU3G,EAC5D,MAAM+F,GAAOC,EAAAA,EAAAA,KAEP64E,GAAel3E,EAAAA,EAAAA,KAAa9B,IAChC,MAAMgqF,EAAWhqF,EAAEC,OAAOH,MAEtBA,EAAMw5M,SAAS,MAAQx5M,EAAM/L,OAASi2F,EAASj2F,OACjD+M,EAASkpF,GAETlpF,ED1BC,SAA0B26B,GAE/B,MAAMzV,GADNyV,EAAQA,EAAMyuB,QAAQ,SAAU,IAAI7X,MAAM,EAAG,IACzBo5C,MAAM,WAO1B,OANIzlE,IAAQ,IAAMzN,OAAOyN,EAAM,IAAM,KACnCA,EAAM,GAAK,MAETA,IAAQ,IAA0B,IAApBA,EAAM,GAAGjyB,SAAiBiyB,EAAM,KAChDA,EAAM,GAAK,IAENA,EAAQA,EAAMpM,KAAK,KAAO,EACnC,CCgBe2/L,CAAiBv5M,EAAEC,OAAOH,OACrC,GACC,CAACgB,EAAUhB,IAEd,OACES,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,yBACZY,SAAUk4E,EACVl5E,MAAOA,EACP0iD,MAAOA,EACPoI,UAAU,UACV7uB,SAAU,EACVs0C,UA7BmB,EA8BnBz0C,2BAAyB,GACzB,ICoIN,IAAe/8B,EAAAA,EAAAA,KA/ImB1E,IAQ5B,IAR6B,MACjCw0D,EAAK,mBACL6qJ,EAAkB,mBAClBC,EAAkB,YAClBC,EAAW,QACXC,EAAO,YACPvuJ,EAAW,SACXu9D,GACDxuH,EAEC,MAAMy/M,GAAmBt9M,EAAAA,EAAAA,IAA0B,OAEnDmB,EAAAA,EAAAA,KAAU,KACJm8M,EAAiBn9M,SAChBm9M,EAAiBn9M,QAAQqD,QAAU6uD,EAAMylJ,iBAC5CwF,EAAiBn9M,QAAQqD,MAAQ6uD,EAAMylJ,eACzC,GACC,CAACzlJ,EAAMylJ,iBAEV,MAAMyF,GAAyB/3M,EAAAA,EAAAA,KAAahC,IAC1C6oH,EAAS,CAAEh1H,KAAM,mBAAoB40H,QAASzoH,GAAQ,GACrD,CAAC6oH,IAEEmxF,GAAyBh4M,EAAAA,EAAAA,KAAa9B,IAC1C2oH,EAAS,CAAEh1H,KAAM,mBAAoB40H,QAASvoH,EAAEC,OAAOH,MAAMi6M,eAAgB,GAC5E,CAACpxF,IAEEqxF,GAAqBl4M,EAAAA,EAAAA,KAAahC,IACtC6oH,EAAS,CAAEh1H,KAAM,mBAAoB40H,QAASzoH,GAAQ,GACrD,CAAC6oH,IAEEsxF,GAAkBn4M,EAAAA,EAAAA,KAAa9B,IACnC,MAAMgqF,EAAWhqF,EAAEC,OAAOH,MAAMoqD,QAAQ,UAAW,IACnDy+D,EAAS,CAAEh1H,KAAM,gBAAiB40H,QAASv+B,GAAW,GACrD,CAAC2+B,IAEEuxF,GAAsBp4M,EAAAA,EAAAA,KAAa9B,IACvC2oH,EAAS,CAAEh1H,KAAM,uBAAwB40H,QAASvoH,EAAEC,OAAOH,OAAQ,GAClE,CAAC6oH,IAEEwxF,GAA8Br4M,EAAAA,EAAAA,KAAa9B,IAC/C2oH,EAAS,CAAEh1H,KAAM,mBAAoB40H,QAASvoH,EAAEC,OAAOH,OAAQ,GAC9D,CAAC6oH,IAEEyxF,GAA8Bt4M,EAAAA,EAAAA,KAAa9B,IAC/C2oH,EAAS,CAAEh1H,KAAM,wBAAyB40H,QAASvoH,EAAEC,OAAOH,OAAQ,GACnE,CAAC6oH,IAEEzoH,GAAOC,EAAAA,EAAAA,MAEP,WAAEq0M,EAAa,CAAC,GAAM7lJ,EAE5B,OACEpuD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACbH,EAAAA,GAAA7K,cAAA,YACE6K,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,qBACVK,EAAAA,GAAA7K,cAAC2kN,GAAS,CACRv5M,SAAU+4M,EACV/5M,MAAO6uD,EAAM+kJ,WACblxJ,MAAOgyJ,EAAWd,aAEnB+F,GACCl5M,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,8CACZY,SAAUg5M,EACVh6M,MAAO6uD,EAAMslJ,WACbrpJ,UAAU,OACV7uB,SAAU,EACVymB,MAAOgyJ,EAAWP,aAGtB1zM,EAAAA,GAAA7K,cAAA,WAASgL,UAAU,iBACjBH,EAAAA,GAAA7K,cAAC4kN,GAAW,CACVx6M,MAAO6uD,EAAMulJ,OACbpzM,SAAUk5M,EACVx3J,MAAOgyJ,EAAWN,SAEpB3zM,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,yBACZY,SAAUm5M,EACVn6M,MAAO6uD,EAAMwlJ,IACbvpJ,UAAU,UACVylB,UAAW,EACXt0C,SAAU,EACVymB,MAAOgyJ,EAAWL,IAClBv4K,2BAAyB,KAG5B89K,GAAeC,EACdp5M,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,+BACRjL,EACJsL,EAAAA,GAAA7K,cAAA,WAASgL,UAAU,iBAChBg5M,GACCn5M,EAAAA,GAAA7K,cAAC6kN,GAAAA,EAAM,CACLl6M,MAAOH,EAAK,0BACZY,SAAUo5M,EACVp6M,MAAO6uD,EAAMylJ,eACboG,SAAUt8M,SAAQ,GAClB/G,GAAG,kBACHqrD,MAAOgyJ,EAAWJ,eAClBr4K,SAAU,EACVp0B,IAAKiyM,GAGHxuJ,EAAYnkD,KAAIrB,IAAA,IAAC,YAAEo7E,EAAW,KAAEpgF,GAAMgF,EAAA,OACpCrF,EAAAA,GAAA7K,cAAA,UACEoK,MAAOkhF,EACPtgF,UAAU,cACVK,SAAUigF,IAAgBryB,EAAMylJ,gBAE/BpzH,GAAepgF,EACT,KAKhB+4M,GACCp5M,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,iCACZY,SAAUq5M,EACVr6M,MAAO6uD,EAAM0lJ,WACbzpJ,UAAU,OACV7uB,SAAU,EACVs0C,UAAW,GACX7tB,MAAOgyJ,EAAWH,cAIxB9zM,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,qCACZs7B,UAASg+K,GAAqB7qJ,EAAM4lJ,gBACpCx4K,SAAU,EACV+jD,SAAU5/E,EAAKs5M,EAAqB,gCAAkC,qBACtE14M,SAAUs5M,EACVzmM,UAAW6lM,MAIb,IC9GV,IAAe36M,EAAAA,EAAAA,KAtC+B1E,IAKxC,IALyC,MAC7Cw0D,EAAK,iBACLwmJ,EAAgB,SAChBxsF,EAAQ,eACR8xF,GACDtgN,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,KAEPU,GAAU7F,EAAAA,EAAAA,KAAQ,IACfm6M,GAAkBphN,OACrBohN,EAAiBluM,KAAIrB,IAAA,IAAC,GAAEzO,EAAE,MAAEmJ,GAAOsF,EAAA,MAAM,CAAEvF,MAAOC,EAAOR,MAAO3I,EAAI,IACpEggC,GAAAA,GACH,CAACg+K,IAEEr0M,GAAWgB,EAAAA,EAAAA,KAAahC,IAC5B6oH,EAAS,CAAEh1H,KAAM,0BAA2B40H,QAASzoH,GAAQ,GAC5D,CAAC6oH,IAEJ,OACEpoH,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,eACbH,EAAAA,GAAA7K,cAAA,YACE6K,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,qBAEVK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,oBACLC,QAASA,EACTE,SAAU4tD,EAAM+lJ,kBAChB5zM,SAAUA,IAGZP,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACE,QAAM,EAACC,QAASq5M,GACrBv6M,EAAK,kCAGN,ICUV,IAAerB,EAAAA,EAAAA,KAxCgB1E,IAKzB,IAL0B,MAC9Bw0D,EAAK,gBACL+rJ,EAAe,SACfzjI,EAAQ,SACR0xC,GACDxuH,EACC,MAAM+F,GAAOC,EAAAA,EAAAA,MAEb1C,EAAAA,EAAAA,KAAU,KACHi9M,GAAoBA,EAAgB3mN,SAAU46D,EAAMqlJ,UAGzDrrF,EAAS,CAAEh1H,KAAM,iBAAkB40H,QAASmyF,EAAgB,GAAGvjN,IAAK,GACnE,CAACujN,EAAiB/rJ,EAAMqlJ,SAAUrrF,IAErC,MAAMgyF,GAAuB74M,EAAAA,EAAAA,KAAahC,IACxC6oH,EAAS,CAAEh1H,KAAM,iBAAkB40H,QAASzoH,GAAQ,GACnD,CAAC6oH,IAEE9nH,GAAU7F,EAAAA,EAAAA,KAAQ,IAAO0/M,EAAgBzzM,KAAIrB,IAAA,IAAGzO,GAAI2I,EAAOQ,MAAOD,EAAK,OAAE02E,GAAQnxE,EAAA,MAAM,CAC3FvF,QACAy/E,UAAU3I,EAAAA,GAAAA,GAAeJ,EAAQE,EAAU/2E,EAAK4pD,MAChDhqD,QACD,KAAK,CAAC46M,EAAiBzjI,EAAU/2E,EAAK4pD,OAEvC,OACEvpD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,YACbH,EAAAA,GAAA7K,cAAA,YACE6K,EAAAA,GAAA7K,cAAA,SAAIwK,EAAK,0BACTK,EAAAA,GAAA7K,cAACiL,EAAAA,EAAU,CACTC,KAAK,mBACLC,QAASA,EACTC,SAAU65M,EACV55M,SAAU4tD,EAAMqlJ,YAGhB,IC4JV,IAAen1M,EAAAA,EAAAA,KA5LoB1E,IAQ7B,IAR8B,MAClCw0D,EAAK,UACLisJ,EAAS,UACTC,EAAS,SACTC,EAAQ,YACR7F,EAAW,YACX7pJ,EAAW,SACXu9D,GACDxuH,EAEC,MAAMyxD,GAAWtvD,EAAAA,EAAAA,IAAyB,MAEpCy+M,GAAWz+M,EAAAA,EAAAA,IAAyB,MAEpCs9M,GAAmBt9M,EAAAA,EAAAA,IAA0B,OAEnDmB,EAAAA,EAAAA,KAAU,KACJm8M,EAAiBn9M,SAChBm9M,EAAiBn9M,QAAQqD,QAAU6uD,EAAMmlJ,cAC5C8F,EAAiBn9M,QAAQqD,MAAQ6uD,EAAMmlJ,YACzC,GACC,CAACnlJ,EAAMmlJ,cAEV,MAAM5zM,GAAOC,EAAAA,EAAAA,KAEbu4M,GAAuB9sJ,GAEvB,MAAMovJ,GAAuBl5M,EAAAA,EAAAA,KAAa9B,IACxC2oH,EAAS,CAAEh1H,KAAM,iBAAkB40H,QAASvoH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6oH,IAEEsyF,GAAuBn5M,EAAAA,EAAAA,KAAa9B,IACxC2oH,EAAS,CAAEh1H,KAAM,iBAAkB40H,QAASvoH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6oH,IAEEuyF,GAAmBp5M,EAAAA,EAAAA,KAAa9B,IACpC2oH,EAAS,CAAEh1H,KAAM,aAAc40H,QAASvoH,EAAEC,OAAOH,OAAQ,GACxD,CAAC6oH,IAEEwyF,GAAoBr5M,EAAAA,EAAAA,KAAa9B,IACrC2oH,EAAS,CAAEh1H,KAAM,cAAe40H,QAASvoH,EAAEC,OAAOH,OAAQ,GACzD,CAAC6oH,IAEEuxF,GAAsBp4M,EAAAA,EAAAA,KAAa9B,IACvC2oH,EAAS,CAAEh1H,KAAM,gBAAiB40H,QAASn9D,EAAYnlB,MAAM66C,GAAYA,EAAQC,OAAS/gF,EAAEC,OAAOH,SAAS,GAC3G,CAACsrD,EAAau9D,IAEXyyF,GAAuBt5M,EAAAA,EAAAA,KAAa9B,IACxC2oH,EAAS,CAAEh1H,KAAM,iBAAkB40H,QAASvoH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6oH,IAEE0yF,GAAuBv5M,EAAAA,EAAAA,KAAa9B,IACxC2oH,EAAS,CAAEh1H,KAAM,iBAAkB40H,QAASvoH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6oH,IAEE2yF,GAAoBx5M,EAAAA,EAAAA,KAAa9B,IACrC2oH,EAAS,CAAEh1H,KAAM,cAAe40H,QAASvoH,EAAEC,OAAOH,OAAQ,GACzD,CAAC6oH,IAEEl8D,GAAoB3qD,EAAAA,EAAAA,KAAa9B,IACrC,IAAI,MAAEF,GAAUE,EAAEC,OAClBH,EAAS,IAAGA,EAAMoqD,QAAQ,MAAO,MAC7B6wJ,EAASt+M,UACXs+M,EAASt+M,QAAQqD,MAAQA,GAE3B6oH,EAAS,CAAEh1H,KAAM,cAAe40H,QAASzoH,GAAQ,GAChD,CAAC6oH,IAEE4yF,GAAuBz5M,EAAAA,EAAAA,KAAa9B,IACxC2oH,EAAS,CAAEh1H,KAAM,iBAAkB40H,QAASvoH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6oH,KAEE,WAAE6rF,GAAe7lJ,EACvB,OACEpuD,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,gBACbH,EAAAA,GAAA7K,cAAA,YACGu/M,EACC10M,EAAAA,GAAA7K,cAAA,WACE6K,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,2BACVK,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACR2G,IAAKikD,EACLvrD,MAAOH,EAAK,sCACZY,SAAUk6M,EACVl7M,MAAO6uD,EAAMglJ,YACb/oJ,UAAU,OACV7uB,SAAU,EACVymB,MAAOgyJ,EAAWb,cAEpBpzM,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,sCACZY,SAAUm6M,EACVn7M,MAAO6uD,EAAMilJ,YACbhpJ,UAAU,OACV7uB,SAAU,EACVymB,MAAOgyJ,EAAWZ,cAEpBrzM,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,kCACZY,SAAUo6M,EACVp7M,MAAO6uD,EAAMklJ,KACbjpJ,UAAU,OACV7uB,SAAU,EACVymB,MAAOgyJ,EAAWX,OAEpBtzM,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,mCACZY,SAAUq6M,EACVr7M,MAAO6uD,EAAMA,MACb/D,UAAU,OACVpI,MAAOgyJ,EAAW7lJ,QAEpBpuD,EAAAA,GAAA7K,cAAC6kN,GAAAA,EAAM,CACLl6M,MAAOH,EAAK,0BACZY,SAAUo5M,EACVp6M,MAAO6uD,EAAMmlJ,YACb0G,SAAUt8M,SAAQ,GAClB/G,GAAG,mBACHqrD,MAAOgyJ,EAAWV,YAClBnsM,IAAKiyM,EACL79K,SAAU,GAETqvB,EAAYnkD,KAAIrB,IAAA,IAAC,YAAEo7E,EAAW,KAAEpgF,EAAI,KAAEmgF,GAAMn7E,EAAA,OAC3CrF,EAAAA,GAAA7K,cAAA,UACEoK,MAAOihF,EACPrgF,UAAU,cACVK,SAAUggF,IAASpyB,EAAMmlJ,aAExB9yH,GAAepgF,EACT,KAIbL,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,iCACZY,SAAUs6M,EACVt7M,MAAO6uD,EAAMolJ,SACbnpJ,UAAU,OACV7uB,SAAU,EACVymB,MAAOgyJ,EAAWT,iBAGpB9+M,EACF6lN,GAAYF,GAAaC,EACzBt6M,EAAAA,GAAA7K,cAAA,UAAKwK,EAAK,iCACRjL,EACF6lN,GACAv6M,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,uBACZY,SAAUu6M,EACVv7M,MAAO6uD,EAAM9Z,SACb+V,UAAU,OACV7uB,SAAU,EACVymB,MAAOgyJ,EAAW3/J,WAGpB+lK,GACAr6M,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,mCACZY,SAAUw6M,EACVx7M,MAAO6uD,EAAM05D,MACbz9D,UAAU,QACV7uB,SAAU,EACVymB,MAAOgyJ,EAAWnsF,QAGpBwyF,GACAt6M,EAAAA,GAAA7K,cAACsL,EAAAA,EAAS,CACRX,MAAOH,EAAK,8BACZY,SAAU2rD,EACV3sD,MAAO6uD,EAAM1C,MACbrB,UAAU,MACV7uB,SAAU,EACVymB,MAAOgyJ,EAAWvoJ,MAClBtkD,IAAKozM,IAGTx6M,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,uBACZ4/E,SAAU5/E,EAAK,2BACfs7B,QAASt9B,QAAQywD,EAAM2lJ,UACvBv4K,SAAU,EACVj7B,SAAUy6M,KAGV,ICzKJC,GAAmB,SACnBC,GAAkB,cAElBC,GAAsB,IAAI78H,IAAI,CAAC28H,GAAkBC,KA0jBvD,IAAe58M,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,KACJo2M,EAAI,KACJlC,EAAI,gBACJuE,EAAe,MACfl4J,EAAK,kBACLm5J,EAAiB,aACjB3oJ,EAAY,UACZoJ,EAAS,kBACTw/I,EAAiB,uBACjBC,EAAsB,kBACtBC,EAAiB,gBACjBC,EAAe,IACfjxM,IACExI,EAAAA,EAAAA,KAAeL,GAAQ6wD,SAErB,QAAE8hJ,EAAO,aAAEoH,EAAY,eAAEC,GAAmB5D,GAAQ,CAAC,EACrDjtJ,EAAcnpD,EAAOmpD,YAAY25B,QAEvC,IAAIm3H,EAAe7D,GAAM4D,gBACpBC,GAAgBpxM,IACnBoxM,EAAepxM,EAAIk6G,WAjlBG,oCAilB+By2F,QAAkBxmN,GAGzE,MAAMgxB,EAAO+sC,GAAgB,WAAYA,GAAe7tB,EAAAA,EAAAA,KAAWljC,EAAQ+wD,EAAarzD,aAAW1K,EAC7FknN,EAAkBj+M,QAAQ02M,KAAasH,IAAiBR,GAAoBv8H,IAAI+8H,MAChF,mBAAEzC,EAAkB,YAAEC,EAAW,QAAEC,GAAaqC,GAAgB,CAAC,EACjE55J,EAAMi2J,GAAM5yJ,OAAQvgB,EAAAA,EAAAA,KAAWjjC,EAAQo2M,EAAK5yJ,YAASxwD,EACrD45D,GAAUxyB,EAAAA,EAAAA,KAAgB+lB,GAEhC,MAAO,CACL+zJ,OACAlwL,OACAy0L,kBACAuB,eAAgBC,EAChBC,kBACA9D,OACAzD,UACA6E,qBACAC,cACAC,UACAn3J,QACAm5J,kBAAmBA,GAAqB7wM,EACxCsqM,iBAAkBl3M,SAAS+9M,GAAkBnxM,GAC7CsgD,cACAgR,YACA84I,mBAAoBh3M,QAAQw8M,GAAiB3mN,QAC7CqoN,iBAAkBP,GAAwB1nB,MAC1CkoB,SAAUT,GAAmBzkN,GAC7BmlN,mBAAoBR,GAAmBS,WACvCR,kBACAltJ,UACD,GArDe7sD,EAvhB4B7H,IAwB1C,IAxB2C,OAC/C2E,EAAM,QACNE,EAAO,KACPm3M,EAAI,gBACJuE,EAAe,KACfrC,EAAI,gBACJ8D,EAAe,QACfvH,EAAO,eACPqH,EAAc,mBACdxC,EAAkB,YAClBC,EAAW,QACXC,EAAO,kBACPgC,EAAiB,MACjBn5J,EAAK,YACL4I,EAAW,mBACX8pJ,EAAkB,UAClB94I,EAAS,iBACTggJ,EAAgB,SAChBC,EAAQ,iBACRlH,EAAgB,mBAChBmH,EAAkB,gBAClBP,EAAe,iBACf3G,EAAgB,QAChBvmJ,GACD10D,EACC,MAAM,iBACJqiN,EAAgB,sBAChBC,EAAqB,gBACrBC,EAAe,eACfrH,EAAc,oBACdsH,EAAmB,kBACnBpE,EAAiB,wBACjBqE,EAAuB,uBACvBC,IACE19M,EAAAA,EAAAA,MAEEgvD,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,MAENtL,EAAappB,EAAWC,IAAcv1B,EAAAA,EAAAA,MACtC04M,EAAcC,IbyHdt5D,EAAAA,GAAAA,GAAWkxD,GAASvsF,KaxHpB/gG,EAAWglF,IAAgB/sG,EAAAA,EAAAA,KAAS,IACpC0tE,EAAeC,IAAoB3tE,EAAAA,EAAAA,KAAS,IAC5C09M,EAAeC,IAAoB39M,EAAAA,EAAAA,IAAS,IAC7C49M,IAAWn0L,EAAAA,EAAAA,GAAsBotL,GAAM,GACvCgH,IAAgBp0L,EAAAA,EAAAA,GAAsBqzC,GACtCghJ,GAAkBjH,IAASC,EAAAA,GAAYiH,eAEvCC,IAAUx7M,EAAAA,EAAAA,KAAay7M,IAC3BlI,EAAe,CAAEc,KAAMoH,GAAW,GACjC,CAAClI,KAEJ53M,EAAAA,EAAAA,KAAU,KACJqB,IACFm+M,EAAiB,IACjBT,IACA9iL,IACF,GACC,CAAC56B,EAAQ09M,EAAkB9iL,KAG9Bj8B,EAAAA,EAAAA,KAAU,MACHqB,GAAUgkD,GACbnpB,GACF,GACC,CAACA,EAAYmpB,EAAahkD,KAE7BrB,EAAAA,EAAAA,KAAU,WACKxI,IAATkhN,GAAsB3zJ,IACxB6pD,GAAa,EACf,GACC,CAAC8pG,EAAM3zJ,EAAO4Z,KAGjB3+D,EAAAA,EAAAA,KAAU,KAEN04M,IAASC,EAAAA,GAAYoH,UAClBrH,IAAS+G,IACT9gJ,IAAc+gJ,IACbL,EAAapI,mBACboI,EAAapJ,YAEjB4J,GAAQlH,EAAAA,GAAYE,YACtB,GACC,CAACwG,EAAapJ,WAAYoJ,EAAapI,kBAAmByI,GAAeD,GAAU9gJ,EAAWkhJ,GAASnH,KAE1G14M,EAAAA,EAAAA,KAAU,KACJ+kD,GAAOi7J,OACTV,EAAgB,CACdppN,KAAM,gBACN40H,QAAS,CACP,CAAC/lE,EAAMi7J,OAAQj7J,EAAM9tD,UAG3B,GACC,CAAC8tD,EAAOu6J,KAEXt/M,EAAAA,EAAAA,KAAU,KACR,GAAI46M,GAAMqF,UAAW,CACnB,MACE98M,KAAMi0C,EAAQ,MAAEoX,EAAK,MAAEo8D,EAAK,gBAAEutF,GAC5ByC,EAAKqF,WACH,YACJ5J,KAAgB6J,GACd/H,GAAmB,CAAC,EAClBgI,EAAkB9J,GAAe1oJ,EAAYnlB,MAAKrgC,IAAA,IAAC,KAAEm7E,GAAMn7E,EAAA,OAAKm7E,IAAS+yH,CAAW,IAAG9yH,YAC7F+7H,EAAgB,CACdppN,KAAM,iBACN40H,QAAS,CACP1zE,WACAoX,MAAOA,GAA6B,MAApBA,EAAM4xJ,OAAO,GACxB,IAAG5xJ,IACJA,EACJo8D,WACIu1F,GAAmB,CACrB98H,QAAS88H,EACT9J,iBACG6J,KAIX,IACC,CAACtF,EAAM0E,EAAiB3xJ,KAE3B3tD,EAAAA,EAAAA,KAAU,KACJ03M,GAAkBphN,QACpBgpN,EAAgB,CACdppN,KAAM,0BACN40H,QAAS4sF,EAAiB,GAAGh+M,IAEjC,GACC,CAAC4lN,EAAiB5H,IAErB,MAAM2I,IAAwBh8M,EAAAA,EAAAA,KAAY,KACxCy2M,GAAmB,GAClB,CAACA,IAEExD,IAAa/5M,EAAAA,EAAAA,KAAQ,IACrBm7M,IAASC,EAAAA,GAAYoH,SAChB,EA8cb,WAKE,IAJAxG,EAAyB75M,UAAApJ,OAAA,QAAAkB,IAAAkI,UAAA,GAAAA,UAAA,GAAG,GAC5Bu9M,EAA6Cv9M,UAAApJ,OAAA,EAAAoJ,UAAA,QAAAlI,EAE7Cw/M,EAAiBt3M,UAAApJ,OAAA,EAAAoJ,UAAA,QAAAlI,EAEjB,MAAM4/M,EAAiB6F,EACnBqD,GAAkBrD,EAJAv9M,UAAApJ,OAAA,EAAAoJ,UAAA,QAAAlI,GAKlB,GACJ,IAAI6jJ,EAAQ27D,EAKZ,OAHA37D,EADoBk+D,EAAO53H,OAAOy1H,GAAkB,IAChCpiK,QAAO,CAAC8K,EAAKygK,IACxBzgK,EAAMygK,EAAIjnI,QAChB+hE,GACIA,CACT,CA1dWmlE,CAAcrJ,GAASoC,OAAQ0D,EAAiBoC,EAAa9I,SAAU8I,EAAarI,YAC1F,CAAC0B,EAAMvB,GAASoC,OAAQ0D,EAAiBoC,EAAa9I,SAAU8I,EAAarI,YAE1EK,IAAe95M,EAAAA,EAAAA,KAAQ,KAC3B,GAAIm7M,IAASC,EAAAA,GAAYoH,SAGzB,OAqdJ,SAAyB7uJ,EAAkB+rJ,EAA+C/E,GACxF,MAAMuI,Ed3pBD,SAA4BxK,GACjC,MAAMmF,EAAWpF,GAAeC,GAChC,OAAON,GAAMyF,IAAuB,EACtC,CcwpBuBsF,CAAmBxvJ,EAAM+kJ,YACxCgC,EAAgBwI,GAAgBvvJ,EAAM+kJ,WAAc,GAAEwK,MAAiBvvJ,EAAM+kJ,WAAWrhK,OAAO,UAAOp9C,EACtG2gN,EAAkBjnJ,EAAMglJ,YACzB,GAAEhlJ,EAAMglJ,gBAAgBhlJ,EAAMklJ,SAASllJ,EAAMmlJ,mBAC9C7+M,GACE,MAAEg3D,EAAOpX,SAAUj0C,GAAS+tD,EAC5ByvJ,EAAiB1D,EAAkB2D,GAAmB3D,EAAiB/rJ,EAAMqlJ,eAAY/+M,EACzF4gN,EAAiBuI,GAAgB99M,MACvC,MAAO,CACLo1M,gBACAC,kBACAC,kBACAh1M,OACAqrD,QACA4pJ,iBAEJ,CAteWyI,CAAgBxB,EAAcpC,EAAiBuB,GAAkB,GAAG,GAC1E,CAAC9F,EAAM2G,EAAcpC,EAAiBuB,IAEnCsC,IAAqBz8M,EAAAA,EAAAA,KAAY,KACrCw7M,GAAQlH,EAAAA,GAAYE,YAAY,GAC/B,CAACgH,KAEEkB,IAA0B18M,EAAAA,EAAAA,KAAY,KAC1Cy2M,GAAmB,GAClB,CAACA,IA0BEkG,IAAW38M,EAAAA,EAAAA,KAAY,KAC3B46M,EAAgB,CACdgC,iBAAkB5B,EAAa9I,SAC/BO,gBAAiBuI,EAAavI,gBAC9BG,kBAAmBoI,EAAapI,kBAChCD,UAAWqI,EAAarI,WACxB,GACD,CAACiI,EAAiBI,IAEf6B,IAA0B78M,EAAAA,EAAAA,KAAaq3D,IAC3C,MAAM,YAAEylJ,GAAgBzlJ,EACxB0jJ,EAAuB+B,GACvBH,IAAU,GACT,CAACA,KA4FEI,IAAkB/8M,EAAAA,EAAAA,KAAY,KAClC,MAAM,SAAEwyM,GAAawI,EACfgC,EA0VV,SAAwBhC,GACtB,MAAM,YACJnJ,EAAW,YACXC,EAAW,KACXC,EAAI,MACJllJ,EAAK,YACLmlJ,EAAW,SACXC,EACAl/J,SAAUj0C,EAAI,MACdqrD,EAAK,MACLo8D,GACEy0F,EAWJ,MAAO,CACLl8M,OACAqrD,QACAo8D,QACAutF,gBAbsB,CACtBjC,cACAC,cACAC,OACAllJ,QACAmlJ,cACAC,YASJ,CAtXwBgL,CAAejC,GACnCL,EAAsB,CAAEqC,cAAaxK,YAAW,GAC/C,CAACmI,EAAuBK,IAErBkC,IAAkBl9M,EAAAA,EAAAA,KAAY,KAClC,MAAM88M,EA+XV,SAAwB9B,GACtB,MAAM,WACJpJ,EAAU,WAAEO,EAAU,OAAEC,EAAM,IAAEC,EAAG,eAAEC,EAAc,WAAEC,GACnDyI,GACGmC,EAAaC,GAAchL,EAAO/mI,MAAM,KAW/C,MAAO,CACL/gE,KAXW,CACXsnM,aACAO,aACAgL,cACAC,aACA/K,MACArzH,QAASszH,EACT+K,IAAK9K,GAMT,CAjZwB+K,CAAetC,GACnCH,EAAoB,CAClBiC,eACA,GACD,CAACjC,EAAqBG,IAEnB/5G,IAAoBrjG,EAAAA,EAAAA,IAAgB,KACxC,OAAQy2M,GACN,KAAKC,EAAAA,GAAYI,aACfnqG,GAAa,GACbwyG,KACA,MAEF,KAAKzI,EAAAA,GAAYM,SACf4G,GAAQlH,EAAAA,GAAYoH,UACpB,MAEF,KAAKpH,EAAAA,GAAYC,cACfiH,GAAQlH,EAAAA,GAAYiJ,iBACpB,MAEF,KAAKjJ,EAAAA,GAAYiJ,gBACf,GAAsB,KAAlBrC,EACF,OAGF3wG,GAAa,GACbuwG,EAAwB,CAAEzzG,SAAU6zG,IACpC,MAEF,KAAK5G,EAAAA,GAAYE,YACfjqG,GAAa,GACb2yG,KACAjC,EAAgB,CAAEppN,KAAM,0BAA2B40H,QAAS,KAC5D,MAEF,KAAK6tF,EAAAA,GAAYoH,SAAU,CACzB,GAAIpI,EAGF,OAFA/oG,GAAa,QACbixG,GAAQlH,EAAAA,GAAYiH,gBAItB,GAAIhF,GAAMqF,YAActhJ,IAAc0gJ,EAAa9I,SAGjD,OAFA3nG,GAAa,QACbwyG,KAIF,GACE/B,EAAapI,qBACR4H,GAAsBA,GAAuBx9L,KAAKC,MAAQ,IA7VvC,GAgWxB,YADAu+L,GAAQlH,EAAAA,GAAYiJ,iBAItB,IACGvC,EAAapI,oBAEXuH,IAAmBT,KAAqBa,GACrCJ,IAAmBR,KAAoBW,GAI7C,YADAkB,GAAQlH,EAAAA,GAAYE,aAItB,MAAM,MAAErqJ,EAAK,MAAEo8D,EAAK,SAAExzE,GAAaioK,EAC7BwC,EAA2B1K,GAAS2K,mBAAqBl3F,GACzDusF,GAAS4K,mBAAqBvzJ,GAC9B2oJ,GAAS6K,kBAAoB5qK,EAEnC,GAAK+/J,GAAS8K,6BAA+BtjJ,GAAckjJ,EAEzD,YADAhC,GAAQlH,EAAAA,GAAYI,cAItB,GAAI5B,GAAS8K,6BAA+B5C,EAAa9I,UAAY0G,GAAiB3mN,OAEpF,YADAupN,GAAQlH,EAAAA,GAAYM,UAItBrqG,GAAa,GACboyG,KACA,KACF,EACF,KAGFhhN,EAAAA,EAAAA,KAAU,IACD04M,IAASC,EAAAA,GAAYiJ,iBACxBhyK,EAAAA,GAAAA,GAAyB,CAAE5sC,QAASsiG,UACpC9tG,GAEN,CAAC8tG,GAAmBozG,IAEpB,MAAM9rI,IAAmBvoE,EAAAA,EAAAA,KAAY,KACnCi7M,EAAgB,CACdppN,KAAM,eAERs5E,GAAiB,GACjBjuE,GAAS,GACR,CAACA,EAAS+9M,IAEP58I,IAAkBr+D,EAAAA,EAAAA,KAAY,KAClCw7M,GAAQnH,IAASC,EAAAA,GAAYiJ,gBAAkBjJ,EAAAA,GAAYC,cAAgBD,EAAAA,GAAYoH,SAAS,GAC/F,CAACF,GAASnH,IAEPwJ,IAAc3kN,EAAAA,EAAAA,KAAQ,KAC1B,OAAQm7M,GACN,KAAKC,EAAAA,GAAYoH,SACf,OAAOrvJ,EAAQ,mBACjB,KAAKioJ,EAAAA,GAAYI,aACf,OAAOroJ,EAAQ,uBACjB,KAAKioJ,EAAAA,GAAYM,SACf,OAAOvoJ,EAAQ,yBACjB,KAAKioJ,EAAAA,GAAYC,cACf,OAAOloJ,EAAQ,yBACjB,KAAKioJ,EAAAA,GAAYiJ,gBACf,OAAOlxJ,EAAQ,gCACjB,KAAKioJ,EAAAA,GAAYE,YACf,OAAOnoJ,EAAQ,mBACjB,KAAKioJ,EAAAA,GAAYiH,eACf,OAAOlvJ,EAAQ,kCACjB,QACE,MAAO,GACX,GACC,CAACgoJ,EAAMhoJ,IAEJ9lD,GAAa8tM,IAASC,EAAAA,GAAYoH,SACpCrvJ,EAAQ,qBAAqBgvD,EAAAA,GAAAA,GAAuB43F,GAAYH,EAAS39H,SAAU9oB,EAAQrE,OAC3F5pD,EAAK,mBAwBT,GAAIi8M,EACF,OACE57M,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UAAU,QACV5B,OAAQgkD,EACR9jD,QAAS26B,EACT16B,oBAAqBorE,IAErB9pE,EAAAA,GAAA7K,cAAA,SAAG,0EAC2E6K,EAAAA,GAAA7K,cAAA,WAAM,iDAGpF6K,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLE,QAAM,EACNC,QAASu4B,GAERw0B,EAAQ,SAOnB,MAAMyxJ,GA9CN,WACE,GAAIv4L,EACF,OAAO,EAGT,OAAQ8uL,GACN,KAAKC,EAAAA,GAAYoH,SACf,OAAOt/M,QAAQ02M,GAASW,YAAcvoI,EAExC,KAAKopI,EAAAA,GAAYE,YACf,OAAOp4M,QACuB,KAA5B4+M,EAAapJ,YACT+F,GAAkD,KAA5BqD,EAAa7I,YACf,KAArB6I,EAAa3I,KACW,KAAxB2I,EAAa5I,QAGpB,QACE,OAAO,EAEb,CA0ByB2L,GAEzB,OACEt/M,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,WAAW+I,EAAAA,GAAAA,GAAe,eAAgBmrM,GAASkL,aAAe,aAClEhhN,OAAQgkD,EACR9jD,QAAS26B,EACT16B,oBAAqBorE,IAErB9pE,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SAASiJ,IAAKwkD,EAAQ5pC,MAAQ,WAAQtvB,GACnDsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,eACVQ,MAAM,cACN4E,OAAK,EACLlI,KAAK,UACLwD,QAAS+0M,IAASC,EAAAA,GAAYoH,SAAW7jL,EAAawmC,GACtDp6D,UAAU,SAEVxF,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,GAAAA,GACZ,OAAQ0sM,IAASC,EAAAA,GAAYoH,SAAW,aAAe,sBAI3Dj9M,EAAAA,GAAA7K,cAAA,UAAKiqN,UAEG1qN,IAATkhN,EACC51M,EAAAA,GAAA7K,cAAC05B,GAAAA,GAAU,CACTxuB,KAAK,QACLyuB,UAAW8mL,EACXpe,eAAa,EACbgoB,eAAgB3J,EAAAA,GAAYiH,gBAE5B98M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,yBArTvB,SAA4Bs/M,GAC1B,OAAQA,GACN,KAAK5J,EAAAA,GAAYoH,SACf,OACEj9M,EAAAA,GAAA7K,cAAC8nN,GAAQ,CACPl9M,MAAO+3M,EAAM/3M,MACbf,YAAa84M,EAAM94M,YACnBlL,MAAOgkN,EAAMhkN,MACbs0H,SAAUo0F,EACVlI,eAAgBiI,EAAa9I,UAAY0G,EACrCqD,GAAkBrD,EAAiBoC,EAAa9I,eAChD/+M,EACJ8/M,WAAYA,GACZH,QAASA,EACTE,aAAcA,GACdM,iBAAkBA,EAClBF,mBAAoBA,EACpBT,UAAWqI,EAAarI,UACxBQ,YAAa/2M,QAAQ02M,GAAS8K,4BAC9BvK,iBAAkBA,EAClBnoI,cAAeA,EACfgoI,YAAa/nI,EACbpe,QAASA,IAGf,KAAKunJ,EAAAA,GAAYC,cACf,OACE91M,EAAAA,GAAA7K,cAACuqN,GAAuB,CACtBtxJ,MAAOmuJ,EACP3H,iBAAkBA,EAClBxsF,SAAUo0F,EACVtC,eAAgB8D,KAGtB,KAAKnI,EAAAA,GAAYiJ,gBACf,OACE9+M,EAAAA,GAAA7K,cAACwqN,GAAe,CACdvxJ,MAAOmuJ,EACP3H,iBAAkBA,EAClBmD,iBAAkB2E,EAClBhwM,SAAU+yM,IAAgB7J,IAGhC,KAAKC,EAAAA,GAAYE,YACf,OACE/1M,EAAAA,GAAA7K,cAAC4gN,GAAW,CACV3nJ,MAAOmuJ,EACPn0F,SAAUo0F,EACVvD,mBAAoBt7M,SAASm6M,EAAM8H,mBAAqB9H,EAAMmB,oBAC9DC,mBAAoBA,EACpBC,YAAaA,EACbC,QAASA,EACTvuJ,YAAaA,IAGnB,KAAKgrJ,EAAAA,GAAYI,aACf,OACEj2M,EAAAA,GAAA7K,cAAC8gN,GAAY,CACX7nJ,MAAOmuJ,EACPn0F,SAAUo0F,EACV9H,YAAa/2M,QAAQ02M,GAAS8K,4BAC9B9E,UAAW18M,QAAQ02M,GAAS2K,kBAAoB3K,GAASwL,uBACzDvF,UAAW38M,QAAQ02M,GAAS4K,kBAAoB5K,GAASyL,uBACzDvF,SAAU58M,QAAQ02M,GAAS6K,iBAC3Br0J,YAAaA,IAGnB,KAAKgrJ,EAAAA,GAAYM,SACf,OACEn2M,EAAAA,GAAA7K,cAACghN,GAAQ,CACP/nJ,MAAOmuJ,EACPn0F,SAAUo0F,EACVrC,gBAAiBA,GAAmB,GACpCzjI,SAAU29H,EAAS39H,WAGzB,KAAKm/H,EAAAA,GAAYiH,eACf,OACE98M,EAAAA,GAAA7K,cAAC2nN,GAAc,CACbvyM,IAAK6wM,EACLxD,WAAY4D,EACZ3D,oBAAqBuG,GACrB3/M,QAAS26B,IAGf,QACE,OAEN,CA8NW2mL,CAAmBnK,KAIxB51M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iBACbH,EAAAA,GAAA7K,cAACslB,GAAAA,EAAO,CAAC9Z,MAAM,UAGlBk8M,IACC78M,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,UACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,cACV/M,KAAK,SACLyN,QAAS2hG,GACTpvF,SAAUisM,GACVv4L,UAAWA,GAEVhf,KAINm6C,IAAUA,EAAMi7J,OAlXrB,WACE,GAAKj7J,EAGL,OACEjiD,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UAAU,QACV5B,OAAQZ,QAAQskD,GAChBxjD,QAAS8+M,IAETv9M,EAAAA,GAAA7K,cAAA,UAAK8sD,EAAMjjD,aAAe,SAC1BgB,EAAAA,GAAA7K,cAAA,SAAI8sD,EAAMjjD,aAAe,SACzBgB,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,uBACbH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLE,QAAM,EACNC,QAASo9M,IAERrwJ,EAAQ,QAKnB,CA4V8BoyJ,GACpB,KA6DZ,SAASlC,GAAmB3D,EAAmC8F,GAC7D,OAAO9F,EAAgBz0K,MAAK/+B,IAAA,IAAC,GAAE/P,GAAI+P,EAAA,OAAK/P,IAAOqpN,CAAQ,GACzD,CAEA,SAASzC,GAAkBrD,EAAmC0D,GAC5D,MAAM7iL,EAAS8iL,GAAmB3D,EAAiB0D,GACnD,OAAO7iL,GAAQy7K,MACjB,CC7oBA,MA+DA,IAAen4M,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KACjBC,IACC,MAAM,QAAEw+M,IAAYn+M,EAAAA,EAAAA,KAAeL,GAAQ6wD,QAE3C,MAAO,CACL2tJ,UACD,GANez+M,EA/D4B7H,IAI1C,IAJ2C,OAC/C2E,EAAM,QACNE,EAAO,QACPyhN,GACDtmN,EACC,MAAM+F,GAAOkuD,EAAAA,GAAAA,MAENtL,EAAappB,EAAWC,IAAcv1B,EAAAA,EAAAA,MAE7C3G,EAAAA,EAAAA,KAAU,KACJqB,GACF46B,GACF,GACC,CAAC56B,EAAQ46B,IAEZ,MAAMgnL,GAAcl6G,EAAAA,GAAAA,GAAYi6G,GAC1BE,EAAmBF,GAAWC,EAE9B5L,GAAe95M,EAAAA,EAAAA,KAAQ,KAC3B,GAAK2lN,EACL,OAqDJ,SAAyBjL,EACvBnsL,EAKAssL,GACA,IAAKtsL,EACH,MAAO,CAAEmsL,iBAEX,MAAM,gBAAEE,GAAoBrsL,EACtBq3L,EAAchL,GAAiBjC,YAChC,GAAEiC,EAAgBjC,gBAAgBiC,EAAgB/B,SAAS+B,EAAgB9B,mBAC5E7+M,GACE,MAAEg3D,EAAK,KAAErrD,GAAS2oB,EACxB,MAAO,CACLmsL,gBACAE,gBAAiBgL,EACjBhgN,OACAqrD,QACA4pJ,iBAEJ,CA3EWyI,CAAgBqC,EAAiBE,iBAAkBF,EAAiBp3L,KAAMo3L,EAAiB9K,eAAe,GAChH,CAAC8K,IAEJ,OACEpgN,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,UAAU,oCACV5B,OAAQgkD,EACR9jD,QAAS26B,EACT16B,oBAAqBD,GAEpB2hN,GACCpgN,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,SAASiJ,IAAKzJ,EAAKqkB,MAAQ,WAAQtvB,GAChDsL,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,eACVQ,MAAM,cACN4E,OAAK,EACLlI,KAAK,UACLwD,QAASu4B,EACT5zB,UAAU,SAEVxF,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEfH,EAAAA,GAAA7K,cAAA,UAAI,IAAEwK,EAAK,kBAAkB,MAE/BK,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,iCACbH,EAAAA,GAAA7K,cAAC8nN,GAAQ,CACP3I,eAAgB8L,EAAiB9L,eACjCE,WAAY4L,EAAiBG,YAC7BrM,UAAWkM,EAAiBlM,UAC5BG,QAAS+L,EAAiB/L,QAC1BE,aAAcA,EACdx0M,MAAOqgN,EAAiBrgN,MACxBf,YAAaohN,EAAiBphN,YAC9BlL,MAAOssN,EAAiBtsN,UAK1B,KCrFZ,GAA4E,WAA5E,GAA+F,WCsM/F,IAAewK,EAAAA,EAAAA,KAAKmD,EAAAA,EAAAA,KAClB,CAACC,EAAM2D,KAA4B,IAA1B,MAAEg3B,GAAOh3B,EAGhB,MAAO,CACLqgB,KAHW2W,GAAOj9B,QAASwlC,EAAAA,EAAAA,KAAWljC,EAAQ26B,EAAMj9B,aAAU1K,EAI/D,GANe+M,EAnKkC7H,IAGhD,IAHiD,MACrDyiC,EAAK,KACL3W,GACD9rB,EACC,MAAM,mBAAE4mN,EAAkB,wBAAEC,EAAuB,iBAAEvsL,IAAqBt1B,EAAAA,EAAAA,OACpE,aAAE8hN,GAAiBrkL,GAAS,CAAC,EAE7B18B,GAAOC,EAAAA,EAAAA,MACN8iF,EAAmBi+H,IAAwB5hN,EAAAA,EAAAA,IAAmB,IAE/Dq5B,GAAU39B,EAAAA,EAAAA,KAAQ,IAAMimN,GAAch6M,KAAKg+B,GAASA,EAAK9tC,MAAOggC,GAAAA,GAAkB,CAAC8pL,KAClFE,EAAiBC,IAAiBpmN,EAAAA,EAAAA,KAAQ,KAC/C,IAAKimN,GAAcltN,OAAQ,MAAO,CAAC,GAAI,IACvC,MAAOstN,EAAmBC,IAAc1xF,EAAAA,GAAAA,IAAUqxF,GAAeh8K,GAASA,EAAKs8K,8BAC/E,MAAO,CAACF,EAAkBp6M,KAAKg+B,GAASA,EAAK9tC,KAAKmqN,EAAWr6M,KAAKg+B,GAASA,EAAK9tC,KAAI,GACnF,CAAC8pN,IAEEO,GAA0BxmN,EAAAA,EAAAA,KAAQ,IAC/BimN,GAAc/wL,QAAQ+U,GAASA,EAAKw8K,4BAA8Bx8K,EAAKs8K,8BAC3Et6M,KAAKg+B,GAASA,EAAK9tC,MACrB,CAAC8pN,IAEES,GAAyB1mN,EAAAA,EAAAA,KAAQ,KACrC,GAAKimN,EACL,OAAQA,EAAatkH,MAAM13D,GAASA,EAAKw8K,6BAA+Bx8K,EAAKs8K,6BAA4B,GACxG,CAACN,IAEEU,GAAe3mN,EAAAA,EAAAA,KAAQ,KAC3B,MAAMq+B,GAAQqK,EAAAA,EAAAA,MAAYrK,MAAMC,KAChC,OAAOkoL,GAAyBv6M,KAAK9P,GAAOkiC,EAAMliC,IAAI,GACrD,CAACqqN,KAEJ/jN,EAAAA,EAAAA,KAAU,KACRyjN,EAAqBE,EAAc,GAClC,CAACA,IAEJ,MAAM9zL,GAAc5tB,EAAAA,EAAAA,IAAgB,IAAMshN,MAEpCY,GAAuB9/M,EAAAA,EAAAA,KAAY,KACvCi/M,EAAmB,CAAEphN,OAAQsmB,EAAM9uB,GAAIwhC,QAASsqD,IAChD+9H,GAAyB,GACxB,CAAC/9H,EAAmBh9D,IAEjB6uG,GAAyBhzH,EAAAA,EAAAA,KAAY,KACzC2yB,GAAkB,GACjB,IAEGotL,GAAoB7mN,EAAAA,EAAAA,KAAQ,KAChC,GAAKirB,EACL,OAAO/nB,QAAQ+nB,GAAMgqF,WAAahqF,GAAMs+K,aAAav1F,YAAY,GAChE,CAAC/oF,IAEE67L,GAAoB9mN,EAAAA,EAAAA,KAAQ,IACzB6mN,EACH3hN,EAA8B,IAAzB+gN,GAAcltN,OAAe,0BAA4B,4BAC9DmM,EAAK,yBAA0B+gN,GAAcltN,SAChD,CAAC8tN,EAAmB3hN,EAAM+gN,GAAcltN,SAErCguN,GAAqB/mN,EAAAA,EAAAA,KAAQ,KACjC,IAAKwmN,GAAyBztN,SAAW4tN,GAAc5tN,OAAQ,OAC/D,MAAMmoG,EAASwlH,EAAyB,8BAAgC,uBACxE,IAAI/rL,EAAW,GAAEumE,OACbxoG,EAAS,EAAC2oC,EAAAA,EAAAA,KAAgBslL,EAAa,KAgB3C,OAfuC,IAAnCH,EAAwBztN,QAC1B4hC,EAAW,GAAEumE,OACbxoG,EAAS,EAAC2oC,EAAAA,EAAAA,KAAgBslL,EAAa,KAAKtlL,EAAAA,EAAAA,KAAgBslL,EAAa,MAC7B,IAAnCH,EAAwBztN,QACjC4hC,EAAW,GAAEumE,SACbxoG,EAAS,EAAC2oC,EAAAA,EAAAA,KAAgBslL,EAAa,KAAKtlL,EAAAA,EAAAA,KAAgBslL,EAAa,KAAKtlL,EAAAA,EAAAA,KAAgBslL,EAAa,MAClGH,EAAwBztN,OAAS,IAC1C4hC,EAAW,GAAEumE,QACbxoG,EAAS,EACP2oC,EAAAA,EAAAA,KAAgBslL,EAAa,KAC7BtlL,EAAAA,EAAAA,KAAgBslL,EAAa,KAC5BH,EAAyBztN,OAAS,GAAG+jF,aAInC53E,EAAKy1B,EAASjiC,OAAQuB,EAAW0sN,EAAa5tN,OAAO,GAC3D,CAACytN,EAAyBE,EAAwBxhN,EAAMyhN,IAErDK,EAAoB9jN,QAAQyjN,GAAc5tN,QAC1CkuN,EAAuB/jN,QAAQkjN,GAAertN,QAEpD,OACEwM,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQZ,QAAQy6B,GAAW1S,GAC3BiP,iBD1HoB,WC2HpBl2B,QAASsuB,EACT6H,QAAM,GAEN50B,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACL6E,OAAK,EACL5E,MAAM,cACNtD,KAAK,UACL8C,UDlI2C,WCmI3CqF,UAAW7F,EAAK,SAChBkB,QAASksB,GAET/sB,EAAAA,GAAA7K,cAAA,KAAGgL,UAAU,qBAEdqhN,GACCxhN,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAACsuC,GAAAA,EAAU,CACTtjC,UD3ImL,WC4InLujC,MAAO09K,EACP/jN,KAAK,UAEP2C,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IACQ/Q,EAApB2hN,EAAyB,4BAAoC,mCAEhEthN,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,KACXyV,EAAAA,GAAAA,GAAWq7L,EAAoB,CAAC,qBAEnCxhN,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLw0B,qBAAmB,EACnBD,SAAO,EACP53B,KAAK,UACLwD,QAAS0zH,GAER50H,EAAK,mCAIX8hN,GAAqBC,GACpB1hN,EAAAA,GAAA7K,cAACkyG,GAAAA,EAAS,CAAClnG,UDhKmG,YCiK3GR,EAAK,2BAGT+hN,GACC1hN,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACEr4B,EAAAA,GAAA7K,cAAA,MAAIgL,UAAWuQ,IAAe/Q,EAAK,uBACnCK,EAAAA,GAAA7K,cAAA,KAAGgL,UAAWuQ,IACX6wM,GAEHvhN,EAAAA,GAAA7K,cAACuhC,GAAAA,EAAU,CACTv2B,UD3KkI,WC4KlIw2B,QAASyB,EACTnC,YAAaysD,EACbotC,oBAAqB8wF,EACrBe,yBAA0BhiN,EAAK,4BAC/By3B,oBAAqBupL,EACrBhjI,YAAa2jI,EACbhqL,eAAa,EACbC,YAAU,EACVC,cAAc,aAEf8pL,GACCthN,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UDxLyJ,WCyLzJ9C,KAAK,UACLwD,QAASwgN,EACTjuM,UAAWsvE,EAAkBlvF,QAE5BmM,EAAK,iCAKR,K,gBClMZ,MCwGA,IAAerB,EAAAA,EAAAA,KAhFW1E,IAEV,IAFW,MACzByiC,GACSziC,EACT,MAAM,uBACJgoN,IACEhjN,EAAAA,EAAAA,MAEEe,GAAOC,EAAAA,EAAAA,KACPzL,GAAUmsC,EAAAA,GAAAA,GAAiBjE,GAAOloC,SAAS,IAE3C,aACJqiB,EAAY,qBACZE,IACEE,EAAAA,GAAAA,GAA4BjZ,QAAQ0+B,IAElCwlL,GAAkB1iN,EAAAA,EAAAA,IAAgB,KACtB,IAGZ4tB,GAAc5tB,EAAAA,EAAAA,IAAgB,KAClCyiN,GAAwB,IAG1B,IAAKprM,IAAiBriB,EACpB,OAGF,MAAMy7G,GAAQC,EAAAA,EAAAA,KAAa17G,GACrBw6D,GAAQyD,EAAAA,EAAAA,MAAYjvB,EAAAA,EAAAA,OACpB2+K,EAAwBniN,EAARiwG,EAAa,0BAAkC,oCAgCrE,OACE5vG,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,GAAAA,GDtFG,WCsFyBwN,IA/B9C,WACE,IAAKviB,GAAS4R,QACZ,OAEF,MAAM,MAAEg8M,EAAK,MAAEhuN,GAAUI,EAAQ4R,QACjC,OAAIg8M,EAEA/hN,EAAAA,GAAA7K,cAACmpH,GAAAA,GAAK,CACJn+G,UD/D8G,WCgE9GwuD,MAAOA,EACPx6D,QAASA,EACTc,OAAQspH,EAAAA,GAAYyjG,aACpBppM,UAAQ,EACRK,OAAQ4oM,EACR1oM,QAAS4T,IAGJh5B,GAAOqG,QAEd4F,EAAAA,GAAA7K,cAAC8sN,GAAAA,EAAU,CACT9hN,UD3EiI,WC4EjIhM,QAASA,EACTc,OAAO,eACPitN,OAAQn1L,SANP,CAWT,CAIKo1L,GACDniN,EAAAA,GAAA7K,cAAA,OAAKgL,UDxFoJ,YCyFvJH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLo3C,OAAK,EACLj3C,QAASksB,EACTksE,MAAI,EACJ57F,KAAK,UACLsD,MAAiB,SAAVguD,EAAmB,OAAS,YACnCxuD,UD/F2K,YCiG1K2hN,IAGD,ICpBV,IAAexjN,EAAAA,EAAAA,KA7DqC1E,IAE9C,IAF+C,OACnD2E,GACD3E,EACC,MAAMg0D,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,GAAAA,MACP,mCAAEu0J,EAAkC,iBAAEz0J,IAAqB/uD,EAAAA,EAAAA,OAE1DyjN,EAAoBC,IAAyBvjN,EAAAA,EAAAA,KAAS,GAGvDyc,GAAezf,EAAAA,EAAAA,IAAuB,MAEtC0C,GAAU8C,EAAAA,EAAAA,KAAY,KAC1B6gN,EAAmC,CAAEC,sBAAqB,GACzD,CAACA,IAEExsL,GAAiBt0B,EAAAA,EAAAA,KAAY,KACjCosD,EAAiB,CAAE40J,wBAAwB,IAC3CH,EAAmC,CAAEC,sBAAqB,GACzD,CAACA,IAEEG,GAAwBjhN,EAAAA,EAAAA,KAAarK,KAC1B,IAAXA,GAAc2+B,GAAgB,GACjC,CAACA,IAEE3d,GAAgBqlC,EAAAA,GAAAA,GAA0B/hC,EAAcjd,EAAQikN,EAAuB,WAE7F,OACExiN,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJE,WAAW+I,EAAAA,GAAAA,GAAe,WAC1BnJ,MAAOJ,EAAK,iBACZpB,OAAQA,EACRE,QAASA,GAETuB,EAAAA,GAAA7K,cAAA,SAAIwK,EAAK,4BACTK,EAAAA,GAAA7K,cAACmwD,GAAAA,EAAQ,CACPxlD,MAAOH,EAAK,iBACZs7B,QAASonL,EACT98J,QAAS+8J,IAEXtiN,EAAAA,GAAA7K,cAAA,OACEgL,UAAU,sBACViH,IAAKoU,EACLijC,UAAWvmC,GAEXlY,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAU,wBACVS,QAAM,EACNC,QAASg1B,EACTl1B,MAAM,UAELitD,EAAQ,YAEX5tD,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAU,wBAAwBS,QAAM,EAACC,QAASpC,GACvDmvD,EAAQ,YAGP,G,mHC1DZ,MACM60J,EAAuC,CAAC,EAAG,IAC3CC,EAAwC,CAAC,EAAG,IAC5CC,EAAsC,CAAC,GAAI,GAoCjD,GAAerkN,EAAAA,EAAAA,KAlCsB1E,IAAkC,IAAjC,kBAAEwvG,EAAiB,MAAElsB,GAAOtjF,EAChE,MAAOgpN,EAAqBC,IAAyBh/M,EAAAA,EAAAA,IAAQ,IACtDi/M,EAAaC,IAAiBl/M,EAAAA,EAAAA,IAAQ,IACvC,SAAEC,IAAaC,EAAAA,EAAAA,MAEfi/M,EAAal/M,EAAWm/M,EAAAA,IAA2BC,EAAAA,KAEzDnlM,EAAAA,EAAAA,GAAWglM,EAZkB,KAa7B,MAAMI,GAAwB5hN,EAAAA,EAAAA,IAAYshN,EAAuB,CAACA,IAElE,OACE7iN,EAAAA,GAAA7K,cAAA,OAAKyB,GAAG,SAASuJ,UAAW+8E,EAAQ,MAAQ,KACxC0lI,GACA5iN,EAAAA,GAAA7K,cAAA,OAAKgL,UAAU,mBAEjBH,EAAAA,GAAA7K,cAACs7E,EAAAA,EAAe,CACdpzE,KAAM6/E,EAAQuiE,EAAAA,IAAsBujE,EACpC7iN,UAAW2iN,EAAc,SAAW,QACpCpyI,OAAQikB,EAAAA,EAAeyuH,YACvBC,YAAaZ,EACb5xI,QAAM,EACN9Y,OAAQorJ,IAEVnjN,EAAAA,GAAA7K,cAACs7E,EAAAA,EAAe,CACdpzE,KAAM6/E,EAAQuiE,EAAAA,IAAsBujE,EACpC7iN,UAAW2iN,EAAc,QAAU,SACnCpyI,OAAQikB,EAAAA,EAAe2uH,WACvBD,YAAaj6G,EAAoBs5G,EAAsBC,EACvD9xI,QAAM,IAEJ,G,mFCrDV,SAAgB,KAAO,WAAW,IAAM,WAAW,MAAQ,WAAW,KAAO,YC0D7E,GAAevyE,EAAAA,EAAAA,KAhCG1E,IAYF,IAXdssB,KAAMq9L,EAAU,eAChBC,EAAc,WACd9pG,EAAU,KACV7xG,EAAI,UACJknD,EAAS,UACTS,EAAS,UACTrvD,EAAS,eACTivD,EAAc,mBACdE,EAAkB,cAClBH,EAAa,QACbtuD,GACSjH,EACT,OACEoG,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,EAAAA,GAAewH,EAAOwf,KAAMrvB,GAAW6P,EAAO+yM,UAAWtjN,GACpEU,QAASA,GAETb,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,EAAOwF,KACrBlW,EAAAA,GAAA7K,cAAC8wB,EAAAA,EAAM,CAAC5oB,KAAMq8G,EAAYxzF,KAAMq9L,EAAYG,SAAUF,IACrDz0J,GACC/uD,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,EAAAA,GAAewH,EAAOizM,MAAOv0J,IAC1CI,GAAaxvD,EAAAA,GAAA7K,cAAC0qC,EAAAA,EAAI,CAACx/B,KAAMmvD,EAAWrvD,UAAWmvD,IAC/CP,IAINlnD,GAAQ7H,EAAAA,GAAA7K,cAAA,KAAGgL,WAAW+I,EAAAA,EAAAA,GAAewH,EAAO7I,KAAMsnD,IAAiBtnD,GAChE,G,iUCnCV,MA2CA,GAAevJ,EAAAA,EAAAA,KA3CK1E,IAQJ,IARK,kBACnB0oF,EAAiB,kBACjBtV,EAAiB,oBACjBoV,EAAmB,gBACnBC,EAAe,UACflhF,EAAS,oBACT+zB,KACG0uL,GACMhqN,EACT,MAAM+F,GAAOC,EAAAA,EAAAA,KACPikN,EAAYlmN,QAAQ2kF,GAAqBnhF,GAE/C,OACEnB,EAAAA,GAAA7K,cAAC8K,EAAAA,EACC0Y,EAAA,GACIirM,EAAU,CACdhvL,QAAM,EACNz0B,WAAW+I,EAAAA,EAAAA,GACTk5E,GCrCmE,WDsCnEC,GCtC2C,WDuC3CuhI,EAAWzjN,WAEbw0B,kBAAkBzrB,EAAAA,EAAAA,GCzCE,WDyC6B06M,EAAWjvL,kBAC5D0oE,iBAAiBn0F,EAAAA,EAAAA,GC1CwE,WD0C1C06M,EAAWvmH,mBAEzDumH,EAAW19M,SACX29M,GACC7jN,EAAAA,GAAA7K,cAAA,OAAKgL,UC9C6G,YD+ChHH,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLw0B,oBAAqBA,EACrBr0B,QAASM,GAAayiN,EAAWnlN,QACjCkC,MAAM,UACNtD,KAAK,UACL+V,SAAU45D,GAETsV,GAAqB3iF,EAAK,aAI3B,G,8HE1DZ,QAA2H,WCkG3H,GAAerB,EAAAA,EAAAA,KAjEQ1E,IAWP,IAXQ,OACtB2E,EAAM,MACNwB,EAAK,UACLujG,EAAS,iBACTwgH,EAAgB,OAChBvnL,EAAM,OACNP,EAAM,WACNl0B,EAAU,UACV3H,EAAS,QACT1B,EAAO,cACPuK,GACSpP,EACT,MAAM,SAAEklC,IAAalgC,EAAAA,EAAAA,MACf4tC,GAAiBrtC,EAAAA,EAAAA,IAAiBX,IACtCsgC,EAAS,CAAEloC,GAAI4H,IACfC,GAAS,IAGX,OACEuB,EAAAA,GAAA7K,cAAC8K,EAAAA,EAAK,CACJ1B,OAAQA,EACR0jE,eAAgBtkE,QAAQoC,GACxBq/F,wBAAyBr/F,EACzB60B,QAAM,EACN70B,MAAOA,EACPI,UAAWA,EACXw0B,iBD3DoB,WC4DpBl2B,QAASA,GAERqlN,GACC9jN,EAAAA,GAAA7K,cAAC8wB,EAAAA,EAAM,CAACC,KAAM49L,EAAkBzmN,KAAK,QAAQ8C,UD/DiH,aCiE/Jo8B,EACDv8B,EAAAA,GAAA7K,cAAA,OAAKgL,UDlEwE,YCmE1EmjG,GAAW58F,KAAIrB,IAAA,IAAEvF,EAAOP,GAAM8F,EAAA,OAC7BrF,EAAAA,GAAA7K,cAAA6K,EAAAA,GAAAq4B,SAAA,KACGv4B,GAASE,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,EAAAA,GAAewH,EDrER,aCqEqC5Q,GACtEE,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,EAAAA,GAAewH,EDtEqB,YCsEO5Q,GDtE2E,aCuElH,iBAAVP,GAAsB,WAAYA,EACxCS,EAAAA,GAAA7K,cAACmqG,EAAAA,EAAkB,CACjB9gG,OAAQe,EAAMH,OACde,UD1E0K,WC2E1Kg3B,eAAa,EACbwgB,OAAK,EACLg6C,SAAUpyF,EAAMH,OAChByB,QAAS2rC,IAETjtC,GAEL,KAGNy8B,EACAl0B,GACC9H,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CACLP,UAAY67B,OAA2BtnC,EDxFwD,WCyF/F2I,KAAK,UACLwD,QAASmI,GAAiBvK,GAC1BqJ,GAGE,G,6JC9FZ,SAAgB,QAAU,WAAW,OAAS,WAAW,OAAS,WAAW,WAAa,WAAW,UAAY,WAAW,aAAe,WAAW,YAAc,WAAW,aAAe,WAAW,YAAc,WAAW,SAAW,YCuI7O,GAAexJ,EAAAA,EAAAA,KAtG2B1E,IAQpC,IARqC,SACzC8S,EAAQ,UACRvM,EAAS,QACTG,EAAO,mBACPgmF,EAAkB,kBAClB2E,EAAiB,YACjB84H,EAAW,QACXljN,GACDjH,EACC,MAAMg0D,GAAUhuD,EAAAA,EAAAA,KACVD,GAAOkuD,EAAAA,EAAAA,MAENm2J,EAAoBC,EAAqBC,IAAyBrgN,EAAAA,EAAAA,MAEzE3G,EAAAA,EAAAA,KAAU,KACHwP,GACHw3M,GACF,GACC,CAACx3M,IAEJ,MAAOy3M,EAAkBC,IAAa3pN,EAAAA,EAAAA,KAAQ,KAC5C,IAAK6F,EAAS,MAAO,MAAC5L,GAAW,GAEjC,MAAM2vN,EAAY/jN,EAAQ4xC,QAAO,CAAC1yB,EAAKwb,IACrCxb,EAAI8oE,MAAQttD,EAAOstD,MAAQ9oE,EAAMwb,IAE7BspL,EAAeP,GAAeM,EAAU/7H,MAAQy7H,EAEhDj4M,EAAwG,GAC9G,IAAIy4M,EAA2B,EAC3BC,GAAmB,EAgBvB,OAfAlkN,EAAQoK,SAAQ,CAACswB,EAAQ9jC,KAClB8jC,EAAOypL,YAAYF,IAEpBR,IAAgBO,GAAgBtpL,EAAOstD,MAAQy7H,IAC9CC,IAAsBhpL,EAAOypL,WAIlC34M,EAAO9F,KAAK,CACVg1B,SACA0pL,WAAYv+M,KAAK8Z,IAAIskM,EArDL,GAsDhBI,OAAQztN,IAAUoJ,EAAQ9M,OAAS,IANnCgxN,GAAmB,EAOnB,IAGG,CAAC14M,EAAQ04M,EAAiB,GAChC,CAACR,EAAoB1jN,EAASyjN,IAEjC,OACE/jN,EAAAA,GAAA7K,cAAA,OAAKgL,WAAW+I,EAAAA,EAAAA,GAAewH,EAAOpQ,QAASH,IAC5CgkN,GAAkBz9M,KAAIrB,IAAoC,IAAnC,OAAE21B,EAAM,WAAE0pL,EAAU,OAAEC,GAAQt/M,EACpD,MAAM7R,EAAS2wN,GAAkB3wN,OAC3BoxN,EAAQpxN,EAAS,GAAM,EACvBqxN,EAAiB7pL,IAAWsrD,EAElC,IAAIw+H,EACJ,GAAI9pL,GAAU,YAAaA,EAAQ,CACjC,MAAM0tD,EAAS1tD,EAAO4tD,QAAQljD,MAAMq/K,GAAQA,EAAIjsL,QAAUmyD,KACrDjwD,EAAO4tD,QAAQ12C,QAAO,CAAC1yB,EAAKulM,IAASA,EAAIjsL,MAAQtZ,EAAIsZ,MAAQisL,EAAMvlM,GAAMwb,EAAO4tD,QAAQ,IAC7Fk8H,EAAmBp8H,GAAQs8H,YAC7B,CAEA,OACEhlN,EAAAA,GAAA7K,cAAA,OACEgL,WAAW+I,EAAAA,EAAAA,GACTwH,EAAOsqB,QAAU4pL,GAASD,GAAWj0M,EAAOu0M,WAAYJ,GAAkBn0M,EAAOkgC,QAEnF/pC,IAAKm0B,EAAOstD,MACZznF,QAASA,IAAMA,IAAUm6B,IAEzBh7B,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,EAAOw0M,WAAW,KAC9B9oB,EAAAA,EAAAA,IAAcphK,EAAOstD,OACvBtoF,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,EAAOy0M,aAAc/7M,IAAKzJ,EAAKqkB,MAAQ,MAAQ,OAC5D+0B,MAAMnqC,KAAK,CAAEpb,OAAQkxN,IAAch+M,KAAI,IACtC1G,EAAAA,GAAA7K,cAACq/H,EAAAA,EAAQ,CAACr0H,UAAWuQ,EAAO00M,YAAahyN,KAAK,OAAOiK,KAAK,YAIhE2C,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,EAAO20M,eACpBzuI,EAAAA,EAAAA,GAAe57C,EAAOw7C,OAAQx7C,EAAO07C,SAAU9oB,EAAQrE,QAExDs7J,GAAmBv+H,GAAsB,YAAaA,IAAwBw+H,GAC9E9kN,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,EAAO20M,cACrBrlN,EAAAA,GAAA7K,cAAA,OAAKgL,UAAWuQ,EAAOs0M,eACpB7+L,EAAAA,EAAAA,GAAWynC,EAAQ,2BAA2BwuI,EAAAA,EAAAA,IAAc0oB,OAI/D,KAGRd,GAAsBI,GACtBpkN,EAAAA,GAAA7K,cAACuL,EAAAA,EAAM,CAACP,UAAWuQ,EAAO40M,YAAa1kN,QAAM,EAACqsK,mBAAiB,EAACpsK,QAASojN,GACtEr2J,EAAQ,2BACT5tD,EAAAA,GAAA7K,cAAC0qC,EAAAA,EAAI,CAAC1/B,UAAWuQ,EAAOsnC,SAAU33C,KAAK,UAGvC,G","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.module.scss?84a2","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveDownloads, MessageListType } from '../../global/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message') {\n      openDeleteMessageModal({\n        isSchedule: messageListType === 'scheduled',\n        message: item.message,\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  handleSponsoredClick,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getSenderTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ isMedia: isFromMedia, isFullscreen: true, peerId: chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getSenderTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n  isReportModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n  isReportModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    }, reportModal,\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const isReportModalOpen = Boolean(reportModal);\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    isReportModalOpen,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, undefined, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(\n      unique([\n        ...(currentUserId ? [currentUserId] : []),\n        ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n        ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n      ]),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(undefined);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../global/types';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    const usersById = getGlobal().users.byId;\n    return filterUsersByName(foundIds, usersById, searchQuery);\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp } from '../../../../global/types';\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst SAFE_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    const { height } = ref.current.getBoundingClientRect();\n    const safeAreaHeight = isFullscreen ? SAFE_AREA_HEIGHT : 0;\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: height - safeAreaHeight,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: safeAreaHeight,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n    sendSafeArea();\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiChat, ApiUser,\n} from '../../../api/types';\nimport type { TabState, WebApp, WebAppModalStateType } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser, selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  modalState?: WebAppModalStateType;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n          >\n            <Icon\n              name=\"down\"\n              className={buildClassName(\n                styles.icon,\n                styles.collapseIcon,\n              )}\n              onClick={handleCollapseClick}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n              onClick={handleShowContextMenu}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n            && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={lang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={lang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState, WebApp } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(\n    { width: DEFAULT_MAXIMIZED_STATE_SIZE.width, height: DEFAULT_MAXIMIZED_STATE_SIZE.height },\n  );\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n  );\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n        {!isMoreAppsTabActive && renderMoreAppsButton()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <Button\n          className={buildClassName(\n            styles.windowStateButton,\n            styles.fullscreenButton,\n            'no-drag',\n          )}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          onClick={handleFullscreenClick}\n        >\n          <Icon className={styles.stateIcon} name=\"expand-modal\" />\n        </Button>\n\n        <Button\n          className={buildClassName(\n            styles.windowStateButton,\n            'no-drag',\n          )}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          onClick={handleCollapseClick}\n        >\n          <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n        </Button>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type { ApiPremiumPromo, ApiPremiumSubscriptionOption } from '../../../api/types';\nimport type { ApiLimitTypeForPromo, ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  filterChatsByName, isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelIds ? filterChatsByName(lang, channelIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, lang, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  filterUsersByName,\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatusId: sticker.id,\n      expires: getServerTime() + duration,\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatusId: renderingModal.customEmojiId,\n      expires,\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PickerSelectedItem\n          mockPeer={mockPeerWithStatus}\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={styles.topIcon}><Icon name={headerIconName} /></div>\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      <Separator className={styles.separator} />\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport { selectSponsoredMessage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredMessageContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  message?: ApiSponsoredMessage;\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ message, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(message);\n  const isMonetizationSharing = message?.canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && message && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            message={message}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const message = modal?.chatId ? selectSponsoredMessage(global, modal.chatId) : undefined;\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      message,\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  chatId: string;\n  passwordHint?: string;\n  error?: string;\n  isLoading?: boolean;\n};\n\nconst VerificationMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  onClose,\n  passwordHint,\n  error,\n  isLoading,\n}) => {\n  const {\n    clearMonetizationInfo, loadMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    loadMonetizationRevenueWithdrawalUrl({\n      peerId: chatId,\n      currentPassword: password,\n      onSuccess: () => {\n        onClose();\n      },\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationInfo();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('EnterPassword')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('Password')}\n            error={error && lang(error)}\n            description={lang('Channel.OwnershipTransfer.EnterPasswordText')}\n            clearError={handleClearError}\n            isLoading={isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(VerificationMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        withNormalWordBreak\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"PPDx7_5v\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"listItemButton\":\"MsCAZhTn\",\"button\":\"goI3MITH\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiChatMember, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { IAlbum } from '../../types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, getUserFullName,\n  isChatBasicGroup,\n  isChatSuperGroup, isOwnMessage,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectChat, selectChatFullInfo, selectCurrentMessageIds,\n  selectCurrentMessageList, selectSender, selectSenderFromMessage, selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isSuperGroup?: boolean;\n  sender: ApiPeer | undefined;\n  currentUserId?: string;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIdList: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  message?: ApiMessage;\n  album?: IAlbum;\n  onConfirm?: NoneToVoidFunction;\n  isOwn?: boolean;\n  canBanUsers?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isGroup,\n  isSuperGroup,\n  sender,\n  currentUserId,\n  messageIdList,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  adminMembersById,\n  chatBot,\n  isOwn,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    updateChatMemberBannedRights,\n    closeDeleteMessageModal,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const lang = useOldLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const isSenderOwner = useMemo(() => {\n    return sender && adminMembersById && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner;\n  }, [sender, adminMembersById]);\n\n  const user = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return undefined;\n\n    return usersById[sender.id];\n  }, [isSchedule, sender]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return user && user.id !== currentUserId;\n  }, [user, currentUserId]);\n\n  const shouldShowOptions = shouldShowAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userName = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return '';\n\n    return getUserFullName(usersById[sender.id]);\n  }, [isSchedule, sender]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('ReportSpamTitle'),\n      },\n    ];\n  }, [lang, user]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('DeleteAllFrom', userName),\n      },\n    ];\n  }, [lang, user, userName]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: (message && isAdditionalOptionsVisible ? lang('KickFromSupergroup') : lang('DeleteBan', userName)),\n      },\n    ];\n  }, [isAdditionalOptionsVisible, lang, message, user, userName]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible(!isAdditionalOptionsVisible);\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return senderPeer && userIds.includes(senderPeer.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList?.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (!isOwn && (chosenSpanOption || chosenDeleteOption || chosenBanOption) && (isGroup || isSuperGroup)) {\n      if (chosenSpanOption && sender) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenSpanOption, messageIdList!);\n        if (filteredMessageIdList && filteredMessageIdList.length) {\n          reportChannelSpam({ participantId: sender.id, chatId: chat.id, messageIds: filteredMessageIdList });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenDeleteOption, messageIdList!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged && message) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        deleteMessages({\n          messageIds: [message.id],\n          shouldDeleteForAll: false,\n        });\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div className={shouldShowOptions && styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        {shouldShowOptions && (\n          <Avatar\n            size=\"small\"\n            peer={user!}\n          />\n        )}\n        <h3 className={shouldShowOptions ? styles.title : styles.singleTitle}>{lang('DeleteSingleMessagesTitle')}</h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {lang('UserRestrictionsCanDoUsers', 1)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={buildClassName(styles.mainContainer, 'custom-scroll')}>\n        {renderHeader()}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{lang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {lang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(chatBot || !shouldShowAdditionalOptions) && (\n          <>\n            <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n              {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={handleClose}\n          >{lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const chatId = deleteMessageModal && deleteMessageModal.message?.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (deleteMessageModal && deleteMessageModal.message && threadId\n      && selectAllowedMessageActionsSlow(global, deleteMessageModal.message, threadId)) || {};\n    const adminMembersById = chatFullInfo && chatFullInfo?.adminMembersById;\n    const messageIdList = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const sender = deleteMessageModal?.message && selectSender(global, deleteMessageModal.message);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(deleteMessageModal && deleteMessageModal.message\n      && selectBot(global, deleteMessageModal.message.chatId));\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const isOwn = deleteMessageModal && deleteMessageModal.message && isOwnMessage(deleteMessageModal.message);\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isSuperGroup,\n      currentUserId: global.currentUserId,\n      sender,\n      messageIdList,\n      canDeleteForAll: deleteMessageModal && !deleteMessageModal.isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      isSchedule: deleteMessageModal && deleteMessageModal.isSchedule,\n      message: deleteMessageModal && deleteMessageModal.message,\n      album: deleteMessageModal && deleteMessageModal.album,\n      onConfirm: deleteMessageModal && deleteMessageModal.onConfirm,\n      isOwn,\n      canBanUsers,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"yBqscugH\",\"container\":\"kXZCbJ2r\",\"title\":\"SM4Gh7ar\",\"singleTitle\":\"jsg3ZpHm\",\"actionTitle\":\"fpMDH6cA\",\"restrictionTitle\":\"ujUxllEg\",\"listItemButton\":\"NE9anBBa\",\"button\":\"XbhgbPbE\",\"dropdownList\":\"JqX2Gfp8\",\"dialogButtons\":\"_E_ldIaq\",\"restrictionContainer\":\"SxYVATEo\",\"restrictionContainerOpen\":\"pb31MZG8\",\"dropdownListOpen\":\"xF6oHne7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  getUserFullName,\n  isChatBasicGroup, isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectCanDeleteSelectedMessages,\n  selectChatFullInfo,\n  selectCurrentChat,\n  selectCurrentMessageIds,\n  selectCurrentMessageList,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport Avatar from '../common/Avatar';\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './DeleteSelectedMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIds: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  canBanUsers?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  isOpen,\n  isSchedule,\n  currentUserId,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  messageIds,\n  onClose,\n  adminMembersById,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n\n  const senderList = useMemo(() => {\n    if (isChannel) {\n      return undefined;\n    }\n    const senderArray = getSendersFromSelectedMessages(getGlobal(), chat);\n    return senderArray?.filter(Boolean);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chat, isChannel, isOpen]);\n\n  const isSenderOwner = useMemo(() => {\n    if (!senderList) {\n      return undefined;\n    }\n\n    return senderList.some((sender) => sender\n      && adminMembersById\n      && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner);\n  }, [senderList, adminMembersById]);\n\n  const userList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return [];\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n\n    return Array.from(uniqueUserIds)\n      .map((id) => usersById[id])\n      .filter(Boolean);\n  }, [isSchedule, senderList]);\n\n  const nestedOptionsWithAvatarList = useLastCallback(() => {\n    return userList.map((user) => ({\n      value: `${user.id}`,\n      label: getUserFullName(user) || '',\n      leftElement: <Avatar size=\"small\" peer={user} />,\n    }));\n  });\n\n  const showAdditionalOptions = useMemo(() => {\n    return !userList.some((user) => user.id === currentUserId);\n  }, [userList, currentUserId]);\n\n  const shouldShowOptions = showAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return {};\n\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n    const userIds = Array.from(uniqueUserIds).map((userId) => usersById[userId]);\n\n    return buildCollectionByCallback(userIds, (user) => [user?.id, getUserFullName(user)]);\n  }, [isSchedule, senderList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'spam' : userList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'delete_all' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(userNames)[0]),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList, userNames]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'ban' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(userNames)[0])),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, selectedMessageIds, userList, userNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return sender && userIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList && filteredMessageIdList.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else if (!isSenderOwner && shouldShowOptions) {\n      if (chosenSpanOption) {\n        const userIdList = chosenSpanOption.filter((option) => !Number.isNaN(Number(option)));\n        const userMessagesMap = selectedMessageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          if (sender && userIdList.includes(sender.id)) {\n            if (!acc[sender.id]) {\n              acc[sender.id] = [];\n            }\n            acc[sender.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(userMessagesMap);\n      }\n\n      if (chosenDeleteOption) {\n        const userIdList = chosenDeleteOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    onClose();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOptions && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOptions && (\n          <AvatarList\n            size=\"small\"\n            peers={userList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOptions ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', selectedMessageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n            nestedCheckbox={selectedMessageIds && userList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', userList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(styles.dropdownList, isMediaDropdownOpen && styles.dropdownListOpen)}\n        />\n      </div>\n    );\n  }\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {!showAdditionalOptions && <p>{lang('AreYouSureDeleteFewMessages')}</p>}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {willDeleteForCurrentUserOnly && lang('DeleteForMeDescription')}\n        {(willDeleteForAll && !showAdditionalOptions) && lang('DeleteForEveryoneDescription')}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName\n                ? renderText(oldLang('ChatList.DeleteForEveryone', contactName))\n                : oldLang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {oldLang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const messageIds = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isChannel,\n      isSuperGroup,\n      selectedMessageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      messageIds,\n      adminMembersById,\n      canBanUsers,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      {canDeleteMessages && (\n        <DeleteSelectedMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={isSchedule}\n          onClose={closeDeleteModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const chat = selectCurrentChat(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PickerSelectedItem\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    const usersById = getGlobal().users.byId;\n    return filterUsersByName(withoutRecent, usersById, searchQuery);\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(lang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, lang, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {lang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.ChannelList, title: 'ChannelsTab' },\n  { type: GlobalSearchContent.BotApps, title: 'AppsTab' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = chatId ? CHAT_TABS : TABS;\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, lang, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../global/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON, IS_SNAP_EFFECT_SUPPORTED, IS_WAVE_TRANSFORM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{oldLang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  languages?: ApiLanguage[];\n} & Pick<ISettings, | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const languages = global.settings.languages;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {oldLang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {oldLang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {oldLang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {oldLang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {oldLang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {oldLang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {oldLang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {oldLang('Language')}\n          <span className=\"settings-item__current-value\">{oldLang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {oldLang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {oldLang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {oldLang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">\n                {formatStarsAmount(lang, starsBalance)}\n              </span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {oldLang('SendAGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {oldLang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {oldLang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {oldLang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={oldLang('lng_settings_ask_ok')}\n        title={oldLang('AskAQuestion')}\n        text={oldLang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n    { key: 'snapEffect', label: 'Dust-effect deletion' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? oldLang('PrivacyMessagesContactsAndPremium')\n                : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings, BotsPrivacyType } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings, CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(oldLang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(oldLang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, oldLang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onScreenSelect,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, groupStatetefulContent, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatetefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { ActiveDownloads, MessageListType } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition, ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    openDeleteMessageModal({ isSchedule: messageListType === 'scheduled', album, message });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className=\"ContextMenuContainer\">\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    reportMessages({ chatId, messageIds: [] });\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {lang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed;\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState, MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  onSendWhenOnline,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 20;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, invoice.currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, invoice.currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: string | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        {needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={lang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  footer,\n  buttonText,\n  className,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PickerSelectedItem\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(option.amount, option.currency, oldLang.code)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","undefined","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","_ref","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","memo","isOpen","peerId","onClose","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","lang","useOldLang","REPORT_OPTIONS","label","title","React","Modal","onEnter","className","RadioGroup","name","options","onChange","selected","InputText","Button","color","isText","onClick","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","profileId","onConfirm","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","useCallback","isUserId","withGlobal","global","_ref4","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","_ref2","onTrigger","round","ariaLabel","renderDeleteModal","DeleteProfilePhotoModal","openDeleteModalHandler","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","_ref3","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","stopPropagation","dir","isRectangular","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","VideoPlayerControls","sponsoredMessage","textMessage","withAnimation","isMoving","onFooterClick","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","chat","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getSenderTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","isFromMedia","isMedia","handleForward","fromChatId","messageIds","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportAvatarModal","MediaViewerSlides","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","sender","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","isReportModalOpen","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","Array","_","i","PlaceholderChatInfo","bottomInfo","reportModal","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","pick","messageList","getReadableErrorText","notifications","notification","Notification","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","CalendarModal","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","changeWebAppModalState","closeWebAppModal","oldLang","useLang","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","SAFE_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","userFullInfo","selectUserFullInfo","botAppSettings","botInfo","appSettings","selectCurrentChat","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","paymentStatus","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","safeAreaHeight","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","closeIcon","stateBack","backButtonCaption","hasHeaderElement","hidden","multiTab","headerPanel","headerButton","backIconContainer","buttonCaptionContainer","headerSplitButton","collapseIcon","moreIcon","loadingPlaceholder","hide","viewBox","defaultPlaceholderGrid","placeholderSquare","renderDefaultPlaceholder","withButton","sandbox","allow","allowFullScreen","buttonsContainer","leftToRight","rightToLeft","topToBottom","bottomToTop","hideHorizontal","oneRow","twoRows","visible","mainButtonSpinner","hasCloseButton","webAppPopup","withoutTitle","filename","withNodes","withMarkdown","MINIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","isLowStackPriority","shortName","renderActiveTab","MinimizedWebAppModal","noBackdropClose","WebAppModalTabContent","MoreAppsTabContent","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","subscribeButtonText","PremiumFeatureModal","isBig","PremiumLogo","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","ItemPicker","picker","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","isLink","onClickAction","userNames","selectedMemberIds","displayText","chatFullInfo","selectChatFullInfo","members","adminMembersById","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredContactIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedStarOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","stars","filteredGifts","basicGift","userCountOptions","winner","winnerCountOptions","winners","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","subLabelClassName","formatDateTimeToString","boosts","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","StarTopupOptionList","selectedStarCount","match","Link","isPrimary","renderPremiumFeaturesLink","CountryPickerModal","GiveawayUserPickerModal","GiveawayChannelPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","emojiStatusId","expires","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","LOCAL_TGS_URLS","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","CUSTOM_EMOJI_SIZE","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","referrerWebAppKey","hasAbsoluteCloseButton","loopLimit","PickerSelectedItem","mockPeer","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","listItemData","headerIconName","isStatic","Separator","minLevelToRestrictAds","channelRestrictAdsLevelMin","closeAboutAdsModal","moreMenuRef","isMonetizationSharing","canReport","renderingIsNewDesign","regularAdContent","SafeLink","TableAboutModal","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","blockchainText","monetizationTitle","specialReplacement","passwordHint","clearMonetizationInfo","loadMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","onSuccess","handleClearError","PasswordForm","shouldShowSubmit","clearError","hint","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","withNormalWordBreak","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","messageIdList","selectCurrentMessageIds","isChatBasicGroup","isSuperGroup","contactName","getPrivateChatUserId","isChatWithBot","selectBot","chatBot","isSystemBot","canBanUsers","isCreator","getHasAdminRight","isOwn","isOwnMessage","willDeleteForCurrentUserOnly","willDeleteForAll","album","deleteMessages","deleteScheduledMessages","reportChannelSpam","deleteChatMember","updateChatMemberBannedRights","closeDeleteMessageModal","defaultBannedRights","chosenDeleteOption","setChosenDeleteOption","chosenBanOption","setChosenBanOptions","chosenSpanOption","setChosenSpanOptions","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","isSenderOwner","isOwner","shouldShowAdditionalOptions","shouldShowOptions","userName","ACTION_SPAM_OPTION","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByUserId","selectedMessageIdList","msgId","senderPeer","selectSenderFromMessage","handleDeleteMessages","filteredMessageIdList","shouldDeleteForAll","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageForAll","messages","handleDeleteMessageForSelf","participantId","handleDeleteOptionChange","handleBanOptionChange","handleSpanOptionChange","mainContainer","singleTitle","actionTitle","CheckboxGroup","restrictionContainer","restrictionContainerOpen","restrictionTitle","PermissionCheckboxList","dropdownList","dropdownListOpen","listItemButton","dialogButtons","isPrivateChat","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","senderList","senderArray","getSendersFromSelectedMessages","userList","uniqueUserIds","nestedOptionsWithAvatarList","showAdditionalOptions","buildCollectionByCallback","nestedOptions","handleReportSpam","userMessagesMap","userIdList","isNaN","onCloseHandler","nestedCheckbox","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","handleCopy","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","handleOpenPremium","ReadTime","LastSeen","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","formatCurrencyAsString","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","shouldWarnAboutSvg","byKey","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","shouldMarkBotTrusted","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","openChatWithInfo","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","LeftSearchResultChat","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","foundTopicIds","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handlePickerItemClick","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","BotAppResults","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","lockedUnselectedIds","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","StarIcon","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","SettingsActiveSession","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","balance","shouldDisplayStars","history","all","transactions","sessionCount","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","formatStarsAmount","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","setUserSearchQuery","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","isAllowList","withPremiumCategory","withMiniAppsCategory","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","editDate","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","handleOpenModal","isReactionPickerOpen","poll","enabledReactions","reactionsLimit","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","customEmojiSet","handleOpenCustomEmojiSets","copyOptions","statefulContent","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatetefulContent","extraHeightAudioPlayer","middleColumn","middleColumnComputedStyle","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","ReadTimeMenuItem","LastEditTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","noOptions","canReplyGlobally","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendText","isUserRightBanned","canReplyInChat","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectPollFromMessage","storyData","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","addLocalPaidReaction","openPaidReactionModal","useShowTransition","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closeMenu","handleDelete","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canGift","selectCanGift","canCreateTopic","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openGiftModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftClick","forUserId","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","DeleteChatModal","isSavedDialog","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","MiddleSearchResult","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","noForcedUpperCase","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","isTouchScreen","shouldUseCurrentReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleReactionContextMenu","handleStoryReactionSelect","actionText","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","StickerPicker","ReactionPickerLimited","BLUR_CANVAS_SIZE","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","withAvatar","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","getWebDocumentHash","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","thumbnailBlobUrl","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","itemName","renderViewMoreButton","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","formatInteger","joinRequests","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","form","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","renderError","optionId","receipt","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge","modalProps","hasButton","headerAvatarPeer","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","opt","perUserStars","wideOption","optionTop","stackedStars","stackedStar","optionBottom","moreOptions"],"sourceRoot":""}