{"version":3,"file":"2002.ba6c7b42f5928c3d30a9.js","mappings":"sFAoLAA,EAAOC,QA1KP,SAAcC,GACZ,MAAMC,EAAQD,EAAKC,MACbC,EAAW,CACfC,QACE,oVAKFC,QACE,aACFC,SACE,u3BAsBEC,EAAU,CACdC,UAAW,SACXC,SAAU,CACR,CAAEC,MAAO,cACT,CAAEA,MAAO,QAGPC,EAAO,CACXH,UAAW,UACXC,SAAU,CACR,CACEC,MAAO,IACPE,IAAK,KAEP,CACEF,MAAO,IACPE,IAAK,MAGTC,QAAS,MACTC,SAAU,CAAEb,EAAKc,mBAEbC,EAAa,CACjBN,MAAO,IACPE,IAAK,IACLK,SAAUd,EACVW,SAAU,CACRH,EACAV,EAAKiB,oBACLjB,EAAKkB,qBACLlB,EAAKmB,kBACLnB,EAAKoB,iBACLpB,EAAKqB,gBAGHC,EAAe,uCACfC,EAAW,CACfd,MAAO,2CACPe,cAAc,EACdb,IAAK,IACLc,gBAAgB,EAChBZ,SAAU,CACRH,EACAK,EACA,CACER,UAAW,UAEXE,MAAOR,EAAMyB,OACXJ,EAEArB,EAAM0B,iBAAiB1B,EAAMyB,OAAO,OAAQJ,KAE9CM,UAAW,KAKjB,MAAO,CACLC,KAAM,OACNC,QAAS,CAAE,OACXC,kBAAkB,EAClBf,SAAUd,EACVW,SAAU,CACRb,EAAKgC,QAAQ,YAAa,cAC1B,CACEzB,UAAW,OACXE,MAAO,gBACPE,IAAK,IACLsB,aAAa,EACbpB,SAAU,CACR,CACEN,UAAW,UACXE,MAAO,mBAIbT,EAAKgC,QAAQ,OAAQ,KACrBhC,EAAKiB,oBACLjB,EAAKkB,qBACLlB,EAAKmB,kBACLnB,EAAKoB,iBAEL,CACEc,cACE,qFAEFvB,IAAK,IACLE,SAAU,CACRb,EAAKgC,QAAQ,OAAQ,KACrBhC,EAAKiB,oBACLjB,EAAKkB,qBACLlB,EAAKmB,kBACLnB,EAAKoB,iBACLL,EACAQ,IAGJ,CACEW,cAAe,QACfvB,IAAK,IACLsB,aAAa,EACbpB,SAAU,CACR,CACEqB,cAAe,QACfvB,IAAK,IACLE,SAAU,CAAEU,IAEdvB,EAAKgC,QAAQ,OAAQ,KACrBhC,EAAKiB,oBACLjB,EAAKkB,qBACLlB,EAAKmB,kBACLnB,EAAKoB,iBACLpB,EAAKqB,gBAKT,CACEd,UAAW,WACXE,MAAO,iCACPwB,aAAa,EACbpB,SAAU,CACR,CACEN,UAAW,QACXE,MAAO,eAnIF,CACbF,UAAW,SACXE,MAAO,KACPE,IAAK,KACLa,cAAc,EACdW,YAAY,GAiIN7B,IAGJN,EAAKqB,cACLf,GAGN,C","sources":["webpack://telegram-t/./node_modules/highlight.js/lib/languages/gams.js"],"sourcesContent":["/*\n Language: GAMS\n Author: Stefan Bechert <stefan.bechert@gmx.net>\n Contributors: Oleg Efimov <efimovov@gmail.com>, Mikko Kouhia <mikko.kouhia@iki.fi>\n Description: The General Algebraic Modeling System language\n Website: https://www.gams.com\n Category: scientific\n */\n\n/** @type LanguageFn */\nfunction gams(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = {\n    keyword:\n      'abort acronym acronyms alias all and assign binary card diag display '\n      + 'else eq file files for free ge gt if integer le loop lt maximizing '\n      + 'minimizing model models ne negative no not option options or ord '\n      + 'positive prod put putpage puttl repeat sameas semicont semiint smax '\n      + 'smin solve sos1 sos2 sum system table then until using while xor yes',\n    literal:\n      'eps inf na',\n    built_in:\n      'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy '\n      + 'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact '\n      + 'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max '\n      + 'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power '\n      + 'randBinomial randLinear randTriangle round rPower sigmoid sign '\n      + 'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt '\n      + 'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp '\n      + 'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt '\n      + 'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear '\n      + 'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion '\n      + 'handleCollect handleDelete handleStatus handleSubmit heapFree '\n      + 'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate '\n      + 'licenseLevel licenseStatus maxExecError sleep timeClose timeComp '\n      + 'timeElapsed timeExec timeStart'\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  const SYMBOLS = {\n    className: 'symbol',\n    variants: [\n      { begin: /=[lgenxc]=/ },\n      { begin: /\\$/ }\n    ]\n  };\n  const QSTR = { // One-line quoted comment string\n    className: 'comment',\n    variants: [\n      {\n        begin: '\\'',\n        end: '\\''\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      }\n    ],\n    illegal: '\\\\n',\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [\n      QSTR,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n  const COMMENT_WORD = /[a-z0-9&#*=?@\\\\><:,()$[\\]_.{}!+%^-]+/;\n  const DESCTEXT = { // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [\n      QSTR,\n      ASSIGNMENT,\n      {\n        className: 'comment',\n        // one comment word, then possibly more\n        begin: regex.concat(\n          COMMENT_WORD,\n          // [ ] because \\s would be too broad (matching newlines)\n          regex.anyNumberOfTimes(regex.concat(/[ ]+/, COMMENT_WORD))\n        ),\n        relevance: 0\n      }\n    ]\n  };\n\n  return {\n    name: 'GAMS',\n    aliases: [ 'gms' ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(/^\\$ontext/, /^\\$offtext/),\n      {\n        className: 'meta',\n        begin: '^\\\\$[a-z0-9]+',\n        end: '$',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: '^\\\\$[a-z0-9]+'\n          }\n        ]\n      },\n      hljs.COMMENT('^\\\\*', '$'),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      // Declarations\n      {\n        beginKeywords:\n          'set sets parameter parameters variable variables '\n          + 'scalar scalars equation equations',\n        end: ';',\n        contains: [\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          ASSIGNMENT,\n          DESCTEXT\n        ]\n      },\n      { // table environment\n        beginKeywords: 'table',\n        end: ';',\n        returnBegin: true,\n        contains: [\n          { // table header row\n            beginKeywords: 'table',\n            end: '$',\n            contains: [ DESCTEXT ]\n          },\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          hljs.C_NUMBER_MODE\n          // Table does not contain DESCTEXT or ASSIGNMENT\n        ]\n      },\n      // Function definitions\n      {\n        className: 'function',\n        begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n        returnBegin: true,\n        contains: [\n          { // Function title\n            className: 'title',\n            begin: /^[a-z0-9_]+/\n          },\n          PARAMS,\n          SYMBOLS\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOLS\n    ]\n  };\n}\n\nmodule.exports = gams;\n"],"names":["module","exports","hljs","regex","KEYWORDS","keyword","literal","built_in","SYMBOLS","className","variants","begin","QSTR","end","illegal","contains","BACKSLASH_ESCAPE","ASSIGNMENT","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","COMMENT_WORD","DESCTEXT","excludeBegin","endsWithParent","concat","anyNumberOfTimes","relevance","name","aliases","case_insensitive","COMMENT","returnBegin","beginKeywords","excludeEnd"],"sourceRoot":""}