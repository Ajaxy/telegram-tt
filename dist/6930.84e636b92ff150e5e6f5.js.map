{"version":3,"file":"6930.84e636b92ff150e5e6f5.js","mappings":"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","sources":["webpack://telegram-t/./src/components/modals/stars/gift/StarsGiftModal.module.scss?069e","webpack://telegram-t/./src/components/modals/stars/gift/StarsGiftModal.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.module.scss?3156","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionItem.module.scss?74b5","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionItem.tsx","webpack://telegram-t/./src/components/modals/stars/helpers/transaction.ts","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.module.scss?605d","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.module.scss?b947","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/modals/gift/UniqueGiftManageButtons.module.scss?f41d","webpack://telegram-t/./src/components/modals/gift/UniqueGiftManageButtons.tsx","webpack://telegram-t/./src/components/modals/gift/UniqueGiftHeader.tsx","webpack://telegram-t/./src/components/modals/gift/UniqueGiftHeader.module.scss?2bf6","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.module.scss?a215","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.tsx","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionModal.module.scss?5025","webpack://telegram-t/./src/components/modals/stars/subscription/StarsSubscriptionModal.tsx","webpack://telegram-t/./src/components/modals/paidReaction/StarSlider.module.scss?b8f3","webpack://telegram-t/./src/components/modals/paidReaction/StarSlider.tsx","webpack://telegram-t/./src/components/modals/paidReaction/PaidReactionModal.module.scss?80b2","webpack://telegram-t/./src/components/modals/paidReaction/PaidReactionModal.tsx","webpack://telegram-t/./src/components/modals/gift/GiftComposer.module.scss?dac8","webpack://telegram-t/./src/components/modals/gift/GiftComposer.tsx","webpack://telegram-t/./src/components/modals/gift/GiftItem.module.scss?c564","webpack://telegram-t/./src/components/modals/gift/GiftItemPremium.tsx","webpack://telegram-t/./src/components/modals/gift/GiftItemStar.tsx","webpack://telegram-t/./src/components/modals/gift/GiftModal.module.scss?fd13","webpack://telegram-t/./src/components/modals/gift/GiftModalResaleScreen.tsx","webpack://telegram-t/./src/components/modals/gift/ResaleGiftMenuAttributeSticker.module.scss?8276","webpack://telegram-t/./src/components/modals/gift/ResaleGiftMenuAttributeSticker.tsx","webpack://telegram-t/./src/components/modals/gift/GiftResaleFilters.module.scss?c5a8","webpack://telegram-t/./src/components/modals/gift/GiftResaleFilters.tsx","webpack://telegram-t/./src/components/modals/gift/StarGiftCategoryList.module.scss?7d19","webpack://telegram-t/./src/components/modals/gift/StarGiftCategoryList.tsx","webpack://telegram-t/./src/components/modals/gift/GiftModal.tsx","webpack://telegram-t/./src/components/modals/gift/recipient/GiftRecipientPicker.module.scss?b7e9","webpack://telegram-t/./src/components/modals/gift/recipient/GiftRecipientPicker.tsx","webpack://telegram-t/./src/components/common/gift/GiftTransferPreview.module.scss?0f0d","webpack://telegram-t/./src/components/common/gift/GiftTransferPreview.tsx","webpack://telegram-t/./src/components/modals/gift/info/GiftInfoModal.module.scss?4f0e","webpack://telegram-t/./src/components/modals/gift/info/GiftInfoModal.tsx","webpack://telegram-t/./src/components/modals/gift/value/GiftInfoValueModal.module.scss?3884","webpack://telegram-t/./src/components/modals/gift/value/GiftInfoValueModal.tsx","webpack://telegram-t/./src/components/modals/gift/resale/GiftResalePriceComposerModal.module.scss?6666","webpack://telegram-t/./src/components/modals/gift/resale/GiftResalePriceComposerModal.tsx","webpack://telegram-t/./src/components/modals/gift/upgrade/GiftUpgradeModal.module.scss?ae9e","webpack://telegram-t/./src/components/modals/gift/upgrade/GiftUpgradeModal.tsx","webpack://telegram-t/./src/components/modals/gift/status/GiftStatusInfoModal.module.scss?3366","webpack://telegram-t/./src/components/modals/gift/status/GiftStatusInfoModal.tsx","webpack://telegram-t/./src/components/modals/gift/withdraw/GiftWithdrawModal.module.scss?287b","webpack://telegram-t/./src/components/modals/gift/withdraw/GiftWithdrawModal.tsx","webpack://telegram-t/./src/hooks/useDebouncedMemo.ts","webpack://telegram-t/./src/hooks/usePeerSearch.ts","webpack://telegram-t/./src/components/modals/gift/transfer/GiftTransferModal.tsx","webpack://telegram-t/./src/components/modals/stars/chatRefund/ChatRefundModal.tsx","webpack://telegram-t/./src/components/modals/priceConfirm/PriceConfirmModal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"MFXAwnxJ\",\"content\":\"Sl6xVf1R\",\"main\":\"bTN9Jeph\",\"headerInfo\":\"c6MiyJgW\",\"logo\":\"StGLWvzb\",\"logoBackground\":\"SyTXSfml\",\"description\":\"kFe3mIZo\",\"section\":\"BgfHkWd2\",\"header\":\"zMtAGfXs\",\"starHeaderText\":\"q3v8orGj\",\"hiddenHeader\":\"bq3FnXT0\",\"closeButton\":\"bDsDTkbe\",\"avatar\":\"jK36xUj4\",\"center\":\"v1PckUQn\",\"secondaryInfo\":\"TDWSRfP9\"};","import type { FC } from '../../../../lib/teact/teact';\nimport type React from '../../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiStarTopupOption, ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport {\n  selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport StarTopupOptionList from '../StarTopupOptionList';\n\nimport styles from './StarsGiftModal.module.scss';\n\nimport StarLogo from '../../../../assets/icons/GoldStar.svg';\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsGiftModal'];\n};\n\ntype StateProps = {\n  user?: ApiUser;\n};\n\nconst AVATAR_SIZE = 100;\n\nconst StarsGiftModal: FC<OwnProps & StateProps> = ({\n  modal,\n  user,\n}) => {\n  const {\n    closeStarsGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n  const dialogRef = useRef<HTMLDivElement>();\n\n  const isOpen = Boolean(modal?.isOpen);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const oldLang = useOldLang();\n\n  const [selectedOption, setSelectedOption] = useState<ApiStarTopupOption | undefined>();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n    }\n  }, [isOpen]);\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (renderingModal?.isCompleted) {\n      showConfetti();\n    }\n  }, [renderingModal, showConfetti]);\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    if (!renderingModal) return;\n\n    setSelectedOption(option);\n    if (user) {\n      openInvoice({\n        type: 'starsgift',\n        userId: user.id,\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    } else {\n      openInvoice({\n        type: 'stars',\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    }\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClose = useLastCallback(() => {\n    closeStarsGiftModal();\n  });\n\n  function renderGiftTitle() {\n    if (renderingModal?.isCompleted) {\n      return user ? renderText(oldLang('Notification.StarsGift.SentYou',\n        formatCurrencyAsString(selectedOption!.amount, selectedOption!.currency, oldLang.code)), ['simple_markdown'])\n        : renderText(oldLang('StarsAcquiredInfo', selectedOption?.stars), ['simple_markdown']);\n    }\n\n    return user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars');\n  }\n\n  const bottomText = useMemo(() => {\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        url={oldLang('StarsTOSLink')}\n        text={oldLang('lng_credits_summary_options_about_link')}\n      />,\n      parts[1],\n    ];\n  }, [oldLang]);\n\n  return (\n    <Modal\n      className={buildClassName(styles.modalDialog)}\n      contentClassName={styles.content}\n      dialogRef={dialogRef}\n      isSlim\n      onClose={handleClose}\n      isOpen={isOpen}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n\n          onClick={() => closeStarsGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars')}\n          </h2>\n        </div>\n        <div className={styles.headerInfo}>\n          {user ? (\n            <>\n              <Avatar\n                size={AVATAR_SIZE}\n                peer={user}\n                className={styles.avatar}\n              />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          ) : (\n            <>\n              <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          )}\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={styles.description}>\n          {user ? renderText(\n            oldLang('ActionGiftStarsSubtitle', getPeerTitle(oldLang, user)), ['simple_markdown'],\n          ) : oldLang('Stars.Purchase.GetStarsInfo')}\n        </p>\n        <div className={styles.section}>\n          <StarTopupOptionList\n            options={renderingModal?.starsGiftOptions}\n            onClick={handleClick}\n          />\n          <div className={styles.secondaryInfo}>\n            {bottomText}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): Complete<StateProps> => {\n  const user = modal?.forUserId ? selectUser(global, modal.forUserId) : undefined;\n\n  return {\n    user,\n  };\n})(StarsGiftModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"s3k01dTm\",\"transition\":\"BNA0_b5j\",\"main\":\"Oadi16vt\",\"filter\":\"z84KbvhX\",\"title\":\"Jnsrau29\",\"buttons\":\"NnVyYB32\",\"picker\":\"cuI2eDIY\",\"avatars\":\"ILtw_aNL\",\"center\":\"eIfMzHv5\",\"description\":\"FlNJWZ5P\",\"premiumFeatures\":\"xIv0Yaur\",\"options\":\"eNJRXn6P\",\"button\":\"KDNKXBp5\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isDeletedUser, isUserBot,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './StarsGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n  activeListIds?: string[];\n  archivedListIds?: string[];\n}\n\nconst StarsGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  userIds,\n}) => {\n  const { closeStarsGiftingPickerModal, openStarsGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const combinedIds = unique([\n      ...(userIds || []),\n      ...(activeListIds || []),\n      ...(archivedListIds || []),\n    ]);\n\n    const filteredUserIds = filterPeersByQuery({\n      ids: combinedIds, query: searchQuery, type: 'user',\n    });\n\n    return sortChatIds(filteredUserIds.filter((id) => {\n      const user = usersById[id];\n\n      if (!user) {\n        return false;\n      }\n\n      return !user.isSupport\n        && !isUserBot(user) && !isDeletedUser(user)\n        && id !== currentUserId && id !== SERVICE_NOTIFICATIONS_USER_ID;\n    }));\n  }, [currentUserId, searchQuery, userIds, activeListIds, archivedListIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedId?: string) => {\n    if (newSelectedId?.length) {\n      openStarsGiftModal({ forUserId: newSelectedId });\n      closeStarsGiftingPickerModal();\n    }\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeStarsGiftingPickerModal}\n      title={oldLang('GiftStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onEnter={closeStarsGiftingPickerModal}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        onSelectedIdChange={handleSelectedUserIdsChange}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const {\n    chats: {\n      listIds,\n    },\n    currentUserId,\n  } = global;\n\n  return {\n    userIds: global.contactList?.userIds,\n    activeListIds: listIds.active,\n    archivedListIds: listIds.archived,\n    currentUserId,\n  };\n})(StarsGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"minimal\":\"nkV4JXHc\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"container\":\"mnhBs1uK\",\"section\":\"lYkNd_gb\",\"lastSection\":\"f749AI4g\",\"sectionTitle\":\"FF8gm7MP\",\"hint\":\"Rs8WXoOz\",\"tos\":\"Vu6blJk9\",\"topUpButton\":\"dc_DZoVF\",\"tonBalanceContainer\":\"lorbW9II\",\"tonBalance\":\"h2Fs3tOv\",\"tonIconBalance\":\"Ut6GidJP\",\"tonInUsd\":\"FdcdsB4l\",\"tonIconLogo\":\"_hCjjyEv\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"botItem\":\"AhxcrKWn\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"addStarsButton\":\"dqnGL2uh\",\"addStarsIcon\":\"w9Db2eiK\",\"balanceBlock\":\"Yk0OQBKC\",\"balanceInfo\":\"p2dW9NOV\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"starButton\":\"oOt4VBD2\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"avatarStar\":\"Wu10dXoa\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\",\"subscriptions\":\"IX5BhCUF\",\"tabs\":\"KZVEyKOX\",\"disclaimer\":\"bpVifdwH\",\"amountBadge\":\"BPM7LKwo\",\"loadMore\":\"TKmZjMyd\",\"loadMoreIcon\":\"buepwtN1\"};","import { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiTypeCurrencyAmount } from '../../../api/types';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport buildClassName from '../../../util/buildClassName';\nimport { convertCurrencyFromBaseUnit } from '../../../util/formatCurrency';\n\nimport useLang from '../../../hooks/useLang';\n\nimport BadgeButton from '../../common/BadgeButton';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance?: ApiTypeCurrencyAmount;\n  withAddButton?: boolean;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className, withAddButton }: OwnProps) => {\n  const lang = useLang();\n\n  const {\n    openStarsBalanceModal,\n  } = getActions();\n\n  const renderStarsAmount = () => {\n    return (\n      <>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {balance !== undefined && balance.currency === STARS_CURRENCY_CODE\n          ? formatStarsAmount(lang, balance) : '…'}\n        {withAddButton && (\n          <BadgeButton\n            className={styles.addStarsButton}\n            onClick={() => openStarsBalanceModal({})}\n          >\n            <Icon\n              className={styles.addStarsIcon}\n              name=\"add\"\n            />\n          </BadgeButton>\n        )}\n      </>\n    );\n  };\n\n  const renderTonAmount = () => {\n    return (\n      <>\n        <Icon name=\"toncoin\" />\n        {balance !== undefined ? convertCurrencyFromBaseUnit(balance.amount, balance.currency) : '…'}\n      </>\n    );\n  };\n\n  return (\n    <div className={buildClassName(styles.balanceBlock, className)}>\n      <div className={styles.balanceInfo}>\n        <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n        <div className={styles.balanceBottom}>\n          {balance?.currency === TON_CURRENCY_CODE ? renderTonAmount() : renderStarsAmount()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXnbeQxP\",\"info\":\"zLaaDX3c\",\"status\":\"HbF2qTB2\",\"statusPricing\":\"AveGvpdV\",\"amount\":\"_CBiOQcv\",\"title\":\"k9ZIv5Pd\",\"description\":\"FlRlxMx2\",\"subtitle\":\"YN2J8dw6\",\"statusPeriod\":\"MRrP7Oew\",\"statusEnded\":\"pRHwfr8m\",\"preview\":\"t6Syyhzd\",\"subscriptionStar\":\"ftlbevPm\"};","import { memo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiStarsSubscription,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport { formatDateToString } from '../../../../util/dates/dateFormat';\nimport { formatInteger } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\n\nimport styles from './StarsSubscriptionItem.module.scss';\n\ntype OwnProps = {\n  subscription: ApiStarsSubscription;\n};\n\nfunction selectProvidedPeer(peerId: string) {\n  return (global: GlobalState) => (\n    selectPeer(global, peerId)\n  );\n}\n\nconst StarsSubscriptionItem = ({ subscription }: OwnProps) => {\n  const { openStarsSubscriptionModal } = getActions();\n  const {\n    peerId, pricing, until, isCancelled, title, photo,\n  } = subscription;\n  const lang = useOldLang();\n\n  const peer = useSelector(selectProvidedPeer(peerId))!;\n\n  const handleClick = useLastCallback(() => {\n    openStarsSubscriptionModal({ subscription });\n  });\n\n  if (!peer) {\n    return undefined;\n  }\n\n  const hasExpired = until < Date.now() / 1000;\n  const formattedDate = formatDateToString(until * 1000, lang.code, true, 'long');\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      <div className={styles.preview}>\n        <Avatar size=\"medium\" peer={peer} />\n        <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"small\" />\n      </div>\n      <div className={styles.info}>\n        <h3 className={styles.title}>{renderText(getPeerTitle(lang, peer) || '')}</h3>\n        {title && (\n          <p className={styles.subtitle}>\n            {photo && <Avatar webPhoto={photo} size=\"micro\" />}\n            {renderText(title)}\n          </p>\n        )}\n        <p className={styles.description}>\n          {lang(\n            hasExpired ? 'StarsSubscriptionExpired'\n              : isCancelled ? 'StarsSubscriptionExpires' : 'StarsSubscriptionRenews',\n            formattedDate,\n          )}\n        </p>\n      </div>\n      <div className={styles.status}>\n        {(isCancelled || hasExpired) ? (\n          <div className={styles.statusEnded}>\n            {lang(hasExpired ? 'StarsSubscriptionStatusExpired' : 'StarsSubscriptionStatusCancelled')}\n          </div>\n        ) : (\n          <>\n            <div className={styles.statusPricing}>\n              <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />\n              <span className={styles.amount}>\n                {formatInteger(pricing.amount)}\n              </span>\n            </div>\n            <div className={styles.statusPeriod}>{lang('StarsParticipantSubscriptionPerMonth')}</div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsSubscriptionItem);\n","import type { ApiStarsAmount, ApiStarsTransaction, ApiTypeCurrencyAmount } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../../config';\nimport { buildStarsTransactionCustomPeer, shouldUseCustomPeer } from '../../../../global/helpers/payments';\nimport {\n  type LangFn,\n} from '../../../../util/localization';\nimport { formatPercent } from '../../../../util/textFormat';\n\nexport function getTransactionTitle(oldLang: OldLangFn, lang: LangFn, transaction: ApiStarsTransaction) {\n  if (transaction.paidMessages) {\n    return lang(\n      'PaidMessageTransaction',\n      { count: transaction.paidMessages },\n      {\n        withNodes: true,\n        pluralValue: transaction.paidMessages,\n      },\n    );\n  }\n\n  if (transaction.isGiftResale) {\n    return isNegativeAmount(transaction.amount)\n      ? lang('StarGiftSaleTransaction')\n      : lang('StarGiftPurchaseTransaction');\n  }\n  if (transaction.isPostsSearch) {\n    return lang('PostsSearchTransaction');\n  }\n\n  if (transaction.starRefCommision) {\n    return oldLang('StarTransactionCommission', formatPercent(transaction.starRefCommision));\n  }\n  if (transaction.isGiftUpgrade) return oldLang('Gift2TransactionUpgraded');\n  if (transaction.extendedMedia) return oldLang('StarMediaPurchase');\n  if (transaction.subscriptionPeriod) return transaction.title || oldLang('StarSubscriptionPurchase');\n  if (transaction.isReaction) return oldLang('StarsReactionsSent');\n  if (transaction.giveawayPostId) return oldLang('StarsGiveawayPrizeReceived');\n  if (transaction.isMyGift) return oldLang('StarsGiftSent');\n  if (transaction.isGift) {\n    if (transaction.amount.currency === TON_CURRENCY_CODE) {\n      return lang('TonGiftReceived');\n    }\n    return oldLang('StarsGiftReceived');\n  }\n  if (transaction.starGift) {\n    return isNegativeAmount(transaction.amount) ? oldLang('Gift2TransactionSent') : oldLang('Gift2ConvertedTitle');\n  }\n\n  const customPeer = (transaction.peer && shouldUseCustomPeer(transaction)\n    && buildStarsTransactionCustomPeer(transaction)) || undefined;\n\n  if (customPeer) return customPeer.title || oldLang(customPeer.titleKey!);\n\n  return transaction.title;\n}\n\nexport function isNegativeStarsAmount(starsAmount: ApiStarsAmount) {\n  if (starsAmount.amount) return starsAmount.amount < 0;\n  return starsAmount.nanos < 0;\n}\n\nexport function isNegativeAmount(currencyAmount: ApiTypeCurrencyAmount) {\n  if (currencyAmount.currency === STARS_CURRENCY_CODE) {\n    return isNegativeStarsAmount(currencyAmount);\n  }\n  return currencyAmount.amount < 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jQkp75Gb\",\"preview\":\"OYGSN3PF\",\"count\":\"KX1yz2Jy\",\"thumb\":\"EvinKr5k\",\"noOutline\":\"KSAAsUDv\",\"itemCount1\":\"GxDajfX_\",\"itemCount2\":\"jXuZoxq8\",\"itemCount3\":\"TPn3XGHJ\",\"blurry\":\"hWZuxLS8\",\"full\":\"w56QPFhl\",\"fadeIn\":\"ds43W8Wq\"};","import { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport Icon from '../../../common/icons/Icon';\nimport MediaSpoiler from '../../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aHAxv_Jg\",\"info\":\"oyYrn3II\",\"stars\":\"K5lc75ku\",\"amount\":\"QLQPuLAr\",\"title\":\"e0pK8CJ_\",\"description\":\"xbERdDMQ\",\"date\":\"l6CwQ0Ev\",\"positive\":\"P_42_ZWR\",\"negative\":\"TGjnLJfH\",\"preview\":\"cnjGihOT\",\"subscriptionStar\":\"z43YvnDX\",\"uniqueGiftBackground\":\"eNvzMw2p\",\"giftSticker\":\"U3dqmnM4\"};","import { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { CustomPeer } from '../../../../types';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../../config';\nimport { buildStarsTransactionCustomPeer,\n  formatStarsTransactionAmount,\n  shouldUseCustomPeer } from '../../../../global/helpers/payments';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../../util/objects/customPeer';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport renderText from '../../../common/helpers/renderText';\nimport { getTransactionTitle, isNegativeAmount } from '../helpers/transaction';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n  className?: string;\n};\n\nconst GIFT_STICKER_SIZE = 36;\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction, className }: OwnProps) => {\n  const { openStarsTransactionModal } = getActions();\n  const {\n    date,\n    amount,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n    subscriptionPeriod,\n  } = transaction;\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n  const starGift = transaction.starGift;\n  const isUniqueGift = starGift?.type === 'starGiftUnique';\n  const giftSticker = starGift && getStickerFromGift(starGift);\n\n  const data = useMemo(() => {\n    let title = getTransactionTitle(oldLang, lang, transaction);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (!shouldUseCustomPeer(transaction)) {\n      description = peer && getPeerTitle(oldLang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(transaction);\n      title = customPeer.title || oldLang(customPeer.titleKey!);\n      description = oldLang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.isGiftUpgrade && transaction.starGift?.type === 'starGiftUnique') {\n      description = lang('GiftUnique', { title: transaction.starGift.title, number: transaction.starGift.number });\n    }\n\n    if (transaction.isGiftResale && transaction.starGift?.type === 'starGiftUnique') {\n      description = lang('GiftUnique', { title: transaction.starGift.title, number: transaction.starGift.number });\n    }\n\n    if (transaction.isPostsSearch) {\n      title = getTransactionTitle(oldLang, lang, transaction);\n      description = undefined;\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = oldLang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = oldLang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = oldLang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [oldLang, lang, peer, transaction]);\n\n  const previewContent = useMemo(() => {\n    if (isUniqueGift) {\n      const { backdrop } = getGiftAttributes(starGift)!;\n      const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n      return (\n        <>\n          <RadialPatternBackground\n            className={styles.uniqueGiftBackground}\n            backgroundColors={backgroundColors}\n          />\n          <AnimatedIconFromSticker\n            className={styles.giftSticker}\n            sticker={giftSticker}\n            size={GIFT_STICKER_SIZE}\n            play={false}\n          />\n        </>\n      );\n    }\n\n    if (giftSticker) {\n      return (\n        <AnimatedIconFromSticker\n          className={styles.giftSticker}\n          sticker={giftSticker}\n          size={GIFT_STICKER_SIZE}\n          play={false}\n        />\n      );\n    }\n\n    if (extendedMedia) {\n      return <PaidMediaThumb media={extendedMedia} isTransactionPreview />;\n    }\n\n    return (\n      <>\n        <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />\n        {Boolean(subscriptionPeriod) && (\n          <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"small\" />\n        )}\n      </>\n    );\n  }, [isUniqueGift, extendedMedia, photo, data.avatarPeer, subscriptionPeriod, starGift, giftSticker]);\n\n  const handleClick = useLastCallback(() => {\n    openStarsTransactionModal({ transaction });\n  });\n\n  const amountColorClass = isNegativeAmount(amount) ? styles.negative : styles.positive;\n\n  return (\n    <div className={buildClassName(styles.root, className)} onClick={handleClick}>\n      <div className={styles.preview}>\n        {previewContent}\n      </div>\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        {data.description && (\n          <p className={styles.description}>{renderText(data.description)}</p>\n        )}\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, oldLang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span\n          className={buildClassName(styles.amount, amountColorClass)}\n        >\n          {formatStarsTransactionAmount(lang, amount)}\n        </span>\n        {amount.currency === STARS_CURRENCY_CODE && <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />}\n        {amount.currency === TON_CURRENCY_CODE && <Icon name=\"toncoin\" className={amountColorClass} />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","import { memo, useEffect, useMemo, useState } from '@teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiStarTopupOption } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { AnimationLevel } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  PAID_MESSAGES_PURPOSE,\n  STARS_CURRENCY_CODE,\n  TON_CURRENCY_CODE,\n} from '../../../config';\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectChat, selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState.ts';\nimport buildClassName from '../../../util/buildClassName';\nimport { convertCurrencyFromBaseUnit, convertTonToUsd, formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { resolveTransitionName } from '../../../util/resolveTransitionName.ts';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ParticlesHeader from '../common/ParticlesHeader.tsx';\nimport BalanceBlock from './BalanceBlock';\nimport StarTopupOptionList from './StarTopupOptionList';\nimport StarsSubscriptionItem from './subscription/StarsSubscriptionItem';\nimport StarsTransactionItem from './transaction/StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\nconst TRANSACTION_TABS_KEYS: RegularLangKey[] = [\n  'StarsTransactionsAll',\n  'StarsTransactionsIncoming',\n  'StarsTransactionsOutgoing',\n];\nconst TRANSACTION_ITEM_CLASS = 'StarsTransactionItem';\nconst SUBSCRIPTION_PURPOSE = 'subs';\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  tonBalanceState?: GlobalState['ton'];\n  canBuyPremium?: boolean;\n  shouldForceHeight?: boolean;\n  tonUsdRate?: number;\n  tonTopupUrl: string;\n  animationLevel: AnimationLevel;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, tonBalanceState, canBuyPremium, shouldForceHeight, tonUsdRate, tonTopupUrl, animationLevel,\n}: OwnProps & StateProps) => {\n  const {\n    closeStarsBalanceModal, loadStarsTransactions, loadStarsSubscriptions, openStarsGiftingPickerModal, openInvoice,\n    openUrl,\n  } = getActions();\n\n  const currency = modal?.currency || STARS_CURRENCY_CODE;\n  const currentState = currency === TON_CURRENCY_CODE ? tonBalanceState : starsBalanceState;\n  const { balance, history } = currentState || {};\n  const { subscriptions } = (currency === STARS_CURRENCY_CODE && starsBalanceState) || {};\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [areBuyOptionsShown, showBuyOptions, hideBuyOptions] = useFlag();\n\n  const isOpen = Boolean(modal && (starsBalanceState || tonBalanceState));\n\n  const {\n    originStarsPayment, originReaction, originGift, topup,\n  } = modal || {};\n\n  const shouldOpenOnBuy = originStarsPayment || originReaction || originGift || topup;\n\n  const ongoingTransactionAmount = originStarsPayment?.form?.invoice?.totalAmount\n    || originStarsPayment?.subscriptionInfo?.subscriptionPricing?.amount\n    || originReaction?.amount\n    || originGift?.gift.stars\n    || topup?.balanceNeeded;\n  const starsNeeded = ongoingTransactionAmount ? ongoingTransactionAmount - (balance?.amount || 0) : undefined;\n  const starsNeededText = useMemo(() => {\n    const global = getGlobal();\n\n    if (originReaction) {\n      const channel = selectChat(global, originReaction.chatId);\n      if (!channel) return undefined;\n      return oldLang('StarsNeededTextReactions', getChatTitle(oldLang, channel));\n    }\n\n    if (originStarsPayment) {\n      const bot = originStarsPayment.form?.botId ? selectUser(global, originStarsPayment.form.botId) : undefined;\n      if (!bot) return undefined;\n      return oldLang('StarsNeededText', getUserFullName(bot));\n    }\n\n    if (originGift) {\n      const peer = selectUser(global, originGift.peerId);\n      if (!peer) return undefined;\n      return oldLang('StarsNeededTextGift', getPeerTitle(lang, peer));\n    }\n\n    if (topup?.purpose === SUBSCRIPTION_PURPOSE) {\n      return oldLang('StarsNeededTextLink');\n    }\n\n    if (topup?.purpose === PAID_MESSAGES_PURPOSE) {\n      return lang('StarsNeededTextSendPaidMessages', undefined, {\n        withMarkdown: true,\n        withNodes: true,\n      });\n    }\n\n    return undefined;\n  }, [originReaction, originStarsPayment, originGift, topup?.purpose, lang, oldLang]);\n\n  const shouldShowItems = Boolean(history?.all?.transactions.length && !shouldOpenOnBuy);\n  const shouldSuggestGifting = !shouldOpenOnBuy;\n\n  const modalHeight = useMemo(() => {\n    const transactionCount = history?.all?.transactions.length || 0;\n    if (transactionCount === 1) {\n      return '35.5rem';\n    }\n    if (transactionCount === 2) {\n      return '39.25rem';\n    }\n    if (transactionCount === 3) {\n      return '43rem';\n    }\n    return '45rem';\n  }, [history?.all?.transactions.length]);\n\n  const transactionTabs: TabWithProperties[] = useMemo(() => {\n    return TRANSACTION_TABS_KEYS.map((key) => ({\n      title: lang(key),\n    }));\n  }, [lang]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setSelectedTabIndex(0);\n      hideBuyOptions();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (shouldOpenOnBuy) {\n      showBuyOptions();\n      return;\n    }\n\n    hideBuyOptions();\n  }, [shouldOpenOnBuy]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  const renderStarsHeaderSection = () => {\n    return (\n      <>\n        <ParticlesHeader\n          model=\"swaying-star\"\n          color=\"gold\"\n          title={starsNeeded ? oldLang('StarsNeededTitle', ongoingTransactionAmount) : oldLang('TelegramStars')}\n          description={renderText(\n            starsNeededText || oldLang('TelegramStarsInfo'),\n            ['simple_markdown', 'emoji'],\n          )}\n          isDisabled={!isOpen}\n        />\n        {canBuyPremium && !areBuyOptionsShown && (\n          <Button\n            className={styles.starButton}\n            onClick={showBuyOptions}\n            fluid\n          >\n            {oldLang('Star.List.BuyMoreStars')}\n          </Button>\n        )}\n        {canBuyPremium && !areBuyOptionsShown && shouldSuggestGifting && (\n          <Button\n            isText\n            noForcedUpperCase\n            className={styles.starButton}\n            fluid\n            onClick={openStarsGiftingPickerModalHandler}\n          >\n            {oldLang('TelegramStarsGift')}\n          </Button>\n        )}\n        {areBuyOptionsShown && starsBalanceState?.topupOptions && (\n          <StarTopupOptionList\n            starsNeeded={starsNeeded}\n            options={starsBalanceState.topupOptions}\n            onClick={handleBuyStars}\n          />\n        )}\n      </>\n    );\n  };\n\n  const renderTonHeaderSection = () => {\n    const tonAmount = convertCurrencyFromBaseUnit(balance?.amount || 0, TON_CURRENCY_CODE);\n    return (\n      <>\n        <ParticlesHeader\n          model=\"speeding-diamond\"\n          color=\"blue\"\n          title={lang('CurrencyTon')}\n          description={lang('DescriptionAboutTon')}\n          isDisabled={!isOpen}\n        />\n        <div className={styles.tonBalanceContainer}>\n          <div className={styles.tonBalance}>\n            <Icon name=\"toncoin\" className={styles.tonIconBalance} />\n            {tonAmount}\n          </div>\n          {Boolean(tonUsdRate) && (\n            <span className={styles.tonInUsd}>\n              {`≈ ${formatCurrencyAsString(\n                convertTonToUsd(balance?.amount || 0, tonUsdRate, true),\n                'USD',\n                lang.code,\n              )}`}\n            </span>\n          )}\n        </div>\n        <Button\n          className={styles.topUpButton}\n          onClick={handleTonTopUp}\n          fluid\n        >\n          {lang('ButtonTopUpViaFragment')}\n        </Button>\n      </>\n    );\n  };\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleLoadMoreTransactions = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n      isTon: currency === TON_CURRENCY_CODE,\n    });\n  });\n\n  const handleLoadMoreSubscriptions = useLastCallback(() => {\n    loadStarsSubscriptions();\n  });\n\n  const openStarsGiftingPickerModalHandler = useLastCallback(() => {\n    openStarsGiftingPickerModal({});\n  });\n\n  const handleBuyStars = useLastCallback((option: ApiStarTopupOption) => {\n    openInvoice({\n      type: 'stars',\n      stars: option.stars,\n      currency: option.currency,\n      amount: option.amount,\n    });\n  });\n\n  const handleTonTopUp = useLastCallback(() => {\n    openUrl({ url: tonTopupUrl });\n  });\n\n  return (\n    <Modal\n      className={buildClassName(styles.root, !shouldForceHeight && !areBuyOptionsShown && styles.minimal)}\n      isOpen={isOpen}\n      onClose={closeStarsBalanceModal}\n      dialogStyle={`--modal-height: ${modalHeight}`}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {currency !== TON_CURRENCY_CODE && <BalanceBlock balance={balance} className={styles.modalBalance} />}\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {oldLang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          {currency === TON_CURRENCY_CODE ? renderTonHeaderSection() : renderStarsHeaderSection()}\n        </div>\n        {areBuyOptionsShown && (\n          <div className={styles.tos}>\n            {tosText}\n          </div>\n        )}\n        {currency === TON_CURRENCY_CODE && (\n          <div className={styles.hint}>\n            {lang('TonModalHint')}\n          </div>\n        )}\n        {shouldShowItems && Boolean(subscriptions?.list.length) && (\n          <div className={styles.section}>\n            <h3 className={styles.sectionTitle}>{oldLang('StarMySubscriptions')}</h3>\n            <div className={styles.subscriptions}>\n              {subscriptions?.list.map((subscription) => (\n                <StarsSubscriptionItem\n                  key={subscription.id}\n                  subscription={subscription}\n                />\n              ))}\n              {subscriptions?.nextOffset && (\n                <Button\n                  isText\n                  disabled={subscriptions.isLoading}\n                  size=\"smaller\"\n                  noForcedUpperCase\n                  className={styles.loadMore}\n                  onClick={handleLoadMoreSubscriptions}\n                >\n                  <Icon name=\"down\" className={styles.loadMoreIcon} />\n                  {oldLang('StarMySubscriptionsExpand')}\n                </Button>\n              )}\n            </div>\n          </div>\n        )}\n        {shouldShowItems && (\n          <div className={styles.container}>\n            <div className={styles.lastSection}>\n              <Transition\n                name={resolveTransitionName('slideOptimized', animationLevel, undefined, lang.isRtl)}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS_KEYS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMoreTransactions}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  scrollContainerClosest={`.${styles.main}`}\n                  itemSelector={`.${TRANSACTION_ITEM_CLASS}`}\n                  className={styles.transactions}\n                  noFastList\n                  noScrollRestoreOnTop\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <StarsTransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                      className={TRANSACTION_ITEM_CLASS}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n            <TabList\n              className={styles.tabs}\n              tabClassName={styles.tab}\n              activeTab={selectedTabIndex}\n              tabs={transactionTabs}\n              onSwitchTab={setSelectedTabIndex}\n            />\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): Complete<StateProps> => {\n    const shouldForceHeight = modal?.currency === TON_CURRENCY_CODE\n      ? Boolean(global.ton?.history?.all?.transactions.length)\n      : Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      shouldForceHeight,\n      starsBalanceState: global.stars,\n      tonBalanceState: global.ton,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      tonUsdRate: global.appConfig.tonUsdRate,\n      tonTopupUrl: global.appConfig.tonTopupUrl,\n      animationLevel: selectSharedSettings(global).animationLevel,\n    };\n  },\n)(StarsBalanceModal));\n","import { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport PeerBadge from '../../common/PeerBadge';\nimport PeerChip from '../../common/PeerChip';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './transaction/PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsPayment'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closeStarsPaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal?.inputInvoice && starsBalanceState);\n\n  const prevModal = usePrevious(modal);\n  const renderingModal = modal || prevModal;\n\n  const { form, subscriptionInfo } = renderingModal || {};\n  const amount = form?.invoice?.totalAmount || subscriptionInfo?.subscriptionPricing?.amount;\n  const isBotSubscription = Boolean(form?.invoice.subscriptionPeriod);\n  const canShowPeerItem = !subscriptionInfo?.subscriptionPricing;\n\n  const photo = form?.photo;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!renderingModal?.inputInvoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = oldLang('Stars.Intro.PurchasedText.Stars', amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => Boolean(media.duration));\n\n      const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? oldLang('Stars.Transfer.Videos', extendedMedia.length)\n          : oldLang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(oldLang, paidMediaChat!);\n      return oldLang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    if (subscriptionInfo) {\n      return lang('StarsSubscribeText', {\n        chat: subscriptionInfo.title,\n        amount,\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n        pluralValue: amount!,\n      });\n    }\n\n    if (isBotSubscription) {\n      return lang('StarsSubscribeBotText', {\n        name: form.title,\n        amount,\n        bot: botName,\n      }, {\n        pluralValue: amount!,\n      });\n    }\n\n    return oldLang('Stars.Transfer.Info', [form!.title, botName, starsText]);\n  }, [\n    renderingModal?.inputInvoice, bot, oldLang, amount, paidMediaMessage, subscriptionInfo, isBotSubscription, form,\n    paidMediaChat, lang,\n  ]);\n\n  const disclaimerText = useMemo(() => {\n    if (subscriptionInfo) {\n      return lang('StarsSubscribeInfo', {\n        link: <SafeLink url={lang('StarsSubscribeInfoLink')} text={lang('StarsSubscribeInfoLinkText')} />,\n      }, {\n        withNodes: true,\n      });\n    }\n\n    return undefined;\n  }, [subscriptionInfo, lang]);\n\n  const inviteCustomPeer = useMemo(() => {\n    if (!subscriptionInfo) {\n      return undefined;\n    }\n\n    return getCustomPeerFromInvite(subscriptionInfo);\n  }, [subscriptionInfo]);\n\n  const handlePayment = useLastCallback(() => {\n    const balance = starsBalanceState?.balance;\n    if (amount === undefined || balance === undefined) {\n      return;\n    }\n\n    if (amount > balance.amount) {\n      openStarsBalanceModal({\n        originStarsPayment: modal,\n      });\n      return;\n    }\n\n    sendStarPaymentForm({});\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closeStarsPaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={oldLang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : inviteCustomPeer ? (\n          <>\n            <Avatar className={styles.paymentPhoto} peer={inviteCustomPeer} size=\"giant\" />\n            <StarIcon type=\"gold\" size=\"adaptive\" className={styles.avatarStar} />\n          </>\n        ) : (\n          <PeerBadge\n            peer={!photo ? bot : undefined}\n            avatarWebPhoto={photo}\n            avatarSize=\"giant\"\n            badgeIcon=\"star\"\n            badgeText={formatInteger(amount!)}\n            badgeClassName={styles.amountBadge}\n            className={styles.paymentPhoto}\n          />\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {inviteCustomPeer ? oldLang('StarsSubscribeTitle') : oldLang('StarsConfirmPurchaseTitle')}\n      </h2>\n      {canShowPeerItem && <PeerChip className={styles.botItem} peerId={form?.botId} />}\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} onClick={handlePayment} isLoading={isLoading}>\n        {lang(isBotSubscription ? 'StarsSubscribeBotButtonMonth' : 'StarsPay', {\n          amount: formatStarsAsIcon(lang, amount!, { asFont: true }),\n        }, {\n          withNodes: true,\n        })}\n      </Button>\n      {Boolean(disclaimerText) && (\n        <div className={buildClassName(styles.disclaimer, styles.smallerText)}>\n          {disclaimerText}\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): Complete<StateProps> => {\n    const bot = modal?.form?.botId ? selectUser(global, modal.form.botId) : undefined;\n\n    const messageInputInvoice = modal?.inputInvoice?.type === 'message' ? modal.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"manageButtons\":\"feHNN0j8\",\"manageButton\":\"biAUzmLA\",\"text\":\"hsDNs5hG\",\"icon\":\"APNjRx1K\"};","import { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiEmojiStatusCollectible,\n  ApiEmojiStatusType,\n  ApiSavedStarGift,\n} from '../../../api/types';\n\nimport { DEFAULT_STATUS_ICON_ID } from '../../../config';\nimport { STARS_CURRENCY_CODE } from '../../../config';\nimport { selectTabState, selectUser } from '../../../global/selectors';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UniqueGiftManageButtons.module.scss';\n\ntype OwnProps = {\n  savedGift?: ApiSavedStarGift;\n};\n\ntype StateProps = {\n  currentUserEmojiStatus?: ApiEmojiStatusType;\n  collectibleEmojiStatuses?: ApiEmojiStatusType[];\n};\n\nconst UniqueGiftManageButtons = ({\n  savedGift,\n  currentUserEmojiStatus,\n  collectibleEmojiStatuses,\n}: OwnProps & StateProps) => {\n  const {\n    openGiftTransferModal,\n    openGiftResalePriceComposerModal,\n    openGiftStatusInfoModal,\n    setEmojiStatus,\n    updateStarGiftPrice,\n    showNotification,\n    closeGiftInfoModal,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const gift = savedGift?.gift;\n  const isGiftUnique = gift?.type === 'starGiftUnique';\n  const giftResalePrice = isGiftUnique ? gift.resellPrice : undefined;\n\n  const global = getGlobal();\n  const modal = selectTabState(global).giftInfoModal;\n  const peerId = modal?.peerId;\n\n  const starGiftUniqueSlug = gift?.type === 'starGiftUnique' ? gift.slug : undefined;\n  const userCollectibleStatus = useMemo(() => {\n    if (!starGiftUniqueSlug) return undefined;\n    return collectibleEmojiStatuses?.find((status) =>\n      status.type === 'collectible' && status.slug === starGiftUniqueSlug,\n    ) as ApiEmojiStatusCollectible | undefined;\n  }, [starGiftUniqueSlug, collectibleEmojiStatuses]);\n\n  const currentUniqueEmojiStatusSlug = currentUserEmojiStatus?.type === 'collectible'\n    ? currentUserEmojiStatus.slug : undefined;\n  const canTakeOff = starGiftUniqueSlug !== undefined && currentUniqueEmojiStatusSlug === starGiftUniqueSlug;\n  const canWear = Boolean(userCollectibleStatus) && !canTakeOff;\n\n  const handleTransfer = useLastCallback(() => {\n    if (!savedGift || savedGift?.gift.type !== 'starGiftUnique') return;\n\n    if (savedGift.canTransferAt && savedGift.canTransferAt > getServerTime()) {\n      showNotification({\n        message: {\n          key: 'NotificationGiftCanTransferAt',\n          variables: { date: formatDateAtTime(oldLang, savedGift.canTransferAt * 1000) },\n        },\n      });\n      return;\n    }\n\n    openGiftTransferModal({ gift: savedGift });\n  });\n\n  const handleWear = useLastCallback(() => {\n    if (canTakeOff) {\n      setEmojiStatus({\n        emojiStatus: { type: 'regular', documentId: DEFAULT_STATUS_ICON_ID },\n      });\n    } else if (userCollectibleStatus) {\n      openGiftStatusInfoModal({ emojiStatus: userCollectibleStatus });\n    }\n  });\n\n  const handleSell = useLastCallback(() => {\n    if (!savedGift || !peerId) return;\n    if (savedGift.canResellAt && savedGift.canResellAt > getServerTime()) {\n      showNotification({\n        message: {\n          key: 'NotificationGiftCanResellAt',\n          variables: { date: formatDateAtTime(oldLang, savedGift.canResellAt * 1000) },\n        },\n      });\n      return;\n    }\n    openGiftResalePriceComposerModal({ peerId, gift: savedGift });\n  });\n\n  const handleUnlist = useLastCallback(() => {\n    if (!savedGift || savedGift.gift.type !== 'starGiftUnique' || !savedGift.inputGift) return;\n    closeGiftInfoModal();\n    updateStarGiftPrice({ gift: savedGift.inputGift, price: {\n      currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0,\n    } });\n    showNotification({\n      icon: 'unlist-outline',\n      message: {\n        key: 'NotificationGiftIsUnlist',\n        variables: { gift: lang('GiftUnique', { title: savedGift.gift.title, number: savedGift.gift.number }) },\n      },\n    });\n  });\n\n  return (\n    <div className={styles.manageButtons}>\n      <Button\n        color=\"transparentBlured\"\n        iconName=\"gift-transfer-inline\"\n        iconAlignment=\"top\"\n        iconClassName={styles.icon}\n        onClick={handleTransfer}\n        ariaLabel={lang('GiftInfoTransfer')}\n        noForcedUpperCase\n        fluid\n        className={styles.manageButton}\n      >\n        <span className={styles.text}>\n          {lang('GiftInfoTransfer')}\n        </span>\n      </Button>\n      {(canWear || !canTakeOff) && (\n        <Button\n          color=\"transparentBlured\"\n          iconName={canTakeOff ? 'crown-take-off' : 'crown-wear'}\n          iconAlignment=\"top\"\n          iconClassName={styles.icon}\n          onClick={canWear || canTakeOff ? handleWear : undefined}\n          disabled={!canWear && !canTakeOff}\n          ariaLabel={lang(canTakeOff ? 'GiftInfoTakeOff' : 'GiftInfoWear')}\n          noForcedUpperCase\n          fluid\n          className={styles.manageButton}\n        >\n          <span className={styles.text}>\n            {lang(canTakeOff ? 'GiftInfoTakeOff' : 'GiftInfoWear')}\n          </span>\n        </Button>\n      )}\n      {!giftResalePrice && (\n        <Button\n          color=\"transparentBlured\"\n          iconName=\"sell\"\n          iconAlignment=\"top\"\n          iconClassName={styles.icon}\n          onClick={handleSell}\n          ariaLabel={lang('Sell')}\n          noForcedUpperCase\n          fluid\n          className={styles.manageButton}\n        >\n          <span className={styles.text}>\n            {lang('Sell')}\n          </span>\n        </Button>\n      )}\n      {Boolean(giftResalePrice) && (\n        <Button\n          color=\"transparentBlured\"\n          iconName=\"unlist\"\n          iconAlignment=\"top\"\n          iconClassName={styles.icon}\n          onClick={handleUnlist}\n          ariaLabel={lang('GiftInfoUnlist')}\n          noForcedUpperCase\n          fluid\n          className={styles.manageButton}\n        >\n          <span className={styles.text}>\n            {lang('GiftInfoUnlist')}\n          </span>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const { currentUserId } = global;\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n    const currentUserEmojiStatus = currentUser?.emojiStatus;\n    const collectibleEmojiStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      currentUserEmojiStatus,\n      collectibleEmojiStatuses,\n    };\n  },\n)(UniqueGiftManageButtons));\n","import type { TeactNode } from '@teact';\nimport { memo, useMemo } from '@teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiSavedStarGift,\n  ApiStarGiftAttributeBackdrop, ApiStarGiftAttributeModel, ApiStarGiftAttributePattern,\n  ApiTypeCurrencyAmount } from '../../../api/types';\n\nimport {\n  formatStarsTransactionAmount,\n} from '../../../global/helpers/payments';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport { useTransitionActiveKey } from '../../../hooks/animations/useTransitionActiveKey';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport Transition from '../../ui/Transition';\nimport UniqueGiftManageButtons from './UniqueGiftManageButtons';\n\nimport styles from './UniqueGiftHeader.module.scss';\n\ntype OwnProps = {\n  modelAttribute: ApiStarGiftAttributeModel;\n  backdropAttribute: ApiStarGiftAttributeBackdrop;\n  patternAttribute: ApiStarGiftAttributePattern;\n  title?: string;\n  subtitle?: TeactNode;\n  subtitlePeer?: ApiPeer;\n  className?: string;\n  resellPrice?: ApiTypeCurrencyAmount;\n  showManageButtons?: boolean;\n  savedGift?: ApiSavedStarGift;\n};\n\nconst STICKER_SIZE = 120;\n\nconst UniqueGiftHeader = ({\n  modelAttribute,\n  backdropAttribute,\n  patternAttribute,\n  title,\n  subtitle,\n  subtitlePeer,\n  className,\n  resellPrice,\n  showManageButtons,\n  savedGift,\n}: OwnProps) => {\n  const {\n    openChat,\n  } = getActions();\n\n  const lang = useLang();\n  const [isGiftHover, markGiftHover, unmarkGiftHover] = useFlag(false);\n  const activeKey = useTransitionActiveKey([modelAttribute, backdropAttribute, patternAttribute]);\n  const subtitleColor = backdropAttribute?.textColor;\n\n  const radialPatternBackdrop = useMemo(() => {\n    const backdropColors = [backdropAttribute.centerColor, backdropAttribute.edgeColor];\n    const patternColor = backdropAttribute.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={patternAttribute.sticker}\n      />\n    );\n  }, [backdropAttribute, patternAttribute]);\n\n  return (\n    <div className={buildClassName(styles.root,\n      isGiftHover && 'interactive-gift',\n      showManageButtons && styles.withManageButtons,\n      className)}\n    >\n      <Transition\n        className={styles.transition}\n        slideClassName={buildClassName(styles.transitionSlide)}\n        activeKey={activeKey}\n        direction={1}\n        name=\"zoomBounceSemiFade\"\n      >\n        {radialPatternBackdrop}\n        <AnimatedIconFromSticker\n          className={styles.sticker}\n          sticker={modelAttribute.sticker}\n          size={STICKER_SIZE}\n          noLoop={!isGiftHover}\n          onMouseEnter={!IS_TOUCH_ENV ? markGiftHover : undefined}\n          onMouseLeave={!IS_TOUCH_ENV ? unmarkGiftHover : undefined}\n        />\n      </Transition>\n      {title && <h1 className={styles.title}>{title}</h1>}\n      {Boolean(subtitle) && (\n        <div\n          className={buildClassName(styles.subtitle, subtitlePeer && styles.subtitleBadge)}\n          style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}\n          onClick={() => {\n            if (subtitlePeer) {\n              openChat({ id: subtitlePeer.id });\n            }\n          }}\n        >\n          {subtitle}\n        </div>\n      )}\n      {savedGift && showManageButtons && (\n        <UniqueGiftManageButtons\n          savedGift={savedGift}\n        />\n      )}\n      {resellPrice && (\n        <p className={styles.amount}>\n          <span>\n            {formatStarsTransactionAmount(lang, resellPrice)}\n          </span>\n          {resellPrice.currency === 'XTR' && <StarIcon type=\"gold\" size=\"middle\" />}\n          {resellPrice.currency === 'TON' && <Icon name=\"toncoin\" />}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UniqueGiftHeader);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"irv1C8bo\",\"withManageButtons\":\"QcTw5OSp\",\"radialPattern\":\"UvhsGZLf\",\"sticker\":\"a1ASgPwu\",\"subtitleBadge\":\"V7kDVPLm\",\"amount\":\"zTVWZg63\",\"transition\":\"Tu6_OHoq\",\"transitionSlide\":\"iUTKLzTN\",\"title\":\"ECTvfOda\",\"subtitle\":\"S6JwvHWD\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"IzhfRIWu\",\"positive\":\"jvBZSrpd\",\"negative\":\"xDyq9cc0\",\"header\":\"qBOIq6Jn\",\"uniqueGift\":\"ApoQz22o\",\"amount\":\"sso9uZM6\",\"title\":\"ZZAj3hj7\",\"description\":\"NuWOY7ED\",\"tid\":\"tMF8VIOM\",\"refunded\":\"sxWAwxTd\",\"totalStars\":\"Z2YALGgl\",\"starIcon\":\"cU5QlvwL\",\"footer\":\"KgzPpgS6\",\"starsBackground\":\"nML8IQqX\",\"copyIcon\":\"voCttFzS\",\"mediaPreview\":\"C5r59yiV\",\"subtitle\":\"mFYcIYMJ\",\"starGiftSticker\":\"j3akHdtm\",\"avatar\":\"hcrszlpT\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransactionPeer, ApiSticker,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { STARS_CURRENCY_CODE } from '../../../../config';\nimport { getMessageLink } from '../../../../global/helpers';\nimport {\n  buildStarsTransactionCustomPeer,\n  formatStarsTransactionAmount,\n  shouldUseCustomPeer,\n} from '../../../../global/helpers/payments';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForStars,\n  selectGiftStickerForTon,\n  selectPeer,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../../util/localization/format';\nimport { formatPercent } from '../../../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport { getTransactionTitle, isNegativeAmount } from '../helpers/transaction';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport InteractiveSparkles from '../../../common/InteractiveSparkles';\nimport SafeLink from '../../../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport UniqueGiftHeader from '../../gift/UniqueGiftHeader';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionModal.module.scss';\n\nconst AVATAR_SPARKLES_CENTER_SHIFT = [0, -50] as const;\n\nexport type OwnProps = {\n  modal: TabState['starsTransactionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  canPlayAnimatedEmojis?: boolean;\n  topSticker?: ApiSticker;\n  paidMessageCommission?: number;\n};\n\nconst StarsTransactionModal: FC<OwnProps & StateProps> = ({\n  modal,\n  peer,\n  canPlayAnimatedEmojis,\n  topSticker,\n  paidMessageCommission,\n}) => {\n  const { showNotification, openMediaViewer, closeStarsTransactionModal } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const { transaction } = modal || {};\n  const triggerSparklesRef = useRef<(() => void) | undefined>();\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = transaction?.extendedMedia;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const handleAvatarMouseMove = useLastCallback(() => {\n    triggerSparklesRef.current?.();\n  });\n\n  const handleRequestAnimation = useLastCallback((animate: NoneToVoidFunction) => {\n    triggerSparklesRef.current = animate;\n  });\n\n  const starModalData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    const {\n      giveawayPostId, photo, amount, isGiftUpgrade, starGift, isGiftResale,\n      starRefCommision,\n    } = transaction;\n\n    const gift = transaction?.starGift;\n    const isUniqueGift = gift?.type === 'starGiftUnique';\n    const sticker = transaction?.starGift ? getStickerFromGift(transaction.starGift) : topSticker;\n\n    const giftAttributes = isUniqueGift ? getGiftAttributes(gift) : undefined;\n\n    const customPeer = (transaction.peer && shouldUseCustomPeer(transaction)\n      && buildStarsTransactionCustomPeer(transaction)) || undefined;\n\n    const peerId = transaction.peer?.type === 'peer' ? transaction.peer.id : undefined;\n    const toName = transaction.peer && oldLang(getStarsPeerTitleKey(transaction.peer));\n\n    const title = getTransactionTitle(oldLang, lang, transaction);\n\n    const messageLink = peer && transaction.messageId && !isGiftUpgrade\n      ? getMessageLink(peer, undefined, transaction.messageId) : undefined;\n    const giveawayMessageLink = peer && giveawayPostId ? getMessageLink(peer, undefined, giveawayPostId) : undefined;\n\n    const media = transaction.extendedMedia;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? oldLang('Stars.Transfer.Videos', mediaAmount)\n        : oldLang('Media', mediaAmount);\n\n    const description = transaction.description\n      || (isGiftUpgrade && starGift?.type === 'starGiftUnique' ? starGift.title : undefined)\n      || (media ? mediaText : undefined);\n\n    const shouldDisplayAvatar = !media && !sticker && !transaction.isPostsSearch;\n    const avatarPeer = !photo ? ((!shouldUseCustomPeer(transaction) && peer) || customPeer) : undefined;\n\n    const uniqueGiftHeader = isUniqueGift && (\n      <div className={buildClassName(styles.header, styles.uniqueGift)}>\n        <UniqueGiftHeader\n          backdropAttribute={giftAttributes!.backdrop!}\n          patternAttribute={giftAttributes!.pattern!}\n          modelAttribute={giftAttributes!.model!}\n          title={gift.title}\n          subtitle={lang('GiftInfoCollectible', { number: gift.number })}\n          resellPrice={transaction.amount}\n        />\n      </div>\n    );\n\n    const amountColorClass = isNegativeAmount(amount) ? styles.negative : styles.positive;\n\n    const regularHeader = (\n      <div className={styles.header}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        {!media && sticker && (\n          <AnimatedIconFromSticker\n            key={transaction.id}\n            sticker={sticker}\n            play={canPlayAnimatedEmojis}\n            noLoop\n          />\n        )}\n        {shouldDisplayAvatar && (\n          <Avatar\n            className={styles.avatar}\n            peer={avatarPeer}\n            webPhoto={photo}\n            size=\"giant\"\n            onMouseMove={handleAvatarMouseMove}\n          />\n        )}\n        {!sticker && !transaction.isPostsSearch && (\n          <InteractiveSparkles\n            className={buildClassName(styles.starsBackground)}\n            color=\"gold\"\n            onRequestAnimation={handleRequestAnimation}\n            centerShift={AVATAR_SPARKLES_CENTER_SHIFT}\n          />\n        )}\n        {Boolean(title) && <h1 className={styles.title}>{title}</h1>}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span\n            className={buildClassName(styles.amount, amountColorClass)}\n          >\n            {formatStarsTransactionAmount(lang, amount)}\n          </span>\n          {amount.currency === STARS_CURRENCY_CODE && <StarIcon type=\"gold\" size=\"middle\" />}\n          {amount.currency === 'TON' && <Icon name=\"toncoin\" className={amountColorClass} />}\n          {transaction.isRefund && (\n            <p className={styles.refunded}>{lang('Refunded')}</p>\n          )}\n        </p>\n        {Boolean(transaction.paidMessages && transaction.starRefCommision && paidMessageCommission) && (\n          <p className={styles.description}>\n            {lang(\n              'PaidMessageTransactionDescription',\n              { percent: formatPercent(paidMessageCommission! / 10) },\n              {\n                withNodes: true,\n                withMarkdown: true,\n              },\n            )}\n          </p>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    if (transaction && starRefCommision && !transaction.paidMessages && !isGiftResale) {\n      tableData.push([\n        oldLang('StarsTransaction.StarRefReason.Title'),\n        oldLang('StarsTransaction.StarRefReason.Program'),\n      ]);\n    }\n\n    if (isGiftUpgrade) {\n      tableData.push([\n        oldLang('StarGiftReason'),\n        oldLang('StarGiftReasonUpgrade'),\n      ]);\n    }\n\n    if (isGiftResale) {\n      tableData.push([\n        oldLang('StarGiftReason'),\n        isNegativeAmount(transaction.amount)\n          ? lang('StarGiftSaleTransaction')\n          : lang('StarGiftPurchaseTransaction'),\n      ]);\n    }\n\n    let peerLabel;\n    if (isGiftUpgrade) {\n      peerLabel = oldLang('Stars.Transaction.GiftFrom');\n    } else if (isNegativeAmount(amount) || transaction.isMyGift) {\n      peerLabel = oldLang('Stars.Transaction.To');\n    } else if (transaction.starRefCommision && !transaction.paidMessages && !isGiftResale) {\n      peerLabel = oldLang('StarsTransaction.StarRefReason.Miniapp');\n    } else if (peerId) {\n      peerLabel = oldLang('Star.Transaction.From');\n    } else {\n      peerLabel = oldLang('Stars.Transaction.Via');\n    }\n\n    if (!transaction.isPostsSearch) {\n      tableData.push([\n        peerLabel,\n        peerId ? { chatId: peerId } : toName || '',\n      ]);\n    }\n\n    if (transaction.starRefCommision && transaction.paidMessages) {\n      tableData.push([\n        lang('PaidMessageTransactionTotal'),\n        formatStarsAsIcon(lang,\n          transaction.amount.amount / ((100 - transaction.starRefCommision) / 100),\n          { asFont: false, className: styles.starIcon, containerClassName: styles.totalStars }),\n      ]);\n    }\n\n    if (messageLink) {\n      tableData.push([oldLang('Stars.Transaction.Reaction.Post'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    if (giveawayMessageLink && transaction.amount.currency === STARS_CURRENCY_CODE) {\n      tableData.push([oldLang('BoostReason'), <SafeLink url={giveawayMessageLink} text={oldLang('Giveaway')} />]);\n      tableData.push([oldLang('Gift'), oldLang('Stars', transaction.amount, 'i')]);\n    }\n\n    if (transaction.id) {\n      tableData.push([\n        oldLang('Stars.Transaction.Id'),\n        (\n          <>\n            <div\n              className={styles.tid}\n              onClick={() => {\n                copyTextToClipboard(transaction.id!);\n                showNotification({\n                  message: oldLang('StarsTransactionIDCopied'),\n                });\n              }}\n            >\n              {transaction.id}\n            </div>\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </>\n        ),\n      ]);\n    }\n\n    tableData.push([\n      oldLang('Stars.Transaction.Date'),\n      formatDateTimeToString(transaction.date * 1000, oldLang.code, true),\n    ]);\n\n    const footerText = oldLang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header: isUniqueGift ? uniqueGiftHeader : regularHeader,\n      tableData,\n      footer,\n    };\n  }, [transaction, oldLang, lang, peer, canPlayAnimatedEmojis, topSticker,\n    paidMessageCommission, handleRequestAnimation]);\n\n  const prevModalData = usePrevious(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(transaction)}\n      className={styles.modal}\n      hasBackdrop={transaction?.starGift?.type === 'starGiftUnique'}\n      header={renderingModalData?.header}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      buttonText={oldLang('OK')}\n      onClose={closeStarsTransactionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): Complete<StateProps> => {\n    const peerId = modal?.transaction?.peer?.type === 'peer' && modal.transaction.peer.id;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n    const paidMessageCommission = global.appConfig.starsPaidMessageCommissionPermille;\n\n    const currencyAmount = modal?.transaction.amount;\n    const starsGiftSticker = modal?.transaction.isGift\n      ? (currencyAmount?.currency === STARS_CURRENCY_CODE ? selectGiftStickerForStars(global, currencyAmount?.amount)\n        : selectGiftStickerForTon(global, currencyAmount?.amount)) : undefined;\n\n    return {\n      peer,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      topSticker: starsGiftSticker,\n      paidMessageCommission,\n    };\n  },\n)(StarsTransactionModal));\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    case 'api':\n      return 'Stars.Intro.Transaction.TelegramBotApi.Subtitle';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"eR_RZfGB\",\"header\":\"E3R22yAI\",\"title\":\"qdydQHgc\",\"amount\":\"FI6rEJlK\",\"footer\":\"GMWMuWCr\",\"starsBackground\":\"zGCayu45\",\"subscriptionStar\":\"enRetSny\",\"amountStar\":\"J8HIcN6k\",\"secondary\":\"oBLHWBtJ\",\"danger\":\"nkwiG25Q\",\"avatarWrapper\":\"wuTMXDP9\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { isApiPeerUser } from '../../../../global/helpers/peers';\nimport {\n  selectPeer,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport InteractiveSparkles from '../../../common/InteractiveSparkles';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\n\nimport styles from './StarsSubscriptionModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['starsSubscriptionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n};\n\nconst AVATAR_SPARKLES_CENTER_SHIFT = [0, -50] as const;\n\nconst StarsSubscriptionModal: FC<OwnProps & StateProps> = ({\n  modal, peer,\n}) => {\n  const {\n    closeStarsSubscriptionModal,\n    fulfillStarsSubscription,\n    changeStarsSubscription,\n    checkChatInvite,\n    loadStarStatus,\n    openInvoice,\n  } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { subscription } = modal || {};\n  const triggerSparklesRef = useRef<(() => void) | undefined>();\n\n  const handleAvatarMouseMove = useLastCallback(() => {\n    triggerSparklesRef.current?.();\n  });\n\n  const handleRequestAnimation = useLastCallback((animate: NoneToVoidFunction) => {\n    triggerSparklesRef.current = animate;\n  });\n\n  const buttonState = useMemo(() => {\n    if (!subscription) {\n      return 'hidden';\n    }\n\n    if (subscription.canRefulfill) {\n      return 'refulfill';\n    }\n\n    const isActive = subscription.until > Date.now() / 1000;\n    if (isActive && !subscription.isCancelled) {\n      return 'cancel';\n    }\n\n    if (isActive && subscription.isCancelled) {\n      return 'renew';\n    }\n\n    const canRestart = subscription.chatInviteHash || subscription.invoiceSlug;\n    if (!isActive && canRestart) {\n      return 'restart';\n    }\n\n    return 'ok';\n  }, [subscription]);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!subscription) {\n      return;\n    }\n\n    switch (buttonState) {\n      case 'refulfill': {\n        fulfillStarsSubscription({ id: subscription.id });\n        break;\n      }\n      case 'restart': {\n        if (subscription.chatInviteHash) {\n          checkChatInvite({ hash: subscription.chatInviteHash });\n        } else if (subscription.invoiceSlug) {\n          openInvoice({\n            type: 'slug',\n            slug: subscription.invoiceSlug,\n          });\n        }\n        loadStarStatus();\n        break;\n      }\n      case 'renew': {\n        changeStarsSubscription({ id: subscription.id, isCancelled: false });\n        break;\n      }\n      case 'cancel': {\n        changeStarsSubscription({ id: subscription.id, isCancelled: true });\n        break;\n      }\n    }\n    closeStarsSubscriptionModal();\n  });\n\n  const starModalData = useMemo(() => {\n    if (!subscription || !peer) {\n      return undefined;\n    }\n\n    const {\n      pricing, until, isCancelled, canRefulfill, photo, title, hasBotCancelled,\n    } = subscription;\n\n    const isBotSubscription = isApiPeerUser(peer);\n\n    const header = (\n      <div className={styles.header}>\n        <div className={styles.avatarWrapper}>\n          <Avatar\n            peer={!photo ? peer : undefined}\n            webPhoto={photo}\n            size=\"giant\"\n            onMouseMove={handleAvatarMouseMove}\n          />\n          <StarIcon className={styles.subscriptionStar} type=\"gold\" size=\"adaptive\" />\n        </div>\n        <InteractiveSparkles\n          className={buildClassName(styles.starsBackground)}\n          color=\"gold\"\n          onRequestAnimation={handleRequestAnimation}\n          centerShift={AVATAR_SPARKLES_CENTER_SHIFT}\n        />\n        <h1 className={styles.title}>{title || oldLang('StarsSubscriptionTitle')}</h1>\n        <p className={styles.amount}>\n          {lang('StarsPerMonth', {\n            amount: pricing.amount,\n          }, {\n            withNodes: true,\n            specialReplacement: {\n              [STARS_ICON_PLACEHOLDER]: <StarIcon className={styles.amountStar} size=\"adaptive\" type=\"gold\" />,\n            },\n          })}\n        </p>\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      oldLang(isBotSubscription ? 'StarsSubscriptionBot' : 'StarsSubscriptionChannel'),\n      { chatId: peer.id },\n    ]);\n\n    if (title) {\n      tableData.push([\n        oldLang('StarsSubscriptionBotProduct'),\n        title,\n      ]);\n    }\n\n    const hasExpired = until < Date.now() / 1000;\n    tableData.push([\n      oldLang(hasExpired ? 'StarsSubscriptionUntilExpired'\n        : isCancelled ? 'StarsSubscriptionUntilExpires' : 'StarsSubscriptionUntilRenews'),\n      formatDateTimeToString(until * 1000, oldLang.code, true),\n    ]);\n\n    const footerTos = lang('StarsTransactionTOS', {\n      link: <SafeLink url={lang('StarsTransactionTOSLink')} text={lang('StarsTransactionTOSLinkText')} />,\n    }, {\n      withNodes: true,\n    });\n\n    const footer = (\n      <span className={styles.footer}>\n        <p className={styles.secondary}>{footerTos}</p>\n        {isCancelled && (\n          <p className={styles.danger}>\n            {oldLang(hasBotCancelled ? 'StarsSubscriptionBotCancelledText' : 'StarsSubscriptionCancelledText')}\n          </p>\n        )}\n        {canRefulfill && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionRefulfillInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {!isCancelled && !canRefulfill && hasExpired && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionExpiredInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {!isCancelled && !canRefulfill && !hasExpired && (\n          <p className={styles.secondary}>\n            {oldLang('StarsSubscriptionCancelInfo', formatDateTimeToString(until * 1000, oldLang.code, true))}\n          </p>\n        )}\n        {buttonState !== 'hidden' && (\n          <Button\n            color={buttonState === 'cancel' ? 'danger' : 'primary'}\n            isText={buttonState === 'cancel'}\n            onClick={handleButtonClick}\n          >\n            {oldLang(\n              buttonState === 'cancel' ? 'StarsSubscriptionCancel'\n                : buttonState === 'refulfill' ? 'StarsSubscriptionRefulfill'\n                  : buttonState === 'restart' ? 'StarsSubscriptionAgain'\n                    : buttonState === 'renew' ? 'StarsSubscriptionRenew' : 'OK',\n            )}\n          </Button>\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [buttonState, lang, oldLang, peer, subscription]);\n\n  const prevModalData = usePrevious(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(subscription)}\n      className={styles.modal}\n      header={renderingModalData?.header}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      onClose={closeStarsSubscriptionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): Complete<StateProps> => {\n    const peerId = modal?.subscription.peerId;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n\n    return {\n      peer,\n    };\n  },\n)(StarsSubscriptionModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CuBAw2yg\",\"slider\":\"euOOAbZi\",\"sparkles\":\"_L1YQTIP\",\"progress\":\"kwK0cNPX\",\"floatingBadgeWrapper\":\"uvlMoXj0\",\"floatingBadge\":\"BGSDWAYc\",\"floatingBadgeText\":\"qqQan8uF\",\"floatingBadgeTriangle\":\"mIdJOmsB\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Sparkles from '../../common/Sparkles';\n\nimport styles from './StarSlider.module.scss';\n\ntype OwnProps = {\n  maxValue: number;\n  defaultValue: number;\n  className?: string;\n  onChange: (value: number) => void;\n};\n\nconst DEFAULT_POINTS = [50, 100, 500, 1000, 2000, 5000, 10000];\n\nconst StarSlider = ({\n  maxValue,\n  defaultValue,\n  className,\n  onChange,\n}: OwnProps) => {\n  const floatingBadgeRef = useRef<HTMLDivElement>();\n\n  const points = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < DEFAULT_POINTS.length; i++) {\n      if (DEFAULT_POINTS[i] < maxValue) {\n        result.push(DEFAULT_POINTS[i]);\n      }\n\n      if (DEFAULT_POINTS[i] >= maxValue) {\n        result.push(maxValue);\n        break;\n      }\n    }\n\n    return result;\n  }, [maxValue]);\n\n  const [value, setValue] = useState(0);\n\n  useEffectOnce(() => {\n    setValue(getProgress(points, defaultValue));\n  });\n\n  const updateSafeBadgePosition = useLastCallback(() => {\n    const badge = floatingBadgeRef.current;\n    if (!badge) return;\n    const parent = badge.parentElement!;\n\n    requestMeasure(() => {\n      const safeMinX = parent.offsetLeft + badge.offsetWidth / 2;\n      const safeMaxX = parent.offsetLeft + parent.offsetWidth - badge.offsetWidth / 2;\n\n      requestMutation(() => {\n        parent.style.setProperty('--_min-x', `${safeMinX}px`);\n        parent.style.setProperty('--_max-x', `${safeMaxX}px`);\n      });\n    });\n  });\n\n  useResizeObserver(floatingBadgeRef, updateSafeBadgePosition);\n\n  const handleChange = useLastCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.currentTarget.value);\n    setValue(newValue);\n\n    onChange(getValue(points, newValue));\n  });\n\n  return (\n    <div className={buildClassName(styles.root, className)} style={`--progress: ${value / points.length}`}>\n      <div className={styles.floatingBadgeWrapper}>\n        <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n          <div className={styles.floatingBadgeText}>\n            <Icon name=\"star\" className={styles.floatingBadgeIcon} />\n            <AnimatedCounter text={formatInteger(getValue(points, value))} />\n          </div>\n          <svg className={styles.floatingBadgeTriangle} width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n            <defs>\n              <linearGradient id=\"StarBadgeTriangle\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\n                <stop offset=\"-50%\" stop-color=\"#FFAA00\" />\n                <stop offset=\"150%\" stop-color=\"#FFCD3A\" />\n              </linearGradient>\n            </defs>\n            <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"url(#StarBadgeTriangle)\" />\n          </svg>\n        </div>\n      </div>\n      <div className={styles.progress}>\n        <Sparkles preset=\"progress\" className={styles.sparkles} />\n      </div>\n      <input\n        className={styles.slider}\n        type=\"range\"\n        min={0}\n        max={points.length}\n        defaultValue={getProgress(points, defaultValue)}\n        step=\"any\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nfunction getProgress(points: number[], value: number) {\n  const pointIndex = points.findIndex((point) => value <= point);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const progress = (value - prevPoint) / (nextPoint - prevPoint);\n  return pointIndex + progress;\n}\n\nfunction getValue(points: number[], progress: number) {\n  const pointIndex = Math.floor(progress);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const value = prevPoint + (nextPoint - prevPoint) * (progress - pointIndex);\n  return Math.round(value);\n}\n\nexport default memo(StarSlider);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"RdhRpsCn\",\"title\":\"yzbjj73U\",\"slider\":\"xePPMXOI\",\"description\":\"BlpfdOtK\",\"itemInfo\":\"nS9V516D\",\"itemTitle\":\"sH5Nukjy\",\"itemSubtitle\":\"dHlNODTI\",\"itemIcon\":\"H_iHihXU\",\"sendAsPeerButtonAvatar\":\"_mjvLELm\",\"sendAsPeerMenuButton\":\"zxsRaWYV\",\"buttonDownIcon\":\"zrwUUELS\",\"sendAsPeerMenuBubble\":\"X1PB6mhQ\",\"sendAsPeerMenu\":\"Px1MDij9\",\"sendAsPeersMenuContainer\":\"Al1nfhHJ\",\"headerControlPanel\":\"vu90kSL_\",\"separator\":\"uhQLUjmo\",\"checkBox\":\"Mc3bVeF0\",\"topLabel\":\"bnou4CpV\",\"top\":\"QludQDKR\",\"topBadge\":\"JBF9pTUK\",\"buttonStar\":\"NJJFuym9\",\"topPeer\":\"Ty4Ud_Rd\",\"disclaimer\":\"KRvkHeo1\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPaidReactionPrivacyType,\n  ApiPeer,\n  ApiSendAsPeerId,\n  ApiStarsAmount, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport { getPeerTitle, isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectChat, selectChatMessage, selectPeer, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport PeerBadge from '../../common/PeerBadge';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\nimport BalanceBlock from '../stars/BalanceBlock';\nimport StarSlider from './StarSlider';\n\nimport styles from './PaidReactionModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['paidReactionModal'];\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n  chat?: ApiChat;\n  maxAmount: number;\n  starBalance?: ApiStarsAmount;\n  defaultPrivacy?: ApiPaidReactionPrivacyType;\n  sendPaidReactionsAsPeerIds?: ApiSendAsPeerId[];\n  currentUserId: string;\n  currentUser: ApiUser;\n};\n\ntype ReactorData = {\n  amount: number;\n  localAmount: number;\n  isMy?: boolean;\n  isAnonymous?: boolean;\n  user?: ApiPeer;\n};\n\nconst MAX_TOP_REACTORS = 3;\nconst DEFAULT_STARS_AMOUNT = 50;\nconst MAX_REACTION_AMOUNT = 2500;\nconst ANONYMOUS_PEER: CustomPeer = {\n  avatarIcon: 'author-hidden',\n  customPeerAvatarColor: '#9eaab5',\n  isCustomPeer: true,\n  titleKey: 'StarsReactionAnonymous',\n};\n\nconst PaidReactionModal = ({\n  modal,\n  chat,\n  message,\n  maxAmount,\n  starBalance,\n  defaultPrivacy,\n  sendPaidReactionsAsPeerIds,\n  currentUserId,\n  currentUser,\n}: OwnProps & StateProps) => {\n  const { closePaidReactionModal, addLocalPaidReaction, loadSendPaidReactionsAs } = getActions();\n\n  const [starsAmount, setStarsAmount] = useState(DEFAULT_STARS_AMOUNT);\n  const [isTouched, markTouched, unmarkTouched] = useFlag();\n  const [shouldSendAsAnonymous, setShouldSendAsAnonymous] = useState(true);\n  const [sendAsPeerId, setSendAsPeerId] = useState(currentUserId);\n\n  const chatId = chat?.id;\n\n  const senderPeer = sendAsPeerId ? (selectPeer(getGlobal(), sendAsPeerId)) : currentUser;\n\n  const oldLang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const lang = useLang();\n\n  const handleShowInTopSendersChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setShouldSendAsAnonymous(!e.target.checked);\n  });\n\n  const handleAmountChange = useLastCallback((value: number) => {\n    setStarsAmount(value);\n    markTouched();\n  });\n\n  useEffect(() => {\n    if (chatId && !sendPaidReactionsAsPeerIds) {\n      loadSendPaidReactionsAs({ chatId });\n    }\n  }, [chatId, sendPaidReactionsAsPeerIds]);\n\n  const filteredMyReactorIds = useMemo(() => {\n    const result = sendPaidReactionsAsPeerIds?.map((peer) => peer.id)\n      .filter((id) => id !== chatId);\n    result?.unshift(currentUserId);\n    return result;\n  }, [sendPaidReactionsAsPeerIds, chatId, currentUserId]);\n\n  const canChangeSendAsPeer = filteredMyReactorIds && filteredMyReactorIds.length > 1;\n\n  useEffect(() => {\n    if (!modal) {\n      unmarkTouched();\n    }\n  }, [modal]);\n\n  useEffect(() => {\n    const currentReactor = message?.reactions?.topReactors?.find((reactor) => reactor.isMy);\n    if (currentReactor) {\n      setShouldSendAsAnonymous(Boolean(currentReactor.isAnonymous));\n      if (currentReactor.peerId) {\n        setSendAsPeerId(currentReactor.peerId);\n      }\n      return;\n    }\n\n    setShouldSendAsAnonymous(defaultPrivacy?.type === 'anonymous' || false);\n    if (defaultPrivacy?.type === 'peer' && filteredMyReactorIds?.includes(defaultPrivacy.peerId)) {\n      setSendAsPeerId(defaultPrivacy.peerId);\n      return;\n    }\n\n    setSendAsPeerId(currentUserId);\n  }, [defaultPrivacy, message?.reactions?.topReactors, filteredMyReactorIds, currentUserId]);\n\n  const handleSend = useLastCallback(() => {\n    if (!modal) return;\n\n    addLocalPaidReaction({\n      chatId: modal.chatId,\n      messageId: modal.messageId,\n      count: starsAmount,\n      isPrivate: shouldSendAsAnonymous,\n      peerId: shouldSendAsAnonymous || sendAsPeerId === currentUserId ? undefined : sendAsPeerId,\n      shouldIgnoreDefaultPrivacy: true,\n    });\n    closePaidReactionModal();\n  });\n\n  const handleSendAsPeerChange = useLastCallback((peerId: string) => {\n    setShouldSendAsAnonymous(false);\n    setSendAsPeerId(peerId);\n  });\n\n  const renderMenuItem = useLastCallback((peerId: string) => {\n    const peer = selectPeer(getGlobal(), peerId);\n    const isSelected = sendAsPeerId === peerId && !shouldSendAsAnonymous;\n    if (!peer) return undefined;\n\n    return (\n      <MenuItem\n\n        onClick={() => handleSendAsPeerChange(peerId)}\n      >\n        <Avatar\n          size=\"small\"\n          peer={peer}\n        />\n        <div className={buildClassName(styles.itemInfo)}>\n          <FullNameTitle className={styles.itemTitle} peer={peer} noFake noVerified />\n          <span className={styles.itemSubtitle}>\n            {isApiPeerUser(peer) ? lang('PeerPersonalAccount') : lang('PeerChannel')}\n          </span>\n        </div>\n        <Icon\n          className={styles.itemIcon}\n          name={isSelected ? 'check' : 'placeholder'}\n        />\n      </MenuItem>\n    );\n  });\n\n  const SendAsPeerMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.sendAsPeerMenuButton, isOpen ? 'active' : '')}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Avatar\n          className={styles.sendAsPeerButtonAvatar}\n          size=\"mini\"\n          peer={shouldSendAsAnonymous ? ANONYMOUS_PEER : senderPeer}\n        />\n        <Icon\n          name=\"down\"\n          className={styles.buttonDownIcon}\n        />\n      </Button>\n    );\n  }, [isMobile, lang, senderPeer, shouldSendAsAnonymous]);\n\n  const sendAsPeersMenu = useMemo(() => {\n    if (!canChangeSendAsPeer) return undefined;\n    return (\n      <DropdownMenu\n        className={buildClassName(styles.sendAsPeerMenu, 'with-menu-transitions')}\n        bubbleClassName={styles.sendAsPeerMenuBubble}\n        trigger={SendAsPeerMenuButton}\n        positionX=\"right\"\n        autoClose\n      >\n        {filteredMyReactorIds.map((id) => (\n          renderMenuItem(id)\n        ))}\n      </DropdownMenu>\n    );\n  }, [SendAsPeerMenuButton, filteredMyReactorIds, canChangeSendAsPeer]);\n\n  const topReactors = useMemo(() => {\n    const global = getGlobal();\n    const all = message?.reactions?.topReactors;\n    if (!all) {\n      return undefined;\n    }\n\n    const result: ReactorData[] = [];\n    let hasCurrentSender = false;\n    let myReactorAmount = 0;\n\n    all.forEach((reactor) => {\n      const peer = reactor.peerId ? selectPeer(global, reactor.peerId) : undefined;\n      if (!peer && !reactor.isAnonymous && !reactor.isMy) return;\n      if (reactor.isMy) {\n        myReactorAmount = reactor.count;\n      }\n\n      if (reactor.isMy && (reactor.peerId !== sendAsPeerId || (reactor.isAnonymous && !shouldSendAsAnonymous))) return;\n\n      const isCurrentReactor = sendAsPeerId === reactor.peerId || (shouldSendAsAnonymous && reactor.isAnonymous);\n\n      if (isCurrentReactor) {\n        hasCurrentSender = true;\n      }\n\n      result.push({\n        amount: reactor.count,\n        localAmount: isCurrentReactor && isTouched ? starsAmount : 0,\n        isMy: reactor.isMy,\n        isAnonymous: reactor.isAnonymous,\n        user: peer,\n      });\n    });\n\n    if (!hasCurrentSender) {\n      const sender = selectPeer(global, sendAsPeerId);\n      result.push({\n        amount: myReactorAmount,\n        localAmount: isTouched ? starsAmount : 0,\n        isMy: true,\n        user: sender,\n      });\n    }\n\n    result.sort((a, b) => (b.amount + b.localAmount) - (a.amount + a.localAmount));\n\n    return result.slice(0, MAX_TOP_REACTORS);\n  }, [isTouched, message?.reactions?.topReactors, starsAmount, sendAsPeerId, shouldSendAsAnonymous]);\n\n  const chatTitle = chat && getPeerTitle(oldLang, chat);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      onClose={closePaidReactionModal}\n      isSlim\n      hasAbsoluteCloseButton\n      contentClassName={styles.content}\n      isLowStackPriority\n    >\n      <div className={styles.sendAsPeersMenuContainer}>\n        {sendAsPeersMenu}\n      </div>\n      <div className={styles.headerControlPanel}>\n        <BalanceBlock balance={starBalance} className={styles.modalBalance} withAddButton />\n      </div>\n\n      <StarSlider\n        className={styles.slider}\n        defaultValue={DEFAULT_STARS_AMOUNT}\n        maxValue={maxAmount}\n        onChange={handleAmountChange}\n      />\n      <h3 className={styles.title}>{oldLang('StarsReactionTitle')}</h3>\n      <div className={styles.description}>\n        {renderText(oldLang('StarsReactionText', chatTitle), ['simple_markdown', 'emoji'])}\n      </div>\n      <Separator>\n        {topReactors && <div className={styles.topLabel}>{oldLang('StarsReactionTopSenders')}</div>}\n      </Separator>\n      {topReactors && (\n        <div className={styles.top}>\n          {topReactors.map((reactor) => {\n            const countText = formatInteger(reactor.amount + reactor.localAmount);\n            const peer = (reactor.isAnonymous || !reactor.user || (reactor.isMy && shouldSendAsAnonymous))\n              ? ANONYMOUS_PEER : reactor.user;\n            const text = 'isCustomPeer' in peer ? oldLang(peer.titleKey)\n              : peer && getPeerTitle(oldLang, peer);\n            return (\n              <PeerBadge\n                className={styles.topPeer}\n                key={`${reactor.user?.id || 'anonymous'}-${countText}`}\n                peer={peer}\n                badgeText={countText}\n                badgeIcon=\"star\"\n                badgeClassName={styles.topBadge}\n                text={text}\n              />\n            );\n          })}\n        </div>\n      )}\n      {topReactors && (<Separator className={styles.separator} />)}\n      <Checkbox\n        className={buildClassName(styles.checkBox, 'dialog-checkbox')}\n        checked={!shouldSendAsAnonymous}\n        onChange={handleShowInTopSendersChange}\n        label={oldLang('StarsReactionShowMeInTopSenders')}\n      />\n      <Button\n        onClick={handleSend}\n      >\n        {lang('SendPaidReaction', { amount: starsAmount }, {\n          withNodes: true,\n          specialReplacement: {\n            [STARS_ICON_PLACEHOLDER]: <Icon className={styles.buttonStar} name=\"star\" />,\n          },\n        })}\n      </Button>\n      <p className={styles.disclaimer}>\n        {lang('StarsReactionTerms', {\n          link: <SafeLink text={lang('StarsReactionLinkText')} url={lang('StarsReactionLink')} />,\n        }, {\n          withNodes: true,\n        })}\n      </p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): Complete<StateProps> => {\n    const chat = modal && selectChat(global, modal.chatId);\n    const message = modal && selectChatMessage(global, modal.chatId, modal.messageId);\n    const starBalance = global.stars?.balance;\n    const maxAmount = global.appConfig.paidReactionMaxAmount || MAX_REACTION_AMOUNT;\n    const defaultPrivacy = global.settings.paidReactionPrivacy;\n    const sendPaidReactionsAsPeerIds = chat?.sendPaidReactionsAsPeerIds;\n    const currentUserId = global.currentUserId!;\n    const currentUser = selectUser(global, currentUserId)!;\n\n    return {\n      chat,\n      message,\n      starBalance,\n      maxAmount,\n      defaultPrivacy,\n      sendPaidReactionsAsPeerIds,\n      currentUserId,\n      currentUser,\n    };\n  },\n)(PaidReactionModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jKOG0It6\",\"header\":\"A_fX4EXY\",\"spacer\":\"ATowWJ60\",\"title\":\"gDNtv9oz\",\"balance-container\":\"eAKZVhOT\",\"balanceContainer\":\"eAKZVhOT\",\"balance-caption\":\"vbwprYel\",\"balanceCaption\":\"vbwprYel\",\"star-balance\":\"lXuIlbVK\",\"starBalance\":\"lXuIlbVK\",\"balance\":\"dIEx_Iqi\",\"optionsSection\":\"Y68CEIKn\",\"checkboxTitle\":\"H4taXei_\",\"actionMessageView\":\"CB1mxsgp\",\"messageInput\":\"o5r2IPoA\",\"limited\":\"mWzLu0c0\",\"footer\":\"jxWZSvet\",\"switcher\":\"zZUpGRSI\",\"switcherStarIcon\":\"zAee80Dv\",\"description\":\"nTPAv1ci\",\"main-button\":\"IDuhjrne\",\"mainButton\":\"IDuhjrne\",\"star\":\"Q4NlMT0o\",\"background\":\"ZORVRSG3\",\"customBgImage\":\"Eny_G3JI\",\"customBgColor\":\"TkJZPU2u\",\"withTransition\":\"soDpW2YR\",\"blurred\":\"M6k91TdM\",\"withRightColumn\":\"FBcNO8hj\"};","import type { ChangeEvent } from 'react';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { GiftOption } from './GiftModal';\nimport {\n  type ApiMessage, type ApiPeer, type ApiStarsAmount, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { getPeerTitle, isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectPeerPaidMessagesStars, selectTabState, selectTheme, selectThemeValues, selectUserFullInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PremiumProgress from '../../common/PremiumProgress';\nimport ActionMessage from '../../middle/message/ActionMessage';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport styles from './GiftComposer.module.scss';\n\nexport type OwnProps = {\n  gift: GiftOption;\n  giftByStars?: GiftOption;\n  peerId: string;\n};\n\nexport type StateProps = {\n  captionLimit?: number;\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  peer?: ApiPeer;\n  currentUserId?: string;\n  isPaymentFormLoading?: boolean;\n  starBalance?: ApiStarsAmount;\n  paidMessagesStars?: number;\n  areUniqueStarGiftsDisallowed?: boolean;\n  shouldDisallowLimitedStarGifts?: boolean;\n};\n\nconst LIMIT_DISPLAY_THRESHOLD = 50;\n\nfunction GiftComposer({\n  gift,\n  giftByStars,\n  peerId,\n  peer,\n  captionLimit,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  backgroundColor,\n  customBackground,\n  currentUserId,\n  isPaymentFormLoading,\n  starBalance,\n  paidMessagesStars,\n  areUniqueStarGiftsDisallowed,\n  shouldDisallowLimitedStarGifts,\n}: OwnProps & StateProps) {\n  const {\n    sendStarGift, sendPremiumGiftByStars, openInvoice, openGiftUpgradeModal, openStarsBalanceModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [giftMessage, setGiftMessage] = useState<string>('');\n  const [shouldHideName, setShouldHideName] = useState<boolean>(false);\n  const [shouldPayForUpgrade, setShouldPayForUpgrade] = useState<boolean>(false);\n  const [shouldPayByStars, setShouldPayByStars] = useState<boolean>(false);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  useEffect(() => {\n    if (shouldDisallowLimitedStarGifts) {\n      setShouldPayForUpgrade(true);\n    }\n  }, [shouldDisallowLimitedStarGifts, shouldPayForUpgrade]);\n\n  const isStarGift = 'id' in gift && gift.type === 'starGift';\n  const isPremiumGift = 'months' in gift;\n  const hasPremiumByStars = giftByStars && 'amount' in giftByStars;\n  const isPeerUser = peer && isApiPeerUser(peer);\n  const isSelf = peerId === currentUserId;\n\n  const localMessage = useMemo(() => {\n    if (isPremiumGift) {\n      const currentGift = shouldPayByStars && hasPremiumByStars ? giftByStars : gift;\n      return {\n        id: -1,\n        chatId: '0',\n        isOutgoing: false,\n        senderId: currentUserId,\n        date: Math.floor(Date.now() / 1000),\n        content: {\n          action: {\n            mediaType: 'action',\n            type: 'giftPremium',\n            amount: currentGift.amount,\n            currency: currentGift.currency,\n            months: gift.months,\n            message: giftMessage ? { text: giftMessage } : undefined,\n          },\n        },\n      } satisfies ApiMessage;\n    }\n\n    if (isStarGift) {\n      return {\n        id: -1,\n        chatId: '0',\n        isOutgoing: false,\n        senderId: currentUserId,\n        date: Math.floor(Date.now() / 1000),\n        content: {\n          action: {\n            mediaType: 'action',\n            type: 'starGift',\n            message: giftMessage?.length ? {\n              text: giftMessage,\n            } : undefined,\n            isNameHidden: shouldHideName || undefined,\n            starsToConvert: gift.starsToConvert,\n            canUpgrade: shouldPayForUpgrade || undefined,\n            alreadyPaidUpgradeStars: shouldPayForUpgrade ? gift.upgradeStars : undefined,\n            gift,\n            peerId,\n            fromId: currentUserId,\n          },\n        },\n      } satisfies ApiMessage;\n    }\n    return undefined;\n  }, [currentUserId, gift, giftMessage, isStarGift,\n    shouldHideName, shouldPayForUpgrade, peerId,\n    shouldPayByStars, hasPremiumByStars, giftByStars, isPremiumGift]);\n\n  const handleGiftMessageChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setGiftMessage(e.target.value);\n  });\n\n  const handleShouldHideNameChange = useLastCallback(() => {\n    setShouldHideName(!shouldHideName);\n  });\n\n  const handleShouldPayForUpgradeChange = useLastCallback(() => {\n    setShouldPayForUpgrade(!shouldPayForUpgrade);\n  });\n\n  const toggleShouldPayByStars = useLastCallback(() => {\n    if (hasPremiumByStars) setShouldPayByStars(!shouldPayByStars);\n  });\n\n  const handleOpenUpgradePreview = useLastCallback(() => {\n    if (!isStarGift) return;\n    openGiftUpgradeModal({\n      giftId: gift.id,\n      peerId,\n    });\n  });\n\n  const handleGetMoreStars = useLastCallback(() => {\n    openStarsBalanceModal({});\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    if (isStarGift) {\n      sendStarGift({\n        peerId,\n        shouldHideName,\n        gift,\n        message: giftMessage ? { text: giftMessage } : undefined,\n        shouldUpgrade: shouldPayForUpgrade,\n      });\n      return;\n    }\n\n    if (shouldPayByStars && hasPremiumByStars) {\n      sendPremiumGiftByStars({\n        userId: peerId,\n        months: giftByStars.months,\n        amount: giftByStars.amount,\n        message: giftMessage ? { text: giftMessage } : undefined,\n      });\n      return;\n    }\n\n    if (isPremiumGift) {\n      openInvoice({\n        type: 'giftcode',\n        userIds: [peerId],\n        currency: gift.currency,\n        amount: gift.amount,\n        option: gift,\n        message: giftMessage ? { text: giftMessage } : undefined,\n      });\n    }\n  });\n\n  const canUseStarsPayment = hasPremiumByStars && starBalance && (starBalance.amount > giftByStars.amount);\n  function renderOptionsSection() {\n    const symbolsLeft = captionLimit ? captionLimit - giftMessage.length : undefined;\n\n    const title = getPeerTitle(lang, peer!)!;\n    return (\n      <div className={styles.optionsSection}>\n\n        {!paidMessagesStars && (\n          <TextArea\n            className={styles.messageInput}\n            onChange={handleGiftMessageChange}\n            value={giftMessage}\n            label={lang('GiftMessagePlaceholder')}\n            maxLength={captionLimit}\n            maxLengthIndicator={\n              symbolsLeft && symbolsLeft < LIMIT_DISPLAY_THRESHOLD ? symbolsLeft.toString() : undefined\n            }\n          />\n        )}\n\n        {canUseStarsPayment && (\n          <ListItem className={styles.switcher} narrow ripple onClick={toggleShouldPayByStars}>\n            <span>\n              {lang('GiftPremiumPayWithStars', {\n                stars: formatStarsAsIcon(lang, giftByStars.amount, { className: styles.switcherStarIcon }),\n              }, { withNodes: true })}\n            </span>\n            <Switcher\n              checked={shouldPayByStars}\n              onChange={toggleShouldPayByStars}\n              label={lang('GiftPremiumPayWithStarsAcc')}\n            />\n          </ListItem>\n        )}\n\n        {hasPremiumByStars && starBalance && (\n          <div className={styles.description}>\n            {lang('GiftPremiumDescriptionYourBalance', {\n              stars: formatStarsAsIcon(lang, starBalance.amount, { className: styles.switcherStarIcon }),\n              link: <Link isPrimary onClick={handleGetMoreStars}>{lang('GetMoreStarsLinkText')}</Link>,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            })}\n          </div>\n        )}\n\n        {isStarGift && Boolean(gift.upgradeStars) && !areUniqueStarGiftsDisallowed && (\n          <ListItem\n            className={styles.switcher}\n            narrow\n            ripple\n            onClick={handleShouldPayForUpgradeChange}\n            disabled={shouldDisallowLimitedStarGifts}\n          >\n            <span>\n              {lang('GiftMakeUnique', {\n                stars: formatStarsAsIcon(lang, gift.upgradeStars, { className: styles.switcherStarIcon }),\n              }, { withNodes: true })}\n            </span>\n            <Switcher\n              checked={shouldPayForUpgrade}\n              onChange={handleShouldPayForUpgradeChange}\n              label={lang('GiftMakeUniqueAcc')}\n            />\n          </ListItem>\n        )}\n        {isStarGift && Boolean(gift.upgradeStars) && !areUniqueStarGiftsDisallowed && (\n          <div className={styles.description}>\n            {isPeerUser\n              ? lang('GiftMakeUniqueDescription', {\n                user: title,\n                link: <Link isPrimary onClick={handleOpenUpgradePreview}>{lang('GiftMakeUniqueLink')}</Link>,\n              }, {\n                withNodes: true,\n              })\n              : lang('GiftMakeUniqueDescriptionChannel', {\n                peer: title,\n                link: <Link isPrimary onClick={handleOpenUpgradePreview}>{lang('GiftMakeUniqueLink')}</Link>,\n              }, {\n                withNodes: true,\n              })}\n          </div>\n        )}\n\n        {isStarGift && (\n          <ListItem className={styles.switcher} narrow ripple onClick={handleShouldHideNameChange}>\n            <span>{lang('GiftHideMyName')}</span>\n            <Switcher\n              checked={shouldHideName}\n              onChange={handleShouldHideNameChange}\n              label={lang('GiftHideMyName')}\n            />\n          </ListItem>\n        )}\n        {isStarGift && (\n          <div className={styles.description}>\n            {isSelf ? lang('GiftHideNameDescriptionSelf')\n              : isPeerUser ? lang('GiftHideNameDescription', { receiver: title })\n                : lang('GiftHideNameDescriptionChannel')}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  function renderFooter() {\n    const amount = shouldPayByStars && hasPremiumByStars\n      ? formatStarsAsIcon(lang, giftByStars.amount, { asFont: true })\n      : isStarGift\n        ? formatStarsAsIcon(lang, gift.stars + (shouldPayForUpgrade ? gift.upgradeStars! : 0), { asFont: true })\n        : isPremiumGift ? formatCurrency(lang, gift.amount, gift.currency) : undefined;\n\n    return (\n      <div className={styles.footer}>\n        {isStarGift && Boolean(gift.availabilityRemains) && (\n          <PremiumProgress\n            isPrimary\n            progress={gift.availabilityRemains / gift.availabilityTotal!}\n            rightText={lang('GiftSoldCount', {\n              count: gift.availabilityTotal! - gift.availabilityRemains,\n            })}\n            leftText={lang('GiftLeftCount', { count: gift.availabilityRemains })}\n            className={styles.limited}\n          />\n        )}\n        <Button\n          className={styles.mainButton}\n          size=\"smaller\"\n          onClick={handleMainButtonClick}\n          isLoading={isPaymentFormLoading}\n        >\n          {lang('GiftSend', {\n            amount,\n          }, {\n            withNodes: true,\n          })}\n        </Button>\n      </div>\n    );\n  }\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  if ((!isStarGift && !isPremiumGift) || !localMessage) return;\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll')}>\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        <ActionMessage\n          key={isStarGift ? gift.id : isPremiumGift ? gift.months : undefined}\n          message={localMessage}\n          threadId={MAIN_THREAD_ID}\n          appearanceOrder={0}\n        />\n      </div>\n      {renderOptionsSection()}\n      <div className={styles.spacer} />\n      {renderFooter()}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): Complete<StateProps> => {\n    const theme = selectTheme(global);\n    const {\n      stars,\n    } = global;\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = selectThemeValues(global, theme) || {};\n    const peer = selectPeer(global, peerId);\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n    const userFullInfo = selectUserFullInfo(global, peerId);\n    const currentUserId = global.currentUserId;\n    const isGiftForSelf = currentUserId === peerId;\n    const areUniqueStarGiftsDisallowed = !isGiftForSelf\n      && userFullInfo?.disallowedGifts?.shouldDisallowUniqueStarGifts;\n    const shouldDisallowLimitedStarGifts = !isGiftForSelf\n      && userFullInfo?.disallowedGifts?.shouldDisallowLimitedStarGifts;\n\n    const tabState = selectTabState(global);\n\n    return {\n      starBalance: stars?.balance,\n      peer,\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      captionLimit: global.appConfig.starGiftMaxMessageLength,\n      currentUserId: global.currentUserId,\n      isPaymentFormLoading: tabState.isPaymentFormLoading,\n      paidMessagesStars,\n      areUniqueStarGiftsDisallowed,\n      shouldDisallowLimitedStarGifts,\n    };\n  },\n)(GiftComposer));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"G1mBmzxs\",\"starGift\":\"f5ArEO1S\",\"monthsDescription\":\"rn9aWFNA\",\"description\":\"q4_ydkAx\",\"buy\":\"a8no5WH0\",\"star\":\"DvJLTVFU\",\"premiumRequired\":\"NBYIITte\",\"amount\":\"sbo2dMcH\",\"starsPriceBlock\":\"QB5SI7ta\",\"starsPriceIcon\":\"jgnEfoeM\",\"radialPattern\":\"Nkotr8Q4\",\"stickerWrapper\":\"rUSoeQXb\"};","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n  ApiSticker,\n} from '../../../api/types';\n\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport GiftRibbon from '../../common/gift/GiftRibbon';\nimport Button from '../../ui/Button';\n\nimport styles from './GiftItem.module.scss';\n\nexport type OwnProps = {\n  option: ApiPremiumGiftCodeOption;\n  optionByStars?: ApiPremiumGiftCodeOption;\n  baseMonthAmount?: number;\n  onClick: (gift: ApiPremiumGiftCodeOption) => void;\n};\n\nexport type StateProps = {\n  sticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 86;\n\nfunction GiftItemPremium({\n  sticker, canPlayAnimatedEmojis, baseMonthAmount, option, optionByStars, onClick,\n}: OwnProps & StateProps) {\n  const {\n    months, amount, currency,\n  } = option;\n  const lang = useLang();\n\n  const handleGiftClick = useLastCallback(() => {\n    onClick(option);\n  });\n\n  const perMonth = Math.floor(amount / months);\n  const discount = baseMonthAmount && baseMonthAmount > perMonth\n    ? Math.ceil(100 - perMonth / (baseMonthAmount / 100))\n    : undefined;\n\n  function renderMonths() {\n    const caption = months === 12\n      ? lang('Years', { count: 1 }, { pluralValue: 1 })\n      : lang('Months', { count: months }, { pluralValue: months });\n    return (\n      <div className={styles.monthsDescription}>\n        {caption}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.container}\n      tabIndex={0}\n      role=\"button\"\n      onClick={handleGiftClick}\n    >\n      <AnimatedIconFromSticker\n        sticker={sticker}\n        play={canPlayAnimatedEmojis}\n        noLoop\n        nonInteractive\n        size={GIFT_STICKER_SIZE}\n      />\n\n      {renderMonths()}\n      <div className={styles.description}>\n        {lang('PremiumGiftDescription')}\n      </div>\n      <Button className={styles.buy} nonInteractive size=\"tiny\" pill fluid>\n        {formatCurrencyAsString(amount, currency)}\n      </Button>\n      {optionByStars && (\n        <div className={styles.starsPriceBlock}>\n          {lang('GiftPremiumStarsPrice', {\n            stars: (formatStarsAsIcon(lang, optionByStars.amount, { className: styles.starsPriceIcon })),\n          }, { withNodes: true, withMarkdown: true })}\n        </div>\n      )}\n      {Boolean(discount) && (\n        <GiftRibbon color=\"purple\" text={lang('GiftDiscount', { percent: discount })} />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { option }): Complete<StateProps> => {\n    const sticker = selectGiftStickerForDuration(global, option.months);\n    const canPlayAnimatedEmojis = selectCanPlayAnimatedEmojis(global);\n\n    return {\n      sticker,\n      canPlayAnimatedEmojis,\n    };\n  },\n)(GiftItemPremium));\n","import { memo, useMemo, useRef, useState } from '@teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarGift, ApiTypeCurrencyAmount } from '../../../api/types';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../config';\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getGiftAttributes, getStickerFromGift } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport GiftRibbon from '../../common/gift/GiftRibbon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\n\nimport styles from './GiftItem.module.scss';\n\nexport type OwnProps = {\n  gift: ApiStarGift;\n  observeIntersection?: ObserveFn;\n  onClick: (gift: ApiStarGift, target: 'original' | 'resell') => void;\n  isResale?: boolean;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 90;\n\nfunction GiftItemStar({\n  gift, observeIntersection, onClick, isResale, isCurrentUserPremium,\n}: OwnProps & StateProps) {\n  const { openGiftInfoModal, openPremiumModal, showNotification } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const stickerRef = useRef<HTMLDivElement>();\n\n  function getPriceAmount(amounts?: ApiTypeCurrencyAmount[]) {\n    if (!amounts) return { amount: 0, currency: STARS_CURRENCY_CODE };\n\n    if (gift.type === 'starGiftUnique' && gift.resaleTonOnly) {\n      const tonAmount = amounts.find((amount) => amount.currency === TON_CURRENCY_CODE);\n      if (tonAmount) return tonAmount;\n    }\n\n    const starsAmount = amounts.find((amount) => amount.currency === STARS_CURRENCY_CODE);\n    return starsAmount;\n  }\n\n  const lang = useLang();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const sticker = getStickerFromGift(gift);\n  const isGiftUnique = gift.type === 'starGiftUnique';\n  const uniqueGift = isGiftUnique ? gift : undefined;\n  const regularGift = !isGiftUnique ? gift : undefined;\n\n  const priceInfo = !isGiftUnique\n    ? { amount: regularGift?.stars || 0, currency: STARS_CURRENCY_CODE }\n    : getPriceAmount(uniqueGift?.resellPrice);\n  const priceCurrency = priceInfo?.currency || STARS_CURRENCY_CODE;\n  const resellMinStars = regularGift?.resellMinStars;\n  const priceInStarsAsString = !isGiftUnique && isResale && resellMinStars\n    ? lang.number(resellMinStars) + '+' : priceInfo?.amount || 0;\n  const isLimited = !isGiftUnique && Boolean(regularGift?.isLimited);\n  const isSoldOut = !isGiftUnique && Boolean(regularGift?.isSoldOut);\n  const isPremiumRequired = Boolean(gift?.requirePremium);\n  const isUserLimitReached = Boolean(regularGift?.limitedPerUser && !regularGift?.perUserRemains);\n  const perUserTotal = regularGift?.perUserTotal;\n\n  const handleGiftClick = useLastCallback(() => {\n    if (isSoldOut && !isResale) {\n      openGiftInfoModal({ gift });\n      return;\n    }\n\n    if (isUserLimitReached) {\n      showNotification({\n        message: lang('NotificationGiftsLimit2', {\n          count: perUserTotal,\n        }, {\n          pluralValue: perUserTotal!,\n          withMarkdown: true,\n          withNodes: true,\n        }),\n      });\n      return;\n    }\n\n    if (isPremiumRequired && !isCurrentUserPremium) {\n      openPremiumModal({\n        gift,\n      });\n      return;\n    }\n\n    onClick(gift, isResale ? 'resell' : 'original');\n  });\n\n  const radialPatternBackdrop = useMemo(() => {\n    const { backdrop, pattern } = getGiftAttributes(gift) || {};\n\n    if (!backdrop || !pattern) {\n      return undefined;\n    }\n\n    const backdropColors = [backdrop.centerColor, backdrop.edgeColor];\n    const patternColor = backdrop.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={pattern.sticker}\n      />\n    );\n  }, [gift]);\n\n  const giftNumber = isGiftUnique ? gift.number : 0;\n\n  const giftRibbon = useMemo(() => {\n    if (isGiftUnique) {\n      const { backdrop } = getGiftAttributes(gift) || {};\n      if (!backdrop) {\n        return undefined;\n      }\n      return (\n        <GiftRibbon\n          color={[backdrop.centerColor, backdrop.edgeColor]}\n          text={\n            lang('GiftSavedNumber', { number: giftNumber })\n          }\n        />\n      );\n    }\n    if (isResale) {\n      return <GiftRibbon color=\"green\" text={lang('GiftRibbonResale')} />;\n    }\n    if (isSoldOut) {\n      return <GiftRibbon color=\"red\" text={lang('GiftSoldOut')} />;\n    }\n    if (isPremiumRequired) {\n      return <GiftRibbon color=\"orange\" text={lang('LimitPremium')} />;\n    }\n    if (isLimited) {\n      return <GiftRibbon color=\"blue\" text={lang('GiftLimited')} />;\n    }\n    return undefined;\n  }, [isGiftUnique, isResale, gift, isSoldOut, isLimited, lang, giftNumber, isPremiumRequired]);\n\n  useOnIntersect(ref, observeIntersection, (entry) => {\n    const visible = entry.isIntersecting;\n    setIsVisible(visible);\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'interactive-gift',\n        styles.container,\n        styles.starGift,\n        'starGiftItem',\n        isPremiumRequired && styles.premiumRequired,\n      )}\n      tabIndex={0}\n      role=\"button\"\n      onClick={handleGiftClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      {radialPatternBackdrop}\n\n      <div\n        ref={stickerRef}\n        className={styles.stickerWrapper}\n        style={`width: ${GIFT_STICKER_SIZE}px; height: ${GIFT_STICKER_SIZE}px`}\n      >\n        {sticker && (\n          <StickerView\n            observeIntersectionForPlaying={observeIntersection}\n            observeIntersectionForLoading={observeIntersection}\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={GIFT_STICKER_SIZE}\n            shouldLoop={isHover}\n            shouldPreloadPreview\n          />\n        )}\n\n      </div>\n      <Button\n        className={styles.buy}\n        nonInteractive\n        size=\"tiny\"\n        color={isGiftUnique ? 'bluredStarsBadge' : 'stars'}\n        withSparkleEffect={isVisible}\n        pill\n        fluid\n      >\n        {priceCurrency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, priceInStarsAsString || 0, { shouldConvertFromNanos: true, className: styles.star })\n          : formatStarsAsIcon(lang, priceInStarsAsString || 0, { asFont: true, className: styles.star })}\n      </Button>\n      {giftRibbon}\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global): Complete<StateProps> => {\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n    };\n  })(GiftItemStar),\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tJK1W0pJ\",\"transition\":\"pP8TxefR\",\"content\":\"o3V1HqbL\",\"resaleScreenRoot\":\"Vce_TsJO\",\"main\":\"cVXqeu9P\",\"giftSection\":\"v4eKefwN\",\"section\":\"EqfarEYb\",\"resaleStarGiftsContainer\":\"RSFcSNGL\",\"starGiftsContainer\":\"OQX3GZl5\",\"premiumGiftsGallery\":\"n40m3BK2\",\"header\":\"iqqoyRgW\",\"resaleHeader\":\"cJRBgg9B\",\"resaleHeaderContentContainer\":\"OXYQmfGK\",\"headerSlide\":\"BTWhJUQB\",\"headerText\":\"lLRmbpIu\",\"hiddenHeader\":\"XgGzn1cQ\",\"resaleHeaderText\":\"bp_KPx8I\",\"commonHeaderText\":\"ybZo03if\",\"resaleHeaderDescription\":\"XefHUFm1\",\"closeButton\":\"r_Y5uG1T\",\"balance\":\"soqAknia\",\"avatars\":\"N_7tYJKr\",\"avatar\":\"_3hY4vIep\",\"logoBackground\":\"ieK4TzSb\",\"center\":\"Ey5gX40t\",\"description\":\"ZioU5h_k\",\"starGiftsDescription\":\"gFgzS8pV\",\"boostIcon\":\"Qi2YR6Dz\",\"optionBottom\":\"RTbClMKE\",\"secondaryInfo\":\"g0R9GSNq\",\"footer\":\"J3Gju3bv\",\"starGiftsTransition\":\"kB6IyXqS\",\"notFoundGiftsRoot\":\"UqnRlJ1n\",\"notFoundGiftsDescription\":\"g0VbwIG_\",\"notFoundGiftsLink\":\"j2zPEQr8\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo,\n  useMemo,\n  useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarGift,\n} from '../../../api/types';\nimport type { ResaleGiftsFilterOptions } from '../../../types';\n\nimport { selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { RESALE_GIFTS_LIMIT } from '../../../limits';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Transition from '../../ui/Transition';\nimport GiftItemStar from './GiftItemStar';\n\nimport styles from './GiftModal.module.scss';\n\nexport type OwnProps = {\n  onGiftClick: (gift: ApiStarGift) => void;\n};\n\ntype StateProps = {\n  gift?: ApiStarGift;\n  resellGifts?: ApiStarGift[];\n  filter: ResaleGiftsFilterOptions;\n  areGiftsAllLoaded?: boolean;\n  areGiftsLoading?: boolean;\n  updateIteration: number;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst GiftModalResaleScreen: FC<OwnProps & StateProps> = ({\n  resellGifts,\n  gift,\n  filter,\n  areGiftsAllLoaded,\n  areGiftsLoading,\n  updateIteration,\n  onGiftClick,\n}) => {\n  const {\n    loadResaleGifts,\n    updateResaleGiftsFilter,\n  } = getActions();\n  const scrollerRef = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const resellGiftsIds = useMemo(() => {\n    return resellGifts?.map((g) => g.id);\n  }, [resellGifts]);\n\n  const hasFilter = Boolean(filter?.modelAttributes?.length\n    || filter?.patternAttributes?.length || filter?.backdropAttributes?.length);\n\n  const handleLoadMoreResellGifts = useLastCallback(() => {\n    if (gift) {\n      const giftId = 'regularGiftId' in gift\n        ? gift.regularGiftId\n        : gift.id;\n      loadResaleGifts({ giftId });\n    }\n  });\n\n  const isGiftsEmpty = Boolean(!resellGifts || resellGifts.length === 0);\n\n  const [viewportIds, onLoadMore] = useInfiniteScroll(\n    handleLoadMoreResellGifts,\n    resellGiftsIds,\n    !gift,\n    RESALE_GIFTS_LIMIT,\n  );\n\n  const { observe } = useIntersectionObserver({ rootRef: scrollerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  const handleResetGiftsFilter = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: [],\n      backdropAttributes: [],\n      patternAttributes: [],\n    } });\n  });\n\n  function renderNothingFoundGiftsWithFilter() {\n    return (\n      <div className={styles.notFoundGiftsRoot}>\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.SearchingDuck}\n          nonInteractive\n          noLoop\n        />\n        <div className={styles.notFoundGiftsDescription}>\n          {lang('ResellGiftsNoFound')}\n        </div>\n        {hasFilter && (\n          <Link\n            className={styles.notFoundGiftsLink}\n            onClick={handleResetGiftsFilter}\n          >\n            {lang('ResellGiftsClearFilters')}\n          </Link>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div ref={scrollerRef} className={buildClassName(styles.resaleScreenRoot, 'custom-scroll')}>\n      <Transition\n        name=\"zoomFade\"\n        activeKey={updateIteration}\n      >\n        {isGiftsEmpty && areGiftsAllLoaded && renderNothingFoundGiftsWithFilter()}\n        <InfiniteScroll\n          className={buildClassName(styles.resaleStarGiftsContainer)}\n          items={viewportIds}\n          onLoadMore={onLoadMore}\n          itemSelector=\".starGiftItem\"\n          noFastList\n          preloadBackwards={RESALE_GIFTS_LIMIT}\n          scrollContainerClosest={`.${styles.resaleScreenRoot}`}\n        >\n          {resellGifts?.map((g) => (\n            <GiftItemStar\n              key={g.id}\n              gift={g}\n              observeIntersection={observe}\n              isResale\n              onClick={onGiftClick}\n            />\n          ))}\n        </InfiniteScroll>\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const {\n    starGifts,\n  } = global;\n\n  const { resaleGifts } = selectTabState(global);\n  const gift = resaleGifts?.giftId ? starGifts?.byId[resaleGifts.giftId] : undefined;\n  const filter = resaleGifts.filter;\n  const areGiftsAllLoaded = resaleGifts.isAllLoaded;\n  const areGiftsLoading = resaleGifts.isLoading;\n  const updateIteration = resaleGifts.updateIteration;\n\n  return {\n    resellGifts: resaleGifts.gifts,\n    gift,\n    filter,\n    areGiftsAllLoaded,\n    areGiftsLoading,\n    updateIteration,\n  };\n})(GiftModalResaleScreen));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"KLFLR9ji\",\"thumb\":\"fCL5rY2D\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport StickerView from '../../common/StickerView';\n\nimport styles from './ResaleGiftMenuAttributeSticker.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  type: 'model' | 'pattern';\n  sticker: ApiSticker;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst ATTRIBUTE_STICKER_SIZE = 1.5 * REM;\n\nconst ResaleGiftMenuAttributeSticker: FC<StateProps & OwnProps> = ({\n  className,\n  type,\n  sticker,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  theme,\n}) => {\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const customColor = useDynamicColorListener(stickerRef, undefined, type !== 'pattern');\n\n  return (\n    <div\n      ref={stickerRef}\n      className={buildClassName(styles.root, className)}\n      style={`width: ${ATTRIBUTE_STICKER_SIZE}px; height: ${ATTRIBUTE_STICKER_SIZE}px`}\n    >\n      <StickerView\n        containerRef={stickerRef}\n        sticker={sticker}\n        size={ATTRIBUTE_STICKER_SIZE}\n        shouldPreloadPreview\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        thumbClassName={styles.thumb}\n        customColor={customColor}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  return {\n    theme: selectTheme(global),\n  };\n})(ResaleGiftMenuAttributeSticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_VgmQnUg\",\"buttonsContainer\":\"IDlp6U6g\",\"itemIcon\":\"yuctLnuR\",\"sticker\":\"VT562JS0\",\"backdropAttributeMenuItemText\":\"D50wFfRL\",\"menuItemStickerText\":\"THcGWXSA\",\"menuItemText\":\"L6EVE2Ux\",\"backdrop\":\"A29QNxKb\",\"menuItemIcon\":\"GL4rVsev\",\"item\":\"qiYcBOYc\",\"menuContentContainer\":\"EDsBn29z\",\"menu\":\"ISaNdBwd\",\"left\":\"e4Kkh_MR\",\"right\":\"Kz_nCGC3\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { ElementRef, FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useMemo,\n  useRef,\n  useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeCounter,\n  ApiStarGiftAttributeIdBackdrop,\n  ApiStarGiftAttributeIdPattern,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributePattern,\n  StarGiftAttributeIdModel,\n} from '../../../api/types';\nimport type { ResaleGiftsFilterOptions, ResaleGiftsSortType } from '../../../types';\n\nimport { selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport SearchInput from '../../ui/SearchInput';\nimport ResaleGiftMenuAttributeSticker from './ResaleGiftMenuAttributeSticker';\n\nimport styles from './GiftResaleFilters.module.scss';\n\ntype OwnProps = {\n  dialogRef: ElementRef<HTMLDivElement>;\n};\ntype StateProps = {\n  filter: ResaleGiftsFilterOptions;\n  attributes?: ApiStarGiftAttribute[];\n  counters?: ApiStarGiftAttributeCounter[];\n};\n\nconst GiftResaleFilters: FC<StateProps & OwnProps> = ({\n  attributes,\n  counters,\n  filter,\n  dialogRef,\n}) => {\n  const lang = useLang();\n  const {\n    updateResaleGiftsFilter,\n  } = getActions();\n\n  const [searchModelQuery, setSearchModelQuery] = useState('');\n  const [searchBackdropQuery, setSearchBackdropQuery] = useState('');\n  const [searchPatternQuery, setSearchPatternQuery] = useState('');\n  const filteredAttributes = useMemo(() => {\n    const map: {\n      model: ApiStarGiftAttributeModel[];\n      pattern: ApiStarGiftAttributePattern[];\n      backdrop: ApiStarGiftAttributeBackdrop[];\n    } = {\n      model: [],\n      pattern: [],\n      backdrop: [],\n    };\n\n    for (const counter of counters ?? []) {\n      const { attribute } = counter;\n\n      if (!counter.count) {\n        continue;\n      }\n\n      const found = attributes?.find((attr) => {\n        if (attr.type === 'backdrop' && attribute.type === 'backdrop') {\n          return attr.backdropId === attribute.backdropId;\n        }\n\n        if (attr.type === 'model' && attribute.type === 'model') {\n          return attr.sticker.id === attribute.documentId;\n        }\n\n        if (attr.type === 'pattern' && attribute.type === 'pattern') {\n          return attr.sticker.id === attribute.documentId;\n        }\n\n        return false;\n      });\n\n      if (found?.type === 'backdrop') {\n        map.backdrop.push(found);\n      }\n      if (found?.type === 'model') {\n        map.model.push(found);\n      }\n      if (found?.type === 'pattern') {\n        map.pattern.push(found);\n      }\n    }\n\n    return map;\n  }, [attributes, counters]);\n\n  const filteredAndSearchedAttributes = useMemo(() => {\n    const filterBySearch = <T extends { name?: string }>(items: T[], query: string): T[] => {\n      if (!query.trim()) return items;\n\n      return items.filter(\n        (item): item is T => Boolean(item.name?.toLowerCase().includes(query.toLowerCase())),\n      );\n    };\n\n    return {\n      model: filterBySearch(filteredAttributes.model, searchModelQuery),\n      pattern: filterBySearch(filteredAttributes.pattern, searchPatternQuery),\n      backdrop: filterBySearch(filteredAttributes.backdrop, searchBackdropQuery),\n    };\n  }, [filteredAttributes, searchModelQuery, searchBackdropQuery, searchPatternQuery]);\n\n  // Sort Menu\n  const sortMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isSortContextMenuOpen,\n    contextMenuAnchor: sortContextMenuAnchor,\n    handleContextMenu: handleSortContextMenu,\n    handleContextMenuClose: handleSortContextMenuClose,\n    handleContextMenuHide: handleSortContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getSortMenuElement = useLastCallback(() => sortMenuRef.current!);\n\n  // Model Menu\n  const modelMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isModelContextMenuOpen,\n    contextMenuAnchor: modelContextMenuAnchor,\n    handleContextMenu: handleModelContextMenu,\n    handleContextMenuClose: handleModelContextMenuClose,\n    handleContextMenuHide: handleModelContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getModelMenuElement = useLastCallback(\n    () => modelMenuRef.current!,\n  );\n\n  // Backdrop Menu\n  const backdropMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isBackdropContextMenuOpen,\n    contextMenuAnchor: backdropContextMenuAnchor,\n    handleContextMenu: handleBackdropContextMenu,\n    handleContextMenuClose: handleBackdropContextMenuClose,\n    handleContextMenuHide: handleBackdropContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getBackdropMenuElement = useLastCallback(() => backdropMenuRef.current!);\n\n  // Pattern Menu\n  const patternMenuRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen: isPatternContextMenuOpen,\n    contextMenuAnchor: patternContextMenuAnchor,\n    handleContextMenu: handlePatternContextMenu,\n    handleContextMenuClose: handlePatternContextMenuClose,\n    handleContextMenuHide: handlePatternContextMenuHide,\n  } = useContextMenuHandlers(dialogRef);\n  const getPatternMenuElement = useLastCallback(() => patternMenuRef.current!);\n\n  const SortMenuButton: FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const sortType = filter.sortType;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {sortType === 'byDate' && lang('ValueGiftSortByDate')}\n         {sortType === 'byNumber' && lang('ValueGiftSortByNumber')}\n         {sortType === 'byPrice' && lang('ValueGiftSortByPrice')}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n\n  const ModelMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const attributesCount = filter?.modelAttributes?.length || 0;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {attributesCount === 0 && lang('GiftAttributeModel')}\n         {attributesCount > 0\n           && lang('GiftAttributeModelPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n  const BackdropMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n   = useMemo(() => {\n     const attributesCount = filter?.backdropAttributes?.length || 0;\n     return ({ onTrigger, isOpen: isMenuOpen }) => (\n       <div\n         className={styles.item}\n         onClick={onTrigger}\n       >\n         {attributesCount === 0 && lang('GiftAttributeBackdrop')}\n         {attributesCount > 0\n           && lang('GiftAttributeBackdropPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n         <Icon\n           name=\"dropdown-arrows\"\n           className={styles.itemIcon}\n         />\n       </div>\n     );\n   }, [lang, filter]);\n  const PatternMenuButton: FC<{ onTrigger: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void; isOpen?: boolean }>\n  = useMemo(() => {\n    const attributesCount = filter?.patternAttributes?.length || 0;\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <div\n        className={styles.item}\n        onClick={onTrigger}\n      >\n        {attributesCount === 0 && lang('GiftAttributeSymbol')}\n        {attributesCount > 0\n          && lang('GiftAttributeSymbolPlural', { count: attributesCount }, { pluralValue: attributesCount })}\n        <Icon\n          name=\"dropdown-arrows\"\n          className={styles.itemIcon}\n        />\n      </div>\n    );\n  }, [lang, filter]);\n\n  const handleSortMenuItemClick = useLastCallback((type: ResaleGiftsSortType) => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      sortType: type,\n    } });\n  });\n\n  const handleSelectedAllModelsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: [],\n    } });\n  });\n  const handleSelectedAllPatternsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      patternAttributes: [],\n    } });\n  });\n  const handleSelectedAllBackdropsClick = useLastCallback(() => {\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      backdropAttributes: [],\n    } });\n  });\n\n  const handleModelMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributeModel) => {\n    if (!counters) return;\n    const modelAttributes = filter.modelAttributes || [];\n    const modelAttribute\n      = counters.find((counter): counter is ApiStarGiftAttributeCounter<StarGiftAttributeIdModel> =>\n        counter.attribute.type === 'model' && counter.attribute.documentId === attribute.sticker.id,\n      )?.attribute;\n\n    if (!modelAttribute) return;\n\n    const isActive = modelAttributes.some((item) => item.documentId === modelAttribute.documentId);\n    const updatedAttributes = isActive\n      ? modelAttributes.filter((item) => item.documentId !== modelAttribute.documentId)\n      : [...modelAttributes, modelAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      modelAttributes: updatedAttributes,\n    } });\n  });\n\n  const handlePatternMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributePattern) => {\n    if (!counters) return;\n    const patternAttributes = filter.patternAttributes || [];\n    const patternAttribute = counters.find(\n      (counter): counter is ApiStarGiftAttributeCounter<ApiStarGiftAttributeIdPattern> =>\n        counter.attribute.type === 'pattern' && counter.attribute.documentId === attribute.sticker.id,\n    )?.attribute;\n\n    if (!patternAttribute) return;\n\n    const isActive = patternAttributes.some((item) => item.documentId === patternAttribute.documentId);\n    const updatedAttributes = isActive\n      ? patternAttributes.filter((item) => item.documentId !== patternAttribute.documentId)\n      : [...patternAttributes, patternAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      patternAttributes: updatedAttributes,\n    } });\n  });\n\n  const handleBackdropMenuItemClick = useLastCallback((attribute: ApiStarGiftAttributeBackdrop) => {\n    if (!counters) return;\n    const backdropAttributes = filter.backdropAttributes || [];\n    const backdropAttribute = counters.find(\n      (counter): counter is ApiStarGiftAttributeCounter<ApiStarGiftAttributeIdBackdrop> =>\n        counter.attribute.type === 'backdrop' && counter.attribute.backdropId === attribute.backdropId,\n    )?.attribute;\n\n    if (!backdropAttribute) return;\n\n    const isActive = backdropAttributes.some((item) => item.backdropId === backdropAttribute.backdropId);\n    const updatedAttributes = isActive\n      ? backdropAttributes.filter((item) => item.backdropId !== backdropAttribute.backdropId)\n      : [...backdropAttributes, backdropAttribute];\n    updateResaleGiftsFilter({ filter: {\n      ...filter,\n      backdropAttributes: updatedAttributes,\n    } });\n  });\n\n  function renderSortMenuItems() {\n    return (\n      <>\n        <MenuItem icon=\"sort-by-price\" onClick={() => { handleSortMenuItemClick('byPrice'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByPrice')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byPrice' ? 'check' : 'placeholder'}\n          />\n        </MenuItem>\n        <MenuItem icon=\"sort-by-date\" onClick={() => { handleSortMenuItemClick('byDate'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByDate')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byDate' ? 'check' : 'placeholder'}\n          />\n\n        </MenuItem>\n        <MenuItem icon=\"sort-by-number\"onClick={() => { handleSortMenuItemClick('byNumber'); }}>\n          <div className={styles.menuItemText}>\n            {lang('GiftSortByNumber')}\n          </div>\n          <Icon\n            className={styles.menuItemIcon}\n            name={filter?.sortType === 'byNumber' ? 'check' : 'placeholder'}\n          />\n        </MenuItem>\n      </>\n    );\n  }\n\n  function renderSortMenu() {\n    return (\n      <Menu\n        isOpen={isSortContextMenuOpen}\n        anchor={sortContextMenuAnchor}\n        ref={sortMenuRef}\n        className={buildClassName(\n          styles.menu,\n          styles.left,\n          'with-menu-transitions',\n        )}\n        getMenuElement={getSortMenuElement}\n        autoClose\n        onClose={handleSortContextMenuClose}\n        onCloseAnimationEnd={handleSortContextMenuHide}\n        positionX=\"left\"\n      >\n        {renderSortMenuItems()}\n      </Menu>\n    );\n  }\n\n  const handleSearchModelInputReset = useCallback(() => {\n    setSearchModelQuery('');\n  }, []);\n  const handleSearchBackdropInputReset = useCallback(() => {\n    setSearchBackdropQuery('');\n  }, []);\n  const handleSearchPatternInputReset = useCallback(() => {\n    setSearchPatternQuery('');\n  }, []);\n  const handleSearchInputClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n  });\n\n  const modelMenuItemsContainerRef = useRef<HTMLDivElement>();\n  const { observe } = useIntersectionObserver({\n    rootRef: modelMenuItemsContainerRef,\n    isDisabled: !modelContextMenuAnchor,\n  });\n\n  function renderModelMenuItems() {\n    const models = filteredAndSearchedAttributes.model;\n    const selectedAttributes = filter.modelAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n    return (\n      <div className={styles.menuContentContainer} ref={modelMenuItemsContainerRef}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchModelQuery}\n          onChange={setSearchModelQuery}\n          onReset={handleSearchModelInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllModelsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {models.map((model) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.documentId === model.sticker.id);\n          return (\n            <MenuItem\n              key={model.name}\n              onClick={() => {\n                handleModelMenuItemClick(model);\n              }}\n            >\n              <ResaleGiftMenuAttributeSticker\n                className={styles.sticker}\n                sticker={model.sticker}\n                type=\"model\"\n                observeIntersectionForLoading={observe}\n                observeIntersectionForPlaying={observe}\n              />\n              <div className={styles.menuItemStickerText}>\n                {model.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderModelMenu() {\n    return (\n      <Menu\n        isOpen={isModelContextMenuOpen}\n        anchor={modelContextMenuAnchor}\n        ref={modelMenuRef}\n        className={buildClassName(\n          styles.menu,\n          styles.left,\n          'with-menu-transitions',\n        )}\n        getMenuElement={getModelMenuElement}\n        autoClose\n        onClose={handleModelContextMenuClose}\n        onCloseAnimationEnd={handleModelContextMenuHide}\n      >\n        {renderModelMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderBackdropMenuItems() {\n    const backdrops = filteredAndSearchedAttributes.backdrop;\n    const selectedAttributes = filter.backdropAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n\n    return (\n      <div className={styles.menuContentContainer}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchBackdropQuery}\n          onChange={setSearchBackdropQuery}\n          onReset={handleSearchBackdropInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllBackdropsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {backdrops.map((backdrop) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.backdropId === backdrop.backdropId);\n\n          return (\n            <MenuItem\n              key={backdrop.name}\n              onClick={() => {\n                handleBackdropMenuItemClick(backdrop);\n              }}\n            >\n              <RadialPatternBackground\n                className={styles.backdrop}\n                backgroundColors={[backdrop.centerColor, backdrop.edgeColor]}\n                patternColor={backdrop.patternColor}\n              />\n              <div className={styles.backdropAttributeMenuItemText}>\n                {backdrop.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderBackdropMenu() {\n    return (\n      <Menu\n        isOpen={isBackdropContextMenuOpen}\n        anchor={backdropContextMenuAnchor}\n        ref={backdropMenuRef}\n        className={buildClassName(styles.menu, styles.right, 'with-menu-transitions')}\n        getMenuElement={getBackdropMenuElement}\n        autoClose\n        onClose={handleBackdropContextMenuClose}\n        onCloseAnimationEnd={handleBackdropContextMenuHide}\n        positionX=\"right\"\n      >\n        {renderBackdropMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderPatternMenuItems() {\n    const patterns = filteredAndSearchedAttributes.pattern;\n    const selectedAttributes = filter.patternAttributes ?? [];\n    const isSelectedAll = selectedAttributes.length === 0;\n\n    return (\n      <div className={styles.menuContentContainer}>\n        <SearchInput\n          onClick={handleSearchInputClick}\n          className={styles.search}\n          value={searchPatternQuery}\n          onChange={setSearchPatternQuery}\n          onReset={handleSearchPatternInputReset}\n          placeholder={lang('Search')}\n        />\n        <MenuItem icon=\"select\" onClick={handleSelectedAllPatternsClick} disabled={isSelectedAll}>\n          {lang('ContextMenuItemSelectAll')}\n        </MenuItem>\n        {patterns.map((pattern) => {\n          const isSelected = isSelectedAll\n            || selectedAttributes.some((attr) => attr.documentId === pattern.sticker.id);\n\n          return (\n            <MenuItem\n              key={pattern.name}\n              onClick={() => {\n                handlePatternMenuItemClick(pattern);\n              }}\n            >\n\n              <ResaleGiftMenuAttributeSticker\n                className={styles.sticker}\n                sticker={pattern.sticker}\n                type=\"pattern\"\n              />\n\n              <div className={styles.menuItemStickerText}>\n                {pattern.name}\n              </div>\n              <Icon\n                className={styles.menuItemIcon}\n                name={isSelected ? 'check' : 'placeholder'}\n              />\n            </MenuItem>\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderPatternMenu() {\n    return (\n      <Menu\n        isOpen={isPatternContextMenuOpen}\n        anchor={patternContextMenuAnchor}\n        ref={patternMenuRef}\n        className={buildClassName(styles.menu, styles.right, 'with-menu-transitions')}\n        getMenuElement={getPatternMenuElement}\n        autoClose\n        onClose={handlePatternContextMenuClose}\n        onCloseAnimationEnd={handlePatternContextMenuHide}\n      >\n        {renderPatternMenuItems()}\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      {Boolean(sortContextMenuAnchor) && renderSortMenu()}\n      {Boolean(modelContextMenuAnchor) && renderModelMenu()}\n      {Boolean(backdropContextMenuAnchor) && renderBackdropMenu()}\n      {Boolean(patternContextMenuAnchor) && renderPatternMenu()}\n      <div className={styles.buttonsContainer}>\n        <SortMenuButton\n          onTrigger={handleSortContextMenu}\n          isOpen={isSortContextMenuOpen}\n        />\n        <ModelMenuButton\n          onTrigger={handleModelContextMenu}\n          isOpen={isModelContextMenuOpen}\n        />\n        <BackdropMenuButton\n          onTrigger={handleBackdropContextMenu}\n          isOpen={isBackdropContextMenuOpen}\n        />\n        <PatternMenuButton\n          onTrigger={handlePatternContextMenu}\n          isOpen={isPatternContextMenuOpen}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const { resaleGifts } = selectTabState(global);\n\n  const attributes = resaleGifts.attributes;\n  const counters = resaleGifts.counters;\n  const filter = resaleGifts.filter;\n\n  return {\n    attributes,\n    counters,\n    filter,\n  };\n})(GiftResaleFilters));\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cUjwvN00\",\"item-selected\":\"medfcJpd\",\"itemSelected\":\"medfcJpd\",\"item\":\"dO7FKYY4\",\"selected-item\":\"B2lEJk1v\",\"selectedItem\":\"B2lEJk1v\",\"star\":\"Pb7AU805\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { StarGiftCategory } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarGiftCategoryList.module.scss';\n\ntype OwnProps = {\n  areLimitedStarGiftsDisallowed?: boolean;\n  onCategoryChanged: (category: StarGiftCategory) => void;\n};\n\ntype StateProps = {\n  idsByCategory?: Record<StarGiftCategory, string[]>;\n};\n\nconst StarGiftCategoryList = ({\n  idsByCategory,\n  onCategoryChanged,\n  areLimitedStarGiftsDisallowed,\n}: StateProps & OwnProps) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n  const starCategories: number[] | undefined = useMemo(() => idsByCategory && Object.keys(idsByCategory)\n    .filter((category) => category !== 'all' && category !== 'limited')\n    .map(Number)\n    .sort((a, b) => a - b),\n  [idsByCategory]);\n\n  const hasResale = idsByCategory && idsByCategory['resale'].length > 0;\n\n  const [selectedCategory, setSelectedCategory] = useState<StarGiftCategory>('all');\n\n  function handleItemClick(category: StarGiftCategory) {\n    setSelectedCategory(category);\n    onCategoryChanged(\n      category,\n    );\n  }\n\n  function renderCategoryName(category: StarGiftCategory) {\n    if (category === 'all') return lang('AllGiftsCategory');\n    if (category === 'stock') return lang('StockGiftsCategory');\n    if (category === 'limited') return lang('LimitedGiftsCategory');\n    if (category === 'resale') return lang('GiftCategoryResale');\n    return category;\n  }\n\n  function renderCategoryItem(category: StarGiftCategory) {\n    return (\n      <div\n        className={buildClassName(\n          styles.item,\n          selectedCategory === category && styles.selectedItem,\n        )}\n        onClick={() => handleItemClick(category)}\n      >\n        {Number.isInteger(category) && (\n          <StarIcon\n            className={styles.star}\n            type=\"gold\"\n            size=\"middle\"\n          />\n        )}\n        {renderCategoryName(category)}\n      </div>\n    );\n  }\n\n  useHorizontalScroll(ref, undefined, true);\n\n  return (\n    <div ref={ref} className={buildClassName(styles.list, 'no-scrollbar')}>\n      {renderCategoryItem('all')}\n      {!areLimitedStarGiftsDisallowed && renderCategoryItem('limited')}\n      {!areLimitedStarGiftsDisallowed && hasResale && renderCategoryItem('resale')}\n      {renderCategoryItem('stock')}\n      {starCategories?.map(renderCategoryItem)}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): Complete<StateProps> => {\n    const { starGifts } = global;\n\n    return {\n      idsByCategory: starGifts?.idsByCategory,\n    };\n  },\n)(StarGiftCategoryList));\n","import type { FC } from '@teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '@teact';\nimport type React from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiDisallowedGifts,\n  ApiPeer,\n  ApiPremiumGiftCodeOption,\n  ApiStarGift,\n  ApiStarGiftRegular,\n  ApiStarsAmount,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { StarGiftCategory } from '../../../types';\n\nimport { STARS_CURRENCY_CODE } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport { getPeerTitle, isApiPeerChat, isApiPeerUser } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { selectPeer, selectUserFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport InteractiveSparkles from '../../common/InteractiveSparkles';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from '../stars/BalanceBlock';\nimport GiftSendingOptions from './GiftComposer';\nimport GiftItemPremium from './GiftItemPremium';\nimport GiftItemStar from './GiftItemStar';\nimport GiftModalResaleScreen from './GiftModalResaleScreen';\nimport GiftResaleFilters from './GiftResaleFilters';\nimport StarGiftCategoryList from './StarGiftCategoryList';\n\nimport styles from './GiftModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftModal'];\n};\n\nexport type GiftOption = ApiPremiumGiftCodeOption | ApiStarGift;\n\ntype StateProps = {\n  boostPerSentGift?: number;\n  starGiftsById?: Record<string, ApiStarGiftRegular>;\n  starGiftIdsByCategory?: Record<StarGiftCategory, string[]>;\n  starBalance?: ApiStarsAmount;\n  peer?: ApiPeer;\n  isSelf?: boolean;\n  disallowedGifts?: ApiDisallowedGifts;\n  resaleGiftsCount?: number;\n  areResaleGiftsLoading?: boolean;\n  selectedResaleGift?: ApiStarGift;\n  tabId: number;\n};\n\nconst AVATAR_SIZE = 100;\nconst INTERSECTION_THROTTLE = 200;\nconst SCROLL_THROTTLE = 200;\nconst AVATAR_SPARKLES_CENTER_SHIFT = [0, -50] as const;\n\nconst runThrottledForScroll = throttle((cb) => cb(), SCROLL_THROTTLE, true);\n\nconst GiftModal: FC<OwnProps & StateProps> = ({\n  modal,\n  starGiftsById,\n  starGiftIdsByCategory,\n  starBalance,\n  peer,\n  isSelf,\n  disallowedGifts,\n  resaleGiftsCount,\n  areResaleGiftsLoading,\n  selectedResaleGift,\n  tabId,\n}) => {\n  const {\n    closeGiftModal, openGiftInfoModal, resetResaleGifts, loadResaleGifts, openGiftInMarket, closeResaleGiftsMarket,\n  } = getActions();\n  const dialogRef = useRef<HTMLDivElement>();\n  const transitionRef = useRef<HTMLDivElement>();\n  const giftHeaderRef = useRef<HTMLHeadingElement>();\n\n  const scrollerRef = useRef<HTMLDivElement>();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const user = peer && isApiPeerUser(peer) ? peer : undefined;\n  const chat = peer && isApiPeerChat(peer) ? peer : undefined;\n\n  const [selectedGift, setSelectedGift] = useState<GiftOption | undefined>();\n  const [shouldShowMainScreenHeader, setShouldShowMainScreenHeader] = useState(false);\n  const [isMainScreenHeaderForStarGifts, setIsMainScreenHeaderForStarGifts] = useState(false);\n  const [isGiftScreenHeaderForStarGifts, setIsGiftScreenHeaderForStarGifts] = useState(false);\n\n  const [selectedCategory, setSelectedCategory] = useState<StarGiftCategory>('all');\n  const triggerSparklesRef = useRef<(() => void) | undefined>();\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    const {\n      shouldDisallowPremiumGifts,\n      ...disallowedGiftTypes\n    } = disallowedGifts;\n    return !isSelf && Object.values(disallowedGiftTypes).every(Boolean);\n  }, [isSelf, disallowedGifts]);\n\n  const areUnlimitedStarGiftsDisallowed = !isSelf && disallowedGifts?.shouldDisallowUnlimitedStarGifts;\n  const areLimitedStarGiftsDisallowed = !isSelf && disallowedGifts?.shouldDisallowLimitedStarGifts;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const allGifts = renderingModal?.gifts;\n  const filteredGifts = useMemo(() => {\n    return allGifts?.sort((prevGift, gift) => prevGift.months - gift.months)\n      .filter((gift) => gift.users === 1 && gift.currency !== STARS_CURRENCY_CODE);\n  }, [allGifts]);\n\n  const giftsByStars = useMemo(() => {\n    const mapGifts = new Map();\n\n    if (!filteredGifts) return mapGifts;\n\n    filteredGifts.forEach((gift) => {\n      const giftByStars = allGifts?.find(\n        (starsGift) => starsGift.currency === STARS_CURRENCY_CODE\n          && starsGift.months === gift.months,\n      );\n      if (giftByStars) {\n        mapGifts.set(gift, giftByStars);\n      }\n    });\n\n    return mapGifts;\n  }, [allGifts, filteredGifts]);\n\n  const baseGift = useMemo(() => {\n    return filteredGifts?.reduce((prev, gift) => (prev.amount < gift.amount ? prev : gift));\n  }, [filteredGifts]);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: scrollerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const isResaleScreen = Boolean(selectedResaleGift) && !selectedGift;\n  const isGiftScreen = Boolean(selectedGift);\n  const shouldShowHeader = isResaleScreen || isGiftScreen || shouldShowMainScreenHeader;\n  const isHeaderForStarGifts = isGiftScreen ? isGiftScreenHeaderForStarGifts : isMainScreenHeaderForStarGifts;\n\n  useEffect(() => {\n    if (selectedResaleGift) {\n      const giftId = 'regularGiftId' in selectedResaleGift\n        ? selectedResaleGift.regularGiftId\n        : selectedResaleGift.id;\n      loadResaleGifts({ giftId });\n    }\n  }, [selectedResaleGift]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setShouldShowMainScreenHeader(false);\n      setSelectedGift(undefined);\n      setSelectedCategory('all');\n    }\n  }, [isOpen, tabId, closeResaleGiftsMarket]);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLDivElement>) => {\n    if (isGiftScreen) return;\n    const currentTarget = e.currentTarget;\n\n    runThrottledForScroll(() => {\n      const { scrollTop } = currentTarget;\n\n      setShouldShowMainScreenHeader(scrollTop > 150);\n\n      if (transitionRef.current && giftHeaderRef.current) {\n        const { top: headerTop } = giftHeaderRef.current.getBoundingClientRect();\n        const { top: transitionTop } = transitionRef.current.getBoundingClientRect();\n        setIsMainScreenHeaderForStarGifts(headerTop - transitionTop <= 0);\n      }\n    });\n  });\n\n  const giftPremiumDescription = lang('GiftPremiumDescription', {\n    user: getUserFullName(user)!,\n    link: (\n      <SafeLink\n        text={lang('GiftPremiumDescriptionLinkCaption')}\n        url={lang('GiftPremiumDescriptionLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const starGiftDescription = chat\n    ? lang('StarGiftDescriptionChannel', { peer: getPeerTitle(lang, chat) }, {\n      withNodes: true,\n      withMarkdown: true,\n    })\n    : isSelf\n      ? lang('StarGiftDescriptionSelf', undefined, {\n        withNodes: true,\n        renderTextFilters: ['br'],\n      })\n      : lang('StarGiftDescription', {\n        user: getUserFullName(user)!,\n      }, { withNodes: true, withMarkdown: true });\n\n  function renderGiftPremiumHeader() {\n    return (\n      <h2 className={buildClassName(styles.headerText, styles.center)}>\n        {lang('GiftPremiumHeader')}\n      </h2>\n    );\n  }\n\n  function renderGiftPremiumDescription() {\n    return (\n      <p className={buildClassName(styles.description, styles.center)}>\n        {giftPremiumDescription}\n      </p>\n    );\n  }\n\n  function renderStarGiftsHeader() {\n    return (\n      <h2 ref={giftHeaderRef} className={buildClassName(styles.headerText, styles.center)}>\n        {lang(isSelf ? 'StarsGiftHeaderSelf' : 'StarsGiftHeader')}\n      </h2>\n    );\n  }\n\n  function renderStarGiftsDescription() {\n    return (\n      <p className={buildClassName(styles.description, styles.starGiftsDescription, styles.center)}>\n        {starGiftDescription}\n      </p>\n    );\n  }\n\n  const handleGiftClick = useLastCallback((gift: GiftOption, target?: 'resell' | 'original') => {\n    if (target === 'resell') {\n      if (!('id' in gift)) {\n        return;\n      }\n      if (isResaleScreen) {\n        openGiftInfoModal({ gift, recipientId: renderingModal?.forPeerId });\n        return;\n      }\n      openGiftInMarket({ gift, tabId });\n      return;\n    }\n    setSelectedGift(gift);\n    setIsGiftScreenHeaderForStarGifts('id' in gift);\n  });\n\n  function renderStarGifts() {\n    const filteredGiftIds = starGiftIdsByCategory?.[selectedCategory]?.filter((giftId) => {\n      const gift = starGiftsById?.[giftId];\n      if (!gift) return false;\n\n      const { isLimited, isSoldOut, upgradeStars } = gift;\n      if (areUnlimitedStarGiftsDisallowed && !areLimitedStarGiftsDisallowed) {\n        return isLimited;\n      }\n      if (areLimitedStarGiftsDisallowed && !areUnlimitedStarGiftsDisallowed) {\n        return !isLimited && !isSoldOut;\n      }\n      if (areUnlimitedStarGiftsDisallowed && areLimitedStarGiftsDisallowed) {\n        return Boolean(isLimited && Boolean(upgradeStars));\n      }\n\n      return true;\n    });\n\n    return (\n      <div className={styles.starGiftsContainer}>\n        {starGiftsById && filteredGiftIds?.flatMap((giftId) => {\n          const gift = starGiftsById[giftId];\n          const shouldShowResale = selectedCategory !== 'stock' && Boolean(gift.availabilityResale);\n          const shouldDuplicateAsResale = selectedCategory !== 'resale' && shouldShowResale && !gift.isSoldOut;\n\n          const elements = [\n            <GiftItemStar\n              key={giftId}\n              gift={gift}\n              observeIntersection={observeIntersection}\n              isResale={shouldShowResale && !shouldDuplicateAsResale}\n              onClick={handleGiftClick}\n            />,\n          ];\n\n          if (shouldDuplicateAsResale) {\n            elements.push(\n              <GiftItemStar\n                key={`resale_${giftId}`}\n                isResale\n                gift={gift}\n                observeIntersection={observeIntersection}\n                onClick={handleGiftClick}\n              />,\n            );\n          }\n\n          return elements;\n        })}\n      </div>\n    );\n  }\n\n  function renderPremiumGifts() {\n    return (\n      <div className={styles.premiumGiftsGallery}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <GiftItemPremium\n              option={gift}\n              optionByStars={giftsByStars.get(gift)}\n              baseMonthAmount={baseGift ? Math.floor(baseGift.amount / baseGift.months) : undefined}\n              onClick={handleGiftClick}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  const onCategoryChanged = useLastCallback((category: StarGiftCategory) => {\n    setSelectedCategory(category);\n  });\n\n  const handleCloseModal = useLastCallback(() => {\n    setSelectedGift(undefined);\n    resetResaleGifts();\n    closeGiftModal();\n  });\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (isResaleScreen) {\n      closeResaleGiftsMarket({ tabId });\n      return;\n    }\n    if (isGiftScreen) {\n      setSelectedGift(undefined);\n      return;\n    }\n    handleCloseModal();\n  });\n\n  const handleAvatarMouseMove = useLastCallback(() => {\n    triggerSparklesRef.current?.();\n  });\n\n  const handleRequestAnimation = useLastCallback((animate: NoneToVoidFunction) => {\n    triggerSparklesRef.current = animate;\n  });\n\n  function renderMainScreen() {\n    return (\n      <div ref={scrollerRef} className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <div className={styles.avatars}>\n          <Avatar\n            className={styles.avatar}\n            size={AVATAR_SIZE}\n            peer={peer}\n            onMouseMove={handleAvatarMouseMove}\n          />\n          <InteractiveSparkles\n            className={styles.logoBackground}\n            color=\"gold\"\n            centerShift={AVATAR_SPARKLES_CENTER_SHIFT}\n            onRequestAnimation={handleRequestAnimation}\n          />\n        </div>\n        {!isSelf && !chat && !disallowedGifts?.shouldDisallowPremiumGifts && (\n          <>\n            {renderGiftPremiumHeader()}\n            {renderGiftPremiumDescription()}\n            {renderPremiumGifts()}\n          </>\n        )}\n\n        {!areAllGiftsDisallowed && (\n          <>\n            {renderStarGiftsHeader()}\n            {renderStarGiftsDescription()}\n            <StarGiftCategoryList\n              areLimitedStarGiftsDisallowed={areLimitedStarGiftsDisallowed}\n              onCategoryChanged={onCategoryChanged}\n            />\n            <Transition\n              name=\"zoomFade\"\n              activeKey={getCategoryKey(selectedCategory)}\n              className={styles.starGiftsTransition}\n            >\n              {renderStarGifts()}\n            </Transition>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  const isBackButton = isGiftScreen || isResaleScreen;\n\n  const buttonClassName = buildClassName(\n    'animated-close-icon',\n    isBackButton && 'state-back',\n  );\n\n  function renderHeader() {\n    if (!shouldShowHeader) return undefined;\n    if (isResaleScreen) {\n      const isFirstLoading = areResaleGiftsLoading && !resaleGiftsCount;\n      return (\n        <div className={styles.resaleHeaderContentContainer}>\n          <h2 className={styles.resaleHeaderText}>\n            {selectedResaleGift.title}\n          </h2>\n          {isFirstLoading\n            && (\n              <div className={styles.resaleHeaderDescription}>\n                {lang('Loading')}\n              </div>\n            )}\n          {!isFirstLoading && resaleGiftsCount !== undefined\n            && (\n              <div className={styles.resaleHeaderDescription}>\n                {lang('HeaderDescriptionResaleGifts', {\n                  count: resaleGiftsCount,\n                }, { withNodes: true, withMarkdown: true, pluralValue: resaleGiftsCount })}\n              </div>\n            )}\n          <GiftResaleFilters dialogRef={dialogRef} />\n        </div>\n      );\n    }\n    return (\n      <h2 className={styles.commonHeaderText}>\n        {lang(isHeaderForStarGifts ? (isSelf ? 'StarsGiftHeaderSelf' : 'StarsGiftHeader') : 'GiftPremiumHeader')}\n      </h2>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={handleCloseModal}\n      isOpen={isOpen}\n      isSlim\n      contentClassName={styles.content}\n      className={buildClassName(styles.modalDialog, styles.root)}\n      isLowStackPriority\n    >\n      <Button\n        className={styles.closeButton}\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        onClick={handleCloseButtonClick}\n        ariaLabel={isBackButton ? oldLang('Common.Back') : oldLang('Common.Close')}\n      >\n        <div className={buttonClassName} />\n      </Button>\n      <BalanceBlock className={styles.balance} balance={starBalance} withAddButton />\n      <div className={buildClassName(\n        styles.header,\n        isResaleScreen && styles.resaleHeader,\n        !shouldShowHeader && styles.hiddenHeader)}\n      >\n        <Transition\n          name=\"slideVerticalFade\"\n          activeKey={!shouldShowHeader ? 0 : isResaleScreen ? 1 : isHeaderForStarGifts ? 2 : 3}\n          slideClassName={styles.headerSlide}\n        >\n          {renderHeader()}\n        </Transition>\n      </div>\n      <Transition\n        ref={transitionRef}\n        className={styles.transition}\n        name=\"pushSlide\"\n        activeKey={isGiftScreen ? 1 : isResaleScreen ? 2 : 0}\n      >\n        {!isGiftScreen && !isResaleScreen && renderMainScreen()}\n        {isResaleScreen && selectedResaleGift\n          && (\n            <GiftModalResaleScreen\n              onGiftClick={handleGiftClick}\n            />\n          )}\n        {isGiftScreen && renderingModal?.forPeerId && (\n          <GiftSendingOptions\n            gift={selectedGift}\n            giftByStars={giftsByStars.get(selectedGift)}\n            peerId={renderingModal.forPeerId}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): Complete<StateProps> => {\n  const {\n    starGifts,\n    stars,\n    currentUserId,\n  } = global;\n\n  const peer = modal?.forPeerId ? selectPeer(global, modal.forPeerId) : undefined;\n  const isSelf = Boolean(currentUserId && modal?.forPeerId === currentUserId);\n  const userFullInfo = peer ? selectUserFullInfo(global, peer?.id) : undefined;\n\n  const { resaleGifts } = selectTabState(global);\n  const resaleGiftsCount = resaleGifts.count;\n  const areResaleGiftsLoading = resaleGifts.isLoading !== false;\n  const selectedResaleGift = modal?.selectedResaleGift;\n\n  return {\n    boostPerSentGift: global.appConfig.boostsPerSentGift,\n    starGiftsById: starGifts?.byId,\n    starGiftIdsByCategory: starGifts?.idsByCategory,\n    starBalance: stars?.balance,\n    peer,\n    isSelf,\n    disallowedGifts: userFullInfo?.disallowedGifts,\n    resaleGiftsCount,\n    areResaleGiftsLoading,\n    selectedResaleGift,\n    tabId: selectTabState(global).id,\n  };\n})(GiftModal));\n\nfunction getCategoryKey(category: StarGiftCategory) {\n  if (category === 'all') return 0;\n  if (category === 'limited') return 1;\n  if (category === 'resale') return 2;\n  if (category === 'stock') return 3;\n  return category + 3;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"W3JMs1YE\",\"picker\":\"wOipz1Y_\"};","import {\n  memo, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCanGift } from '../../../../global/selectors';\nimport { unique } from '../../../../util/iteratees';\nimport sortChatIds from '../../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport PickerModal from '../../../common/pickers/PickerModal';\n\nimport styles from './GiftRecipientPicker.module.scss';\n\nexport type OwnProps = {\n  modal?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n}\n\nconst GiftRecipientPicker = ({\n  modal,\n  currentUserId,\n  userIds,\n}: OwnProps & StateProps) => {\n  const { closeGiftRecipientPicker, openGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n  const isOpen = modal;\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const global = getGlobal();\n    const idsWithSelf = userIds ? userIds.concat(currentUserId!) : undefined;\n    const filteredPeerIds = idsWithSelf ? filterPeersByQuery({ ids: idsWithSelf, query: searchQuery }) : [];\n\n    return sortChatIds(unique(filteredPeerIds).filter((peerId) => {\n      return selectCanGift(global, peerId);\n    }), undefined, [currentUserId!]);\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((selectedId: string) => {\n    openGiftModal({ forUserId: selectedId });\n    closeGiftRecipientPicker();\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeGiftRecipientPicker}\n      title={oldLang('GiftTelegramPremiumOrStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onSelectedIdChange={handleSelectedUserIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        forceShowSelf\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n  };\n})(GiftRecipientPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef0cKSqQ\",\"giftPreview\":\"IvuNzslN\",\"backdrop\":\"dNukis4X\",\"arrow\":\"oufsMLLF\"};","import { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiPeer, ApiStarGiftUnique,\n} from '../../../api/types';\n\nimport { getGiftAttributes } from '../helpers/gifts';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport AnimatedIconFromSticker from '../AnimatedIconFromSticker';\nimport Avatar from '../Avatar';\nimport Icon from '../icons/Icon';\nimport RadialPatternBackground from '../profile/RadialPatternBackground';\n\nimport styles from './GiftTransferPreview.module.scss';\n\ntype OwnProps = {\n  peer: ApiPeer;\n  gift: ApiStarGiftUnique;\n};\n\nconst AVATAR_SIZE = 4 * REM;\nconst GIFT_STICKER_SIZE = 3 * REM;\n\nconst GiftTransferPreview = ({\n  peer,\n  gift,\n}: OwnProps) => {\n  const giftAttributes = useMemo(() => {\n    return getGiftAttributes(gift);\n  }, [gift]);\n\n  if (!giftAttributes) return undefined;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.giftPreview}>\n        <RadialPatternBackground\n          className={styles.backdrop}\n          backgroundColors={[giftAttributes.backdrop!.centerColor, giftAttributes.backdrop!.edgeColor]}\n          patternColor={giftAttributes.backdrop?.patternColor}\n          patternIcon={giftAttributes.pattern?.sticker}\n        />\n        <AnimatedIconFromSticker\n          className={styles.sticker}\n          size={GIFT_STICKER_SIZE}\n          sticker={giftAttributes.model?.sticker}\n        />\n      </div>\n      <Icon name=\"next\" className={styles.arrow} />\n      <Avatar\n        peer={peer}\n        size={AVATAR_SIZE}\n        className={styles.avatar}\n      />\n    </div>\n  );\n};\n\nexport default memo(GiftTransferPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"nnublcCk\",\"checkBox\":\"fjE0wGvw\",\"checkBoxDescription\":\"tepUTe4z\",\"upgradeIcon\":\"lgyInH5K\",\"header\":\"p7FTs7_p\",\"title\":\"pIbzzTir\",\"description\":\"CCPfr26t\",\"soldOut\":\"kjWcRp4W\",\"modalContent\":\"o9rFZ6By\",\"headerSplitButton\":\"XOMI_4PO\",\"headerButton\":\"WA0INleU\",\"giftResalePriceContainer\":\"BN8gf5y6\",\"starAmountIcon\":\"_5guecUe\",\"giftResalePriceStar\":\"H_q8o2vY\",\"left\":\"aOhTHZlf\",\"right\":\"rJOB1u5Q\",\"footer\":\"bho0GTYt\",\"footerDescription\":\"VUylTszM\",\"unknown\":\"zDauXmpS\",\"giftValue\":\"w_E4LkUj\",\"uniqueValue\":\"uAjIRJva\",\"uniqueAttribute\":\"OJQnkf17\",\"attributeName\":\"dq7wCHJb\",\"uniqueGift\":\"I6o_pGAm\",\"modalHeader\":\"ie9tImaj\",\"modalCloseButton\":\"p38RBGdC\",\"ownerAddress\":\"DavMRg4Q\",\"copyIcon\":\"SLX5tX8C\"};","import type { TeactNode } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiEmojiStatusType,\n  ApiPeer,\n  ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../../../config';\nimport { getHasAdminRight } from '../../../../global/helpers';\nimport { getPeerTitle, isApiPeerChat, isApiPeerUser } from '../../../../global/helpers/peers';\nimport { getMainUsername } from '../../../../global/helpers/users';\nimport { selectPeer, selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport {\n  formatStarsAsIcon, formatStarsAsText, formatTonAsIcon, formatTonAsText,\n} from '../../../../util/localization/format';\nimport { CUSTOM_PEER_HIDDEN } from '../../../../util/objects/customPeer';\nimport { getServerTime } from '../../../../util/serverTime';\nimport { formatPercent } from '../../../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../../../common/helpers/gifts';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport BadgeButton from '../../../common/BadgeButton';\nimport GiftMenuItems from '../../../common/gift/GiftMenuItems';\nimport GiftTransferPreview from '../../../common/gift/GiftTransferPreview';\nimport Icon from '../../../common/icons/Icon';\nimport SafeLink from '../../../common/SafeLink';\nimport Button from '../../../ui/Button';\nimport Checkbox from '../../../ui/Checkbox';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\nimport Link from '../../../ui/Link';\nimport Menu from '../../../ui/Menu';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport UniqueGiftHeader from '../UniqueGiftHeader';\n\nimport styles from './GiftInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftInfoModal'];\n};\n\ntype StateProps = {\n  fromPeer?: ApiPeer;\n  targetPeer?: ApiPeer;\n  releasedByPeer?: ApiPeer;\n  currentUserId?: string;\n  starGiftMaxConvertPeriod?: number;\n  hasAdminRights?: boolean;\n  currentUserEmojiStatus?: ApiEmojiStatusType;\n  collectibleEmojiStatuses?: ApiEmojiStatusType[];\n  tonExplorerUrl?: string;\n  currentUser?: ApiUser;\n  recipientPeer?: ApiPeer;\n};\n\nconst STICKER_SIZE = 120;\n\nconst GiftInfoModal = ({\n  modal,\n  fromPeer,\n  targetPeer,\n  releasedByPeer,\n  currentUserId,\n  starGiftMaxConvertPeriod,\n  hasAdminRights,\n  currentUserEmojiStatus,\n  collectibleEmojiStatuses,\n  tonExplorerUrl,\n  currentUser,\n  recipientPeer,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftInfoModal,\n    changeGiftVisibility,\n    convertGiftToStars,\n    openChatWithInfo,\n    focusMessage,\n    openGiftUpgradeModal,\n    showNotification,\n    buyStarGift,\n    closeGiftModal,\n    openGiftInfoValueModal,\n    updateResaleGiftsFilter,\n    openGiftInMarket,\n  } = getActions();\n\n  const [isConvertConfirmOpen, openConvertConfirm, closeConvertConfirm] = useFlag();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState<boolean>(false);\n  const [shouldPayInTon, setShouldPayInTon] = useState<boolean>(false);\n\n  const splitButtonRef = useRef<HTMLDivElement>();\n  const menuRef = useRef<HTMLDivElement>();\n  const uniqueGiftHeaderRef = useRef<HTMLDivElement>();\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(splitButtonRef);\n\n  const handleSymbolClick = useLastCallback(() => {\n    if (!gift || !giftAttributes?.pattern) return;\n\n    openGiftInMarket({ gift });\n    updateResaleGiftsFilter({\n      filter: {\n        sortType: 'byDate',\n        modelAttributes: [],\n        backdropAttributes: [],\n        patternAttributes: [{\n          type: 'pattern',\n          documentId: giftAttributes.pattern.sticker.id,\n        }],\n      },\n    });\n  });\n\n  const handleBackdropClick = useLastCallback(() => {\n    if (!gift || !giftAttributes?.backdrop) return;\n\n    openGiftInMarket({ gift });\n    updateResaleGiftsFilter({\n      filter: {\n        sortType: 'byDate',\n        modelAttributes: [],\n        backdropAttributes: [{\n          type: 'backdrop',\n          backdropId: giftAttributes.backdrop.backdropId,\n        }],\n        patternAttributes: [],\n      },\n    });\n  });\n\n  const handleModelClick = useLastCallback(() => {\n    if (!gift || !giftAttributes?.model) return;\n\n    openGiftInMarket({ gift });\n    updateResaleGiftsFilter({\n      filter: {\n        sortType: 'byDate',\n        modelAttributes: [{\n          type: 'model',\n          documentId: giftAttributes.model.sticker.id,\n        }],\n        backdropAttributes: [],\n        patternAttributes: [],\n      },\n    });\n  });\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingFromPeer = useCurrentOrPrev(fromPeer);\n  const renderingTargetPeer = useCurrentOrPrev(targetPeer);\n\n  const isTargetChat = renderingTargetPeer && isApiPeerChat(renderingTargetPeer);\n\n  const { gift: typeGift } = renderingModal || {};\n  const isSavedGift = typeGift && 'gift' in typeGift;\n  const savedGift = isSavedGift ? typeGift : undefined;\n  const isSender = savedGift?.fromId === currentUserId;\n  const canConvertDifference = (savedGift && starGiftMaxConvertPeriod && (\n    savedGift.date + starGiftMaxConvertPeriod - getServerTime()\n  )) || 0;\n  const conversionLeft = Math.ceil(canConvertDifference / 60 / 60 / 24);\n\n  const gift = isSavedGift ? typeGift.gift : typeGift;\n  const giftSticker = gift && getStickerFromGift(gift);\n  const hasConvertOption = canConvertDifference > 0 && Boolean(savedGift?.starsToConvert);\n\n  const isGiftUnique = gift && gift.type === 'starGiftUnique';\n  const uniqueGift = isGiftUnique ? gift : undefined;\n\n  const giftSubtitle = useMemo(() => {\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    if (releasedByPeer) {\n      const releasedByUsername = `@${getMainUsername(releasedByPeer)}`;\n      const ownerTitle = releasedByUsername || getPeerTitle(lang, releasedByPeer);\n      const fallbackText = isApiPeerUser(releasedByPeer)\n        ? lang('ActionFallbackUser')\n        : lang('ActionFallbackChannel');\n\n      return lang('GiftInfoCollectibleBy', {\n        number: gift.number, owner: ownerTitle || fallbackText }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('GiftInfoCollectible', { number: gift.number });\n  }, [gift, releasedByPeer, lang]);\n\n  const starGiftUniqueSlug = gift?.type === 'starGiftUnique' ? gift.slug : undefined;\n\n  const selfCollectibleStatus = useMemo(() => {\n    if (!starGiftUniqueSlug) return undefined;\n    return collectibleEmojiStatuses?.find((status) =>\n      status.type === 'collectible' && status.slug === starGiftUniqueSlug);\n  }, [starGiftUniqueSlug, collectibleEmojiStatuses]);\n\n  const isSelfUnique = Boolean(selfCollectibleStatus);\n  const canFocusUpgrade = Boolean(savedGift?.upgradeMsgId);\n\n  const canManage = !canFocusUpgrade && savedGift?.inputGift && (\n    isTargetChat ? hasAdminRights\n      : gift?.type === 'starGift'\n        ? renderingTargetPeer?.id === currentUserId\n        : gift?.ownerId === currentUserId || isSelfUnique\n  );\n\n  function getResalePrice(isInTon?: boolean) {\n    if (!isGiftUnique) return undefined;\n    const amounts = gift.resellPrice;\n    if (!amounts) return undefined;\n\n    if (gift?.resaleTonOnly || isInTon) {\n      return amounts.find((amount) => amount.currency === TON_CURRENCY_CODE);\n    }\n\n    return amounts.find((amount) => amount.currency === STARS_CURRENCY_CODE);\n  }\n\n  const resellPrice = getResalePrice();\n  const confirmPrice = getResalePrice(shouldPayInTon);\n  const canBuyGift = !isSelfUnique && gift?.type === 'starGiftUnique'\n    && gift.ownerId !== currentUserId && Boolean(resellPrice);\n\n  const giftOwnerTitle = (() => {\n    if (!isGiftUnique) return undefined;\n    const { ownerName, ownerId } = gift;\n    const global = getGlobal(); // Peer titles do not need to be reactive\n    const owner = ownerId ? selectPeer(global, ownerId) : undefined;\n    return owner ? getPeerTitle(lang, owner) : ownerName;\n  })();\n\n  const handleClose = useLastCallback(() => {\n    closeGiftInfoModal();\n  });\n\n  const handleFocusUpgraded = useLastCallback(() => {\n    const giftChat = isSender ? renderingTargetPeer : renderingFromPeer;\n    if (!savedGift?.upgradeMsgId || !giftChat) return;\n    const { upgradeMsgId } = savedGift;\n    focusMessage({ chatId: giftChat.id, messageId: upgradeMsgId });\n    handleClose();\n  });\n\n  const handleTriggerVisibility = useLastCallback(() => {\n    const { inputGift, isUnsaved } = savedGift!;\n    changeGiftVisibility({ gift: inputGift!, shouldUnsave: !isUnsaved });\n    handleClose();\n  });\n\n  const handleConvertToStars = useLastCallback(() => {\n    const { inputGift } = savedGift!;\n    convertGiftToStars({ gift: inputGift! });\n    closeConvertConfirm();\n    handleClose();\n  });\n\n  const handleOpenUpgradeModal = useLastCallback(() => {\n    if (!savedGift) return;\n    openGiftUpgradeModal({ giftId: savedGift.gift.id, gift: savedGift });\n  });\n\n  const handleBuyGift = useLastCallback(() => {\n    if (gift?.type !== 'starGiftUnique' || !getResalePrice()) return;\n    setIsConfirmModalOpen(true);\n  });\n\n  const closeConfirmModal = useLastCallback(() => {\n    setIsConfirmModalOpen(false);\n  });\n\n  const handleConfirmBuyGift = useLastCallback(() => {\n    const peer = recipientPeer || currentUser;\n    const price = getResalePrice(shouldPayInTon);\n    if (!peer || !price || gift?.type !== 'starGiftUnique') return;\n    closeConfirmModal();\n    closeGiftModal();\n    buyStarGift({ peerId: peer.id, slug: gift.slug, price });\n  });\n\n  const handleOpenValueModal = useLastCallback(() => {\n    if (!gift || gift.type !== 'starGiftUnique') return;\n\n    openGiftInfoValueModal({\n      gift,\n    });\n  });\n\n  const giftAttributes = useMemo(() => {\n    return gift && getGiftAttributes(gift);\n  }, [gift]);\n\n  const SettingsMenuButton = useMemo(() => {\n    return (\n      <div\n        className={buildClassName(\n          styles.headerButton,\n          styles.left,\n        )}\n        tabIndex={0}\n        role=\"button\"\n        aria-haspopup=\"menu\"\n        aria-label={lang('AriaMoreButton')}\n        onContextMenu={handleContextMenu}\n        onClick={handleContextMenu}\n      >\n        <Icon\n          name=\"more\"\n          className={styles.icon}\n        />\n      </div>\n    );\n  }, [lang, handleContextMenu]);\n\n  const renderFooterButton = useLastCallback(() => {\n    if (canBuyGift) {\n      return (\n        <Button noForcedUpperCase onClick={handleBuyGift}>\n          {lang('ButtonBuyGift', {\n            stars: resellPrice?.currency === TON_CURRENCY_CODE\n              ? formatTonAsIcon(lang, resellPrice.amount, { shouldConvertFromNanos: true })\n              : formatStarsAsIcon(lang, resellPrice?.amount, { asFont: true }),\n          }, { withNodes: true })}\n        </Button>\n      );\n    }\n\n    if (canFocusUpgrade) {\n      return (\n        <Button onClick={handleFocusUpgraded}>\n          {lang('GiftInfoViewUpgraded')}\n        </Button>\n      );\n    }\n\n    if (canManage && savedGift?.alreadyPaidUpgradeStars && !savedGift.upgradeMsgId) {\n      return (\n        <Button isShiny onClick={handleOpenUpgradeModal}>\n          {lang('GiftInfoUpgradeForFree')}\n          <Icon name=\"arrow-down-circle\" className={styles.upgradeIcon} />\n        </Button>\n      );\n    }\n\n    if (canManage && savedGift?.canUpgrade && !savedGift.upgradeMsgId) {\n      return (\n        <Button isShiny onClick={handleOpenUpgradeModal}>\n          {lang('GiftInfoUpgrade')}\n          <Icon name=\"arrow-down-circle\" className={styles.upgradeIcon} />\n        </Button>\n      );\n    }\n\n    return (\n      <Button onClick={handleClose}>\n        {lang('OK')}\n      </Button>\n    );\n  });\n\n  const saleDateInfo = useMemo(() => {\n    if (!gift) return undefined;\n    let text = '';\n    if (gift.type === 'starGift') {\n      if (gift.firstSaleDate) {\n        text += `${lang('GiftInfoFirstSale')} ${formatDateTimeToString(gift.firstSaleDate * 1000, lang.code, true)}`;\n      }\n      if (gift.lastSaleDate) {\n        text += '\\n';\n        text += `${lang('GiftInfoLastSale')} ${formatDateTimeToString(gift.lastSaleDate * 1000, lang.code, true)}`;\n      }\n    }\n\n    return text;\n  }, [gift, lang]);\n\n  const modalData = useMemo(() => {\n    if (!typeGift || !gift) {\n      return undefined;\n    }\n\n    const {\n      fromId, isNameHidden, starsToConvert, isUnsaved, isConverted, upgradeMsgId,\n    } = savedGift || {};\n    const canConvert = hasConvertOption && Boolean(starsToConvert);\n\n    const isVisibleForMe = isNameHidden && renderingTargetPeer;\n\n    const description = (() => {\n      if (!savedGift) return lang('GiftInfoSoldOutDescription');\n      if (isTargetChat) return undefined;\n\n      if (savedGift.upgradeMsgId) return lang('GiftInfoDescriptionUpgraded');\n      if (canManage && savedGift.canUpgrade && savedGift.alreadyPaidUpgradeStars && !savedGift.upgradeMsgId) {\n        return lang('GiftInfoDescriptionUpgrade2');\n      }\n      if (savedGift.canUpgrade && canManage) {\n        return canManage\n          ? lang('GiftInfoDescriptionFreeUpgrade')\n          : lang('GiftInfoPeerDescriptionFreeUpgradeOut', { peer: getPeerTitle(lang, renderingTargetPeer!)! });\n      }\n      if (!canManage && !isSender) return undefined;\n      if (isConverted && canConvert) {\n        return canManage\n          ? lang('GiftInfoDescriptionConverted', {\n            amount: starsToConvert,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          })\n          : lang('GiftInfoPeerDescriptionOutConverted', {\n            amount: starsToConvert,\n            peer: getPeerTitle(lang, renderingTargetPeer!)!,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          });\n      }\n\n      if (savedGift.canUpgrade && canManage) {\n        if (canConvert) {\n          return lang('GiftInfoDescriptionUpgrade', {\n            amount: starsToConvert,\n          }, {\n            pluralValue: starsToConvert,\n            withNodes: true,\n            withMarkdown: true,\n          });\n        }\n\n        return lang('GiftInfoDescriptionUpgradeRegular');\n      }\n\n      if (canManage) {\n        if (canConvert) {\n          return lang('GiftInfoDescription', {\n            amount: starsToConvert,\n          }, {\n            withNodes: true,\n            withMarkdown: true,\n            pluralValue: starsToConvert,\n          });\n        }\n\n        return lang('GiftInfoDescriptionRegular');\n      }\n\n      if (canConvert) {\n        return lang('GiftInfoPeerDescriptionOut', {\n          amount: starsToConvert,\n          peer: getPeerTitle(lang, renderingTargetPeer!)!,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n          pluralValue: starsToConvert,\n        });\n      }\n\n      return lang('GiftInfoPeerDescriptionOutRegular', { peer: getPeerTitle(lang, renderingTargetPeer!)! });\n    })();\n\n    function getTitle() {\n      if (isGiftUnique) return gift.title;\n      if (!savedGift) return lang('GiftInfoSoldOutTitle');\n\n      return canManage ? lang('GiftInfoReceived') : lang('GiftInfoTitle');\n    }\n\n    const uniqueGiftModalHeader = (\n      <div\n        className={styles.modalHeader}\n      >\n        {Boolean(resellPrice?.amount) && (\n          <div className={styles.giftResalePriceContainer}>\n            {resellPrice.currency === TON_CURRENCY_CODE\n              ? formatTonAsIcon(lang, resellPrice.amount, {\n                className: styles.giftResalePriceStar,\n                shouldConvertFromNanos: true,\n              })\n              : formatStarsAsIcon(lang, resellPrice.amount, {\n                asFont: true,\n                className: styles.giftResalePriceStar,\n              })}\n          </div>\n        )}\n        <div className={styles.headerSplitButton} ref={splitButtonRef}>\n          {SettingsMenuButton}\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon\n              name=\"close\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n\n    const uniqueGiftHeader = isGiftUnique && (\n      <div ref={uniqueGiftHeaderRef} className={buildClassName(styles.header, styles.uniqueGift)}>\n        <UniqueGiftHeader\n          backdropAttribute={giftAttributes!.backdrop!}\n          patternAttribute={giftAttributes!.pattern!}\n          modelAttribute={giftAttributes!.model!}\n          title={gift.title}\n          subtitle={giftSubtitle}\n          subtitlePeer={releasedByPeer}\n          showManageButtons={canManage}\n          savedGift={savedGift}\n        />\n      </div>\n    );\n\n    const regularHeader = (\n      <div className={styles.header}>\n        <AnimatedIconFromSticker\n          className={styles.giftSticker}\n          sticker={giftSticker}\n          size={STICKER_SIZE}\n        />\n        <h1 className={styles.title}>\n          {getTitle()}\n        </h1>\n        {Boolean(description) && (\n          <p className={buildClassName(styles.description, !savedGift && gift?.type === 'starGift' && styles.soldOut)}>\n            {description}\n          </p>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n    if (gift.type === 'starGift') {\n      const hasFrom = fromId || isNameHidden;\n\n      if (hasFrom) {\n        tableData.push([\n          lang('GiftInfoFrom'),\n          !fromId ? (\n            <>\n              <Avatar size=\"small\" peer={CUSTOM_PEER_HIDDEN} />\n              <span className={styles.unknown}>{oldLang(CUSTOM_PEER_HIDDEN.titleKey!)}</span>\n            </>\n          ) : { chatId: fromId },\n        ]);\n      }\n\n      if (savedGift?.date) {\n        tableData.push([\n          lang('GiftInfoDate'),\n          <span title={saleDateInfo}>{formatDateTimeToString(savedGift.date * 1000, lang.code, true)}</span>,\n        ]);\n      }\n\n      if (gift.firstSaleDate && !savedGift) {\n        tableData.push([\n          lang('GiftInfoFirstSale'),\n          formatDateTimeToString(gift.firstSaleDate * 1000, lang.code, true),\n        ]);\n      }\n\n      if (gift.lastSaleDate && !savedGift) {\n        tableData.push([\n          lang('GiftInfoLastSale'),\n          formatDateTimeToString(gift.lastSaleDate * 1000, lang.code, true),\n        ]);\n      }\n\n      const starsValue = gift.stars + (savedGift?.alreadyPaidUpgradeStars || 0);\n\n      tableData.push([\n        lang('GiftInfoValue'),\n        <div className={styles.giftValue}>\n          {formatStarsAsIcon(lang, starsValue, { className: styles.starAmountIcon })}\n          {canManage && hasConvertOption && Boolean(starsToConvert) && (\n            <BadgeButton onClick={openConvertConfirm}>\n              {lang('GiftInfoConvert', { amount: starsToConvert }, { pluralValue: starsToConvert })}\n            </BadgeButton>\n          )}\n        </div>,\n      ]);\n\n      if (gift.availabilityTotal) {\n        tableData.push([\n          lang('GiftInfoAvailability'),\n          lang('GiftInfoAvailabilityValue', {\n            count: gift.availabilityRemains || 0,\n            total: gift.availabilityTotal,\n          }, {\n            pluralValue: gift.availabilityRemains || 0,\n          }),\n        ]);\n      }\n\n      if (gift.upgradeStars && !upgradeMsgId) {\n        tableData.push([\n          lang('GiftInfoStatus'),\n          <div className={styles.giftValue}>\n            {lang('GiftInfoStatusNonUnique')}\n          </div>,\n        ]);\n      }\n\n      if (savedGift?.message) {\n        tableData.push([\n          undefined,\n          renderTextWithEntities(savedGift.message),\n        ]);\n      }\n    }\n\n    if (isGiftUnique) {\n      const { ownerName, ownerAddress, ownerId } = gift;\n      const ownerPeer = ownerId ? selectPeer(getGlobal(), ownerId) : undefined;\n      const {\n        model, backdrop, pattern, originalDetails,\n      } = giftAttributes || {};\n\n      if (ownerAddress) {\n        tableData.push([\n          lang('GiftInfoOwner'),\n          <span\n            className={styles.ownerAddress}\n            onClick={() => {\n              copyTextToClipboard(ownerAddress);\n              showNotification({\n                message: { key: 'WalletAddressCopied' },\n                icon: 'copy',\n              });\n            }}\n          >\n            {ownerAddress}\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </span>,\n        ]);\n      } else if (ownerPeer || ownerName) {\n        tableData.push([\n          lang('GiftInfoOwner'),\n          ownerId ? { chatId: ownerId, withEmojiStatus: true } : ownerName || '',\n        ]);\n      }\n\n      if (model) {\n        tableData.push([\n          lang('GiftAttributeModel'),\n          <span className={styles.uniqueAttribute}>\n            <span\n              className={styles.attributeName}\n              onClick={handleModelClick}\n            >\n              {model.name}\n            </span>\n            <BadgeButton>{formatPercent(model.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      if (backdrop) {\n        tableData.push([\n          lang('GiftAttributeBackdrop'),\n          <span className={styles.uniqueAttribute}>\n            <span\n              className={styles.attributeName}\n              onClick={handleBackdropClick}\n            >\n              {backdrop.name}\n            </span>\n            <BadgeButton>{formatPercent(backdrop.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      if (pattern) {\n        tableData.push([\n          lang('GiftAttributeSymbol'),\n          <span className={styles.uniqueAttribute}>\n            <span\n              className={styles.attributeName}\n              onClick={handleSymbolClick}\n            >\n              {pattern.name}\n            </span>\n            <BadgeButton>{formatPercent(pattern.rarityPercent)}</BadgeButton>\n          </span>,\n        ]);\n      }\n\n      tableData.push([\n        lang('GiftInfoAvailability'),\n        lang('GiftInfoIssued', {\n          issued: gift.issuedCount,\n          total: gift.totalCount,\n        }),\n      ]);\n\n      if (gift.valueAmount && gift.valueCurrency) {\n        tableData.push([\n          lang('GiftInfoValue'),\n          <span className={styles.uniqueValue}>\n            ~\n            {' '}\n            {formatCurrencyAsString(\n              gift.valueAmount,\n              gift.valueCurrency,\n              lang.code,\n            )}\n            <BadgeButton onClick={handleOpenValueModal}>\n              {lang('GiftInfoValueLinkMore')}\n            </BadgeButton>\n          </span>,\n        ]);\n      }\n\n      if (originalDetails) {\n        const {\n          date, recipientId, message, senderId,\n        } = originalDetails;\n        const global = getGlobal(); // Peer titles do not need to be reactive\n\n        const openChat = (id: string) => {\n          openChatWithInfo({ id });\n          closeGiftInfoModal();\n        };\n\n        const recipient = selectPeer(global, recipientId)!;\n        const sender = senderId ? selectPeer(global, senderId) : undefined;\n\n        const formattedDate = formatDateTimeToString(date * 1000, lang.code, true);\n        const recipientLink = (\n\n          <Link onClick={() => openChat(recipientId)} isPrimary>\n            {getPeerTitle(lang, recipient)}\n          </Link>\n        );\n\n        let text: TeactNode | undefined;\n        if (!sender || senderId === recipientId) {\n          text = message ? lang('GiftInfoPeerOriginalInfoText', {\n            peer: recipientLink,\n            text: renderTextWithEntities(message),\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          }) : lang('GiftInfoPeerOriginalInfo', {\n            peer: recipientLink,\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          });\n        } else {\n          const senderLink = (\n\n            <Link onClick={() => openChat(sender.id)} isPrimary>\n              {getPeerTitle(lang, sender)}\n            </Link>\n          );\n          text = message ? lang('GiftInfoPeerOriginalInfoTextSender', {\n            peer: recipientLink,\n            sender: senderLink,\n            text: renderTextWithEntities(message),\n            date: formattedDate,\n          }, {\n            withNodes: true,\n          }) : lang('GiftInfoPeerOriginalInfoSender', {\n            peer: recipientLink,\n            date: formattedDate,\n            sender: senderLink,\n          }, {\n            withNodes: true,\n          });\n        }\n\n        tableData.push([\n          undefined,\n          <span>{text}</span>,\n        ]);\n      }\n    }\n\n    const tonLink = tonExplorerUrl && isGiftUnique && gift.giftAddress && (\n      `${tonExplorerUrl}${gift.giftAddress}`\n    );\n\n    const footer = (\n      <div className={styles.footer}>\n        {(canManage || tonLink || canBuyGift) && (\n          <div className={styles.footerDescription}>\n            {tonLink && (\n              <div>\n                {lang('GiftInfoTonText', {\n                  link: <SafeLink url={tonLink} shouldSkipModal text={lang('GiftInfoTonLinkText')} />,\n                }, { withNodes: true })}\n              </div>\n            )}\n            {canManage && (\n              <div>\n                {lang(`GiftInfo${isTargetChat ? 'Channel' : ''}${isUnsaved ? 'Hidden' : 'Saved'}`, {\n                  link: (\n                    <Link isPrimary onClick={handleTriggerVisibility}>\n                      {lang(`GiftInfoSaved${isUnsaved ? 'Show' : 'Hide'}`)}\n                    </Link>\n                  ),\n                }, {\n                  withNodes: true,\n                })}\n              </div>\n            )}\n            {!canBuyGift && isVisibleForMe && (\n              <div>\n                {lang('GiftInfoSenderHidden')}\n              </div>\n            )}\n            {canBuyGift && giftOwnerTitle && (\n              <div>\n                {lang('GiftInfoBuyGift', {\n                  user: giftOwnerTitle,\n                }, { withNodes: true })}\n              </div>\n            )}\n          </div>\n        )}\n        {renderFooterButton()}\n      </div>\n    );\n\n    return {\n      modalHeader: isGiftUnique ? uniqueGiftModalHeader : undefined,\n      header: isGiftUnique ? uniqueGiftHeader : regularHeader,\n      tableData,\n      footer,\n    };\n  }, [\n    typeGift, savedGift, renderingTargetPeer, giftSticker, lang,\n    canManage, hasConvertOption, isSender, oldLang, tonExplorerUrl,\n    gift, giftAttributes, renderFooterButton, isTargetChat,\n    SettingsMenuButton, isGiftUnique, saleDateInfo,\n    canBuyGift, giftOwnerTitle, resellPrice, giftSubtitle,\n    releasedByPeer, handleSymbolClick, handleBackdropClick, handleModelClick,\n  ]);\n\n  const getRootElement = useLastCallback(() => uniqueGiftHeaderRef.current);\n  const getTriggerElement = useLastCallback(() => splitButtonRef.current);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const uniqueGiftContextMenu = contextMenuAnchor && typeGift && (\n    <Menu\n      ref={menuRef}\n      isOpen={isContextMenuOpen}\n      anchor={contextMenuAnchor}\n      className=\"gift-context-menu with-menu-transitions\"\n      autoClose\n      withPortal\n      onClose={handleContextMenuClose}\n      onCloseAnimationEnd={handleContextMenuHide}\n      positionX=\"right\"\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n    >\n      <GiftMenuItems\n        peerId={renderingModal!.peerId!}\n        gift={typeGift}\n        canManage={canManage}\n        collectibleEmojiStatuses={collectibleEmojiStatuses}\n        currentUserEmojiStatus={currentUserEmojiStatus}\n      />\n    </Menu>\n  );\n\n  return (\n    <>\n      <TableInfoModal\n        isOpen={isOpen}\n        modalHeader={modalData?.modalHeader}\n        header={modalData?.header}\n        hasBackdrop={isGiftUnique}\n        tableData={modalData?.tableData}\n        footer={modalData?.footer}\n        className={styles.modal}\n        contentClassName={styles.modalContent}\n        onClose={handleClose}\n        withBalanceBar={Boolean(canBuyGift)}\n        currencyInBalanceBar={confirmPrice?.currency}\n        isLowStackPriority\n      />\n      {uniqueGiftContextMenu}\n      {uniqueGift && currentUser && Boolean(confirmPrice) && (\n        <ConfirmDialog\n          isOpen={isConfirmModalOpen}\n          noDefaultTitle\n          onClose={closeConfirmModal}\n          confirmLabel={lang('ButtonBuyGift', {\n            stars: confirmPrice?.currency === TON_CURRENCY_CODE\n              ? formatTonAsIcon(lang, confirmPrice.amount, { shouldConvertFromNanos: true })\n              : formatStarsAsIcon(lang, confirmPrice.amount, { asFont: true }),\n          }, { withNodes: true })}\n          confirmHandler={handleConfirmBuyGift}\n        >\n\n          <GiftTransferPreview\n            peer={recipientPeer || currentUser}\n            gift={uniqueGift}\n          />\n          {!recipientPeer\n            && (\n              <p>\n                {lang('GiftBuyConfirmDescription', {\n                  gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                  stars: confirmPrice?.currency === TON_CURRENCY_CODE\n                    ? formatTonAsText(lang, confirmPrice.amount, true)\n                    : formatStarsAsText(lang, confirmPrice.amount),\n                }, {\n                  withNodes: true,\n                  withMarkdown: true,\n                })}\n              </p>\n            )}\n          {recipientPeer\n            && (\n              <p>\n                {lang('GiftBuyForPeerConfirmDescription', {\n                  gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                  stars: confirmPrice?.currency === TON_CURRENCY_CODE\n                    ? formatTonAsText(lang, confirmPrice.amount, true)\n                    : formatStarsAsText(lang, confirmPrice.amount),\n                  peer: getPeerTitle(lang, recipientPeer),\n                }, {\n                  withNodes: true,\n                  withMarkdown: true,\n                })}\n              </p>\n            )}\n          {!uniqueGift.resaleTonOnly && (\n            <>\n              <Checkbox\n                className={styles.checkBox}\n                label={lang('LabelPayInTON')}\n                checked={shouldPayInTon}\n                onCheck={setShouldPayInTon}\n              />\n\n              <div className={styles.checkBoxDescription}>\n                {lang('DescriptionPayInTON')}\n              </div>\n            </>\n          )}\n        </ConfirmDialog>\n      )}\n      {savedGift && (\n        <ConfirmDialog\n          isOpen={isConvertConfirmOpen}\n          onClose={closeConvertConfirm}\n          confirmHandler={handleConvertToStars}\n          title={lang('GiftInfoConvertTitle')}\n        >\n          <div>\n            {lang('GiftInfoPeerConvertDescription', {\n              amount: formatStarsAsText(lang, savedGift.starsToConvert!),\n              peer: getPeerTitle(lang, renderingFromPeer!)!,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            })}\n          </div>\n          {hasConvertOption && (\n            <div>\n              {lang('GiftInfoConvertDescriptionPeriod', {\n                count: conversionLeft,\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n                pluralValue: conversionLeft,\n              })}\n            </div>\n          )}\n          <div>{lang('GiftInfoConvertDescription2')}</div>\n        </ConfirmDialog>\n      )}\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): Complete<StateProps> => {\n    const typeGift = modal?.gift;\n    const isSavedGift = typeGift && 'gift' in typeGift;\n    const currentUserId = global.currentUserId;\n\n    const fromId = isSavedGift && typeGift.fromId;\n    const fromPeer = fromId ? selectPeer(global, fromId) : undefined;\n    const targetPeer = modal?.peerId ? selectPeer(global, modal.peerId) : undefined;\n    const chat = targetPeer && isApiPeerChat(targetPeer) ? targetPeer : undefined;\n    const hasAdminRights = chat && getHasAdminRight(chat, 'postMessages');\n    const currentUser = selectUser(global, currentUserId!);\n    const recipientPeer = modal?.recipientId && currentUserId !== modal.recipientId\n      ? selectPeer(global, modal.recipientId) : undefined;\n    const currentUserEmojiStatus = currentUser?.emojiStatus;\n    const collectibleEmojiStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    const gift = isSavedGift ? typeGift.gift : typeGift;\n    const releasedByPeerId = gift?.type === 'starGiftUnique' && gift.releasedByPeerId;\n    const releasedByPeer = releasedByPeerId ? selectPeer(global, releasedByPeerId) : undefined;\n\n    return {\n      fromPeer,\n      targetPeer,\n      releasedByPeer,\n      currentUserId,\n      starGiftMaxConvertPeriod: global.appConfig.starGiftMaxConvertPeriod,\n      tonExplorerUrl: global.appConfig.tonExplorerUrl,\n      hasAdminRights,\n      currentUserEmojiStatus,\n      collectibleEmojiStatuses,\n      currentUser,\n      recipientPeer,\n    };\n  },\n)(GiftInfoModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"v4GJBsdC\",\"sticker\":\"lJodRD0R\",\"description\":\"VjWaO8un\",\"initialPrice\":\"K7zsAhVt\",\"starIcon\":\"Xw91xwpe\",\"footer\":\"OJDo2xUd\",\"footerSticker\":\"hspYTy7V\"};","import type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { TabState } from '../../../../global/types';\n\nimport { formatDateToString } from '../../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport { formatStarsAsIcon } from '../../../../util/localization/format';\nimport { getGiftAttributes } from '../../../common/helpers/gifts';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\n\nimport styles from './GiftInfoValueModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftInfoValueModal'];\n};\n\nconst HEADER_STICKER_SIZE = 120;\nconst FOOTER_STICKER_SIZE = 24;\n\nconst GiftInfoValueModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { closeGiftInfoValueModal, openUrl, openGiftInMarket } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const handleOpenFragment = useLastCallback(() => {\n    if (modal?.valueInfo.fragmentListedUrl) {\n      openUrl({ url: modal.valueInfo.fragmentListedUrl });\n    }\n  });\n\n  const handleOpenTelegramMarket = useLastCallback(() => {\n    if (modal?.gift) {\n      openGiftInMarket({ gift: modal.gift });\n    }\n  });\n\n  const modalData = useMemo(() => {\n    if (!renderingModal) return undefined;\n\n    const { gift, valueInfo } = renderingModal;\n    const giftAttributes = getGiftAttributes(gift);\n\n    if (!giftAttributes) return undefined;\n\n    const header = (\n      <div className={styles.header}>\n        <AnimatedIconFromSticker\n          className={styles.sticker}\n          sticker={giftAttributes.model!.sticker}\n          size={HEADER_STICKER_SIZE}\n        />\n        <Button\n          pill\n          size=\"tiny\"\n          fluid\n          nonInteractive\n        >\n          {formatCurrencyAsString(valueInfo.value, valueInfo.currency, lang.code)}\n        </Button>\n        <div className={styles.description}>\n          {lang('GiftValueDescription', { giftName: gift.title }, {\n            withMarkdown: true,\n            withNodes: true,\n          })}\n        </div>\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      lang('GiftValueTitleInitialSale'),\n      formatDateToString(valueInfo.initialSaleDate * 1000, lang.code),\n    ]);\n\n    tableData.push([\n      lang('GiftValueTitleInitialPrice'),\n      <span className={styles.initialPrice}>\n        {formatStarsAsIcon(lang, valueInfo.initialSaleStars, { className: styles.starIcon })}\n        {' (~ '}\n        {formatCurrencyAsString(valueInfo.initialSalePrice, valueInfo.currency, lang.code)}\n        )\n      </span>,\n    ]);\n\n    if (valueInfo.lastSaleDate) {\n      tableData.push([\n        lang('GiftValueTitleLastSale'),\n        formatDateToString(valueInfo.lastSaleDate * 1000, lang.code),\n      ]);\n    }\n\n    if (valueInfo.lastSalePrice) {\n      tableData.push([\n        lang('GiftValueTitleLastPrice'),\n        formatCurrencyAsString(valueInfo.lastSalePrice, valueInfo.currency, lang.code),\n      ]);\n    }\n\n    if (valueInfo.floorPrice) {\n      tableData.push([\n        lang('GiftValueTitleMinimumPrice'),\n        formatCurrencyAsString(valueInfo.floorPrice, valueInfo.currency, lang.code),\n      ]);\n    }\n\n    if (valueInfo.averagePrice) {\n      tableData.push([\n        lang('GiftValueTitleAveragePrice'),\n        formatCurrencyAsString(valueInfo.averagePrice, valueInfo.currency, lang.code),\n      ]);\n    }\n\n    const canBuyOnFragment = Boolean(valueInfo.fragmentListedUrl && valueInfo.fragmentListedCount);\n    const canBuyOnTelegram = Boolean(valueInfo.listedCount && valueInfo.listedCount);\n    const hasFooter = canBuyOnFragment || canBuyOnTelegram;\n\n    const footer = hasFooter && (\n      <div className={styles.footer}>\n        {canBuyOnFragment && (\n          <Button\n            isText\n            onClick={handleOpenFragment}\n            noForcedUpperCase\n            size=\"tiny\"\n          >\n            {lang.number(valueInfo.fragmentListedCount!)}\n            <AnimatedIconFromSticker\n              className={styles.footerSticker}\n              sticker={giftAttributes.model!.sticker}\n              size={FOOTER_STICKER_SIZE}\n            />\n            {lang('GiftValueForSaleOnFragment')}\n          </Button>\n        )}\n\n        {canBuyOnTelegram && (\n          <Button\n            isText\n            noForcedUpperCase\n            size=\"tiny\"\n            onClick={handleOpenTelegramMarket}\n          >\n            {lang.number(valueInfo.listedCount!)}\n            <AnimatedIconFromSticker\n              className={styles.footerSticker}\n              sticker={giftAttributes.model!.sticker}\n              size={FOOTER_STICKER_SIZE}\n            />\n            {lang('GiftValueForSaleOnTelegram')}\n          </Button>\n        )}\n      </div>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, renderingModal, handleOpenFragment, handleOpenTelegramMarket]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      onClose={closeGiftInfoValueModal}\n      header={modalData.header}\n      tableData={modalData.tableData}\n      footer={modalData.footer}\n    />\n  );\n};\n\nexport default memo(GiftInfoValueModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBoxDescription\":\"pWjQiY4m\",\"inputPriceDescription\":\"SGFmA4kL\",\"checkBox\":\"yt_nODdj\",\"descriptionPrice\":\"r9R0VR_w\",\"inputPrice\":\"ElDo1Bru\"};","import {\n  memo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { TabState } from '../../../../global/types';\n\nimport { convertTonFromNanos, convertTonToNanos } from '../../../../util/formatCurrency';\nimport { convertTonToUsd, formatCurrencyAsString } from '../../../../util/formatCurrency';\nimport { formatStarsAsIcon, formatStarsAsText, formatTonAsIcon,\n  formatTonAsText } from '../../../../util/localization/format';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Checkbox from '../../../ui/Checkbox';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\nimport styles from './GiftResalePriceComposerModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftResalePriceComposerModal'];\n};\n\nexport type StateProps = {\n  starsStargiftResaleCommissionPermille?: number;\n  starsStargiftResaleAmountMin: number;\n  starsStargiftResaleAmountMax?: number;\n  starsUsdWithdrawRate?: number;\n  tonStargiftResaleCommissionPermille?: number;\n  tonStargiftResaleAmountMin: number;\n  tonStargiftResaleAmountMax?: number;\n  tonUsdRate?: number;\n};\n\nconst GiftResalePriceComposerModal = ({\n  modal, starsStargiftResaleCommissionPermille,\n  starsStargiftResaleAmountMin, starsStargiftResaleAmountMax, starsUsdWithdrawRate,\n  tonStargiftResaleCommissionPermille, tonStargiftResaleAmountMin, tonStargiftResaleAmountMax, tonUsdRate,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftResalePriceComposerModal,\n    closeGiftInfoModal,\n    updateStarGiftPrice,\n    showNotification,\n  } = getActions();\n  const isOpen = Boolean(modal);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [isPriceInTon, setIsPriceInTon] = useState(false);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const { gift: typeGift } = renderingModal || {};\n  const isSavedGift = typeGift && 'gift' in typeGift;\n  const savedGift = isSavedGift ? typeGift : undefined;\n  const hasPrice = Boolean(price);\n\n  const lang = useLang();\n\n  const handleChangePrice = useLastCallback((e) => {\n    const value = e.target.value;\n    const number = parseFloat(value);\n    const maxAmount = isPriceInTon ? tonStargiftResaleAmountMax : starsStargiftResaleAmountMax;\n    const result = value === '' || Number.isNaN(number) ? undefined\n      : maxAmount ? Math.min(number, maxAmount) : number;\n    setPrice(result);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeGiftResalePriceComposerModal();\n  });\n\n  const handleSellGift = useLastCallback(() => {\n    if (!savedGift || savedGift.gift.type !== 'starGiftUnique' || !savedGift.inputGift || !price) return;\n    closeGiftResalePriceComposerModal();\n    closeGiftInfoModal();\n    updateStarGiftPrice(\n      {\n        gift: savedGift.inputGift,\n        price: {\n          currency: isPriceInTon ? 'TON' : 'XTR',\n          amount: isPriceInTon ? convertTonToNanos(price) : price,\n          nanos: 0,\n        },\n      });\n    showNotification({\n      icon: 'sell-outline',\n      message: {\n        key: 'NotificationGiftIsSale',\n        variables: {\n          gift: lang('GiftUnique', { title: savedGift.gift.title, number: savedGift.gift.number }),\n        },\n      },\n    });\n  });\n  const commission = isPriceInTon ? tonStargiftResaleCommissionPermille : starsStargiftResaleCommissionPermille;\n  const minAmount = isPriceInTon ? tonStargiftResaleAmountMin : starsStargiftResaleAmountMin;\n  const isPriceCorrect = hasPrice && price >= minAmount;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={isPriceInTon ? lang('PriceInTON') : lang('PriceInStars')}\n      hasCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      <div className={styles.inputPrice}>\n        <InputText\n          label={isPriceInTon ? lang('EnterPriceInTon') : lang('EnterPriceInStars')}\n          onChange={handleChangePrice}\n          value={price?.toString()}\n          inputMode=\"numeric\"\n          tabIndex={0}\n          teactExperimentControlled={!isPriceInTon}\n        />\n      </div>\n\n      <div className={styles.inputPriceDescription}>\n        <span>\n          {!isPriceCorrect && Boolean(commission) && lang('DescriptionComposerGiftMinimumPrice', {\n            stars: isPriceInTon ? formatTonAsText(lang, minAmount) : formatStarsAsText(lang, minAmount),\n          }, {\n            withMarkdown: true,\n            withNodes: true,\n          })}\n          {isPriceCorrect && (() => {\n            const priceWithCommission = commission ? Number((price * commission).toFixed()) : price;\n            return lang('DescriptionComposerGiftResalePrice',\n              {\n                stars: isPriceInTon\n                  ? formatTonAsText(lang, priceWithCommission)\n                  : formatStarsAsText(lang, priceWithCommission),\n              },\n              {\n                withMarkdown: true,\n                withNodes: true,\n              });\n          })()}\n        </span>\n\n        {isPriceCorrect && Boolean(isPriceInTon ? tonUsdRate : starsUsdWithdrawRate) && (\n          <span className={styles.descriptionPrice}>\n            {`≈ ${formatCurrencyAsString(\n              isPriceInTon ? convertTonToUsd(price, tonUsdRate!) : price * starsUsdWithdrawRate!,\n              'USD',\n              lang.code,\n            )}`}\n          </span>\n        )}\n      </div>\n\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('OnlyAcceptTON')}\n        checked={isPriceInTon}\n        onCheck={setIsPriceInTon}\n      />\n\n      <div className={styles.checkBoxDescription}>\n        {lang('OnlyAcceptTONDescription')}\n      </div>\n\n      <Button noForcedUpperCase disabled={!isPriceCorrect} onClick={handleSellGift}>\n        {isPriceCorrect && lang('ButtonSellGift', {\n          stars: isPriceInTon ? formatTonAsIcon(lang, price)\n            : formatStarsAsIcon(lang, price, { asFont: true }),\n        }, { withNodes: true })}\n        {!isPriceCorrect && lang('Sell')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const configPermille = global.appConfig.starsStargiftResaleCommissionPermille;\n    const starsStargiftResaleCommissionPermille = configPermille ? (configPermille / 1000) : undefined;\n    const starsStargiftResaleAmountMin = global.appConfig.starsStargiftResaleAmountMin || 0;\n    const starsStargiftResaleAmountMax = global.appConfig.starsStargiftResaleAmountMax;\n\n    const starsUsdWithdrawRateX1000 = global.appConfig.starsUsdWithdrawRateX1000;\n    const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n\n    const tonConfigPermille = global.appConfig.tonStargiftResaleCommissionPermille;\n    const tonStargiftResaleCommissionPermille = tonConfigPermille ? (tonConfigPermille / 1000) : 0;\n    const tonStargiftResaleAmountMin = convertTonFromNanos(global.appConfig.tonStargiftResaleAmountMin || 0);\n    const maxTonFromConfig = global.appConfig.tonStargiftResaleAmountMax;\n    const tonStargiftResaleAmountMax = maxTonFromConfig && convertTonFromNanos(maxTonFromConfig);\n\n    const tonUsdRate = global.appConfig.tonUsdRate;\n\n    return {\n      starsStargiftResaleCommissionPermille,\n      starsStargiftResaleAmountMin,\n      starsStargiftResaleAmountMax,\n      starsUsdWithdrawRate,\n      tonStargiftResaleCommissionPermille,\n      tonStargiftResaleAmountMin,\n      tonStargiftResaleAmountMax,\n      tonUsdRate,\n    };\n  },\n)(GiftResalePriceComposerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"EWaVCxY4\",\"footerButton\":\"_Dt6RSQV\"};","import {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributePattern,\n  ApiStarGiftRegular,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport { getStickerMediaHash } from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectPeer } from '../../../../global/selectors';\nimport { formatStarsAsIcon } from '../../../../util/localization/format';\nimport { fetch } from '../../../../util/mediaLoader';\n\nimport useInterval from '../../../../hooks/schedulers/useInterval';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Checkbox from '../../../ui/Checkbox';\nimport TableAboutModal, { type TableAboutData } from '../../common/TableAboutModal';\nimport UniqueGiftHeader from '../UniqueGiftHeader';\n\nimport styles from './GiftUpgradeModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftUpgradeModal'];\n};\n\ntype StateProps = {\n  recipient?: ApiPeer;\n};\n\ntype Attributes = {\n  model: ApiStarGiftAttributeModel;\n  pattern: ApiStarGiftAttributePattern;\n  backdrop: ApiStarGiftAttributeBackdrop;\n};\n\nconst PREVIEW_UPDATE_INTERVAL = 3000;\n\nconst GiftUpgradeModal = ({ modal, recipient }: OwnProps & StateProps) => {\n  const { closeGiftUpgradeModal, upgradeGift } = getActions();\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingRecipient = useCurrentOrPrev(recipient);\n  const [shouldKeepOriginalDetails, setShouldKeepOriginalDetails] = useState(false);\n\n  const [previewAttributes, setPreviewAttributes] = useState<Attributes | undefined>();\n\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => closeGiftUpgradeModal());\n\n  const handleUpgrade = useLastCallback(() => {\n    const gift = renderingModal?.gift;\n    if (!gift?.inputGift) return;\n\n    upgradeGift({\n      gift: gift.inputGift,\n      shouldKeepOriginalDetails,\n      upgradeStars: !gift.alreadyPaidUpgradeStars ? (gift.gift as ApiStarGiftRegular).upgradeStars : undefined,\n    });\n    handleClose();\n  });\n\n  const updatePreviewAttributes = useLastCallback(() => {\n    if (!renderingModal?.sampleAttributes) return;\n    setPreviewAttributes(getRandomAttributes(renderingModal.sampleAttributes, previewAttributes));\n  });\n\n  useInterval(updatePreviewAttributes, isOpen ? PREVIEW_UPDATE_INTERVAL : undefined, true);\n\n  useEffect(() => {\n    if (isOpen && renderingModal?.sampleAttributes) {\n      updatePreviewAttributes();\n    }\n  }, [isOpen, renderingModal?.sampleAttributes]);\n\n  // Preload stickers and patterns\n  useEffect(() => {\n    const attributes = renderingModal?.sampleAttributes;\n    if (!attributes) return;\n    const patternStickers = attributes.filter((attr): attr is ApiStarGiftAttributeModel => attr.type === 'pattern')\n      .map((attr) => attr.sticker);\n    const modelStickers = attributes.filter((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')\n      .map((attr) => attr.sticker);\n\n    const mediaHashes = [...patternStickers, ...modelStickers].map((sticker) => getStickerMediaHash(sticker, 'full'));\n    mediaHashes.forEach((hash) => {\n      fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n  }, [renderingModal?.sampleAttributes]);\n\n  const modalData = useMemo(() => {\n    if (!previewAttributes || !isOpen) {\n      return undefined;\n    }\n\n    const gift = renderingModal?.gift;\n\n    const listItemData = [\n      ['diamond', lang('GiftUpgradeUniqueTitle'), lang('GiftUpgradeUniqueDescription')],\n      ['trade', lang('GiftUpgradeTransferableTitle'), lang('GiftUpgradeTransferableDescription')],\n      ['auction', lang('GiftUpgradeTradeableTitle'), lang('GiftUpgradeTradeableDescription')],\n    ] satisfies TableAboutData;\n\n    const subtitle = renderingRecipient\n      ? lang('GiftPeerUpgradeText', { peer: getPeerTitle(lang, renderingRecipient) })\n      : lang('GiftUpgradeTextOwn');\n\n    const header = (\n      <UniqueGiftHeader\n        modelAttribute={previewAttributes.model}\n        backdropAttribute={previewAttributes.backdrop}\n        patternAttribute={previewAttributes.pattern}\n        title={lang('GiftUpgradeTitle')}\n        subtitle={subtitle}\n      />\n    );\n\n    const footer = (\n      <div className={styles.footer}>\n        {!gift && (\n          <Button className={styles.footerButton} onClick={handleClose}>\n            {lang('OK')}\n          </Button>\n        )}\n        {gift && (\n          <>\n            <Checkbox\n              label={lang('GiftUpgradeKeepDetails')}\n              onCheck={setShouldKeepOriginalDetails}\n              checked={shouldKeepOriginalDetails}\n            />\n            <Button className={styles.footerButton} isShiny onClick={handleUpgrade}>\n              {gift.alreadyPaidUpgradeStars\n                ? lang('GeneralConfirm')\n                : lang('GiftUpgradeButton', {\n                  amount: formatStarsAsIcon(lang, (gift.gift as ApiStarGiftRegular).upgradeStars!, { asFont: true }),\n                }, { withNodes: true })}\n            </Button>\n          </>\n        )}\n      </div>\n    );\n\n    return {\n      listItemData,\n      header,\n      footer,\n    };\n  }, [previewAttributes, isOpen, lang, renderingRecipient, renderingModal?.gift, shouldKeepOriginalDetails]);\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={modalData?.header}\n      footer={modalData?.footer}\n      listItemData={modalData?.listItemData}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): Complete<StateProps> => {\n    const recipientId = modal?.recipientId;\n    const recipient = recipientId ? selectPeer(global, recipientId) : undefined;\n\n    return {\n      recipient,\n    };\n  },\n)(GiftUpgradeModal));\n\nfunction getRandomAttributes(list: ApiStarGiftAttribute[], previousSelection?: Attributes): Attributes {\n  const models = list.filter((attr): attr is ApiStarGiftAttributeModel => (\n    attr.type === 'model' && attr.name !== previousSelection?.model.name\n  ));\n  const patterns = list.filter((attr): attr is ApiStarGiftAttributePattern => (\n    attr.type === 'pattern' && attr.name !== previousSelection?.pattern.name\n  ));\n  const backdrops = list.filter((attr): attr is ApiStarGiftAttributeBackdrop => (\n    attr.type === 'backdrop' && attr.name !== previousSelection?.backdrop.name\n  ));\n\n  const randomModel = models[Math.floor(Math.random() * models.length)];\n  const randomPattern = patterns[Math.floor(Math.random() * patterns.length)];\n  const randomBackdrop = backdrops[Math.floor(Math.random() * backdrops.length)];\n\n  return {\n    model: randomModel,\n    pattern: randomPattern,\n    backdrop: randomBackdrop,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"qL0cHbwS\",\"profileBlock\":\"t18QCmAb\",\"titleContainer\":\"q8w7tnmR\",\"radialPattern\":\"_1RfhkfB\",\"lockIcon\":\"jiPObOWv\",\"avatar\":\"JK2zOWA7\",\"userTitle\":\"lxxbgNCl\",\"status\":\"MLMdxkUg\",\"giftTitle\":\"wxg_5ou_\",\"infoDescription\":\"KSCLIMZm\",\"footer\":\"VDrvalBo\"};","import { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { selectIsCurrentUserPremium, selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport buildStyle from '../../../../util/buildStyle';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useCustomEmoji from '../../../common/hooks/useCustomEmoji';\n\nimport Avatar from '../../../common/Avatar';\nimport FullNameTitle from '../../../common/FullNameTitle';\nimport Icon from '../../../common/icons/Icon';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport Button from '../../../ui/Button';\nimport TableAboutModal, { type TableAboutData } from '../../common/TableAboutModal';\n\nimport styles from './GiftStatusInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftStatusInfoModal'];\n};\n\ntype StateProps = {\n  currentUser: ApiUser;\n  isCurrentUserPremium?: boolean;\n};\n\nconst GiftStatusInfoModal = ({\n  modal,\n  currentUser,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftStatusInfoModal,\n    setEmojiStatus,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const { emojiStatus } = renderingModal || {};\n\n  const subtitleColor = emojiStatus?.textColor;\n\n  const patternIcon = useCustomEmoji(emojiStatus?.patternDocumentId);\n\n  const handleClose = useLastCallback(() => {\n    closeGiftStatusInfoModal();\n  });\n\n  const onWearClick = useLastCallback(() => {\n    if (emojiStatus) {\n      setEmojiStatus({ emojiStatus });\n    }\n    closeGiftStatusInfoModal();\n  });\n\n  const radialPatternBackdrop = useMemo(() => {\n    if (!emojiStatus || !isOpen) return undefined;\n\n    const backdropColors = [emojiStatus.centerColor, emojiStatus.edgeColor];\n    const patternColor = emojiStatus.patternColor;\n\n    return (\n      <RadialPatternBackground\n        className={styles.radialPattern}\n        backgroundColors={backdropColors}\n        patternColor={patternColor}\n        patternIcon={patternIcon.customEmoji}\n      />\n    );\n  }, [emojiStatus, isOpen, patternIcon]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    return {\n      ...currentUser,\n      emojiStatus,\n    } satisfies ApiUser;\n  }, [currentUser, emojiStatus]);\n\n  const header = useMemo(() => {\n    return (\n      <div className={styles.header}>\n        <div\n          className={buildClassName(styles.profileBlock)}\n          style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}\n        >\n\n          {radialPatternBackdrop}\n          <Avatar peer={mockPeerWithStatus} size=\"jumbo\" className={styles.avatar} />\n          <FullNameTitle\n            peer={mockPeerWithStatus}\n            className={styles.userTitle}\n            withEmojiStatus\n            noFake\n            noVerified\n            statusSparklesColor={subtitleColor}\n          />\n          <p className={styles.status} style={buildStyle(subtitleColor && `color: ${subtitleColor}`)}>\n            {lang('Online')}\n          </p>\n        </div>\n        <div className={styles.titleContainer}>\n          <div className={styles.giftTitle}>\n            {\n              lang('UniqueStatusWearTitle', {\n                gift: mockPeerWithStatus?.emojiStatus?.title,\n              })\n            }\n          </div>\n          <div className={styles.infoDescription}>\n            {\n              lang('UniqueStatusBenefitsDescription')\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }, [subtitleColor, radialPatternBackdrop, mockPeerWithStatus, lang]);\n\n  const listItemData = [\n    ['radial-badge', lang('UniqueStatusBadgeBenefitTitle'), lang('UniqueStatusBadgeDescription')],\n    ['unique-profile', lang('UniqueStatusProfileDesignBenefitTitle'), lang('UniqueStatusProfileDesignDescription')],\n    ['proof-of-ownership', lang('UniqueStatusProofOfOwnershipBenefitTitle'),\n      lang('UniqueStatusProofOfOwnershipDescription')],\n  ] satisfies TableAboutData;\n\n  const footer = useMemo(() => {\n    if (!isOpen) return undefined;\n    return (\n      <div className={styles.footer}>\n        <Button\n          onClick={onWearClick}\n        >\n          {lang('UniqueStatusWearButton')}\n          {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.lockIcon} />}\n        </Button>\n      </div>\n    );\n  }, [lang, isCurrentUserPremium, isOpen]);\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={header}\n      listItemData={listItemData}\n      footer={footer}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const currentUser = selectUser(global, global.currentUserId!)!;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      currentUser,\n      isCurrentUserPremium,\n    };\n  },\n)(GiftStatusInfoModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"LQgz8Nlx\",\"giftPreview\":\"hgs0ts_O\",\"backdrop\":\"OnBhMaBw\",\"description\":\"HBxB4QPY\",\"arrow\":\"kXTOUpfb\",\"noPassword\":\"BnqLhoKr\"};","import {\n  memo,\n  useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiStarGiftUnique } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { type CustomPeer, SettingsScreens } from '../../../../types';\n\nimport { getDays } from '../../../../util/dates/units';\nimport { getServerTime } from '../../../../util/serverTime';\nimport { getGiftAttributes } from '../../../common/helpers/gifts';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Avatar from '../../../common/Avatar';\nimport Icon from '../../../common/icons/Icon';\nimport PasswordForm from '../../../common/PasswordForm';\nimport RadialPatternBackground from '../../../common/profile/RadialPatternBackground';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\n\nimport styles from './GiftWithdrawModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['giftWithdrawModal'];\n};\n\ntype StateProps = {\n  hasPassword?: boolean;\n  passwordHint?: string;\n};\n\nconst FRAGMENT_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'fragment',\n  title: '',\n  customPeerAvatarColor: '#000000',\n};\nconst GIFT_STICKER_SIZE = 4.5 * REM;\n\nconst GiftWithdrawModal = ({ modal, hasPassword, passwordHint }: OwnProps & StateProps) => {\n  const {\n    closeGiftWithdrawModal,\n    clearGiftWithdrawError,\n    closeGiftInfoModal,\n    processStarGiftWithdrawal,\n    openSettingsScreen,\n  } = getActions();\n  const isOpen = Boolean(modal);\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const lang = useLang();\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const gift = renderingModal?.gift?.gift as ApiStarGiftUnique;\n  const giftAttributes = gift && getGiftAttributes(gift);\n  const exportDelay = renderingModal?.gift?.canExportAt\n    ? Math.max(renderingModal.gift.canExportAt - getServerTime(), 0) : undefined;\n\n  const handleClose = useLastCallback(() => {\n    closeGiftWithdrawModal();\n  });\n\n  const handleSubmit = useLastCallback((password: string) => {\n    processStarGiftWithdrawal({\n      gift: renderingModal!.gift.inputGift!,\n      password,\n    });\n  });\n\n  const handleSetUpPassword = useLastCallback(() => {\n    openSettingsScreen({\n      screen: SettingsScreens.TwoFaDisabled,\n    });\n    closeGiftWithdrawModal();\n    closeGiftInfoModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={lang('GiftWithdrawTitle')}\n      hasCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {giftAttributes && (\n        <>\n          <div className={styles.header}>\n            <div className={styles.giftPreview}>\n              <RadialPatternBackground\n                className={styles.backdrop}\n                backgroundColors={[giftAttributes.backdrop!.centerColor, giftAttributes.backdrop!.edgeColor]}\n                patternColor={giftAttributes.backdrop?.patternColor}\n                patternIcon={giftAttributes.pattern?.sticker}\n              />\n              <AnimatedIconFromSticker\n                className={styles.sticker}\n                size={GIFT_STICKER_SIZE}\n                sticker={giftAttributes.model?.sticker}\n              />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar\n              peer={FRAGMENT_PEER}\n              size=\"giant\"\n              className={styles.avatar}\n            />\n          </div>\n          <p className={styles.description}>\n            {lang('GiftWithdrawDescription', {\n              gift: `${gift.title} #${gift.number}`,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n              renderTextFilters: ['br'],\n            })}\n          </p>\n        </>\n      )}\n      {Boolean(exportDelay) && (\n        <p className={styles.exportHint}>\n          {lang('GiftWithdrawWait', { days: getDays(exportDelay) }, { pluralValue: getDays(exportDelay) })}\n        </p>\n      )}\n      {!hasPassword && (\n        <>\n          <span className={styles.noPassword}>{lang('ErrorPasswordMissing')}</span>\n          <Button className=\"mt-2\" onClick={handleSetUpPassword}>{lang('SetUp2FA')}</Button>\n        </>\n      )}\n      {hasPassword && !exportDelay && (\n        <PasswordForm\n          shouldShowSubmit\n          placeholder={lang('CheckPasswordPlaceholder')}\n          error={renderingModal?.errorKey && lang.withRegular(renderingModal?.errorKey)}\n          description={lang('CheckPasswordDescription')}\n          onClearError={clearGiftWithdrawError}\n          isLoading={renderingModal?.isLoading}\n          hint={passwordHint}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isOpen}\n          onChangePasswordVisibility={setShouldShowPassword}\n          submitLabel={lang('GiftWithdrawSubmit')}\n          onSubmit={handleSubmit}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword,\n        },\n      },\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      hasPassword,\n      passwordHint,\n    };\n  },\n)(GiftWithdrawModal));\n","import {\n  getIsHeavyAnimating, useCallback, useRef, useState,\n} from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useHeavyAnimation from './useHeavyAnimation';\nimport useRunDebounced from './useRunDebounced';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useDebouncedMemo<R, D extends unknown[]>(\n  resolverFn: () => R, ms: number, dependencies: D,\n): R | undefined {\n  const [value, setValue] = useState<R>();\n  const { isFrozen, updateWhenUnfrozen } = useHeavyAnimationFreeze();\n  const runDebounced = useRunDebounced(ms, true);\n\n  useSyncEffect(() => {\n    if (isFrozen) {\n      updateWhenUnfrozen();\n      return;\n    }\n\n    runDebounced(() => {\n      setValue(resolverFn());\n    });\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...dependencies, isFrozen]);\n\n  return value;\n}\n\nfunction useHeavyAnimationFreeze() {\n  const isPending = useRef(false);\n\n  const updateWhenUnfrozen = useCallback(() => {\n    isPending.current = true;\n  }, []);\n\n  const forceUpdate = useForceUpdate();\n  const handleUnfreeze = useCallback(() => {\n    if (!isPending.current) {\n      return;\n    }\n\n    isPending.current = false;\n    forceUpdate();\n  }, [forceUpdate]);\n  useHeavyAnimation(noop, handleUnfreeze);\n\n  return {\n    isFrozen: getIsHeavyAnimating(),\n    updateWhenUnfrozen,\n  };\n}\n\nfunction noop() {\n}\n","import { useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\nimport useAsync from './useAsync';\nimport useDebouncedMemo from './useDebouncedMemo';\nimport useLastCallback from './useLastCallback';\n\nconst DEBOUNCE_TIMEOUT = 300;\n\nexport async function peerGlobalSearch(query: string) {\n  const searchResult = await callApi('searchChats', { query });\n  if (!searchResult) return undefined;\n\n  const ids = [...searchResult.accountResultIds, ...searchResult.globalResultIds];\n\n  return ids;\n}\n\nexport function prepareChatMemberSearch(chat: ApiChat) {\n  return async (query: string) => {\n    const searchResult = await callApi('fetchMembers', {\n      chat,\n      memberFilter: 'search',\n      query,\n    });\n\n    return searchResult?.members?.map((member) => member.userId) || [];\n  };\n}\n\nexport default function usePeerSearch({\n  query,\n  queryFn = peerGlobalSearch,\n  defaultValue,\n  debounceTimeout = DEBOUNCE_TIMEOUT,\n  isDisabled,\n}: {\n  query: string;\n  queryFn?: (query: string) => Promise<string[] | undefined>;\n  defaultValue?: string[];\n  debounceTimeout?: number;\n  isDisabled?: boolean;\n}) {\n  const debouncedQuery = useDebouncedMemo(() => query, debounceTimeout, [query]);\n  const [currentResultsQuery, setCurrentResultsQuery] = useState<string>('');\n  const searchQuery = !query ? query : debouncedQuery; // Ignore debounce if query is empty\n  const queryCallback = useLastCallback(queryFn);\n\n  const result = useAsync(async () => {\n    if (!searchQuery || isDisabled) {\n      setCurrentResultsQuery('');\n      return Promise.resolve(defaultValue);\n    }\n\n    const answer = await queryCallback(searchQuery);\n    setCurrentResultsQuery(searchQuery);\n    return answer;\n  }, [searchQuery, defaultValue, queryCallback, isDisabled], defaultValue);\n\n  return {\n    ...result,\n    currentResultsQuery,\n  };\n}\n","import {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiStarGiftUnique } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport type { UniqueCustomPeer } from '../../../../types';\n\nimport { ALL_FOLDER_ID } from '../../../../config';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectCanGift, selectPeer } from '../../../../global/selectors';\nimport { unique } from '../../../../util/iteratees';\nimport { formatStarsAsIcon, formatStarsAsText } from '../../../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { getGiftAttributes } from '../../../common/helpers/gifts';\nimport sortChatIds from '../../../common/helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePeerSearch from '../../../../hooks/usePeerSearch';\n\nimport GiftTransferPreview from '../../../common/gift/GiftTransferPreview';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport PickerModal from '../../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['giftTransferModal'];\n};\n\ntype StateProps = {\n  contactIds?: string[];\n  currentUserId?: string;\n};\n\ntype Categories = 'withdraw';\n\nconst GiftTransferModal = ({\n  modal, contactIds, currentUserId,\n}: OwnProps & StateProps) => {\n  const { closeGiftTransferModal, openGiftWithdrawModal, transferGift } = getActions();\n  const isOpen = Boolean(modal);\n\n  const lang = useLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const uniqueGift = renderingModal?.gift?.gift as ApiStarGiftUnique;\n  const giftAttributes = uniqueGift && getGiftAttributes(uniqueGift);\n\n  const [selectedId, setSelectedId] = useState<string | undefined>();\n\n  const renderingSelectedPeerId = useCurrentOrPrev(selectedId);\n  const renderingSelectedPeer = useMemo(() => {\n    const global = getGlobal();\n    return renderingSelectedPeerId ? selectPeer(global, renderingSelectedPeerId) : undefined;\n  }, [renderingSelectedPeerId]);\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n\n  const sortedLocalIds = useMemo(() => {\n    return unique([\n      ...(contactIds || []),\n      ...(orderedChatIds || []),\n    ]);\n  }, [contactIds, orderedChatIds]);\n\n  const { result: foundIds, currentResultsQuery } = usePeerSearch({\n    query: searchQuery,\n    defaultValue: sortedLocalIds,\n  });\n\n  const isLoading = currentResultsQuery !== searchQuery;\n\n  const categories = useMemo(() => {\n    if (currentResultsQuery) return MEMO_EMPTY_ARRAY;\n\n    return [{\n      type: 'withdraw',\n      isCustomPeer: true,\n      avatarIcon: 'toncoin',\n      peerColorId: 5,\n      title: lang('GiftTransferTON'),\n    }] satisfies UniqueCustomPeer<Categories>[];\n  }, [lang, currentResultsQuery]);\n\n  const handleCategoryChange = useLastCallback((category: Categories) => {\n    if (category !== 'withdraw') return;\n\n    openGiftWithdrawModal({\n      gift: renderingModal!.gift,\n    });\n    closeGiftTransferModal();\n  });\n\n  const displayIds = useMemo(() => {\n    if (isLoading) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n\n    return sortChatIds((foundIds || []).filter((peerId) => (\n      peerId !== currentUserId && selectCanGift(global, peerId)\n    )),\n    false);\n  }, [isLoading, foundIds, currentUserId]);\n\n  const closeConfirmModal = useLastCallback(() => {\n    setSelectedId(undefined);\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      setSelectedId(undefined);\n    }\n  }, [isOpen]);\n\n  const handleTransfer = useLastCallback(() => {\n    if (!renderingModal?.gift.inputGift) return;\n    transferGift({\n      gift: renderingModal.gift.inputGift,\n      recipientId: renderingSelectedPeerId!,\n      transferStars: renderingModal.gift.transferStars,\n    });\n\n    closeConfirmModal();\n    closeGiftTransferModal();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={closeGiftTransferModal}\n      title={lang('GiftTransferTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      ignoreFreeze\n    >\n      <PeerPicker<Categories>\n        itemIds={displayIds}\n        categories={categories}\n        onSelectedCategoryChange={handleCategoryChange}\n        withDefaultPadding\n        withPeerUsernames\n        isSearchable\n        noScrollRestore\n        isLoading={isLoading}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onFilterChange={setSearchQuery}\n        onSelectedIdChange={setSelectedId}\n      />\n      {giftAttributes && (\n        <ConfirmDialog\n          isOpen={Boolean(selectedId)}\n          noDefaultTitle\n          onClose={closeConfirmModal}\n          confirmLabel={renderingModal?.gift.transferStars\n            ? lang(\n              'GiftTransferConfirmButton',\n              { amount: formatStarsAsIcon(lang, renderingModal.gift.transferStars, { asFont: true }) },\n              { withNodes: true },\n            ) : lang('GiftTransferConfirmButtonFree')}\n          confirmHandler={handleTransfer}\n        >\n          {renderingSelectedPeer && (\n            <GiftTransferPreview\n              peer={renderingSelectedPeer}\n              gift={uniqueGift}\n            />\n          )}\n          <p>\n            {renderingModal?.gift.transferStars\n              ? lang('GiftTransferConfirmDescription', {\n                gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                amount: formatStarsAsText(lang, renderingModal.gift.transferStars),\n                peer: getPeerTitle(lang, renderingSelectedPeer!),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })\n              : lang('GiftTransferConfirmDescriptionFree', {\n                gift: lang('GiftUnique', { title: uniqueGift.title, number: uniqueGift.number }),\n                peer: getPeerTitle(lang, renderingSelectedPeer!),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })}\n          </p>\n        </ConfirmDialog>\n      )}\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const { contactList, currentUserId } = global;\n\n    return {\n      contactIds: contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(GiftTransferModal));\n","import { memo, useState } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\n\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { selectUser } from '../../../../global/selectors';\nimport { formatStarsAsText } from '../../../../util/localization/format';\n\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Checkbox from '../../../ui/Checkbox';\nimport ConfirmDialog from '../../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['chatRefundModal'];\n};\n\ntype StateProps = {\n  user?: ApiUser;\n};\n\nconst ChatRefundModal = ({ modal, user }: OwnProps & StateProps) => {\n  const { closeChatRefundModal, toggleNoPaidMessagesException } = getActions();\n\n  const [shouldRefundStars, setShouldRefundStars] = useState(false);\n\n  const renderingModal = useCurrentOrPrev(modal);\n  const renderingUser = useCurrentOrPrev(user);\n\n  const { starsToRefund, userId } = renderingModal || {};\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n\n  const handleConfirmRemoveFee = useLastCallback(() => {\n    closeChatRefundModal();\n    if (!userId) return;\n\n    toggleNoPaidMessagesException ({ userId, shouldRefundCharged: shouldRefundStars });\n  });\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeChatRefundModal}\n      title={lang('RemoveFeeTitle')}\n      confirmLabel={lang('ConfirmRemoveMessageFee')}\n      confirmHandler={handleConfirmRemoveFee}\n    >\n      {lang('ConfirmDialogMessageRemoveFee', {\n        peer: renderingUser && getPeerTitle(lang, renderingUser),\n      }, {\n        withMarkdown: true,\n        withNodes: true,\n      })}\n      {\n        Boolean(starsToRefund) && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('ConfirmDialogRemoveFeeRefundStars', {\n              amount: formatStarsAsText(lang, starsToRefund),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n            checked={shouldRefundStars}\n            onCheck={setShouldRefundStars}\n          />\n        )\n      }\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { modal }): Complete<StateProps> => {\n  const user = modal?.userId ? selectUser(global, modal.userId) : undefined;\n\n  return {\n    user,\n  };\n})(ChatRefundModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { convertTonFromNanos } from '../../../util/formatCurrency';\nimport { formatStarsAsText, formatTonAsText } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['priceConfirmModal'];\n};\n\ntype StateProps = {\n  starBalance?: ApiStarsAmount;\n  tonBalance?: number;\n};\n\nconst PriceConfirmModal: FC<OwnProps & StateProps> = ({\n  modal,\n  starBalance,\n  tonBalance,\n}) => {\n  const actions = getActions();\n\n  const lang = useLang();\n\n  const handleConfirm = useCallback(() => {\n    if (!modal?.directInfo) {\n      actions.closePriceConfirmModal();\n      return;\n    }\n\n    const { currency, newAmount } = modal;\n    const isTon = currency === 'TON';\n    const currentBalance = isTon ? tonBalance : starBalance?.amount;\n\n    if (currentBalance === undefined) {\n      actions.closePriceConfirmModal();\n      return;\n    }\n\n    if (currentBalance < newAmount!) {\n      actions.openStarsBalanceModal({\n        currency: isTon ? 'TON' : 'XTR',\n        tabId: getCurrentTabId(),\n      });\n      actions.closePriceConfirmModal();\n      return;\n    }\n\n    actions.sendStarPaymentForm({\n      directInfo: modal.directInfo,\n      tabId: getCurrentTabId(),\n    });\n    actions.closePriceConfirmModal();\n  }, [modal, starBalance, tonBalance, actions]);\n\n  const handleClose = useCallback(() => {\n    actions.closePriceConfirmModal();\n  }, [actions]);\n\n  if (!modal) {\n    return undefined;\n  }\n\n  const {\n    originalAmount,\n    newAmount,\n    currency,\n  } = modal;\n\n  const isTon = currency === 'TON';\n\n  let originalAmountText: string;\n  let newAmountText: string;\n\n  if (isTon) {\n    originalAmountText = formatTonAsText(lang, convertTonFromNanos(originalAmount!));\n    newAmountText = formatTonAsText(lang, convertTonFromNanos(newAmount!));\n  } else {\n    originalAmountText = formatStarsAsText(lang, originalAmount!);\n    newAmountText = formatStarsAsText(lang, newAmount!);\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal)}\n      onClose={handleClose}\n      title={lang('PriceChanged')}\n      confirmHandler={handleConfirm}\n      confirmLabel={lang('PayNewPrice')}\n    >\n      <p>\n        {lang('PriceChangedText', {\n          originalAmount: originalAmountText,\n          newAmount: newAmountText,\n        }, {\n          withMarkdown: true,\n          withNodes: true,\n        })}\n      </p>\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const starBalance = global.stars?.balance;\n  const tonBalance = global.ton?.balance?.amount;\n\n  return {\n    starBalance,\n    tonBalance,\n  };\n},\n)(PriceConfirmModal));\n"],"names":["memo","withGlobal","global","_ref2","modal","user","forUserId","selectUser","undefined","_ref","closeStarsGiftModal","openInvoice","requestConfetti","getActions","dialogRef","useRef","isOpen","Boolean","renderingModal","useCurrentOrPrev","oldLang","useOldLang","selectedOption","setSelectedOption","useState","isHeaderHidden","setHeaderHidden","useEffect","showConfetti","useLastCallback","dialog","current","top","left","width","height","querySelector","getBoundingClientRect","withStars","isCompleted","handleClick","option","type","userId","id","stars","currency","amount","handleClose","bottomText","useMemo","parts","split","_jsx","SafeLink","url","text","Modal","className","buildClassName","styles","modalDialog","contentClassName","content","isSlim","onClose","children","_jsxs","main","onScroll","e","scrollTop","currentTarget","Button","round","size","closeButton","color","onClick","ariaLabel","Icon","name","header","hiddenHeader","starHeaderText","headerInfo","_Fragment","Avatar","peer","avatar","logoBackground","src","StarsBackground","alt","draggable","logo","StarLogo","headerText","center","renderText","formatCurrencyAsString","code","description","getPeerTitle","section","StarTopupOptionList","options","starsGiftOptions","secondaryInfo","chats","listIds","currentUserId","userIds","contactList","activeListIds","active","archivedListIds","archived","closeStarsGiftingPickerModal","openStarsGiftModal","searchQuery","setSearchQuery","displayedUserIds","usersById","getGlobal","users","byId","combinedIds","unique","filteredUserIds","filterPeersByQuery","ids","query","sortChatIds","filter","isSupport","isUserBot","isDeletedUser","SERVICE_NOTIFICATIONS_USER_ID","handleSelectedUserIdsChange","newSelectedId","length","PickerModal","title","hasCloseButton","shouldAdaptToSearch","withFixedHeight","confirmButtonText","onEnter","PeerPicker","itemIds","filterValue","filterPlaceholder","onFilterChange","isSearchable","withDefaultPadding","withStatus","onSelectedIdChange","balance","withAddButton","lang","useLang","openStarsBalanceModal","balanceBlock","balanceInfo","smallerText","balanceBottom","TON_CURRENCY_CODE","convertCurrencyFromBaseUnit","StarIcon","STARS_CURRENCY_CODE","formatStarsAmount","BadgeButton","addStarsButton","addStarsIcon","subscription","openStarsSubscriptionModal","peerId","pricing","until","isCancelled","photo","useSelector","selectPeer","selectProvidedPeer","hasExpired","Date","now","formattedDate","formatDateToString","root","preview","subscriptionStar","info","subtitle","webPhoto","status","statusEnded","statusPricing","star","formatInteger","statusPeriod","getTransactionTitle","transaction","paidMessages","count","withNodes","pluralValue","isGiftResale","isNegativeAmount","isPostsSearch","starRefCommision","formatPercent","isGiftUpgrade","extendedMedia","subscriptionPeriod","isReaction","giveawayPostId","isMyGift","isGift","starGift","customPeer","shouldUseCustomPeer","buildStarsTransactionCustomPeer","titleKey","currencyAmount","starsAmount","nanos","SingleMediaThumb","boughtMedia","index","media","video","mediaHash","getMediaHash","thumb","getMediaThumbUri","mediaBlob","useMedia","blurry","full","isTransactionPreview","Math","min","isLocked","dir","slice","reverse","map","item","i","arr","realIndex","MediaSpoiler","isVisible","thumbDataUri","thumbnail","dataUri","noOutline","openStarsTransactionModal","date","transactionPeer","selectOptionalPeer","isUniqueGift","giftSticker","getStickerFromGift","data","avatarPeer","subtitleKey","CUSTOM_PEER_PREMIUM","number","isRefund","hasFailed","isPending","previewContent","backdrop","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","uniqueGiftBackground","AnimatedIconFromSticker","sticker","play","PaidMediaThumb","amountColorClass","negative","positive","formatDateTimeToString","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS_KEYS","TRANSACTION_ITEM_CLASS","shouldForceHeight","ton","history","all","transactions","starsBalanceState","tonBalanceState","canBuyPremium","selectIsPremiumPurchaseBlocked","tonUsdRate","appConfig","tonTopupUrl","animationLevel","selectSharedSettings","closeStarsBalanceModal","loadStarsTransactions","loadStarsSubscriptions","openStarsGiftingPickerModal","openUrl","currentState","subscriptions","selectedTabIndex","setSelectedTabIndex","areBuyOptionsShown","showBuyOptions","hideBuyOptions","useFlag","originStarsPayment","originReaction","originGift","topup","shouldOpenOnBuy","ongoingTransactionAmount","form","invoice","totalAmount","subscriptionInfo","subscriptionPricing","gift","balanceNeeded","starsNeeded","starsNeededText","channel","selectChat","chatId","getChatTitle","bot","botId","getUserFullName","purpose","PAID_MESSAGES_PURPOSE","withMarkdown","shouldShowItems","shouldSuggestGifting","modalHeight","transactionCount","transactionTabs","key","tosText","handleLoadMoreTransactions","isTon","handleLoadMoreSubscriptions","openStarsGiftingPickerModalHandler","handleBuyStars","handleTonTopUp","minimal","dialogStyle","BalanceBlock","modalBalance","renderTonHeaderSection","tonAmount","ParticlesHeader","model","isDisabled","tonBalanceContainer","tonBalance","tonIconBalance","tonInUsd","convertTonToUsd","topUpButton","fluid","starButton","isText","noForcedUpperCase","topupOptions","tos","hint","list","sectionTitle","StarsSubscriptionItem","nextOffset","disabled","isLoading","loadMore","loadMoreIcon","container","lastSection","Transition","resolveTransitionName","isRtl","activeKey","renderCount","shouldRestoreHeight","transition","InfiniteScroll","onLoadMore","items","scrollContainerClosest","itemSelector","noFastList","noScrollRestoreOnTop","StarsTransactionItem","TabList","tabs","tabClassName","tab","activeTab","onSwitchTab","messageInputInvoice","inputInvoice","message","selectChatMessage","messageId","chat","isPaidMedia","paidMedia","paidMediaMessage","paidMediaChat","closeStarsPaymentModal","sendStarPaymentForm","markLoading","unmarkLoading","prevModal","usePrevious","isBotSubscription","canShowPeerItem","descriptionText","botName","starsText","areAllPhotos","every","duration","areAllVideos","mediaText","channelTitle","disclaimerText","link","inviteCustomPeer","getCustomPeerFromInvite","handlePayment","paymentContent","hasAbsoluteCloseButton","paymentImages","paymentPhoto","avatarStar","PeerBadge","avatarWebPhoto","avatarSize","badgeIcon","badgeText","badgeClassName","amountBadge","paymentImageBackground","PeerChip","botItem","paymentButton","formatStarsAsIcon","asFont","disclaimer","currentUser","currentUserEmojiStatus","emojiStatus","collectibleEmojiStatuses","statuses","savedGift","openGiftTransferModal","openGiftResalePriceComposerModal","openGiftStatusInfoModal","setEmojiStatus","updateStarGiftPrice","showNotification","closeGiftInfoModal","giftResalePrice","resellPrice","selectTabState","giftInfoModal","starGiftUniqueSlug","slug","userCollectibleStatus","find","currentUniqueEmojiStatusSlug","canTakeOff","canWear","handleTransfer","canTransferAt","getServerTime","variables","formatDateAtTime","handleWear","documentId","DEFAULT_STATUS_ICON_ID","handleSell","canResellAt","handleUnlist","inputGift","price","icon","iconName","iconAlignment","iconClassName","modelAttribute","backdropAttribute","patternAttribute","subtitlePeer","showManageButtons","openChat","isGiftHover","markGiftHover","unmarkGiftHover","useTransitionActiveKey","subtitleColor","textColor","radialPatternBackdrop","backdropColors","patternColor","patternIcon","slideClassName","direction","noLoop","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","style","buildStyle","UniqueGiftManageButtons","AVATAR_SPARKLES_CENTER_SHIFT","paidMessageCommission","starsPaidMessageCommissionPermille","starsGiftSticker","selectGiftStickerForStars","selectGiftStickerForTon","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","topSticker","openMediaViewer","closeStarsTransactionModal","triggerSparklesRef","handleOpenMedia","origin","MediaViewerOrigin","StarsTransaction","standaloneMedia","flatMap","Object","values","handleAvatarMouseMove","handleRequestAnimation","animate","starModalData","giftAttributes","toName","getStarsPeerTitleKey","messageLink","getMessageLink","giveawayMessageLink","mediaAmount","m","shouldDisplayAvatar","uniqueGiftHeader","UniqueGiftHeader","pattern","regularHeader","onMouseMove","InteractiveSparkles","onRequestAnimation","centerShift","percent","tableData","peerLabel","push","containerClassName","copyTextToClipboard","footerTextParts","footer","renderingModalData","TableInfoModal","hasBackdrop","buttonText","closeStarsSubscriptionModal","fulfillStarsSubscription","changeStarsSubscription","checkChatInvite","loadStarStatus","buttonState","canRefulfill","isActive","canRestart","chatInviteHash","invoiceSlug","handleButtonClick","hash","hasBotCancelled","isApiPeerUser","specialReplacement","STARS_ICON_PLACEHOLDER","footerTos","DEFAULT_POINTS","getProgress","points","value","pointIndex","findIndex","point","prevPoint","nextPoint","getValue","progress","floor","maxValue","defaultValue","onChange","floatingBadgeRef","result","setValue","useEffectOnce","updateSafeBadgePosition","badge","parent","parentElement","requestMeasure","safeMinX","offsetLeft","offsetWidth","safeMaxX","requestMutation","setProperty","useResizeObserver","handleChange","event","newValue","Number","floatingBadgeWrapper","floatingBadge","ref","floatingBadgeText","floatingBadgeIcon","AnimatedCounter","floatingBadgeTriangle","viewBox","fill","x1","x2","y1","y2","offset","d","Sparkles","preset","sparkles","slider","max","step","ANONYMOUS_PEER","avatarIcon","customPeerAvatarColor","isCustomPeer","_ref3","starBalance","maxAmount","paidReactionMaxAmount","defaultPrivacy","settings","paidReactionPrivacy","sendPaidReactionsAsPeerIds","closePaidReactionModal","addLocalPaidReaction","loadSendPaidReactionsAs","setStarsAmount","isTouched","markTouched","unmarkTouched","shouldSendAsAnonymous","setShouldSendAsAnonymous","sendAsPeerId","setSendAsPeerId","senderPeer","isMobile","useAppLayout","handleShowInTopSendersChange","target","checked","handleAmountChange","filteredMyReactorIds","unshift","canChangeSendAsPeer","currentReactor","reactions","topReactors","reactor","isMy","isAnonymous","includes","handleSend","isPrivate","shouldIgnoreDefaultPrivacy","handleSendAsPeerChange","renderMenuItem","isSelected","MenuItem","itemInfo","FullNameTitle","itemTitle","noFake","noVerified","itemSubtitle","itemIcon","SendAsPeerMenuButton","onTrigger","ripple","sendAsPeerMenuButton","sendAsPeerButtonAvatar","buttonDownIcon","sendAsPeersMenu","DropdownMenu","sendAsPeerMenu","bubbleClassName","sendAsPeerMenuBubble","trigger","positionX","autoClose","hasCurrentSender","myReactorAmount","forEach","isCurrentReactor","localAmount","sender","sort","a","b","chatTitle","isLowStackPriority","sendAsPeersMenuContainer","headerControlPanel","StarSlider","Separator","topLabel","countText","topPeer","topBadge","separator","Checkbox","checkBox","label","buttonStar","theme","selectTheme","isBlurred","isBackgroundBlurred","background","customBackground","backgroundColor","selectThemeValues","paidMessagesStars","selectPeerPaidMessagesStars","userFullInfo","selectUserFullInfo","isGiftForSelf","areUniqueStarGiftsDisallowed","disallowedGifts","shouldDisallowUniqueStarGifts","shouldDisallowLimitedStarGifts","tabState","captionLimit","starGiftMaxMessageLength","isPaymentFormLoading","giftByStars","sendStarGift","sendPremiumGiftByStars","openGiftUpgradeModal","giftMessage","setGiftMessage","shouldHideName","setShouldHideName","shouldPayForUpgrade","setShouldPayForUpgrade","shouldPayByStars","setShouldPayByStars","customBackgroundValue","useCustomBackground","isStarGift","isPremiumGift","hasPremiumByStars","isPeerUser","isSelf","localMessage","currentGift","isOutgoing","senderId","action","mediaType","months","isNameHidden","starsToConvert","canUpgrade","alreadyPaidUpgradeStars","upgradeStars","fromId","handleGiftMessageChange","handleShouldHideNameChange","handleShouldPayForUpgradeChange","toggleShouldPayByStars","handleOpenUpgradePreview","giftId","handleGetMoreStars","handleMainButtonClick","shouldUpgrade","canUseStarsPayment","bgClassName","inert","ActionMessage","threadId","MAIN_THREAD_ID","appearanceOrder","symbolsLeft","TextArea","maxLength","maxLengthIndicator","toString","ListItem","narrow","Switcher","Link","isPrimary","receiver","renderOptionsSection","formatCurrency","availabilityRemains","PremiumProgress","availabilityTotal","rightText","leftText","renderFooter","selectGiftStickerForDuration","baseMonthAmount","optionByStars","handleGiftClick","perMonth","discount","ceil","tabIndex","role","nonInteractive","caption","renderMonths","pill","GiftRibbon","isCurrentUserPremium","selectIsCurrentUserPremium","observeIntersection","isResale","openGiftInfoModal","openPremiumModal","stickerRef","setIsVisible","isHover","markHover","unmarkHover","isGiftUnique","uniqueGift","regularGift","priceInfo","amounts","resaleTonOnly","getPriceAmount","priceCurrency","resellMinStars","priceInStarsAsString","isLimited","isSoldOut","isPremiumRequired","requirePremium","isUserLimitReached","limitedPerUser","perUserRemains","perUserTotal","giftNumber","giftRibbon","useOnIntersect","entry","visible","isIntersecting","StickerView","observeIntersectionForPlaying","observeIntersectionForLoading","containerRef","shouldLoop","shouldPreloadPreview","withSparkleEffect","formatTonAsIcon","shouldConvertFromNanos","starGifts","resaleGifts","areGiftsAllLoaded","isAllLoaded","areGiftsLoading","updateIteration","resellGifts","gifts","onGiftClick","loadResaleGifts","updateResaleGiftsFilter","scrollerRef","resellGiftsIds","g","hasFilter","modelAttributes","patternAttributes","backdropAttributes","handleLoadMoreResellGifts","regularGiftId","isGiftsEmpty","viewportIds","useInfiniteScroll","RESALE_GIFTS_LIMIT","observe","useIntersectionObserver","rootRef","throttleMs","handleResetGiftsFilter","resaleScreenRoot","notFoundGiftsRoot","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","SearchingDuck","notFoundGiftsDescription","notFoundGiftsLink","resaleStarGiftsContainer","preloadBackwards","GiftItemStar","ATTRIBUTE_STICKER_SIZE","REM","customColor","useDynamicColorListener","thumbClassName","attributes","counters","searchModelQuery","setSearchModelQuery","searchBackdropQuery","setSearchBackdropQuery","searchPatternQuery","setSearchPatternQuery","filteredAttributes","counter","attribute","found","attr","backdropId","filteredAndSearchedAttributes","filterBySearch","trim","toLowerCase","sortMenuRef","isContextMenuOpen","isSortContextMenuOpen","contextMenuAnchor","sortContextMenuAnchor","handleContextMenu","handleSortContextMenu","handleContextMenuClose","handleSortContextMenuClose","handleContextMenuHide","handleSortContextMenuHide","useContextMenuHandlers","getSortMenuElement","modelMenuRef","isModelContextMenuOpen","modelContextMenuAnchor","handleModelContextMenu","handleModelContextMenuClose","handleModelContextMenuHide","getModelMenuElement","backdropMenuRef","isBackdropContextMenuOpen","backdropContextMenuAnchor","handleBackdropContextMenu","handleBackdropContextMenuClose","handleBackdropContextMenuHide","getBackdropMenuElement","patternMenuRef","isPatternContextMenuOpen","patternContextMenuAnchor","handlePatternContextMenu","handlePatternContextMenuClose","handlePatternContextMenuHide","getPatternMenuElement","SortMenuButton","sortType","isMenuOpen","ModelMenuButton","attributesCount","BackdropMenuButton","_ref4","PatternMenuButton","_ref5","handleSortMenuItemClick","handleSelectedAllModelsClick","handleSelectedAllPatternsClick","handleSelectedAllBackdropsClick","handleModelMenuItemClick","updatedAttributes","some","handlePatternMenuItemClick","handleBackdropMenuItemClick","handleSearchModelInputReset","useCallback","handleSearchBackdropInputReset","handleSearchPatternInputReset","handleSearchInputClick","stopPropagation","preventDefault","modelMenuItemsContainerRef","Menu","anchor","menu","getMenuElement","onCloseAnimationEnd","menuItemText","menuItemIcon","models","selectedAttributes","isSelectedAll","menuContentContainer","SearchInput","search","onReset","placeholder","ResaleGiftMenuAttributeSticker","menuItemStickerText","renderModelMenuItems","right","backdrops","backdropAttributeMenuItemText","renderBackdropMenuItems","patterns","renderPatternMenuItems","buttonsContainer","idsByCategory","onCategoryChanged","areLimitedStarGiftsDisallowed","starCategories","keys","category","hasResale","selectedCategory","setSelectedCategory","renderCategoryName","renderCategoryItem","handleItemClick","isInteger","useHorizontalScroll","runThrottledForScroll","throttle","cb","forPeerId","resaleGiftsCount","areResaleGiftsLoading","selectedResaleGift","boostPerSentGift","boostsPerSentGift","starGiftsById","starGiftIdsByCategory","tabId","closeGiftModal","resetResaleGifts","openGiftInMarket","closeResaleGiftsMarket","transitionRef","giftHeaderRef","isApiPeerChat","selectedGift","setSelectedGift","shouldShowMainScreenHeader","setShouldShowMainScreenHeader","isMainScreenHeaderForStarGifts","setIsMainScreenHeaderForStarGifts","isGiftScreenHeaderForStarGifts","setIsGiftScreenHeaderForStarGifts","areAllGiftsDisallowed","shouldDisallowPremiumGifts","disallowedGiftTypes","areUnlimitedStarGiftsDisallowed","shouldDisallowUnlimitedStarGifts","allGifts","filteredGifts","prevGift","giftsByStars","mapGifts","Map","starsGift","set","baseGift","reduce","prev","isResaleScreen","isGiftScreen","shouldShowHeader","isHeaderForStarGifts","handleScroll","headerTop","transitionTop","giftPremiumDescription","starGiftDescription","renderTextFilters","recipientId","handleCloseModal","handleCloseButtonClick","isBackButton","buttonClassName","resaleHeader","headerSlide","isFirstLoading","resaleHeaderContentContainer","resaleHeaderText","resaleHeaderDescription","GiftResaleFilters","commonHeaderText","renderHeader","avatars","premiumGiftsGallery","GiftItemPremium","get","starGiftsDescription","StarGiftCategoryList","starGiftsTransition","filteredGiftIds","starGiftsContainer","shouldShowResale","availabilityResale","shouldDuplicateAsResale","elements","renderStarGifts","GiftModalResaleScreen","GiftSendingOptions","closeGiftRecipientPicker","openGiftModal","idsWithSelf","concat","filteredPeerIds","selectCanGift","selectedId","forceShowSelf","AVATAR_SIZE","GIFT_STICKER_SIZE","giftPreview","arrow","typeGift","isSavedGift","fromPeer","targetPeer","hasAdminRights","getHasAdminRight","recipientPeer","releasedByPeerId","releasedByPeer","starGiftMaxConvertPeriod","tonExplorerUrl","changeGiftVisibility","convertGiftToStars","openChatWithInfo","focusMessage","buyStarGift","openGiftInfoValueModal","isConvertConfirmOpen","openConvertConfirm","closeConvertConfirm","isConfirmModalOpen","setIsConfirmModalOpen","shouldPayInTon","setShouldPayInTon","splitButtonRef","menuRef","uniqueGiftHeaderRef","handleSymbolClick","handleBackdropClick","handleModelClick","renderingFromPeer","renderingTargetPeer","isTargetChat","isSender","canConvertDifference","conversionLeft","hasConvertOption","giftSubtitle","ownerTitle","getMainUsername","fallbackText","owner","selfCollectibleStatus","isSelfUnique","canFocusUpgrade","upgradeMsgId","canManage","ownerId","getResalePrice","isInTon","confirmPrice","canBuyGift","giftOwnerTitle","ownerName","handleFocusUpgraded","giftChat","handleTriggerVisibility","isUnsaved","shouldUnsave","handleConvertToStars","handleOpenUpgradeModal","handleBuyGift","closeConfirmModal","handleConfirmBuyGift","handleOpenValueModal","SettingsMenuButton","headerButton","onContextMenu","renderFooterButton","isShiny","upgradeIcon","saleDateInfo","firstSaleDate","lastSaleDate","modalData","isConverted","canConvert","isVisibleForMe","uniqueGiftModalHeader","modalHeader","giftResalePriceContainer","giftResalePriceStar","headerSplitButton","moreIcon","soldOut","CUSTOM_PEER_HIDDEN","unknown","starsValue","giftValue","starAmountIcon","total","renderTextWithEntities","ownerAddress","ownerPeer","originalDetails","copyIcon","withEmojiStatus","uniqueAttribute","attributeName","rarityPercent","issued","issuedCount","totalCount","valueAmount","valueCurrency","uniqueValue","recipient","recipientLink","senderLink","tonLink","giftAddress","footerDescription","shouldSkipModal","getRootElement","getTriggerElement","getLayout","withPortal","uniqueGiftContextMenu","GiftMenuItems","modalContent","withBalanceBar","currencyInBalanceBar","ConfirmDialog","noDefaultTitle","confirmLabel","confirmHandler","GiftTransferPreview","formatTonAsText","formatStarsAsText","onCheck","checkBoxDescription","closeGiftInfoValueModal","handleOpenFragment","valueInfo","fragmentListedUrl","handleOpenTelegramMarket","giftName","initialSaleDate","initialSaleStars","initialSalePrice","lastSalePrice","floorPrice","averagePrice","canBuyOnFragment","fragmentListedCount","canBuyOnTelegram","listedCount","configPermille","starsStargiftResaleCommissionPermille","starsStargiftResaleAmountMin","starsStargiftResaleAmountMax","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","tonConfigPermille","tonStargiftResaleCommissionPermille","tonStargiftResaleAmountMin","convertTonFromNanos","maxTonFromConfig","tonStargiftResaleAmountMax","closeGiftResalePriceComposerModal","setPrice","isPriceInTon","setIsPriceInTon","hasPrice","handleChangePrice","parseFloat","isNaN","handleSellGift","convertTonToNanos","commission","minAmount","isPriceCorrect","InputText","inputMode","teactExperimentControlled","priceWithCommission","toFixed","closeGiftUpgradeModal","upgradeGift","renderingRecipient","shouldKeepOriginalDetails","setShouldKeepOriginalDetails","previewAttributes","setPreviewAttributes","handleUpgrade","updatePreviewAttributes","sampleAttributes","previousSelection","random","getRandomAttributes","useInterval","getStickerMediaHash","fetch","ApiMediaFormat","BlobUrl","listItemData","TableAboutModal","closeGiftStatusInfoModal","useCustomEmoji","patternDocumentId","onWearClick","customEmoji","mockPeerWithStatus","statusSparklesColor","FRAGMENT_PEER","byKey","hasPassword","twoFaSettings","passwordHint","closeGiftWithdrawModal","clearGiftWithdrawError","processStarGiftWithdrawal","openSettingsScreen","shouldShowPassword","setShouldShowPassword","exportDelay","canExportAt","handleSubmit","password","handleSetUpPassword","screen","SettingsScreens","TwoFaDisabled","exportHint","days","getDays","noPassword","PasswordForm","shouldShowSubmit","error","errorKey","withRegular","onClearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","submitLabel","onSubmit","noop","DEBOUNCE_TIMEOUT","async","peerGlobalSearch","searchResult","callApi","accountResultIds","globalResultIds","contactIds","closeGiftTransferModal","openGiftWithdrawModal","transferGift","setSelectedId","renderingSelectedPeerId","renderingSelectedPeer","orderedChatIds","useFolderManagerForOrderedIds","ALL_FOLDER_ID","sortedLocalIds","foundIds","currentResultsQuery","queryFn","debounceTimeout","debouncedQuery","resolverFn","ms","dependencies","isFrozen","updateWhenUnfrozen","forceUpdate","useForceUpdate","handleUnfreeze","useHeavyAnimation","getIsHeavyAnimating","useHeavyAnimationFreeze","runDebounced","useRunDebounced","useSyncEffect","useDebouncedMemo","setCurrentResultsQuery","queryCallback","useAsync","Promise","resolve","answer","usePeerSearch","categories","MEMO_EMPTY_ARRAY","peerColorId","handleCategoryChange","displayIds","transferStars","ignoreFreeze","onSelectedCategoryChange","withPeerUsernames","noScrollRestore","closeChatRefundModal","toggleNoPaidMessagesException","shouldRefundStars","setShouldRefundStars","renderingUser","starsToRefund","handleConfirmRemoveFee","shouldRefundCharged","actions","handleConfirm","directInfo","closePriceConfirmModal","newAmount","currentBalance","getCurrentTabId","originalAmount","originalAmountText","newAmountText"],"sourceRoot":""}